{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
    "id": 1283294415,
    "node_id": "PR_kwDOABII585MfYTP",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27286",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27286.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27286.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/215e5999e2070a38c68e343c5c3f1dc37d567f58",
    "number": 27286,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: Keep track of the wallet's own transaction outputs in memory",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Currently, the wallet is not actually aware about its own transaction outputs. Instead, it will iterate all of the transactions stored in `mapWallet`, and then all of the outputs of those transactions, in order to figure out what belongs to it for the purposes of coin selection and balance calculation. For balance calculation, there is caching that results in it only iterating all of the transactions, but not all of the outputs. However when the cache is dirty, everything is iterated. This is especially problematic for wallets that have a lot of transactions, or transactions that have a lot of unrelated outputs (as may occur with coinjoins or batched payments).\r\n\r\nThis PR helps to resolve this issue by making the wallet track all of the outputs that belong to it in a new member `m_txos`. Note that this includes outputs that may have already been spent. Both balance calculation (`GetBalance`) and coin selection (`AvailableCoins`) are updated to iterate `m_txos`. This is generally faster since it ignores all of the unrelated outputs, and it is not slower as in the worst case of wallets containing only single output transactions, it's exactly the same number of outputs iterated.\r\n\r\n`m_txos` is memory only, and it is populated during wallet loading. When each transaction is loaded, all of its outputs are checked to see if it is `IsMine`, and if so, an entry added to `m_txos`. When new transactions are received, the same procedure is done.\r\n\r\nSince imports can change the `IsMine` status of a transaction (although they can only be \"promoted\" from watchonly to spendable), all of the import RPCs will be a bit slower as they re-iterate all transactions and all outputs to update `m_txos`.\r\n\r\nEach output in `m_txos` is stored in a new `WalletTXO` class. This class contains references to the parent `CWalletTx` and the `CTxOut` itself. It also caches the `IsMine` value of the txout. This should be safe as `IsMine` should not change unless there are imports. This allows us to have additional performance improvements in places that use these `WalletTXO`s as they can use the cached `IsMine` rather than repeatedly calling `IsMine` which can be expensive.\r\n\r\nThe existing `WalletBalance` benchmark demonstrates the performance improvement that this PR makes. The existing `WalletAvailableCoins` benchmark doesn't as all of the outputs used in that benchmark belong to the test wallet. I've updated that benchmark to have a bunch of unrelated outputs in each transaction so that the difference is demonstrated.\r\n\r\nThis is part of a larger project to have the wallet actually track and store a set of its UTXOs.\r\n\r\nBuilt on #24914 as it requires loading the txs last in order for `m_txos` to be built correctly.\r\n\r\n***\r\n\r\n## Benchmarks:\r\n\r\nMaster:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       34,590,013.00 |               28.91 |    0.0% |  812,669,269.00 |  148,360,642.50 |  5.478 |  18,356,853.00 |    0.2% |      0.76 | `WalletAvailableCoins`\r\n|            3,193.46 |          313,139.91 |    0.4% |       96,868.06 |       13,731.82 |  7.054 |      26,238.01 |    0.1% |      0.01 | `WalletBalanceClean`\r\n|           26,871.18 |           37,214.59 |    3.3% |      768,179.50 |      115,544.39 |  6.648 |     154,171.09 |    0.1% |      0.01 | `WalletBalanceDirty`\r\n|            3,177.30 |          314,732.47 |    0.2% |       96,868.06 |       13,646.20 |  7.099 |      26,238.01 |    0.1% |      0.01 | `WalletBalanceMine`\r\n|               10.73 |       93,186,952.53 |    0.1% |          157.00 |           46.14 |  3.403 |          36.00 |    0.0% |      0.01 | `WalletBalanceWatch`\r\n|      590,497,920.00 |                1.69 |    0.1% |12,761,692,005.00 |2,536,899,595.00 |  5.030 | 129,124,399.00 |    0.7% |      6.50 | `WalletCreateEncrypted`\r\n|      182,929,529.00 |                5.47 |    0.0% |4,199,271,397.00 |  785,477,302.00 |  5.346 |  75,363,377.00 |    1.1% |      2.01 | `WalletCreatePlain`\r\n|          699,337.20 |            1,429.93 |    0.7% |   18,054,294.00 |    3,005,072.20 |  6.008 |     387,756.60 |    0.3% |      0.04 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       32,068,583.80 |               31.18 |    0.5% |  562,026,110.00 |  137,457,635.60 |  4.089 |  90,667,459.40 |    0.3% |      1.78 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|               36.62 |       27,306,578.40 |    0.5% |          951.00 |          157.05 |  6.056 |         133.00 |    0.0% |      0.01 | `WalletIsMineDescriptors`\r\n|               35.00 |       28,569,989.42 |    0.7% |          937.00 |          150.33 |  6.233 |         129.00 |    0.0% |      0.01 | `WalletIsMineMigratedDescriptors`\r\n|      203,284,889.00 |                4.92 |    0.0% |4,622,691,895.00 |  872,875,275.00 |  5.296 |  90,345,002.00 |    1.2% |      1.02 | `WalletLoadingDescriptors`\r\n|    1,165,766,084.00 |                0.86 |    0.0% |24,139,316,211.00 |5,005,218,705.00 |  4.823 |2,664,455,775.00 |    0.1% |      1.17 | `WalletMigration`\r\n\r\nPR:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       33,975,750.50 |               29.43 |    0.1% |  794,719,150.50 |  145,763,550.00 |  5.452 |  16,036,630.50 |    0.2% |      0.75 | `WalletAvailableCoins`\r\n|            2,442.01 |          409,498.46 |    0.2% |       60,782.04 |       10,500.60 |  5.788 |       9,492.01 |    0.3% |      0.01 | `WalletBalanceClean`\r\n|            2,763.12 |          361,909.21 |    0.2% |       61,493.05 |       11,859.48 |  5.185 |       9,625.01 |    0.2% |      0.01 | `WalletBalanceDirty`\r\n|            2,347.98 |          425,898.72 |    0.3% |       60,782.04 |       10,082.73 |  6.028 |       9,492.01 |    0.2% |      0.01 | `WalletBalanceMine`\r\n|               11.67 |       85,654,630.36 |    0.2% |          176.00 |           50.18 |  3.508 |          40.00 |    0.0% |      0.01 | `WalletBalanceWatch`\r\n|      590,119,519.00 |                1.69 |    0.1% |12,754,398,258.00 |2,534,998,522.00 |  5.031 | 129,078,027.00 |    0.7% |      6.50 | `WalletCreateEncrypted`\r\n|      183,124,790.00 |                5.46 |    0.1% |4,199,212,926.00 |  786,323,886.00 |  5.340 |  75,354,437.00 |    1.1% |      2.02 | `WalletCreatePlain`\r\n|          669,643.00 |            1,493.33 |    0.1% |   17,213,904.20 |    2,877,336.40 |  5.983 |     394,292.80 |    0.3% |      0.04 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       26,205,987.80 |               38.16 |    0.8% |  365,551,340.80 |  112,376,905.20 |  3.253 |  65,684,276.20 |    0.4% |      1.44 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|               34.75 |       28,778,846.38 |    0.1% |          937.00 |          149.41 |  6.271 |         129.00 |    0.0% |      0.01 | `WalletIsMineDescriptors`\r\n|               29.91 |       33,428,072.85 |    0.2% |          920.00 |          128.63 |  7.152 |         126.00 |    0.0% |      0.01 | `WalletIsMineMigratedDescriptors`\r\n|      202,437,985.00 |                4.94 |    0.1% |4,626,686,256.00 |  869,439,274.00 |  5.321 |  90,961,305.00 |    1.1% |      1.02 | `WalletLoadingDescriptors`\r\n|    1,158,394,152.00 |                0.86 |    0.0% |24,143,589,972.00 |4,971,946,380.00 |  4.856 |2,665,355,654.00 |    0.1% |      1.16 | `WalletMigration`\r\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2023-03-20T21:02:45Z",
    "updated_at": "2025-06-30T19:55:38Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "a3340a8e04e8198b60bda75ae21f750fb08fb322",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "achow101:wallet-txos",
      "ref": "wallet-txos",
      "sha": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 42,
        "watchers_count": 42,
        "size": 297486,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-27T23:18:19Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2025-05-11T17:20:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f27898c8bfe339e2cad09d42e133a05602b1a030",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37454,
        "stargazers_count": 84370,
        "watchers_count": 84370,
        "size": 284587,
        "default_branch": "master",
        "open_issues_count": 749,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-30T17:47:15Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-30T17:47:25Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 297,
    "deletions": 306,
    "changed_files": 12,
    "commits": 13,
    "review_comments": 129,
    "comments": 17
  },
  "events": [
    {
      "event": "commented",
      "id": 1476930328,
      "node_id": "IC_kwDOABII585YCCsY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476930328",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-20T21:02:48Z",
      "updated_at": "2025-06-30T19:55:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/27286.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [davidgumberg](https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-3006508302), [murchandamus](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2968182392), [ishaanam](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2972194802), [w0xlt](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2972458146) |\n| Concept ACK | [remyers](https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721009982), [jonatack](https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2500679564), [rkrux](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2917704922) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/872](https://github.com/bitcoin-core/gui/pull/872) (Menu action to export a watchonly wallet by achow101)\n* [#32763](https://github.com/bitcoin/bitcoin/pull/32763) (wallet: Replace CWalletTx::mapValue and vOrderForm with explicit class members by achow101)\n* [#32618](https://github.com/bitcoin/bitcoin/pull/32618) (wallet: Remove ISMINE_WATCHONLY and watchonly from RPCs by achow101)\n* [#32523](https://github.com/bitcoin/bitcoin/pull/32523) (wallet: Remove watchonly behavior and isminetypes by achow101)\n* [#32489](https://github.com/bitcoin/bitcoin/pull/32489) (wallet: Add `exportwatchonlywallet` RPC to export a watchonly version of a wallet by achow101)\n* [#29062](https://github.com/bitcoin/bitcoin/pull/29062) (Wallet: (Refactor) GetBalance to calculate used balance by BrandonOdiwuor)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- we wouldn't want to the user -> we wouldn't want the user [extra \"to\" makes the sentence ungrammatical]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1476930328",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "labeled",
      "id": 8799205482,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIMeThq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8799205482",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-20T21:02:50Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 8913283218,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAITReiS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8913283218",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-03T13:53:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8964360991,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIWUUsf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8964360991",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "783a94a3a7758800a5d99979005befebcfc7e565",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/783a94a3a7758800a5d99979005befebcfc7e565",
      "created_at": "2023-04-10T14:45:18Z"
    },
    {
      "event": "unlabeled",
      "id": 8964546125,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIWVB5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8964546125",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-10T15:06:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8964909964,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIWWauM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8964909964",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a898999a115af5ec07a3e0336a30fbfe24267807",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/a898999a115af5ec07a3e0336a30fbfe24267807",
      "created_at": "2023-04-10T15:58:18Z"
    },
    {
      "event": "labeled",
      "id": 8977151682,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIXFHbC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8977151682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T18:50:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8977672228,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIXHGgk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8977672228",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5904f42dfe504998d7b62d93c0a0e8c809d18faa",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/5904f42dfe504998d7b62d93c0a0e8c809d18faa",
      "created_at": "2023-04-11T19:58:49Z"
    },
    {
      "event": "unlabeled",
      "id": 8978106678,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIXIwk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8978106678",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T20:55:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8984506953,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIXhLJJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8984506953",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T11:26:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8986356725,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIXoOv1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8986356725",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "453e93f419e33f4de3febea96bbf15de395f7c02",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/453e93f419e33f4de3febea96bbf15de395f7c02",
      "created_at": "2023-04-12T14:25:22Z"
    },
    {
      "event": "unlabeled",
      "id": 8987168967,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIXrVDH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8987168967",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T15:39:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9136374703,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIgkgOv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9136374703",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-01T12:51:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9136869059,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIgmY7D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9136869059",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "097f8733af6ed6c4d945530b6c53b5e66679c092",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/097f8733af6ed6c4d945530b6c53b5e66679c092",
      "created_at": "2023-05-01T14:12:34Z"
    },
    {
      "event": "unlabeled",
      "id": 9137166885,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIgnhol",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9137166885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-01T14:56:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9195864599,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIkHcIX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9195864599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T02:14:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9245688598,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAInFgMW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9245688598",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T11:52:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9251094818,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAInaIEi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9251094818",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2dbea30def12031afdf89935f4b8340777db1c5e",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/2dbea30def12031afdf89935f4b8340777db1c5e",
      "created_at": "2023-05-15T21:04:38Z"
    },
    {
      "event": "unlabeled",
      "id": 9251711476,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIncen0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9251711476",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T22:38:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9252650429,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIngD29",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9252650429",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T02:22:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9256718801,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAInvlHR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9256718801",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T11:07:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9261559639,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIoCC9X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261559639",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e395ead7daa44b89624ec5c2550298dee2ecb73",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/6e395ead7daa44b89624ec5c2550298dee2ecb73",
      "created_at": "2023-05-16T19:01:36Z"
    },
    {
      "event": "unlabeled",
      "id": 9262090607,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIoEElv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262090607",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:06:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9281636068,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIpOobk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9281636068",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T16:26:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9291327326,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIpzmde",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9291327326",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d64c8935756baedd568e7d92ce13db8a1779df6b",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/d64c8935756baedd568e7d92ce13db8a1779df6b",
      "created_at": "2023-05-19T17:20:32Z"
    },
    {
      "event": "unlabeled",
      "id": 9291684634,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIp09sa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9291684634",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T18:10:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9292194429,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIp26J9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9292194429",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "25c75d38bc2e32c3c6e6a19d7ab613325556438b",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/25c75d38bc2e32c3c6e6a19d7ab613325556438b",
      "created_at": "2023-05-19T19:28:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9355564874,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAItopdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9355564874",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eeaae7a401e96399edf15bd8a06419fb973ddb6c",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/eeaae7a401e96399edf15bd8a06419fb973ddb6c",
      "created_at": "2023-05-27T01:49:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9358094453,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAItyTB1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9358094453",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "14b9194e66a2490088237addab9003e522b86030",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/14b9194e66a2490088237addab9003e522b86030",
      "created_at": "2023-05-27T17:57:47Z"
    },
    {
      "event": "labeled",
      "id": 9416434693,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAIxQ2QF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9416434693",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T17:07:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9416692430,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAIxR1LO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9416692430",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ab939250063137ec474ddf3865e638a52a387024",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/ab939250063137ec474ddf3865e638a52a387024",
      "created_at": "2023-06-02T17:43:28Z"
    },
    {
      "event": "unlabeled",
      "id": 9417311554,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAIxUMVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9417311554",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-02T19:11:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9505244518,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAI2joVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9505244518",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T17:02:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9505475636,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAI2kgw0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9505475636",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1d5364c8b905e94e68f9ae48f7fdf8b1959c65b6",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/1d5364c8b905e94e68f9ae48f7fdf8b1959c65b6",
      "created_at": "2023-06-12T17:24:29Z"
    },
    {
      "event": "unlabeled",
      "id": 9506693819,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAI2pKK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9506693819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T19:10:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9658528364,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAI_sXJs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9658528364",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T01:11:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9667674248,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJAPQCI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9667674248",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0d93f58e2e09d1e4551123ec4e968398a2c371c1",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/0d93f58e2e09d1e4551123ec4e968398a2c371c1",
      "created_at": "2023-06-28T17:53:04Z"
    },
    {
      "event": "unlabeled",
      "id": 9667893504,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAJAQFkA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9667893504",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-28T18:20:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1624254517,
      "node_id": "IC_kwDOABII585g0Cg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1624254517",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-06T20:13:51Z",
      "updated_at": "2023-07-06T20:13:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1624254517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "ready_for_review",
      "id": 9779962846,
      "node_id": "RFRE_lADOABII585hU2-ZzwAAAAJG7mPe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9779962846",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T21:20:32Z"
    },
    {
      "event": "reviewed",
      "id": 1527016849,
      "node_id": "PRR_kwDOABII585bBG2R",
      "url": null,
      "actor": null,
      "commit_id": "0d93f58e2e09d1e4551123ec4e968398a2c371c1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nStill working on reviewing this, but here are some initial things. Thanks for breaking it up into twelve commits, it makes it easy to review.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1527016849",
      "submitted_at": "2023-07-13T19:54:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "commented",
      "id": 1644753444,
      "node_id": "IC_kwDOABII585iCPIk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644753444",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T22:57:58Z",
      "updated_at": "2023-07-20T22:57:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "The commit message for 68bb1463dc1f995fbfdb75d3acef625bde104275 should be updated because now that #27145 has gotten merged, the described issue has already been fixed.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1644753444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "labeled",
      "id": 10299621111,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAJl5773",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10299621111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T19:09:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10310785813,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJmkhsV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10310785813",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5150a951ccffa061ca73854020e6fe9edb1027d2",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/5150a951ccffa061ca73854020e6fe9edb1027d2",
      "created_at": "2023-09-07T18:57:25Z"
    },
    {
      "event": "unlabeled",
      "id": 10311443660,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAJmnCTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10311443660",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T20:28:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10377015907,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAJqhLJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10377015907",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T21:22:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10377262378,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJqiHUq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10377262378",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10670711f3db80b10b27f9712262ba8b1da330e5",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/10670711f3db80b10b27f9712262ba8b1da330e5",
      "created_at": "2023-09-14T22:04:46Z"
    },
    {
      "event": "unlabeled",
      "id": 10377647778,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAJqjlai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10377647778",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T23:27:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10378352928,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAJqmRkg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10378352928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T02:22:47Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1721009982,
      "node_id": "IC_kwDOABII585mlIc-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721009982",
      "actor": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T10:01:16Z",
      "updated_at": "2023-09-15T10:01:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nMy preliminary testing confirmed that this PR will significantly speed up common operations like `fundrawtransaction` on wallets with many years of transaction history. A single `fundrawtransaction` RPC call that took 5 sec on a simulated large wallet now takes 50ms. Services providers with large wallets that need to make many RPC calls per minute will benefit from reduced lock contention on `cs_wallet`; for example, LSPs using bitcoin core wallets like Eclair.\r\n\r\nCaching the wallet's tx outputs in memory seems like a straight forward solution as long as the cache of tx outs in `m_txos` are always updated (or regenerated) if the underlying set of wallet txs in `mapWallet` or the `m_spk_managers` change. ",
      "user": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721009982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "commented",
      "id": 1721070639,
      "node_id": "IC_kwDOABII585mlXQv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721070639",
      "actor": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T10:50:54Z",
      "updated_at": "2023-09-15T10:50:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Exposing `RefreshWalletTXOs()` as a public method puts the responsibility of knowing when it should be called outside of the `CWallet` scope. What do you think about making it private and clearing `m_txos` (or adding a new flag) to trigger `RefreshWalletTXOs()` at query time?\r\n\r\nThis alternate approach would require `GetTXO(const COutPoint& outpoint)` and `GetTXOs()` to first call `RefreshWalletTXOs()` if `m_txos` is empty.  There are only a few methods that change `m_spk_managers` that would need to clear `m_txos` to trigger a one time `RefreshWalletTXOs()`:\r\n - `ImportPrivKeys`\r\n - `ImportPublicKeys`\r\n - `ImportScriptPubKeys`\r\n - `AddScriptPubKeyMan`\r\n\r\nIt's also only a small set of places where keys are imported in `backup.cpp`, so the question of leaving `RefreshWalletTXOs()` public might just be a matter of which approach would be less foot-gunny in the future and if there are disadvantages to delaying the regeneration of txos.\r\n\r\nI think you can safely make `RefreshWalletTxTXOs(const CWalletTx& wtx)` a private method now though because it is only called by wallet methods that add a wtx to `mapWallet` like `LoadToWallet` and `AddToWallet`.",
      "user": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721070639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "commented",
      "id": 1721562368,
      "node_id": "IC_kwDOABII585mnPUA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721562368",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T16:40:12Z",
      "updated_at": "2023-09-15T16:40:12Z",
      "author_association": "MEMBER",
      "body": "> Exposing `RefreshWalletTXOs()` as a public method puts the responsibility of knowing when it should be called outside of the `CWallet` scope. What do you think about making it private and clearing `m_txos` (or adding a new flag) to trigger `RefreshWalletTXOs()` at query time?\r\n\r\nI'm not sure that's meaningfully different. The caller still needs to know when to clear `m_txos` in order to trigger a future `RefreshWalletTXOs()`. The way it is now also provides a better UX as the slow part of refreshing the TXOs occurs during slow import operations rather than the first time those TXOs are needed after the import.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721562368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10386411407,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJrFA-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10386411407",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at": "2023-09-15T18:35:35Z"
    },
    {
      "event": "unlabeled",
      "id": 10387022483,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAJrHWKT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10387022483",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T20:05:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1722178128,
      "node_id": "IC_kwDOABII585mplpQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722178128",
      "actor": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-16T08:38:49Z",
      "updated_at": "2023-09-16T08:38:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm not sure that's meaningfully different. The caller still needs to know when to clear `m_txos` in order to trigger a future `RefreshWalletTXOs()`. The way it is now also provides a better UX as the slow part of refreshing the TXOs occurs during slow import operations rather than the first time those TXOs are needed after the import.\r\n\r\nJust to clarify, I mean that a reviewer, but not method caller, would need to make sure every method in CWallet that invalidates `m_txos` also clears it. I agree with your point though that forcing the refresh at import time makes sense. I also notice that there are a number of places where a `ScriptPubKeyMan` gets added or updated outside of CWallet, so I understand now why it's not really possible to make `RefreshWalletTXOs()` something internal to `CWallet`.",
      "user": {
        "login": "remyers",
        "id": 8568892,
        "node_id": "MDQ6VXNlcjg1Njg4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8568892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/remyers",
        "html_url": "https://github.com/remyers",
        "followers_url": "https://api.github.com/users/remyers/followers",
        "following_url": "https://api.github.com/users/remyers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/remyers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/remyers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/remyers/subscriptions",
        "organizations_url": "https://api.github.com/users/remyers/orgs",
        "repos_url": "https://api.github.com/users/remyers/repos",
        "events_url": "https://api.github.com/users/remyers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/remyers/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1722178128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "reviewed",
      "id": 1657907650,
      "node_id": "PRR_kwDOABII585i0anC",
      "url": null,
      "actor": null,
      "commit_id": "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9199832d4440a875a150aa3ba3bc1bc201d3fd72\r\n\r\nI've reviewed everything but the tests and benchmarks. ",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1657907650",
      "submitted_at": "2023-10-16T12:06:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "review_requested",
      "id": 10664439715,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAJ7pm-j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10664439715",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T12:06:33Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 10667807799,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAJ72dQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10667807799",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T16:18:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10670581598,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJ8BCde",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10670581598",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "910d841bb78565c9fbe5264a9ce8818eb9327944",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/910d841bb78565c9fbe5264a9ce8818eb9327944",
      "created_at": "2023-10-16T20:55:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10671201068,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAJ8DZss",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10671201068",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at": "2023-10-16T22:14:51Z"
    },
    {
      "event": "labeled",
      "id": 10671202969,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAJ8DaKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10671202969",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T22:15:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10671326566,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAJ8D4Vm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10671326566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T22:35:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10747391537,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKAmC4x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10747391537",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9292951f0c2a05a79280e4feb8c1557586681105",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/9292951f0c2a05a79280e4feb8c1557586681105",
      "created_at": "2023-10-23T23:53:46Z"
    },
    {
      "event": "reviewed",
      "id": 1694219823,
      "node_id": "PRR_kwDOABII585k-74v",
      "url": null,
      "actor": null,
      "commit_id": "9292951f0c2a05a79280e4feb8c1557586681105",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1694219823",
      "submitted_at": "2023-10-24T07:51:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10755864105,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKBGXYp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10755864105",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at": "2023-10-24T15:35:53Z"
    },
    {
      "event": "unlabeled",
      "id": 10772802152,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKCG-po",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10772802152",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T22:07:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10799600391,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKDtNMH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10799600391",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-29T11:02:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1705025510,
      "node_id": "PRR_kwDOABII585loJ_m",
      "url": null,
      "actor": null,
      "commit_id": "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1705025510",
      "submitted_at": "2023-10-30T21:04:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10946116434,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKMcHtS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10946116434",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "119dd4b3c1ea35278cca7423bf4606966b515f97",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/119dd4b3c1ea35278cca7423bf4606966b515f97",
      "created_at": "2023-11-13T19:30:36Z"
    },
    {
      "event": "unlabeled",
      "id": 10947134841,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKMgAV5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10947134841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-13T21:10:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11058139889,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKTHdLx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11058139889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T16:47:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11085670188,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKUwecs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11085670188",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1193011059c247baf350e9296732e5e1c6ef1983",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/1193011059c247baf350e9296732e5e1c6ef1983",
      "created_at": "2023-11-28T16:03:08Z"
    },
    {
      "event": "unlabeled",
      "id": 11086370268,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKUzJXc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11086370268",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T17:01:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11192875612,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKbJbpc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11192875612",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T12:12:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11197629999,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKbbkYv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11197629999",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8185ea6cf559ecc6848598f5d1ee244564f43e1d",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/8185ea6cf559ecc6848598f5d1ee244564f43e1d",
      "created_at": "2023-12-08T20:50:57Z"
    },
    {
      "event": "unlabeled",
      "id": 11198222047,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKbd07f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11198222047",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T22:35:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11213437023,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKcX3hf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11213437023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T17:20:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11216472025,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKcjcfZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11216472025",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9b3335e65b2d82332c50e3a03afc4761a69f350",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/d9b3335e65b2d82332c50e3a03afc4761a69f350",
      "created_at": "2023-12-11T22:19:28Z"
    },
    {
      "event": "unlabeled",
      "id": 11216970520,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKclWMY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11216970520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T23:32:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11222641672,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKc6-wI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11222641672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T12:06:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11292617865,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKhF6yJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11292617865",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "created_at": "2023-12-19T17:16:13Z"
    },
    {
      "event": "unlabeled",
      "id": 11293391221,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAKhI3l1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11293391221",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T18:30:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1798367193,
      "node_id": "PRR_kwDOABII585rMOfZ",
      "url": null,
      "actor": null,
      "commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 0c0022311a0cffc4c03b3763c9b60f93ede13687\r\n\r\nWhile I am pretty sure that the reorg logic should handle any transactions getting added or removed from the wallet, it might be useful to add a test that the `m_txos` set would be correct after a reorg, if that’s not obvious.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1798367193",
      "submitted_at": "2023-12-28T19:38:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "review_requested",
      "id": 11352885424,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAKkr0iw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11352885424",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-28T19:38:38Z",
      "requested_reviewer": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1801381790,
      "node_id": "PRR_kwDOABII585rXuee",
      "url": null,
      "actor": null,
      "commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1801381790",
      "submitted_at": "2024-01-03T05:26:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11394899160,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAKnMFzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11394899160",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "39f0ab3e126704b30f7ed2b86690f60b631d2ec4",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/39f0ab3e126704b30f7ed2b86690f60b631d2ec4",
      "created_at": "2024-01-04T21:05:02Z"
    },
    {
      "event": "labeled",
      "id": 11477929892,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAKsI0-k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11477929892",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T12:30:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1841667091,
      "node_id": "PRR_kwDOABII585txZwT",
      "url": null,
      "actor": null,
      "commit_id": "39f0ab3e126704b30f7ed2b86690f60b631d2ec4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ReACK https://github.com/bitcoin/bitcoin/commit/39f0ab3e126704b30f7ed2b86690f60b631d2ec4 compared to my prior review, there are only the changes mentioned in response to @aureleoules.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1841667091",
      "submitted_at": "2024-01-24T15:26:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "labeled",
      "id": 11691586928,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAK433Vw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11691586928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-03T04:54:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11752092325,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAK8erKl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11752092325",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4363299b667ed8d8291e9b7af5440d535cfcbdbd",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/4363299b667ed8d8291e9b7af5440d535cfcbdbd",
      "created_at": "2024-02-08T22:50:15Z"
    },
    {
      "event": "unlabeled",
      "id": 11752346551,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAK8fpO3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11752346551",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T23:34:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11753584915,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAK8kXkT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11753584915",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T03:59:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11860704730,
      "node_id": "LE_lADOABII585hU2-ZzwAAAALC8_3a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11860704730",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T11:55:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11864779659,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAALDMiuL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11864779659",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "26484ad2340c76570ce4a06abaf422ad66f6ef97",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/26484ad2340c76570ce4a06abaf422ad66f6ef97",
      "created_at": "2024-02-20T16:59:02Z"
    },
    {
      "event": "unlabeled",
      "id": 11865632384,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAALDPy6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11865632384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T18:13:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1928856157,
      "node_id": "PRR_kwDOABII585y-AJd",
      "url": null,
      "actor": null,
      "commit_id": "26484ad2340c76570ce4a06abaf422ad66f6ef97",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1928856157",
      "submitted_at": "2024-03-11T21:05:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12090602377,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAALQp_OJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090602377",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "81650ac9198cfe31cf5735c3128a003497d8e310",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at": "2024-03-12T14:51:27Z"
    },
    {
      "event": "labeled",
      "id": 12124367418,
      "node_id": "LE_lADOABII585hU2-ZzwAAAALSqyo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124367418",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T22:03:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12177385220,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAALV1CcE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12177385220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T23:51:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12269184867,
      "node_id": "LE_lADOABII585hU2-ZzwAAAALbTOdj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12269184867",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:15:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12296729847,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAALc8TT3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12296729847",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8c07cc5e9d112585a7e7165fb22fe186f5d1dab3",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/8c07cc5e9d112585a7e7165fb22fe186f5d1dab3",
      "created_at": "2024-03-29T16:54:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12296734672,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAALc8UfQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12296734672",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2a071ebc2f89dc9c3b716690d4fec3add87840d1",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/2a071ebc2f89dc9c3b716690d4fec3add87840d1",
      "created_at": "2024-03-29T16:54:40Z"
    },
    {
      "event": "unlabeled",
      "id": 12297033172,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAALc9dXU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12297033172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-29T17:31:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13073303723,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAMLOsir",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13073303723",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b361940d43f35eb5417db0d89b0f295ec40d4d36",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/b361940d43f35eb5417db0d89b0f295ec40d4d36",
      "created_at": "2024-06-06T23:43:25Z"
    },
    {
      "event": "labeled",
      "id": 13399807467,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAMesNXr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13399807467",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T02:45:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13447861300,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAMhjhQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13447861300",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9bec0a748f2e236dd63fc4edeaeb2c061ba27745",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/9bec0a748f2e236dd63fc4edeaeb2c061ba27745",
      "created_at": "2024-07-09T23:37:29Z"
    },
    {
      "event": "commented",
      "id": 2218998406,
      "node_id": "IC_kwDOABII586EQzqG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2218998406",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T23:37:32Z",
      "updated_at": "2024-07-09T23:37:32Z",
      "author_association": "MEMBER",
      "body": "Rebased for silent merge conflict.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2218998406",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "unlabeled",
      "id": 13448575748,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAMhmPsE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13448575748",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T01:44:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13478020694,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAMjWkZW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13478020694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T21:00:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13606799852,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAMrB0ns",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13606799852",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b6ac646ffea930ae7d8c5d93acaba3587cc9dcd",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/3b6ac646ffea930ae7d8c5d93acaba3587cc9dcd",
      "created_at": "2024-07-22T20:58:43Z"
    },
    {
      "event": "unlabeled",
      "id": 13606964077,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAMrCctt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13606964077",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T21:17:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2225335817,
      "node_id": "PRR_kwDOABII586Eo-4J",
      "url": null,
      "actor": null,
      "commit_id": "3b6ac646ffea930ae7d8c5d93acaba3587cc9dcd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ReACK 3b6ac646ffea930ae7d8c5d93acaba3587cc9dcd",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2225335817",
      "submitted_at": "2024-08-08T18:06:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "labeled",
      "id": 14032398078,
      "node_id": "LE_lADOABII585hU2-ZzwAAAANEZWb-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14032398078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T17:15:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14066295562,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAANGaqMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14066295562",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b0c5cdc0d76ef809c6f88a12c71b8789e860a96d",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/b0c5cdc0d76ef809c6f88a12c71b8789e860a96d",
      "created_at": "2024-08-29T16:28:36Z"
    },
    {
      "event": "unlabeled",
      "id": 14070035241,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAANGo7Mp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14070035241",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T20:32:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 14659995164,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAANpzcYc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14659995164",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:33:01Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14677030442,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAANq0bYq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14677030442",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e1368ec8b1adf3cca93f94cf03af9ccb9bb1cbe9",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/e1368ec8b1adf3cca93f94cf03af9ccb9bb1cbe9",
      "created_at": "2024-10-16T12:14:16Z"
    },
    {
      "event": "labeled",
      "id": 14856734806,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAN1h8hW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14856734806",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T18:24:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14859462811,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAN1sWib",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14859462811",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "created_at": "2024-10-24T22:25:12Z"
    },
    {
      "event": "unlabeled",
      "id": 14859613694,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAN1s7X-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14859613694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T22:49:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14860035775,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAN1uia_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14860035775",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T00:03:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14864957372,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAN2BT-8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14864957372",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T07:10:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2500679564,
      "node_id": "IC_kwDOABII586VDVeM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2500679564",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T12:33:42Z",
      "updated_at": "2024-11-26T12:33:42Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, if this patchset can meaningfully improve performance and reliably refresh wallet utxos to keep the in-memory cache in sync.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2500679564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "review_requested",
      "id": 16063466925,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAO9dQ2t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16063466925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T19:48:22Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2573463459,
      "node_id": "PRR_kwDOABII586ZY--j",
      "url": null,
      "actor": null,
      "commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ReACK 48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2573463459",
      "submitted_at": "2025-01-24T19:48:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "comment_deleted",
      "id": 16422059282,
      "node_id": "CDE_lADOABII585hU2-ZzwAAAAPS1L0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16422059282",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-23T18:48:17Z"
    },
    {
      "event": "comment_deleted",
      "id": 16422059583,
      "node_id": "CDE_lADOABII585hU2-ZzwAAAAPS1L4_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16422059583",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-23T18:48:26Z"
    },
    {
      "event": "commented",
      "id": 2707597628,
      "node_id": "IC_kwDOABII586hYqk8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2707597628",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T22:16:23Z",
      "updated_at": "2025-03-07T22:16:23Z",
      "author_association": "MEMBER",
      "body": "I plan to review this soon.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2707597628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "reviewed",
      "id": 2671875614,
      "node_id": "PRR_kwDOABII586fQZYe",
      "url": null,
      "actor": null,
      "commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2671875614",
      "submitted_at": "2025-03-10T18:32:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "commented",
      "id": 2771351766,
      "node_id": "IC_kwDOABII586lL3jW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2771351766",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T05:06:48Z",
      "updated_at": "2025-04-02T05:06:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "This PR also simplifies the `GetBalance` and `AvailableCoins` methods. \r\nThe introduction of the `GetTXO()` method also makes the wallet interface clearer. \r\nAs far as I could verify, the `m_txo` in-memory  cache is reliably kept in sync.\r\n\r\nACK https://github.com/bitcoin/bitcoin/pull/27286/commits/48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2771351766",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "commented",
      "id": 2771374116,
      "node_id": "IC_kwDOABII586lL9Ak",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2771374116",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T05:26:18Z",
      "updated_at": "2025-04-02T05:26:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I plan to review this soon.\r\n\r\nSame, I intend to review it this month.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2771374116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "labeled",
      "id": 17117608797,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAP8Sftd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17117608797",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T17:00:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17124566329,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAP8tCU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17124566329",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T06:17:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17406439610,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQNgTC6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17406439610",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T13:17:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17409010819,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQNqGyD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17409010819",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "26014804bb792bde141baf3e9d9ac30b6a27c988",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/26014804bb792bde141baf3e9d9ac30b6a27c988",
      "created_at": "2025-04-25T16:14:35Z"
    },
    {
      "event": "unlabeled",
      "id": 17409880978,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQNtbOS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17409880978",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T17:28:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2808627212,
      "node_id": "PRR_kwDOABII586naEAM",
      "url": null,
      "actor": null,
      "commit_id": "26014804bb792bde141baf3e9d9ac30b6a27c988",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/27286/commits/26014804bb792bde141baf3e9d9ac30b6a27c988",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2808627212",
      "submitted_at": "2025-04-30T22:03:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "review_requested",
      "id": 17480975311,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAQR8oPP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17480975311",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-30T22:03:35Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 17557809502,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQWhule",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17557809502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T14:36:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2813519505,
      "node_id": "PRR_kwDOABII586nsuaR",
      "url": null,
      "actor": null,
      "commit_id": "26014804bb792bde141baf3e9d9ac30b6a27c988",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2813519505",
      "submitted_at": "2025-05-07T14:39:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17560772711,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQWtCBn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17560772711",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db90bc85966418a250ec64f98aadeaed899c6863",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/db90bc85966418a250ec64f98aadeaed899c6863",
      "created_at": "2025-05-07T17:37:43Z"
    },
    {
      "event": "unlabeled",
      "id": 17561853903,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQWxJ_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17561853903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T18:50:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17561980769,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQWxo9h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17561980769",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "26a51e8863992c54025ed48645ba6f6a762d13ef",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/26a51e8863992c54025ed48645ba6f6a762d13ef",
      "created_at": "2025-05-07T19:00:59Z"
    },
    {
      "event": "reviewed",
      "id": 2823965110,
      "node_id": "PRR_kwDOABII586oUkm2",
      "url": null,
      "actor": null,
      "commit_id": "26a51e8863992c54025ed48645ba6f6a762d13ef",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2823965110",
      "submitted_at": "2025-05-08T06:30:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2825801077,
      "node_id": "PRR_kwDOABII586obk11",
      "url": null,
      "actor": null,
      "commit_id": "26a51e8863992c54025ed48645ba6f6a762d13ef",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2825801077",
      "submitted_at": "2025-05-08T17:00:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17578374543,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQXwLWP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17578374543",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "created_at": "2025-05-08T18:04:40Z"
    },
    {
      "event": "reviewed",
      "id": 2826415285,
      "node_id": "PRR_kwDOABII586od6y1",
      "url": null,
      "actor": null,
      "commit_id": "51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/27286/commits/51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2826415285",
      "submitted_at": "2025-05-08T21:31:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2829500818,
      "node_id": "PRR_kwDOABII586opsGS",
      "url": null,
      "actor": null,
      "commit_id": "51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2829500818",
      "submitted_at": "2025-05-15T00:58:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2841406224,
      "node_id": "PRR_kwDOABII586pXGsQ",
      "url": null,
      "actor": null,
      "commit_id": "51d4846f648e79e3e098f1f1bea7d5e823ebdea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2841406224",
      "submitted_at": "2025-05-15T01:28:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17678915501,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQdvtet",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17678915501",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a62e55bfb9a5d8f1fe11f1e97b85b507b681f89f",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/a62e55bfb9a5d8f1fe11f1e97b85b507b681f89f",
      "created_at": "2025-05-15T20:40:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17678958410,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQdv39K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17678958410",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b95fc742d13bd0b81fbe1efac749a0bd76a0333a",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/b95fc742d13bd0b81fbe1efac749a0bd76a0333a",
      "created_at": "2025-05-15T20:44:00Z"
    },
    {
      "event": "labeled",
      "id": 17678966367,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQdv55f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17678966367",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T20:44:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2885013316,
      "node_id": "IC_kwDOABII586r9c9E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2885013316",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T20:44:43Z",
      "updated_at": "2025-05-15T20:44:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `tidy`: https://github.com/bitcoin/bitcoin/runs/42318018033</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to a build error caused by an undeclared identifier \"Assume\".\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2885013316",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "unlabeled",
      "id": 17680133686,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQd0W42",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17680133686",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T22:49:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17685991232,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQeKs9A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17685991232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T09:39:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17693246506,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQemYQq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17693246506",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "29cf059e6e592f7f82b982493a043219cdfa5b40",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/29cf059e6e592f7f82b982493a043219cdfa5b40",
      "created_at": "2025-05-16T18:56:28Z"
    },
    {
      "event": "unlabeled",
      "id": 17694480192,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQerFdA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17694480192",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T21:05:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2887797583,
      "node_id": "IC_kwDOABII586sIEtP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2887797583",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T22:40:56Z",
      "updated_at": "2025-05-16T22:40:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/27286/commits/29cf059e6e592f7f82b982493a043219cdfa5b40\r\n    \r\nvia git range-diff efac285a0d709f48856c37b15bfa09af94c1d75b..51d4846f648e79e3e098f1f1bea7d5e823ebdea8 b15c386933eb7bc5ed8644dd37f8169d81ea5a22..29cf059e6e592f7f82b982493a043219cdfa5b40\r\n\r\nHooray for `Txid` class!",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2887797583",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "review_requested",
      "id": 17695158673,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAQetrGR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17695158673",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-16T22:41:02Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2847729722,
      "node_id": "PRR_kwDOABII586pvOg6",
      "url": null,
      "actor": null,
      "commit_id": "29cf059e6e592f7f82b982493a043219cdfa5b40",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/27286/commits/29cf059e6e592f7f82b982493a043219cdfa5b40",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2847729722",
      "submitted_at": "2025-05-16T22:44:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2848375525,
      "node_id": "PRR_kwDOABII586pxsLl",
      "url": null,
      "actor": null,
      "commit_id": "29cf059e6e592f7f82b982493a043219cdfa5b40",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I have just started reviewing this PR - have gone through the PR description & commit messages, going through the diff at the moment.\r\n\r\nThe intent of the PR is quite cool! As I understand, the motivation comes from this issue #27002. Due to the nature of the change, I decided to run benchmarks on my system and have shared below the best results of the lot I had (the results seem to be consistent across multiple runs).\r\n\r\n### Observations\r\n1. I can clearly see noticeable performance improvements in the `WalletBalance` benchmarks.\r\n2. However, both `WalletAvailableCoins` & `WalletCreateTxUsePresetInputsAndCoinSelection` show a marginal decline instead with decent fluctuation (err %). \r\n3. Interestingly, the `WalletIsMine*` benchmarks showed improvement when I ran the bench with default value of 10ms, but declined when I ran for 5s. \r\n4. The `WalletLoading` one doesn't show any big decline, which is good. \r\n5. On average, the result fluctuations (err %) seemed to increase when the benchmarks ran for 5s compared to 10ms.\r\n\r\nI believe that both the master & PR benchmarks shared in the PR description should be updated as they are more than 2 years old now, and a latest one would paint a more accurate picture. Also, the `WalletLoadingLegacy` benchmark can be removed from PR description as it no longer exists.\r\n\r\n> Since imports can change the IsMine status of a transaction (although they can only be \"promoted\" from watchonly to spendable), all of the import RPCs will be a bit slower as they re-iterate all transactions and all outputs to update m_txos.\r\n\r\nAfter the removal of the legacy wallets, there is just 1 import* RPC now - `importdescriptors`. Even though the overall results of the benchmarks are promising, I'm wondering if this PR should add `importdescriptors` benchmark for us to know what's the hit on this RPC. \r\n\r\nSlightly unrelated but now again that the legacy wallet is no more, the `*descriptor` benchmarks names can be updated to remove the descriptor suffix to ease it on the eyes - `WalletLoadingDescriptors` to `WalletLoading` - if I'm not missing anything.\r\n\r\n<details>\r\n<summary>\r\n\r\n### Benchmarks (MacOS Sequoia)\r\n</summary>\r\n\r\n```\r\n➜  bitcoin git:(master) ✗ ./build/bin/bench_bitcoin -filter=\"Wallet.*\" -min-time=5000\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       60,048,154.50 |               16.65 |    0.9% |      1.33 | `WalletAvailableCoins`\r\n|            8,084.01 |          123,701.05 |    1.1% |      5.51 | `WalletBalanceClean`\r\n|           64,005.21 |           15,623.73 |    0.5% |      5.47 | `WalletBalanceDirty`\r\n|            8,029.22 |          124,545.13 |    0.7% |      5.47 | `WalletBalanceMine`\r\n|               33.16 |       30,153,409.91 |    0.8% |      5.31 | `WalletBalanceWatch`\r\n|      745,284,217.00 |                1.34 |    1.6% |      8.17 | `WalletCreateEncrypted`\r\n|      344,072,227.00 |                2.91 |    1.7% |      4.51 | `WalletCreatePlain`\r\n|        1,265,623.20 |              790.12 |    1.5% |      0.07 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       97,241,712.60 |               10.28 |    1.7% |      5.37 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|               94.82 |       10,546,060.33 |    1.1% |      5.51 | `WalletIsMineDescriptors`\r\n|              107.74 |        9,281,219.40 |    0.6% |      5.48 | `WalletIsMineMigratedDescriptors`\r\n|      347,539,943.00 |                2.88 |    1.2% |      1.76 | `WalletLoadingDescriptors`\r\n|    4,515,248,518.00 |                0.22 |    0.0% |      4.52 | `WalletMigration`\r\n\r\n```\r\n➜  bitcoin git:(wallet-txos) ✗ ./build/bin/bench_bitcoin -filter=\"Wallet.*\" -min-time=5000\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       60,103,807.50 |               16.64 |    1.5% |      1.33 | `WalletAvailableCoins`\r\n|            5,277.12 |          189,497.31 |    4.5% |      5.52 | `WalletBalanceClean`\r\n|            5,669.83 |          176,372.17 |    1.4% |      5.69 | `WalletBalanceDirty`\r\n|            5,161.86 |          193,728.76 |    1.6% |      5.57 | `WalletBalanceMine`\r\n|               35.88 |       27,867,699.08 |    2.1% |      5.27 | `WalletBalanceWatch`\r\n|      778,745,354.00 |                1.28 |    3.7% |      8.69 | `WalletCreateEncrypted`\r\n|      350,162,310.00 |                2.86 |    1.7% |      3.95 | `WalletCreatePlain`\r\n|        1,544,025.80 |              647.66 |    2.2% |      0.09 | `WalletCreateTxUseOnlyPresetInputs`\r\n|      103,045,837.80 |                9.70 |    1.3% |      5.74 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|               96.31 |       10,382,776.81 |    2.0% |      5.48 | `WalletIsMineDescriptors`\r\n|              116.97 |        8,549,245.41 |    0.9% |      5.51 | `WalletIsMineMigratedDescriptors`\r\n|      352,261,692.00 |                2.84 |    0.6% |      1.76 | `WalletLoadingDescriptors`\r\n|    4,671,199,177.00 |                0.21 |    0.0% |      4.67 | `WalletMigration`\r\n</details>",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2848375525",
      "submitted_at": "2025-05-17T19:01:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2850393076,
      "node_id": "PRR_kwDOABII586p5Yv0",
      "url": null,
      "actor": null,
      "commit_id": "29cf059e6e592f7f82b982493a043219cdfa5b40",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Benchmarks at 29cf059e6e592f7f82b982493a043219cdfa5b40\r\n\r\nAn update to my previous comment: https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2848375525\r\n\r\nI dug a bit more and realised that in order to have a fair assessment between master and the PR, the `AvailableCoins` benchmark changes of the last commit 29cf059e6e592f7f82b982493a043219cdfa5b40 must be present in master as well so that both the results come from the same benchmark cases. I gcp'ed the commit onto master, removed the hardcoded `epochIterations` from `AvailableCoins` & `WalletCreateTx` functions like below, and let the benchmarks run for 5s each.\r\n\r\n<details>\r\n<summary>\r\nwallet_create_tx.cpp diff\r\n</summary>\r\n\r\n```diff\r\n--- a/src/bench/wallet_create_tx.cpp\r\n+++ b/src/bench/wallet_create_tx.cpp\r\n@@ -159,7 +159,7 @@ static void WalletCreateTx(benchmark::Bench& bench, const OutputType output_type\r\n     if (coin_control.m_allow_other_inputs) target += 50 * COIN;\r\n     std::vector<wallet::CRecipient> recipients = {{dest, target, true}};\r\n \r\n-    bench.epochIterations(5).run([&] {\r\n+    bench.run([&] {\r\n         LOCK(wallet.cs_wallet);\r\n         const auto& tx_res = CreateTransaction(wallet, recipients, /*change_pos=*/std::nullopt, coin_control);\r\n         assert(tx_res);\r\n@@ -198,7 +198,7 @@ static void AvailableCoins(benchmark::Bench& bench, const std::vector<OutputType\r\n     auto bal = WITH_LOCK(wallet.cs_wallet, return wallet::AvailableCoins(wallet).GetTotalAmount()); // Cache\r\n     assert(bal == 49 * COIN * (chain_size - COINBASE_MATURITY));\r\n \r\n-    bench.epochIterations(2).run([&] {\r\n+    bench.run([&] {\r\n         LOCK(wallet.cs_wallet);\r\n         const auto& res = wallet::AvailableCoins(wallet);\r\n         assert(res.All().size() == (chain_size - COINBASE_MATURITY) * 2);\r\n``` \r\n</details>\r\n\r\n<details>\r\n<summary>\r\n\r\n#### Benchmark Results (best of the lot)\r\n</summary>\r\n\r\n```\r\n➜  bitcoin git:(master) ✗ ./build/bin/bench_bitcoin -filter=\"Wallet.*\" -min-time=5000\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       62,913,524.29 |               15.89 |    1.1% |      5.59 | `WalletAvailableCoins`\r\n|            8,347.78 |          119,792.35 |    2.4% |      5.54 | `WalletBalanceClean`\r\n|           64,450.99 |           15,515.66 |    0.5% |      5.53 | `WalletBalanceDirty`\r\n|            8,474.18 |          118,005.46 |    3.0% |      5.18 | `WalletBalanceMine`\r\n|               36.07 |       27,723,968.90 |    2.1% |      5.49 | `WalletBalanceWatch`\r\n|      764,481,945.00 |                1.31 |    0.9% |      8.48 | `WalletCreateEncrypted`\r\n|      360,601,555.00 |                2.77 |    0.9% |      4.49 | `WalletCreatePlain`\r\n|        1,358,501.41 |              736.11 |    0.8% |      5.52 | `WalletCreateTxUseOnlyPresetInputs`\r\n|      120,641,695.25 |                8.29 |    0.9% |      5.53 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|              114.60 |        8,725,874.44 |    0.8% |      5.58 | `WalletIsMineDescriptors`\r\n|              113.78 |        8,789,224.41 |    0.2% |      5.30 | `WalletIsMineMigratedDescriptors`\r\n|      366,820,995.00 |                2.73 |    0.5% |      1.83 | `WalletLoadingDescriptors`\r\n|    5,000,027,548.00 |                0.20 |    0.0% |      5.00 | `WalletMigration`\r\n\r\n```\r\n➜  bitcoin git:(wallet-txos) ✗ ./build/bin/bench_bitcoin -filter=\"Wallet.*\" -min-time=5000\r\n```\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       60,758,414.00 |               16.46 |    0.8% |      5.55 | `WalletAvailableCoins`\r\n|            5,369.55 |          186,235.52 |    0.5% |      5.51 | `WalletBalanceClean`\r\n|            5,709.33 |          175,151.91 |    0.7% |      5.50 | `WalletBalanceDirty`\r\n|            5,289.61 |          189,049.70 |    0.4% |      5.50 | `WalletBalanceMine`\r\n|               38.12 |       26,233,493.24 |    2.5% |      5.33 | `WalletBalanceWatch`\r\n|      753,308,252.00 |                1.33 |    0.5% |      8.28 | `WalletCreateEncrypted`\r\n|      352,858,982.00 |                2.83 |    0.7% |      4.26 | `WalletCreatePlain`\r\n|        1,392,278.42 |              718.25 |    2.2% |      5.21 | `WalletCreateTxUseOnlyPresetInputs`\r\n|      103,969,867.00 |                9.62 |    0.7% |      5.53 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n|               97.30 |       10,278,004.67 |    0.7% |      5.56 | `WalletIsMineDescriptors`\r\n|               96.68 |       10,343,863.28 |    0.6% |      5.49 | `WalletIsMineMigratedDescriptors`\r\n|      361,421,296.00 |                2.77 |    1.4% |      1.81 | `WalletLoadingDescriptors`\r\n|    4,682,511,111.00 |                0.21 |    0.0% |      4.68 | `WalletMigration`\r\n</details>\r\n\r\n### Observations\r\n1. The `WalletBalance*` benchmarks show remarkable improvements like in the previous comment - except `WalletBalanceWatch` that sees a decline.\r\n2. Unlike the previous case, both `WalletAvailableCoins` & `WalletCreateTxUsePresetInputsAndCoinSelection` have an improved perf now.\r\n3. The `WalletIsMine*` benchmarks have also improved, though I have noticed fluctuations in results across reruns.\r\n4. The `WalletLoading` one doesn't show a decline anymore, it seems stable across master & PR. Improved in some test runs like the one shared above.\r\n\r\n<details open>\r\n<summary>\r\n\r\n##### Benchmarks percentage changes calculated based on op/s\r\n</summary>\r\n\r\nBenchmark | % change\r\n-- | --\r\n`WalletAvailableCoins` | 3.59\r\n`WalletBalanceClean` | 55.47\r\n`WalletBalanceDirty` | 1,028.87\r\n`WalletBalanceMine` | 60.20\r\n`WalletBalanceWatch` | -5.38\r\n`WalletCreateEncrypted` | 1.53\r\n`WalletCreatePlain` | 2.17\r\n`WalletCreateTxUseOnlyPresetInputs` | -2.43\r\n`WalletCreateTxUsePresetInputsAndCoinSelection` | 16.04\r\n`WalletIsMineDescriptors` | 17.79\r\n`WalletIsMineMigratedDescriptors` | 17.69\r\n`WalletLoadingDescriptors` | 1.47\r\n`WalletMigration` | 5.00\r\n</details>",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2850393076",
      "submitted_at": "2025-05-19T11:17:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "labeled",
      "id": 17722165394,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQgUsiS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17722165394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T21:06:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17723966280,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQgbkNI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17723966280",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8ffe1ce1d0667b41793f46a388328084890d3d1a",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/8ffe1ce1d0667b41793f46a388328084890d3d1a",
      "created_at": "2025-05-20T00:52:23Z"
    },
    {
      "event": "unlabeled",
      "id": 17724159161,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQgcTS5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17724159161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T01:17:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17724797207,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQgevEX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17724797207",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T02:40:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17747895276,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQh22Ps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17747895276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T07:35:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 17755029048,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQiSD44",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17755029048",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T14:25:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17758866660,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQigszk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17758866660",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "created_at": "2025-05-21T18:18:25Z"
    },
    {
      "event": "unlabeled",
      "id": 17759105088,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQihnBA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17759105088",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T18:36:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2865141901,
      "node_id": "PRR_kwDOABII586qxpiN",
      "url": null,
      "actor": null,
      "commit_id": "d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ReACK d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2865141901",
      "submitted_at": "2025-05-23T17:17:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "review_requested",
      "id": 17793747813,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAQklwtl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17793747813",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T17:18:05Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2913670535,
      "node_id": "IC_kwDOABII586tqxWH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2913670535",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-27T19:09:39Z",
      "updated_at": "2025-05-27T19:09:39Z",
      "author_association": "MEMBER",
      "body": "Updated the description with recent benchmarks.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2913670535",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "reviewed",
      "id": 2872890684,
      "node_id": "PRR_kwDOABII586rPNU8",
      "url": null,
      "actor": null,
      "commit_id": "d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/27286/commits/d73e4f878d143fe86d84e0e6f18c2a88c0cb8609",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2872890684",
      "submitted_at": "2025-05-27T22:32:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "labeled",
      "id": 17884556815,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAQqAK4P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17884556815",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:14:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17892191911,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQqdS6n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17892191911",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "39734259fc10b1339db2ae80c5fab12916cf0aff",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/39734259fc10b1339db2ae80c5fab12916cf0aff",
      "created_at": "2025-05-30T21:51:42Z"
    },
    {
      "event": "unlabeled",
      "id": 17892551512,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAAQqeqtY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17892551512",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T22:41:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2894219880,
      "node_id": "PRR_kwDOABII586sgkpo",
      "url": null,
      "actor": null,
      "commit_id": "39734259fc10b1339db2ae80c5fab12916cf0aff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2894219880",
      "submitted_at": "2025-06-05T01:01:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2901675322,
      "node_id": "PRR_kwDOABII586s9A06",
      "url": null,
      "actor": null,
      "commit_id": "39734259fc10b1339db2ae80c5fab12916cf0aff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/27286/commits/39734259fc10b1339db2ae80c5fab12916cf0aff\r\n\r\nLeft a lot of non-blocking nits/questions/observations, many of which are out-of-scope, and all of which (except for commit hygiene nits) can be addressed in a follow up.\r\n\r\nBenchmarked this branch with the hard-coded `nEpochIterations` removed as suggested by @rkrux (https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2850393076) against master with this commit cherry-picked on top, with `nEpochIterations` removed, and got the following results:\r\n\r\n```console\r\n$ ./build/bin/bench_bitcoin -min-time=10000 '-filter=Wallet(Available|CreateTxUse).*'\r\n``` \r\n\r\n### PR branch\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       47,042,915.76 |               21.26 |    0.1% |  792,728,393.18 |  162,978,291.67 |  4.864 |  13,610,250.59 |    0.1% |     11.00 | `WalletAvailableCoins`\r\n|          910,290.93 |            1,098.55 |    0.1% |   16,006,199.89 |    3,166,046.15 |  5.056 |     259,763.75 |    0.5% |     11.02 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       33,100,784.93 |               30.21 |    0.4% |  375,640,418.09 |  114,901,658.67 |  3.269 |  67,268,574.55 |    0.4% |     10.78 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n\r\n### master\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       46,834,069.48 |               21.35 |    0.0% |  792,798,330.50 |  162,224,895.00 |  4.887 |  15,794,362.95 |    0.1% |     10.96 | `WalletAvailableCoins`\r\n|          929,561.19 |            1,075.78 |    0.3% |   16,460,517.63 |    3,232,134.94 |  5.093 |     293,191.79 |    0.4% |     11.04 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       41,569,035.73 |               24.06 |    0.2% |  517,355,083.92 |  144,349,136.46 |  3.584 |  91,003,243.17 |    0.2% |     11.00 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n\r\n`WalletCreateTxUsePresetInputsAndCoinSelection` is substantially faster, but `AvailableCoins()` looks similar.",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2901675322",
      "submitted_at": "2025-06-06T01:22:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "review_requested",
      "id": 18014470139,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAQxvv_7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18014470139",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T01:22:53Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18014470255,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAAQxvwBv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18014470255",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T01:22:53Z",
      "requested_reviewer": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18028836622,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQymjcO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18028836622",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "caeaae565c09fde602bdaed8c9e30de65ee36095",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/caeaae565c09fde602bdaed8c9e30de65ee36095",
      "created_at": "2025-06-06T21:03:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18028867010,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAQymq3C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18028867010",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec25de35b2a51b493d36452f75096f790230a4e9",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/ec25de35b2a51b493d36452f75096f790230a4e9",
      "created_at": "2025-06-06T21:06:42Z"
    },
    {
      "event": "commented",
      "id": 2951194040,
      "node_id": "IC_kwDOABII586v56W4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2951194040",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T23:17:58Z",
      "updated_at": "2025-06-06T23:20:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/commit/ec25de35b2a51b493d36452f75096f790230a4e9\r\n\r\nReviewed range-diff ([`git range-diff 3973425...ec25de35`](https://github.com/bitcoin/bitcoin/compare/39734259fc10b1339db2ae80c5fab12916cf0aff..ec25de35b2a51b493d36452f75096f790230a4e9)), addresses all the nits I left in my previous review minus the ones where I was incorrect.  \r\n\r\nThe primary changes are:\r\n\r\n1. The benchmark iterations are no longer unnecessarily hardcoded and the benchmark commit was moved to be the first commit.\r\n2. Two transaction level checks that were being performed per-output in `AvailableCoins()` are now part of the cached tx-level checks.\r\n3. For commit hygiene, code was moved to more closely resemble the order of checks in master, making the (whitespace-hidden) diff much smaller, and the changes in this PR easier to review in my opinion: e.g. (https://github.com/bitcoin/bitcoin/commit/854241298059f8b56563ca7ca64f5b61b59f119b?w=1 vs https://github.com/bitcoin/bitcoin/pull/27286/commits/2703d84b7efafcce05387a5e018363c3c59c4b58?w=1)\r\n\r\nI benchmarked again (w/ different hardware[^1])  and it looks like the performance gap in the  `AvailableCoins()` benchmark is improved over the earlier branch (10% faster than master vs 5% faster than master) \r\n\r\n<details>\r\n\r\n<summary>\r\n\r\n### Benchmark results\r\n\r\n</summary>\r\n\r\n```console\r\n$ ./build/bin/bench_bitcoin -min-time=30000 '-filter=Wallet(Available|CreateTxUse).*'\r\n```\r\n\r\n#### pr branch (https://github.com/bitcoin/bitcoin/commit/ec25de35b2a51b493d36452f75096f790230a4e9)\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       39,666,039.18 |               25.21 |    0.2% |  743,701,163.19 |  184,433,998.97 |  4.032 |  13,191,744.00 |    0.1% |     32.98 | `WalletAvailableCoins`\r\n|          818,711.43 |            1,221.43 |    0.1% |   16,376,793.42 |    3,821,152.74 |  4.286 |     264,358.23 |    0.2% |     33.07 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       28,955,730.17 |               34.54 |    0.7% |  370,601,527.15 |  135,128,956.19 |  2.743 |  66,153,487.66 |    0.4% |     33.26 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n\r\n#### master (e2174378aa8a3 + a39074c52afd073abd9101dc6) \r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       44,211,982.81 |               22.62 |    0.2% |  803,845,700.31 |  205,309,518.10 |  3.915 |  18,081,465.08 |    0.0% |     33.04 | `WalletAvailableCoins`\r\n|          855,419.56 |            1,169.02 |    0.1% |   16,581,860.02 |    3,991,552.91 |  4.154 |     355,371.44 |    0.2% |     33.02 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       35,074,882.27 |               28.51 |    0.2% |  505,591,550.24 |  163,578,562.91 |  3.091 |  91,987,283.54 |    0.2% |     33.16 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n\r\n#### old pr branch (https://github.com/bitcoin/bitcoin/commit/39734259fc10b1339db2ae80c5fab12916cf0aff) with `epochIterations` removed\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|       42,297,947.25 |               23.64 |    0.0% |  774,588,933.86 |  196,770,180.57 |  3.937 |  15,813,962.88 |    0.1% |     32.95 | `WalletAvailableCoins`\r\n|          852,312.97 |            1,173.28 |    0.2% |   16,650,566.31 |    3,978,823.89 |  4.185 |     374,875.56 |    0.2% |     33.04 | `WalletCreateTxUseOnlyPresetInputs`\r\n|       28,841,852.53 |               34.67 |    0.4% |  373,458,753.83 |  134,591,208.06 |  2.775 |  68,667,702.77 |    0.4% |     33.26 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n\r\n</details>\r\n\r\n[^1]: AMD Ryzen 9 7900X 12-Core Processor used in these benchmarks.",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-2951194040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "reviewed",
      "id": 2917704922,
      "node_id": "PRR_kwDOABII586t6KTa",
      "url": null,
      "actor": null,
      "commit_id": "ec25de35b2a51b493d36452f75096f790230a4e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Perf Review ec25de3\r\n\r\nUnfortunately, I have not been able to do a code review of this PR yet but I wanted to ensure that I finish the performance review of this change; I will able to do a code review in a week or two.\r\n\r\nWhile benchmarks are reliable enough to give an idea about the performance, I wanted to contextualise the findings of those benchmarks by calling the related RPCs, and also wanted to address the concern I had about additional memory usage.\r\n\r\nMotivated by [this issue comment](https://github.com/bitcoin/bitcoin/issues/27002#issuecomment-1412386397) from achow, I created a perf test in my regtest using [this script](https://github.com/rkrux/bitcoincore_prnotes/blob/main/27286-wallet-txos/script.py) by generating a wallet with 7,117 UTXOs among 35,744 Bech32 addresses spanning across 362,621 wallet transactions generated by 7370 blocks. After generating the initial `coinbase` transactions, I created `passthrough` transactions that let the unspents flow through them - every such transaction spent 1 unspent and sent 99.5% of the amount to a new wallet address and the remaining amount equally divided among 10 non-wallet addresses. I did this to simulate the scenario where the user is sending funds to different addresses and the rest is sent back to the wallet as change.  \r\n\r\n**Results:**\r\n<img width=\"985\" alt=\"perf-test-result\" src=\"https://github.com/user-attachments/assets/ea8a6ce5-7d68-4faf-8633-55ee60aba1fc\" />\r\n_System - MacOS Sequoia, 2.6 GHz 6-Core Intel Core i7, 16GB Memory_\r\n\r\n**Observations:**\r\n1. As conveyed by the benchmarks as well, there is remarkable improvement in the `getbalances` RPC latency.\r\n2. `listunspent` RPC also has a reduced latency. The `send` RPC, which relates to the `WalletCreateTxUsePresetInputsAndCoinSelection` benchmark also improved considerably in the second run, though it took slightly more time in the first run.\r\n3. I expect the last 3 RPCs listed to further improve after #27865 when unspendable TXOs are separated from the spendable ones.\r\n4. I didn't expect a lot of memory consumption increase because the `WalletTXO` object contains only references to `CWalletTx` & `CTxOut`, and, moreover, the `m_ismine` member will also be removed after #32523. This expectation was met in this perf test as there is not a lot of increase in the `maximum resident set size` parameter of the `time` command.\r\n5. The consistent tracking of the `top -pid $(pgrep bitcoind)` command _after_ the RPCs execution showed me that roughly a ~20MB increment was there in this perf test compared to master in this wallet having more than 7k unspents in ~360k transactions.\r\n\r\n**Conclusion:**\r\nWhile the results show data from 2 runs, more runs might form consistency in the metrics delta of `loadwallet` & `listtransactions` RPCs. The `listunspent` & `getbalances` results already show consistent improvement to me; the memory consumption increase is also not significant, which is good imo. I suppose the changes of this PR furthered by #27865 and #32523 should bring in more improvement. \r\n\r\nSo, Concept ACK ec25de3.\r\n\r\n------\r\n\r\n**Edit:** Apparently, my test has ~37k transactions and not ~360k. I used the output of `listtransactions` RPC but realised the difference later when I checked the `txcount` output of `getwalletinfo` RPC.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2917704922",
      "submitted_at": "2025-06-11T15:23:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "referenced",
      "id": 18117502334,
      "node_id": "REFE_lADOABII585hU2-ZzwAAAAQ34yV-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18117502334",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6955719c9a6051278de08eb97ee082ff6e348ce4",
      "commit_url": "https://api.github.com/repos/rkrux/bitcoin/commits/6955719c9a6051278de08eb97ee082ff6e348ce4",
      "created_at": "2025-06-12T14:52:50Z"
    },
    {
      "event": "labeled",
      "id": 18324389188,
      "node_id": "LE_lADOABII585hU2-ZzwAAAAREN_1E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18324389188",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T21:07:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwMmYyZDMzMWNlNmQ5YzViNmI4ZjYyYTc5ZGQ0MDY5NWQyMjgzYTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2",
      "tree": {
        "sha": "4cf6f89e7018a42842b04d88fbc37c17bae2c4db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cf6f89e7018a42842b04d88fbc37c17bae2c4db"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f27898c8bfe339e2cad09d42e133a05602b1a030",
          "sha": "f27898c8bfe339e2cad09d42e133a05602b1a030",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f27898c8bfe339e2cad09d42e133a05602b1a030"
        }
      ],
      "message": "bench: Have AvailableCoins benchmark include a lot of unrelated utxos\n\nOne of the main issues with AvailableCoins is its performance when txs\nhave unrelated outputs, so update the benchmark to check the performance\nof that.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:27Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:17Z"
      },
      "sha": "e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyMjIzNDFkNGY5YzJiN2M1NzJiMjdkZWExNjAzNmQ2ZWEzNzIwNjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8222341d4f9c2b7c572b27dea16036d6ea372067",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8222341d4f9c2b7c572b27dea16036d6ea372067",
      "tree": {
        "sha": "1501d76f6761c17964f169f000efe2069b0351e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1501d76f6761c17964f169f000efe2069b0351e2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2",
          "sha": "e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e02f2d331ce6d9c5b6b8f62a79dd40695d2283a2"
        }
      ],
      "message": "wallet: MarkDirty after AddWalletDescriptor\n\nAfter adding a wallet descriptor (typically by import), mark all balance\ncaches dirty. This allows transactions that the wallet already knows\nabout that have outputs that are now ISMINE_SPENDABLE after the import\nto actually be shown in balance calculations. Legacy wallet imports\nwould do this, but importdescriptors did not.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:27Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-05-15T20:34:49Z"
      },
      "sha": "8222341d4f9c2b7c572b27dea16036d6ea372067"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVjYzMyZWUyYTdhZGRiMzhhZTRhNGM5N2QzMDZkMGM1ZDljYzJkNWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e",
      "tree": {
        "sha": "1b29620f62500d5a1c6249348825b4fe218d6027",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b29620f62500d5a1c6249348825b4fe218d6027"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8222341d4f9c2b7c572b27dea16036d6ea372067",
          "sha": "8222341d4f9c2b7c572b27dea16036d6ea372067",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8222341d4f9c2b7c572b27dea16036d6ea372067"
        }
      ],
      "message": "test: Test for balance update due to untracked output becoming spendable",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:27Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:02Z"
      },
      "sha": "5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBmMjY5YmM0OGMzOTA1YzA3ODJjOWQxNzVhZDQ4N2IyN2ViYWY1NGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f269bc48c3905c0782c9d175ad487b27ebaf54b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f269bc48c3905c0782c9d175ad487b27ebaf54b",
      "tree": {
        "sha": "48f0dff7480e87a77eef270a021315cb68b66850",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48f0dff7480e87a77eef270a021315cb68b66850"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e",
          "sha": "5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e"
        }
      ],
      "message": "walletdb: Load Txs last\n\nNeed to load txs last so that IsMine works.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:49:51Z"
      },
      "sha": "0f269bc48c3905c0782c9d175ad487b27ebaf54b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlMDg3NmVjNDI3M2E4Yjk3OGUyYzYwMjQzNWE5ZWQyNWY0OGM5NzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae0876ec4273a8b978e2c602435a9ed25f48c976",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae0876ec4273a8b978e2c602435a9ed25f48c976",
      "tree": {
        "sha": "46f908f46e330e225f7d38c8cbf731e0c3116ab0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46f908f46e330e225f7d38c8cbf731e0c3116ab0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f269bc48c3905c0782c9d175ad487b27ebaf54b",
          "sha": "0f269bc48c3905c0782c9d175ad487b27ebaf54b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f269bc48c3905c0782c9d175ad487b27ebaf54b"
        }
      ],
      "message": "wallet: Keep track of transaction outputs owned by the wallet\n\nWhen loading transactions to the wallet, check the outputs, and keep\ntrack of the ones that are IsMine.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:49:53Z"
      },
      "sha": "ae0876ec4273a8b978e2c602435a9ed25f48c976"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlODg4YzM4ZDA4MGM5YzQxOTI1ZmFlYjUzMDQ0ZTViZDBiN2Y5ZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae888c38d080c9c41925faeb53044e5bd0b7f9ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae888c38d080c9c41925faeb53044e5bd0b7f9ee",
      "tree": {
        "sha": "ec47bcd2526090769bbebb3b3091e6669b2b37ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec47bcd2526090769bbebb3b3091e6669b2b37ae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae0876ec4273a8b978e2c602435a9ed25f48c976",
          "sha": "ae0876ec4273a8b978e2c602435a9ed25f48c976",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae0876ec4273a8b978e2c602435a9ed25f48c976"
        }
      ],
      "message": "wallet: Exit IsTrustedTx early if wtx is already in trusted_parents",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:49:56Z"
      },
      "sha": "ae888c38d080c9c41925faeb53044e5bd0b7f9ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2ZTdhODljNWUwYmY1ZTFhNDQ5N2Q4Mjk2ZTg4NDFlZGQ3ZWJiZjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1",
      "tree": {
        "sha": "9ffa8244cbd8acb9bde08badc1c9cb53abb040fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ffa8244cbd8acb9bde08badc1c9cb53abb040fa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae888c38d080c9c41925faeb53044e5bd0b7f9ee",
          "sha": "ae888c38d080c9c41925faeb53044e5bd0b7f9ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae888c38d080c9c41925faeb53044e5bd0b7f9ee"
        }
      ],
      "message": "wallet: Recalculate the wallet's txos after any imports",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:00Z"
      },
      "sha": "96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkZTdjYmUxMDViYTZkYWFhNjM2NDY2ZDBmYTNhODNkMTU2MDk0MTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dde7cbe105ba6daaa636466d0fa3a83d15609417",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dde7cbe105ba6daaa636466d0fa3a83d15609417",
      "tree": {
        "sha": "54e744b967b716e06346051c6bdae5cae941a103",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54e744b967b716e06346051c6bdae5cae941a103"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1",
          "sha": "96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/96e7a89c5e0bf5e1a4497d8296e8841edd7ebbf1"
        }
      ],
      "message": "wallet: Change balance calculation to use m_txos\n\nSince we track the outputs owned by the wallet with m_txos, we can now\ncalculate the balance of the wallet by iterating m_txos and summing up\nthe amounts of the unspent txos.\n\nAs ISMINE_USED is not an actual isminetype that we attach to outputs and\nwas just passed into `CachedTxGetAvailableCredit` for convenience, we\npull the same determining logic from that function into `GetBalances` in\norder to preserve existing behavior.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:49:58Z"
      },
      "sha": "dde7cbe105ba6daaa636466d0fa3a83d15609417"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxODAxYjc4ZjFjMTFlNTk2Mzc4YTQ0NDU4YTQ4NGI2YTlkZTcxZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1801b78f1c11e596378a44458a484b6a9de71d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c1801b78f1c11e596378a44458a484b6a9de71d8",
      "tree": {
        "sha": "206abffb5c28a40c2d95cccdda1d200f1c7db54a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/206abffb5c28a40c2d95cccdda1d200f1c7db54a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dde7cbe105ba6daaa636466d0fa3a83d15609417",
          "sha": "dde7cbe105ba6daaa636466d0fa3a83d15609417",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dde7cbe105ba6daaa636466d0fa3a83d15609417"
        }
      ],
      "message": "wallet: Use wallet's TXO set in AvailableCoins\n\nInstead of iterating every transaction and every output stored in wallet\nwhen trying to figure out what outputs can be spent, iterate the TXO set\nwhich should be a lot smaller.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:07Z"
      },
      "sha": "c1801b78f1c11e596378a44458a484b6a9de71d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2NDAxNmViMjI1OTY3NmQ4MzRjZjY4MjlmNWIwZTA0YjEzNWQ0MDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/764016eb2259676d834cf6829f5b0e04b135d407",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/764016eb2259676d834cf6829f5b0e04b135d407",
      "tree": {
        "sha": "4124f21f58a49977deb5cff90139daaa0ec80a76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4124f21f58a49977deb5cff90139daaa0ec80a76"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1801b78f1c11e596378a44458a484b6a9de71d8",
          "sha": "c1801b78f1c11e596378a44458a484b6a9de71d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1801b78f1c11e596378a44458a484b6a9de71d8"
        }
      ],
      "message": "wallet: Retrieve TXO directly in FetchSelectedInputs\n\nInstead of searching mapWallet for the preselected inputs, search\nm_txos.\n\nwallet_fundrawtransaction.py spends external inputs and needs the change\noutput to also belong to the test wallet for the oversized tx test.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:09Z"
      },
      "sha": "764016eb2259676d834cf6829f5b0e04b135d407"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE3ZDQ1M2NiM2E2ZmRiYjBlYmM4NTM4YzIyOGM4OTcxMmM5ODk0OTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17d453cb3a6fdbb0ebc8538c228c89712c989499",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/17d453cb3a6fdbb0ebc8538c228c89712c989499",
      "tree": {
        "sha": "59a57d5e296d8ad644c699b9cd41ed89b6961312",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59a57d5e296d8ad644c699b9cd41ed89b6961312"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/764016eb2259676d834cf6829f5b0e04b135d407",
          "sha": "764016eb2259676d834cf6829f5b0e04b135d407",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/764016eb2259676d834cf6829f5b0e04b135d407"
        }
      ],
      "message": "wallet: Recompute wallet TXOs after descriptor migration\n\nWhen a legacy wallet has been migrated to contain descriptors, but\nbefore the transactions have been updated to match, we need to recompute\nthe wallet TXOs so that the transaction update will work correctly.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:11Z"
      },
      "sha": "17d453cb3a6fdbb0ebc8538c228c89712c989499"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5Njc1ZGUwMzVlN2M2NjhkNjg1N2EzMmQ5MjliN2UxZTg1ZTgzZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49675de035e7c668d6857a32d929b7e1e85e83e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49675de035e7c668d6857a32d929b7e1e85e83e3",
      "tree": {
        "sha": "1448421bfa136d12b4e14e50aa6ef81e99f994c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1448421bfa136d12b4e14e50aa6ef81e99f994c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17d453cb3a6fdbb0ebc8538c228c89712c989499",
          "sha": "17d453cb3a6fdbb0ebc8538c228c89712c989499",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/17d453cb3a6fdbb0ebc8538c228c89712c989499"
        }
      ],
      "message": "wallet: Have GetDebit use the wallet's TXO set\n\nInstead of looking up the previous tx in mapWallet, and then calling\nIsMine on the specified output, use the TXO set and its cached IsMine\nvalue.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:13Z"
      },
      "sha": "49675de035e7c668d6857a32d929b7e1e85e83e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxNWU1OTk5ZTIwNzBhMzhjNjhlMzQzYzVjM2YxZGMzN2Q1NjdmNTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "tree": {
        "sha": "855fdddd2a18e7f88c1077d0e2a8ca41b4eccdde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/855fdddd2a18e7f88c1077d0e2a8ca41b4eccdde"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49675de035e7c668d6857a32d929b7e1e85e83e3",
          "sha": "49675de035e7c668d6857a32d929b7e1e85e83e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49675de035e7c668d6857a32d929b7e1e85e83e3"
        }
      ],
      "message": "wallet: Remove unused CachedTxGet{Available,Immature}Credit\n\nThese two functions are no longer used as GetBalances now uses the TXO\nset rather than per-tx cached balances",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-06-25T21:08:49Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:50:15Z"
      },
      "sha": "215e5999e2070a38c68e343c5c3f1dc37d567f58"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18324405620,
      "node_id": "HRFPE_lADOABII585hU2-ZzwAAAAREOD10",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18324405620",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "created_at": "2025-06-25T21:09:05Z"
    },
    {
      "event": "commented",
      "id": 3006508302,
      "node_id": "IC_kwDOABII586zM60O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3006508302",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T23:21:53Z",
      "updated_at": "2025-06-25T23:21:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "untested reACK 215e599\r\n\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32768/commits/9eb2c82e7c911a066781d67e6846cf6bbbaba6e9 removed the unused `upgraded_txs` field from `LoadTxRecords()` and the latest rebase just drops this parameter from the places where it calls `LoadTxRecords()`\r\n\r\n<details><summary> \r\n\r\n```console\r\n$ git range-diff 4b1d48a..ec25de3 f27898c..215e599\r\n```\r\n</summary>\r\n\r\n\r\n```diff\r\n 1:  a39074c52a =  1:  e02f2d331c bench: Have AvailableCoins benchmark include a lot of unrelated utxos\r\n 2:  8ff188806b =  2:  8222341d4f wallet: MarkDirty after AddWalletDescriptor\r\n 3:  0b35048307 =  3:  5cc32ee2a7 test: Test for balance update due to untracked output becoming spendable\r\n 4:  b379ec2467 !  4:  0f269bc48c walletdb: Load Txs last\r\n    @@ src/wallet/walletdb.cpp: DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\r\n              result = std::max(LoadAddressBookRecords(pwallet, *m_batch), result);\r\n\r\n     -        // Load tx records\r\n    --        result = std::max(LoadTxRecords(pwallet, *m_batch, upgraded_txs, any_unordered), result);\r\n    +-        result = std::max(LoadTxRecords(pwallet, *m_batch, any_unordered), result);\r\n     -\r\n              // Load SPKMs\r\n              result = std::max(LoadActiveSPKMs(pwallet, *m_batch), result);\r\n    @@ src/wallet/walletdb.cpp: DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\r\n              result = std::max(LoadDecryptionKeys(pwallet, *m_batch), result);\r\n     +\r\n     +        // Load tx records\r\n    -+        result = std::max(LoadTxRecords(pwallet, *m_batch, upgraded_txs, any_unordered), result);\r\n    ++        result = std::max(LoadTxRecords(pwallet, *m_batch, any_unordered), result);\r\n          } catch (std::runtime_error& e) {\r\n              // Exceptions that can be ignored or treated as non-critical are handled by the individual loading functions.\r\n              // Any uncaught exceptions will be caught here and treated as critical.\r\n 5:  220f2582db =  5:  ae0876ec42 wallet: Keep track of transaction outputs owned by the wallet\r\n 6:  cda977bc72 =  6:  ae888c38d0 wallet: Exit IsTrustedTx early if wtx is already in trusted_parents\r\n 7:  c7a85cc417 =  7:  96e7a89c5e wallet: Recalculate the wallet's txos after any imports\r\n 8:  96864062c6 =  8:  dde7cbe105 wallet: Change balance calculation to use m_txos\r\n 9:  2703d84b7e =  9:  c1801b78f1 wallet: Use wallet's TXO set in AvailableCoins\r\n10:  5ab95ac68e = 10:  764016eb22 wallet: Retrieve TXO directly in FetchSelectedInputs\r\n11:  5082dea76f = 11:  17d453cb3a wallet: Recompute wallet TXOs after descriptor migration\r\n12:  56f55f412c = 12:  49675de035 wallet: Have GetDebit use the wallet's TXO set\r\n13:  ec25de35b2 = 13:  215e5999e2 wallet: Remove unused CachedTxGet{Available,Immature}Credit\r\n</details>",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-3006508302",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27286"
    },
    {
      "event": "review_requested",
      "id": 18325779949,
      "node_id": "RRE_lADOABII585hU2-ZzwAAAARETTXt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18325779949",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T23:21:59Z",
      "requested_reviewer": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 18325840379,
      "node_id": "UNLE_lADOABII585hU2-ZzwAAAARETiH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18325840379",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T23:30:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2968182392,
      "node_id": "PRR_kwDOABII586w6t54",
      "url": null,
      "actor": null,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK 215e5999e20",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2968182392",
      "submitted_at": "2025-06-27T23:34:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2972194802,
      "node_id": "PRR_kwDOABII586xKBfy",
      "url": null,
      "actor": null,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK 215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2972194802",
      "submitted_at": "2025-06-30T19:40:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    },
    {
      "event": "reviewed",
      "id": 2972458146,
      "node_id": "PRR_kwDOABII586xLByi",
      "url": null,
      "actor": null,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/27286/commits/215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2972458146",
      "submitted_at": "2025-06-30T19:55:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261601507",
      "pull_request_review_id": 1527016849,
      "id": 1261601507,
      "node_id": "PRRC_kwDOABII585LMoLj",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 68bb1463dc1f995fbfdb75d3acef625bde104275 \"wallet: Change balance calculation to use m_txos \"\r\n\r\nnit: \r\n```suggestion\r\n            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\r\n```\r\n& also remove the unused `trusted_parents` from above. (for `GetAddressBalances` as well)",
      "created_at": "2023-07-12T18:51:47Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1261601507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261601507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262844660",
      "pull_request_review_id": 1527016849,
      "id": 1262844660,
      "node_id": "PRRC_kwDOABII585LRXr0",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && tx_depth == 0 && txo.GetWalletTx().InMempool()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 68bb1463dc1f995fbfdb75d3acef625bde104275 \" wallet: Change balance calculation to use m_txos \"\r\n\r\nnit: checking the tx depth is redundant here because if the transaction is `TxStateMempool` then `GetTxDepthInMainChain` will always return 0.\r\n```suggestion\r\n                } if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n```",
      "created_at": "2023-07-13T17:10:37Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262844660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262844660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262864895",
      "pull_request_review_id": 1527016849,
      "id": 1262864895,
      "node_id": "PRRC_kwDOABII585LRcn_",
      "diff_hunk": "@@ -480,6 +480,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "3f3246efe299552e450362a03c61c602a168f7de",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3f3246efe299552e450362a03c61c602a168f7de \"wallet: Recalculate the wallet's txos after any imports \"\r\n\r\nDoes this also need to be called during `sethdseed` and `keypoolrefill`.",
      "created_at": "2023-07-13T17:27:37Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262864895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262864895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262869959",
      "pull_request_review_id": 1527016849,
      "id": 1262869959,
      "node_id": "PRRC_kwDOABII585LRd3H",
      "diff_hunk": "@@ -627,6 +631,7 @@ RPCHelpMan importwallet()\n \n             progress++;\n         }\n+        pwallet->RefreshWalletTXOs();",
      "path": "src/wallet/rpc/backup.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "3f3246efe299552e450362a03c61c602a168f7de",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/3f3246efe299552e450362a03c61c602a168f7de \"wallet: Recalculate the wallet's txos after any imports \"\r\n\r\nIs this needed if the wallet will rescan anyways? ",
      "created_at": "2023-07-13T17:32:55Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262869959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262869959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262884442",
      "pull_request_review_id": 1527016849,
      "id": 1262884442,
      "node_id": "PRRC_kwDOABII585LRhZa",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 881650ed319c6ed74e66ae56c34cdee93125231b \" wallet: Use wallet's TXO set in AvailableCoins \"\r\n\r\nShouldn't txos in `m_txos` never be `ISMINE_NO`?\r\n\r\n```suggestion\r\n        assert(mine != ISMINE_NO);\r\n```",
      "created_at": "2023-07-13T17:47:05Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262884442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262884442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 252,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262959018",
      "pull_request_review_id": 1527016849,
      "id": 1262959018,
      "node_id": "PRRC_kwDOABII585LRzmq",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/881650ed319c6ed74e66ae56c34cdee93125231b \" wallet: Use wallet's TXO set in AvailableCoins \"\r\n\r\nCan't `tx_ok` still be false at this point if a transaction that has a depth of 0 and is not in the mempool has two txos that belong to the wallet? Since then when the first txo is evaluated, a `{false, false}` entry will be created for that transaction hash, and then when the second txo is evaluated, that entry will be used because the mempool check will be skipped?",
      "created_at": "2023-07-13T19:09:48Z",
      "updated_at": "2023-07-13T19:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262959018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262959018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654362",
      "pull_request_review_id": 1629521706,
      "id": 1327654362,
      "node_id": "PRRC_kwDOABII585PImXa",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "in_reply_to_id": 1261601507,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-09-15T18:35:37Z",
      "updated_at": "2023-09-15T18:35:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654362",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654424",
      "pull_request_review_id": 1629521785,
      "id": 1327654424,
      "node_id": "PRRC_kwDOABII585PImYY",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && tx_depth == 0 && txo.GetWalletTx().InMempool()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "in_reply_to_id": 1262844660,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-09-15T18:35:41Z",
      "updated_at": "2023-09-15T18:35:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656315",
      "pull_request_review_id": 1629524562,
      "id": 1327656315,
      "node_id": "PRRC_kwDOABII585PIm17",
      "diff_hunk": "@@ -480,6 +480,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "3f3246efe299552e450362a03c61c602a168f7de",
      "in_reply_to_id": 1262864895,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, good point. The expected usage of these is that only new keys will be generated/added, so it shouldn't have any effect on the existing transactions in the wallet. However, I suppose they could be used in a way that does result in existing txs having their IsMine changed. I've also added this to `addmultisigaddress` and `newkeypool` since they could be used in the same way.",
      "created_at": "2023-09-15T18:38:01Z",
      "updated_at": "2023-09-15T18:38:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656948",
      "pull_request_review_id": 1629525521,
      "id": 1327656948,
      "node_id": "PRRC_kwDOABII585PIm_0",
      "diff_hunk": "@@ -627,6 +631,7 @@ RPCHelpMan importwallet()\n \n             progress++;\n         }\n+        pwallet->RefreshWalletTXOs();",
      "path": "src/wallet/rpc/backup.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "3f3246efe299552e450362a03c61c602a168f7de",
      "in_reply_to_id": 1262869959,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The wallet may not rescan every transaction in the wallet since it does look at the given key birthdays.",
      "created_at": "2023-09-15T18:38:46Z",
      "updated_at": "2023-09-15T18:38:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656948",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657164",
      "pull_request_review_id": 1629525867,
      "id": 1327657164,
      "node_id": "PRRC_kwDOABII585PInDM",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": 1262884442,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-09-15T18:39:01Z",
      "updated_at": "2023-09-15T18:39:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 252,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657382",
      "pull_request_review_id": 1629526153,
      "id": 1327657382,
      "node_id": "PRRC_kwDOABII585PInGm",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": 1262959018,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, changed to an `if`.",
      "created_at": "2023-09-15T18:39:15Z",
      "updated_at": "2023-09-15T18:39:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359995170",
      "pull_request_review_id": 1657907650,
      "id": 1359995170,
      "node_id": "PRRC_kwDOABII585RD-Ei",
      "diff_hunk": "@@ -231,7 +231,8 @@ def run_test(self):\n         assert_equal(newbalance, balance + Decimal(\"20\"))\n         balance = newbalance\n \n-        # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n+        # Invalidate the block with the double spend and both B and C's 10 BTC output should no longer be available\n+        # AB1 and ABC2's outputs are also not available since neither of those txs are in the mempool",
      "path": "test/functional/wallet_abandonconflict.py",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fdf3ab0579be6d6f2be31907e3451a830e25291e",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In fdf3ab0579be6d6f2be31907e3451a830e25291e \"wallet: Change balance calculation to use m_txos \":\r\n\r\nnit: This no longer needs to be changed in this commit. ",
      "created_at": "2023-10-16T00:44:18Z",
      "updated_at": "2023-10-16T12:06:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359995170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359995170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 234,
      "start_side": "LEFT",
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359998074",
      "pull_request_review_id": 1657907650,
      "id": 1359998074,
      "node_id": "PRRC_kwDOABII585RD-x6",
      "diff_hunk": "@@ -504,6 +504,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "d7b3603822663fbc713970bf37dc010904aaa583",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d7b3603822663fbc713970bf37dc010904aaa583 \"wallet: Recalculate the wallet's txos after any imports \":\r\n\r\n`RefreshWalletTXOs` looks similar to `RefreshWalletTxTXOs` and it is not immediately clear what the distinction is without actually reading the functions. I would suggest s/RefreshWalletTXOs/RefreshAllTXOs (putting \"Wallet\" seems redundant here because the method belongs to wallet anyways, and `GetTXOs` doesn't mention \"Wallet\" in the function name).",
      "created_at": "2023-10-16T00:54:34Z",
      "updated_at": "2023-10-16T12:06:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359998074",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359998074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 506,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360011012",
      "pull_request_review_id": 1657907650,
      "id": 1360011012,
      "node_id": "PRRC_kwDOABII585REB8E",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": 1262959018,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looking at this again, I think I mislead you here. In the scenario I described above, `tx_ok` won't be false at this point, because if a `{false, false}` entry has already been created for a txid, then it would not reach this point because it would already get removed here (https://github.com/bitcoin/bitcoin/pull/27286/commits/9315bb7872210dc767dfd7ea01febb13fca5525b#diff-6e06b309cd494ef5da4e78aa0929a980767edd12342137f268b9219167064d13R328-R329)",
      "created_at": "2023-10-16T01:38:50Z",
      "updated_at": "2023-10-16T12:06:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1360011012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360011012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317075",
      "pull_request_review_id": 1681041652,
      "id": 1361317075,
      "node_id": "PRRC_kwDOABII585RJAzT",
      "diff_hunk": "@@ -231,7 +231,8 @@ def run_test(self):\n         assert_equal(newbalance, balance + Decimal(\"20\"))\n         balance = newbalance\n \n-        # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n+        # Invalidate the block with the double spend and both B and C's 10 BTC output should no longer be available\n+        # AB1 and ABC2's outputs are also not available since neither of those txs are in the mempool",
      "path": "test/functional/wallet_abandonconflict.py",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fdf3ab0579be6d6f2be31907e3451a830e25291e",
      "in_reply_to_id": 1359995170,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-10-16T22:14:49Z",
      "updated_at": "2023-10-16T22:14:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 234,
      "start_side": "LEFT",
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317158",
      "pull_request_review_id": 1681041766,
      "id": 1361317158,
      "node_id": "PRRC_kwDOABII585RJA0m",
      "diff_hunk": "@@ -504,6 +504,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "d7b3603822663fbc713970bf37dc010904aaa583",
      "in_reply_to_id": 1359998074,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Renamed as suggested.",
      "created_at": "2023-10-16T22:14:56Z",
      "updated_at": "2023-10-16T22:14:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317158",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 506,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317356",
      "pull_request_review_id": 1681042072,
      "id": 1361317356,
      "node_id": "PRRC_kwDOABII585RJA3s",
      "diff_hunk": "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "881650ed319c6ed74e66ae56c34cdee93125231b",
      "in_reply_to_id": 1262959018,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed. I've left the `if` there anyways as a belt-and-suspenders, and changed it to also `Assume`.",
      "created_at": "2023-10-16T22:15:19Z",
      "updated_at": "2023-10-16T22:15:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317356",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1369755368",
      "pull_request_review_id": 1694219823,
      "id": 1369755368,
      "node_id": "PRRC_kwDOABII585RpM7o",
      "diff_hunk": "@@ -47,10 +47,17 @@ void generateFakeBlock(const CChainParams& params,\n     coinbase_tx.vin[0].prevout.SetNull();\n     coinbase_tx.vout.resize(2);\n     coinbase_tx.vout[0].scriptPubKey = coinbase_out_script;\n-    coinbase_tx.vout[0].nValue = 49 * COIN;\n+    coinbase_tx.vout[0].nValue = 48 * COIN;\n     coinbase_tx.vin[0].scriptSig = CScript() << ++tip.tip_height << OP_0;\n     coinbase_tx.vout[1].scriptPubKey = coinbase_out_script; // extra output\n     coinbase_tx.vout[1].nValue = 1 * COIN;\n+\n+    // Fill the coinbase with outputs that don't belong to the wallet in order to benchmark\n+    // AvailableCoins' behavior with unnecessary TXOs\n+    for (int i = 0; i < 50; ++i) {\n+        coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));",
      "path": "src/bench/wallet_create_tx.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "9292951f0c2a05a79280e4feb8c1557586681105",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\nbench/wallet_create_tx.cpp:58:26: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\r\n   58 |         coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));\r\n      |                          ^~~~~~~~~~~~~~~~~                               ~\r\n      |                          emplace_back(",
      "created_at": "2023-10-24T07:51:16Z",
      "updated_at": "2023-10-24T07:51:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1369755368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1369755368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370428946",
      "pull_request_review_id": 1695267006,
      "id": 1370428946,
      "node_id": "PRRC_kwDOABII585RrxYS",
      "diff_hunk": "@@ -47,10 +47,17 @@ void generateFakeBlock(const CChainParams& params,\n     coinbase_tx.vin[0].prevout.SetNull();\n     coinbase_tx.vout.resize(2);\n     coinbase_tx.vout[0].scriptPubKey = coinbase_out_script;\n-    coinbase_tx.vout[0].nValue = 49 * COIN;\n+    coinbase_tx.vout[0].nValue = 48 * COIN;\n     coinbase_tx.vin[0].scriptSig = CScript() << ++tip.tip_height << OP_0;\n     coinbase_tx.vout[1].scriptPubKey = coinbase_out_script; // extra output\n     coinbase_tx.vout[1].nValue = 1 * COIN;\n+\n+    // Fill the coinbase with outputs that don't belong to the wallet in order to benchmark\n+    // AvailableCoins' behavior with unnecessary TXOs\n+    for (int i = 0; i < 50; ++i) {\n+        coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));",
      "path": "src/bench/wallet_create_tx.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "9292951f0c2a05a79280e4feb8c1557586681105",
      "in_reply_to_id": 1369755368,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-10-24T15:41:43Z",
      "updated_at": "2023-10-24T15:41:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1370428946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370428946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376775944",
      "pull_request_review_id": 1705025510,
      "id": 1376775944,
      "node_id": "PRRC_kwDOABII585SD-8I",
      "diff_hunk": "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b2790645e9d8a4db8919f14a04b83b6ac4d61015",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How would that ever happen? Wouldn’t we only have seen a trusted_parent before if we received two outputs from the same transaction?",
      "created_at": "2023-10-30T20:39:45Z",
      "updated_at": "2023-10-30T21:04:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376775944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376775944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376784576",
      "pull_request_review_id": 1705025510,
      "id": 1376784576,
      "node_id": "PRRC_kwDOABII585SEBDA",
      "diff_hunk": "@@ -329,32 +343,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n \n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx())) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;",
      "path": "src/wallet/receive.cpp",
      "position": 161,
      "original_position": 88,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "73bff03d1f641d11f2cd4d2da099b39c64fcf69d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wouldn’t this mean that we don’t count P2PK outputs to our balance in combination with the changes to \"Destinations\" for Silent Payments?",
      "created_at": "2023-10-30T20:49:17Z",
      "updated_at": "2023-10-30T21:04:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376784576",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376784576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": 313,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376793667",
      "pull_request_review_id": 1705025510,
      "id": 1376793667,
      "node_id": "PRRC_kwDOABII585SEDRD",
      "diff_hunk": "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "path": "src/wallet/wallet.cpp",
      "position": 21,
      "original_position": 2,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c91b1de21821f924e34980aef1f8da2ae6571774",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What does `GetDebit` do? The explanation in `wallet.h` is also self-referential:  \r\n\r\n```\r\n 769     /**\r\n 770      * Returns amount of debit if the input matches the\r\n 771      * filter, otherwise returns 0\r\n 772      */\r\n```\r\n\r\nDoes this just get the amount for an input that matches the filter criteria?",
      "created_at": "2023-10-30T20:58:46Z",
      "updated_at": "2023-10-30T21:04:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376793667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376793667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1544,
      "original_line": 1544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376825609",
      "pull_request_review_id": 1705110720,
      "id": 1376825609,
      "node_id": "PRRC_kwDOABII585SELEJ",
      "diff_hunk": "@@ -329,32 +343,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n \n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx())) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;",
      "path": "src/wallet/receive.cpp",
      "position": 161,
      "original_position": 88,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "73bff03d1f641d11f2cd4d2da099b39c64fcf69d",
      "in_reply_to_id": 1376784576,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, P2PK is not an address type.",
      "created_at": "2023-10-30T21:33:01Z",
      "updated_at": "2023-10-30T21:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376825609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376825609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 313,
      "original_line": 313,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376828067",
      "pull_request_review_id": 1705114428,
      "id": 1376828067,
      "node_id": "PRRC_kwDOABII585SELqj",
      "diff_hunk": "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "path": "src/wallet/wallet.cpp",
      "position": 21,
      "original_position": 2,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c91b1de21821f924e34980aef1f8da2ae6571774",
      "in_reply_to_id": 1376793667,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Debit\" refers to the amount leaving the wallet, assuming the UTXO spent by the input matches the filter. \"Debit\" operates on a transaction's inputs, while \"credit\" operates on the outputs.",
      "created_at": "2023-10-30T21:36:03Z",
      "updated_at": "2023-10-30T21:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376828067",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376828067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1544,
      "original_line": 1544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376896229",
      "pull_request_review_id": 1705219601,
      "id": 1376896229,
      "node_id": "PRRC_kwDOABII585SEcTl",
      "diff_hunk": "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b2790645e9d8a4db8919f14a04b83b6ac4d61015",
      "in_reply_to_id": 1376775944,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, and that does happen, e.g. send to self transactions. The tests also do this a lot.",
      "created_at": "2023-10-30T23:21:26Z",
      "updated_at": "2023-10-30T23:21:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376896229",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376896229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437849004",
      "pull_request_review_id": 1798367193,
      "id": 1437849004,
      "node_id": "PRRC_kwDOABII585Vs9Ws",
      "diff_hunk": "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "91e4f19f66c5e2078aa8372d93aa7d5e027c40e5",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have the impression that `m_txos` is also used to look up information on old transactions and we therefore want to keep all transaction outputs the wallet ever had.\r\n\r\nWould it perhaps make sense to also have a reduced set that only keeps the potentially _unspent_ TXOs? I could see a wallet that participates in a few dozen transactions every day have magnitudes more TXOs than UTXOs. So perhaps the work the wallet has to perform every time it builds a transaction could be shortcut by storing e.g. `m_is_mature_spent` on `WalletTXO` which could be set to true when the transaction spending an output has 100 confirmations, and then either separately keeping a list of all TXOs that are not `m_is_mature_spent` or at least iterate over them more quickly directly on the basis of that member, without needing to have complex reorg handling to keep this collection up to date.",
      "created_at": "2023-12-28T19:32:35Z",
      "updated_at": "2023-12-28T19:38:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437849004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437849004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437851827",
      "pull_request_review_id": 1798371244,
      "id": 1437851827,
      "node_id": "PRRC_kwDOABII585Vs-Cz",
      "diff_hunk": "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "91e4f19f66c5e2078aa8372d93aa7d5e027c40e5",
      "in_reply_to_id": 1437849004,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, nevermind, I just saw https://github.com/bitcoin/bitcoin/pull/27865",
      "created_at": "2023-12-28T19:39:45Z",
      "updated_at": "2023-12-28T19:39:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437851827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437851827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440077502",
      "pull_request_review_id": 1801381790,
      "id": 1440077502,
      "node_id": "PRRC_kwDOABII585V1da-",
      "diff_hunk": "@@ -293,27 +252,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && txo.GetWalletTx().InMempool()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like a hazard\r\n```suggestion\r\n                } else if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n```",
      "created_at": "2024-01-03T05:02:43Z",
      "updated_at": "2024-01-03T05:26:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440077502",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440077502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440086373",
      "pull_request_review_id": 1801381790,
      "id": 1440086373,
      "node_id": "PRRC_kwDOABII585V1fll",
      "diff_hunk": "@@ -320,137 +316,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(Txid::FromUint256(txid), i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could use `contains` (and other places too)\r\n```suggestion\r\n        if (!tx_safe_cache.contains(outpoint.hash)) {\r\n```",
      "created_at": "2024-01-03T05:25:23Z",
      "updated_at": "2024-01-03T05:26:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440086373",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440086373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251493",
      "pull_request_review_id": 1804970818,
      "id": 1442251493,
      "node_id": "PRRC_kwDOABII585V9wLl",
      "diff_hunk": "@@ -293,27 +252,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && txo.GetWalletTx().InMempool()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "in_reply_to_id": 1440077502,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, fixed.",
      "created_at": "2024-01-04T21:05:07Z",
      "updated_at": "2024-01-04T21:05:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251493",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251567",
      "pull_request_review_id": 1804970933,
      "id": 1442251567,
      "node_id": "PRRC_kwDOABII585V9wMv",
      "diff_hunk": "@@ -320,137 +316,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(Txid::FromUint256(txid), i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "in_reply_to_id": 1440086373,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-01-04T21:05:13Z",
      "updated_at": "2024-01-04T21:05:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520283962",
      "pull_request_review_id": 1928856157,
      "id": 1520283962,
      "node_id": "PRRC_kwDOABII585anbE6",
      "diff_hunk": "@@ -1143,6 +1143,9 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const TxState& state, const\n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n \n+    // Get the outputs that belong to the wallet",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\n```suggestion\r\n    // Cache the outputs that belong to the wallet on the wallet’s transactions\r\n```",
      "created_at": "2024-03-11T19:00:03Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520283962",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520283962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520287400",
      "pull_request_review_id": 1928856157,
      "id": 1520287400,
      "node_id": "PRRC_kwDOABII585anb6o",
      "diff_hunk": "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\n\r\n```suggestion\r\n        if (m_txos.contains(outpoint)) {\r\n```",
      "created_at": "2024-03-11T19:03:15Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520287400",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520287400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520290111",
      "pull_request_review_id": 1928856157,
      "id": 1520290111,
      "node_id": "PRRC_kwDOABII585anck_",
      "diff_hunk": "@@ -425,6 +425,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! Cache of descriptor ScriptPubKeys used for IsMine. Maps ScriptPubKey to set of spkms\n     std::unordered_map<CScript, std::vector<ScriptPubKeyMan*>, SaltedSipHasher> m_cached_spks;\n \n+    //! Set of transaction outputs owned by this wallet",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n```suggestion\r\n    //! Set of spent and unspent transaction outputs owned by this wallet\r\n```",
      "created_at": "2024-03-11T19:05:59Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520290111",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520290111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520295185",
      "pull_request_review_id": 1928856157,
      "id": 1520295185,
      "node_id": "PRRC_kwDOABII585and0R",
      "diff_hunk": "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0283525d64a28c79f4588ef0a71bd280b2fc7768",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 0283525d64a28c79f4588ef0a71bd280b2fc7768 (wallet: Exit IsTrustedTx early if wtx is already in trusted_parents):\r\n\r\n```suggestion\r\n    if (trusted_parents.contains(wtx.GetHash())) return true;\r\n```",
      "created_at": "2024-03-11T19:09:35Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520295185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520295185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330141",
      "pull_request_review_id": 1928856157,
      "id": 1520330141,
      "node_id": "PRRC_kwDOABII585anmWd",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);",
      "path": "src/wallet/receive.cpp",
      "position": 77,
      "original_position": 13,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nI dug into this line, because I was wondering whether this line changed the behavior, but found that in `src/wallet/receive.cpp` in `CachedTxGetAvailableCredit(…)` the `reuse_filter` was used to derive the same resulting `allow_used_addresses` on basis of the filter and `WALLET_FLAG_AVOID_REUSE`. So, I’m thinking now that this change is not a change in behavior. It would perhaps help future reviewers if the commit message mentioned why this change is valid and doesn’t change the behavior.",
      "created_at": "2024-03-11T19:37:04Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520330141",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520345314",
      "pull_request_review_id": 1928856157,
      "id": 1520345314,
      "node_id": "PRRC_kwDOABII585anqDi",
      "diff_hunk": "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": 90,
      "original_position": 48,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\nA few commits later, you use `wallet.IsSpent(outpoint)` to check whether a TXO is still available for spending. Why can’t we just do store the outcome of `wallet.IsSpent(outpoint)` here as well?",
      "created_at": "2024-03-11T19:47:30Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520345314",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520345314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4449,
      "original_line": 4449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520349129",
      "pull_request_review_id": 1928856157,
      "id": 1520349129,
      "node_id": "PRRC_kwDOABII585anq_J",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {",
      "path": "src/wallet/receive.cpp",
      "position": 99,
      "original_position": 37,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nInstead of `wallet.IsSpentKey(…)` couldn’t you just check here if `txo.GetIsMine()` has the `ISMINE_USED` bit set?",
      "created_at": "2024-03-11T19:51:00Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520349129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520349129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 265,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520352559",
      "pull_request_review_id": 1928856157,
      "id": 1520352559,
      "node_id": "PRRC_kwDOABII585anr0v",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);",
      "path": "src/wallet/receive.cpp",
      "position": 109,
      "original_position": 47,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nI was wondering if we could see `ISMINE_SPENDABLE | ISMINE_USED` or `ISMINE_WATCH_ONLY | ISMINE_USED` here.",
      "created_at": "2024-03-11T19:54:12Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520352559",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520352559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 274,
      "original_start_line": 319,
      "start_side": "RIGHT",
      "line": 275,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520373556",
      "pull_request_review_id": 1928856157,
      "id": 1520373556,
      "node_id": "PRRC_kwDOABII585anw80",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object",
      "path": "src/wallet/receive.cpp",
      "position": 112,
      "original_position": 50,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nIt seems to me that the below should be matching replacements here, but previously every TXO in this loop got added to `…_untrusted_pending`, and now only TXOs of unconfirmed untrusted transactions, and immature coinbase transactions get added to `…_untrusted_pending`. Doesn’t this commit change the balances we would be returning?\r\n\r\n```diff\r\n- if (is_trusted && tx_depth >= min_depth) {\r\n-     ret.m_mine_trusted += tx_credit_mine;\r\n-     ret.m_watchonly_trusted += tx_credit_watchonly;\r\n- if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\r\n-     ret.m_mine_untrusted_pending += tx_credit_mine;\r\n-     ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\r\n- }\r\n- ret.m_mine_immature += CachedTxGetImmatureCredit(wallet, wtx, ISMINE_SPENDABLE);\r\n- ret.m_watchonly_immature += CachedTxGetImmatureCredit(wallet, wtx, ISMINE_WATCH_ONLY);\r\n+ // Set the amounts in the return object\r\n+ if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\r\n+     ret.m_mine_immature += credit_mine;\r\n+     ret.m_watchonly_immature += credit_watchonly;\r\n+ } else if (is_trusted && tx_depth >= min_depth) {\r\n+     ret.m_mine_trusted += credit_mine;\r\n+     ret.m_watchonly_trusted += credit_watchonly;\r\n+ } else if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n+     ret.m_mine_untrusted_pending += credit_mine;\r\n+     ret.m_watchonly_untrusted_pending += credit_watchonly;\r\n+ }\r\n```",
      "created_at": "2024-03-11T20:13:02Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520373556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520373556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520381857",
      "pull_request_review_id": 1928856157,
      "id": 1520381857,
      "node_id": "PRRC_kwDOABII585any-h",
      "diff_hunk": "@@ -340,5 +375,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"importupdate\")\n+\n+        import_key1 = get_generate_key()\n+        import_key2 = get_generate_key()\n+        wallet.importprivkey(import_key1.privkey)\n+\n+        amount = 15\n+        default.send([{import_key1.p2wpkh_addr: amount},{import_key2.p2wpkh_addr: amount}])\n+        self.generate(self.nodes[0], 1)\n+        # Mock the time forward by 1 day so that \"now\" will exclude the block we just mined\n+        self.nodes[0].setmocktime(int(time.time()) + 86400)\n+        # Mine 11 blocks to move the MTP past the block we just mined\n+        self.generate(self.nodes[0], 11, sync_fun=self.no_op)\n+\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount)\n+\n+        # Don't rescan to make sure that the import updates the wallet txos\n+        wallet.importprivkey(privkey=import_key2.privkey, rescan=False)\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount * 2)",
      "path": "test/functional/wallet_balance.py",
      "position": null,
      "original_position": 85,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787 (test: Test for balance update due to watchonly becoming spendable):\r\n\r\nDo I understand right that discovering this TXO without a rescan only works because the transaction was already in our `mapWallet`?",
      "created_at": "2024-03-11T20:20:03Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520381857",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520381857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 398,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520393226",
      "pull_request_review_id": 1928856157,
      "id": 1520393226,
      "node_id": "PRRC_kwDOABII585an1wK",
      "diff_hunk": "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c88832eca5df0a391a4a68c73b6fc123f9af2f4b",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In c88832eca5df0a391a4a68c73b6fc123f9af2f4b (wallet: Use wallet's TXO set in AvailableCoins):\r\n\r\nWhat are the \"tx checks\" that are being passed? It seems to me me that it refers to TXs either having been sent by ourselves that are not involved in an RBF process or TXs with sufficient confirmations that we rely on them. Either way, it would be nice if this comment were a bit more elaborate than just mentioning \"tx checks\". Also, the relationship to `safe_tx` could be made a bit clearer in this code block.\r\n\r\nPerhaps something along the lines of:\r\n\r\n```suggestion\r\n    // Cache for each transaction whether we consider its outputs acceptable for spending (first bool), and whether the transaction is considered \"safe\" (second bool).\r\n    // A transaction’s outputs are considered acceptable for spending when <elaborate>\r\n    // A transaction is considered safe when <elaborate>\r\n```\r\n\r\nAlternatively or additionally if the `CachedTxIsTrusted(…)` functions had a bit more documentation in either `src/wallet/receive.h` or  `src/wallet/receive.cpp`.\r\n",
      "created_at": "2024-03-11T20:29:01Z",
      "updated_at": "2024-03-11T21:05:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520393226",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520393226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521569610",
      "pull_request_review_id": 1931234103,
      "id": 1521569610,
      "node_id": "PRRC_kwDOABII585asU9K",
      "diff_hunk": "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": 90,
      "original_position": 48,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": 1520345314,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Outputs don't always stay spent. Replacements, reorgs, and eviction could all make a transaction no longer be \"IsSpent\", so checking that here would require a lot of other structural changes to ensure that it is correct.\r\n\r\nStoring the value of `IsSpent` could be an alternative to #27865, however I would still leave that for a followup. Any change that tries to actually have a proper UTXO set for the wallet can have unexpected side effects and/or things we didn't notice so I want to keep that separate for now. This PR is to setup for that by making the wallet operate on a TXO set.",
      "created_at": "2024-03-12T14:27:05Z",
      "updated_at": "2024-03-12T14:27:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521569610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521569610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4449,
      "original_line": 4449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521586912",
      "pull_request_review_id": 1931262672,
      "id": 1521586912,
      "node_id": "PRRC_kwDOABII585asZLg",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {",
      "path": "src/wallet/receive.cpp",
      "position": 99,
      "original_position": 37,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": 1520349129,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`ISMINE_USED` is not actually an isminetype that is returned by `IsMine`, so it will not be set in the `txo.GetIsMine()`'s result. It's really just a hack for it to be an isminetype so it can be passed as part of various ismine filters, but these always check that separately from the actual `IsMine` result.",
      "created_at": "2024-03-12T14:37:19Z",
      "updated_at": "2024-03-12T14:37:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521586912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521586912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 265,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521587788",
      "pull_request_review_id": 1931264076,
      "id": 1521587788,
      "node_id": "PRRC_kwDOABII585asZZM",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);",
      "path": "src/wallet/receive.cpp",
      "position": 109,
      "original_position": 47,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": 1520352559,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No. `ISMINE_USED` is never actually returned from `IsMine`.",
      "created_at": "2024-03-12T14:37:48Z",
      "updated_at": "2024-03-12T14:37:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521587788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521587788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 274,
      "original_start_line": 319,
      "start_side": "RIGHT",
      "line": 275,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521599391",
      "pull_request_review_id": 1931282586,
      "id": 1521599391,
      "node_id": "PRRC_kwDOABII585ascOf",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object",
      "path": "src/wallet/receive.cpp",
      "position": 112,
      "original_position": 50,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": 1520373556,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you be more specific as to what kind of transaction you think would result in a different balance? Nothing in this PR should change behavior.",
      "created_at": "2024-03-12T14:44:31Z",
      "updated_at": "2024-03-12T14:44:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521599391",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521599391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521601155",
      "pull_request_review_id": 1931285496,
      "id": 1521601155,
      "node_id": "PRRC_kwDOABII585ascqD",
      "diff_hunk": "@@ -340,5 +375,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"importupdate\")\n+\n+        import_key1 = get_generate_key()\n+        import_key2 = get_generate_key()\n+        wallet.importprivkey(import_key1.privkey)\n+\n+        amount = 15\n+        default.send([{import_key1.p2wpkh_addr: amount},{import_key2.p2wpkh_addr: amount}])\n+        self.generate(self.nodes[0], 1)\n+        # Mock the time forward by 1 day so that \"now\" will exclude the block we just mined\n+        self.nodes[0].setmocktime(int(time.time()) + 86400)\n+        # Mine 11 blocks to move the MTP past the block we just mined\n+        self.generate(self.nodes[0], 11, sync_fun=self.no_op)\n+\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount)\n+\n+        # Don't rescan to make sure that the import updates the wallet txos\n+        wallet.importprivkey(privkey=import_key2.privkey, rescan=False)\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount * 2)",
      "path": "test/functional/wallet_balance.py",
      "position": null,
      "original_position": 85,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787",
      "in_reply_to_id": 1520381857,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That is correct.",
      "created_at": "2024-03-12T14:45:36Z",
      "updated_at": "2024-03-12T14:45:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521601155",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521601155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 398,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521612789",
      "pull_request_review_id": 1931304324,
      "id": 1521612789,
      "node_id": "PRRC_kwDOABII585asff1",
      "diff_hunk": "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c88832eca5df0a391a4a68c73b6fc123f9af2f4b",
      "in_reply_to_id": 1520393226,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The checks are already explained in detail below where they are actually checked. \"tx checks\" just refers to the checks that occur per tx rather than per output. I don't think it is useful to duplicate the explanations here as well.\r\n\r\nI've added a comment that should make it easier to find where the tx checks are performed so you can read the comments that already exist.",
      "created_at": "2024-03-12T14:51:05Z",
      "updated_at": "2024-03-12T14:51:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521612789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521612789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521615589",
      "pull_request_review_id": 1931308853,
      "id": 1521615589,
      "node_id": "PRRC_kwDOABII585asgLl",
      "diff_hunk": "@@ -1143,6 +1143,9 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const TxState& state, const\n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n \n+    // Get the outputs that belong to the wallet",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": 1520283962,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed to \"cache\".\r\n\r\n\"on the wallet's transactions\" does not make the comment a valid English sentence, so I'm not sure what meaning you were trying to get across.",
      "created_at": "2024-03-12T14:52:42Z",
      "updated_at": "2024-03-12T14:52:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521615589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521615589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616092",
      "pull_request_review_id": 1931309762,
      "id": 1521616092,
      "node_id": "PRRC_kwDOABII585asgTc",
      "diff_hunk": "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": 1520287400,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-12T14:52:57Z",
      "updated_at": "2024-03-12T14:52:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616290",
      "pull_request_review_id": 1931310092,
      "id": 1521616290,
      "node_id": "PRRC_kwDOABII585asgWi",
      "diff_hunk": "@@ -425,6 +425,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! Cache of descriptor ScriptPubKeys used for IsMine. Maps ScriptPubKey to set of spkms\n     std::unordered_map<CScript, std::vector<ScriptPubKeyMan*>, SaltedSipHasher> m_cached_spks;\n \n+    //! Set of transaction outputs owned by this wallet",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": 1520290111,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-12T14:53:04Z",
      "updated_at": "2024-03-12T14:53:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616466",
      "pull_request_review_id": 1931310381,
      "id": 1521616466,
      "node_id": "PRRC_kwDOABII585asgZS",
      "diff_hunk": "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "0283525d64a28c79f4588ef0a71bd280b2fc7768",
      "in_reply_to_id": 1520295185,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-12T14:53:10Z",
      "updated_at": "2024-03-12T14:53:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616466",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616919",
      "pull_request_review_id": 1931311146,
      "id": 1521616919,
      "node_id": "PRRC_kwDOABII585asggX",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);",
      "path": "src/wallet/receive.cpp",
      "position": 77,
      "original_position": 13,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": 1520330141,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Mentioned in the commit message.",
      "created_at": "2024-03-12T14:53:26Z",
      "updated_at": "2024-03-12T14:53:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532522219",
      "pull_request_review_id": 1949605766,
      "id": 1532522219,
      "node_id": "PRRC_kwDOABII585bWG7r",
      "diff_hunk": "@@ -1143,6 +1143,9 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const TxState& state, const\n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n \n+    // Get the outputs that belong to the wallet",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "in_reply_to_id": 1520283962,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think I wanted to express that this function operates only on the transactions that the wallet tracks already.",
      "created_at": "2024-03-20T17:33:25Z",
      "updated_at": "2024-03-20T17:33:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1532522219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532522219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707091091",
      "pull_request_review_id": 2225335817,
      "id": 1707091091,
      "node_id": "PRRC_kwDOABII585lwCST",
      "diff_hunk": "@@ -507,6 +510,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     std::set<uint256> GetTxConflicts(const CWalletTx& wtx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "d6f67e97b7ec0b5fdc39e5ad52e0c03dd0e03fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d6f67e97b7ec0b5fdc39e5ad52e0c03dd0e03fd1 wallet: Keep track of transaction outputs owned by the wallet:\r\n\r\nIt would have helped me if this function had some documentation. Also, \"Wallet transaction transaction outputs\" feels a bit redundant, and the name `RefreshWalletTxTXOs(…)` is extremely similar to `RefreshAllTXOs()` that gets introduced in the later commit \"wallet: Recalculate the wallet's txos after any imports\". If you have to touch this again, perhaps consider calling this function `CacheWalletTXOs`?\r\n\r\n```suggestion\r\n    /** Processes one wallet transaction and caches outputs that belong to our wallet. */\r\n    void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n```",
      "created_at": "2024-08-07T14:16:04Z",
      "updated_at": "2024-08-08T18:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1707091091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707091091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707520564",
      "pull_request_review_id": 2225335817,
      "id": 1707520564,
      "node_id": "PRRC_kwDOABII585lxrI0",
      "diff_hunk": "@@ -513,6 +513,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshAllTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": 20,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "9d3762913ba02d1f6cd3b42889c2c3b31f03e90c",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9d3762913ba02d1f6cd3b42889c2c3b31f03e90c \"wallet: Recalculate the wallet's txos after any imports\":\r\n\r\nPerhaps add a documentation comment here along the lines of:\r\n\r\n```suggestion\r\n    /** Inspects every wallet transaction and caches all outputs that belong to our wallet. */\r\n    void RefreshAllTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\r\n```",
      "created_at": "2024-08-07T17:30:48Z",
      "updated_at": "2024-08-08T18:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1707520564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707520564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802989706",
      "pull_request_review_id": 2372263943,
      "id": 1802989706,
      "node_id": "PRRC_kwDOABII585rd3CK",
      "diff_hunk": "@@ -507,6 +510,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     std::set<uint256> GetTxConflicts(const CWalletTx& wtx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 14,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "d6f67e97b7ec0b5fdc39e5ad52e0c03dd0e03fd1",
      "in_reply_to_id": 1707091091,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-16T12:14:21Z",
      "updated_at": "2024-10-16T12:14:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1802989706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802989706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802989927",
      "pull_request_review_id": 2372264297,
      "id": 1802989927,
      "node_id": "PRRC_kwDOABII585rd3Fn",
      "diff_hunk": "@@ -513,6 +513,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshAllTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": 20,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "9d3762913ba02d1f6cd3b42889c2c3b31f03e90c",
      "in_reply_to_id": 1707520564,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-16T12:14:28Z",
      "updated_at": "2024-10-16T12:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1802989927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802989927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987820088",
      "pull_request_review_id": 2671870689,
      "id": 1987820088,
      "node_id": "PRRC_kwDOABII5852e7o4",
      "diff_hunk": "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "path": "src/wallet/wallet.cpp",
      "position": 21,
      "original_position": 2,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c91b1de21821f924e34980aef1f8da2ae6571774",
      "in_reply_to_id": 1376793667,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this documented anywhere?  This is a good question and I would imagine others will have the same in the future.",
      "created_at": "2025-03-10T18:30:24Z",
      "updated_at": "2025-03-10T18:30:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1987820088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987820088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1544,
      "original_line": 1544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987822504",
      "pull_request_review_id": 2671875614,
      "id": 1987822504,
      "node_id": "PRRC_kwDOABII5852e8Oo",
      "diff_hunk": "@@ -4621,4 +4627,40 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This method name looks funky. SingleTxTXO is short for single transaction transaction output?",
      "created_at": "2025-03-10T18:32:09Z",
      "updated_at": "2025-03-10T18:32:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1987822504",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987822504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036341634",
      "pull_request_review_id": 2755097920,
      "id": 2036341634,
      "node_id": "PRRC_kwDOABII5855YBuC",
      "diff_hunk": "@@ -4621,4 +4627,40 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "in_reply_to_id": 1987822504,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes. It is a single transaction's transaction outputs.",
      "created_at": "2025-04-10T01:04:32Z",
      "updated_at": "2025-04-10T01:04:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2036341634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036341634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2072667393",
      "pull_request_review_id": 2813519505,
      "id": 2072667393,
      "node_id": "PRRC_kwDOABII5857imUB",
      "diff_hunk": "@@ -514,6 +514,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Cache outputs that belong to the wallet from a single transaction */\n     void RefreshSingleTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    /** Cache outputs that belong to the wallt for all tranasctions in the wallet */",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "93563ecef5e1be1522d4784b0092737487156bab",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 93563ecef5e1be1522d4784b0092737487156bab: wallt → wallet",
      "created_at": "2025-05-04T17:23:34Z",
      "updated_at": "2025-05-07T14:39:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2072667393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2072667393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2072667513",
      "pull_request_review_id": 2813519505,
      "id": 2072667513,
      "node_id": "PRRC_kwDOABII5857imV5",
      "diff_hunk": "@@ -514,6 +514,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Cache outputs that belong to the wallet from a single transaction */\n     void RefreshSingleTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    /** Cache outputs that belong to the wallt for all tranasctions in the wallet */",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "93563ecef5e1be1522d4784b0092737487156bab",
      "in_reply_to_id": 2072667393,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": " tranasctions → transactions",
      "created_at": "2025-05-04T17:24:10Z",
      "updated_at": "2025-05-07T14:39:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2072667513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2072667513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078307648",
      "pull_request_review_id": 2822906030,
      "id": 2078307648,
      "node_id": "PRRC_kwDOABII58574HVA",
      "diff_hunk": "@@ -514,6 +514,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Cache outputs that belong to the wallet from a single transaction */\n     void RefreshSingleTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    /** Cache outputs that belong to the wallt for all tranasctions in the wallet */",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "93563ecef5e1be1522d4784b0092737487156bab",
      "in_reply_to_id": 2072667393,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2025-05-07T19:01:05Z",
      "updated_at": "2025-05-07T19:01:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2078307648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078307648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078987925",
      "pull_request_review_id": 2823965110,
      "id": 2078987925,
      "node_id": "PRRC_kwDOABII58576taV",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.contains(wtx.GetHash())) return true;",
      "path": "src/wallet/receive.cpp",
      "position": 67,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fe545f997d77c0f8bd289b7ae1760327cb6e3a2d",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this optimization directly related to this PR, or did you take the opportunity to include it here?",
      "created_at": "2025-05-08T06:30:39Z",
      "updated_at": "2025-05-08T06:30:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2078987925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078987925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080112837",
      "pull_request_review_id": 2825801077,
      "id": 2080112837,
      "node_id": "PRRC_kwDOABII5857_ADF",
      "diff_hunk": "@@ -285,5 +287,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")",
      "path": "test/functional/wallet_balance.py",
      "position": 25,
      "original_position": 22,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fb8644ca5f4380b1ae492a1c6ad19d531e8726a0",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this wallet watch-only (per commit description) ?",
      "created_at": "2025-05-08T17:00:13Z",
      "updated_at": "2025-05-08T17:00:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2080112837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080112837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 287,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080202804",
      "pull_request_review_id": 2825948523,
      "id": 2080202804,
      "node_id": "PRRC_kwDOABII5857_WA0",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.contains(wtx.GetHash())) return true;",
      "path": "src/wallet/receive.cpp",
      "position": 67,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fe545f997d77c0f8bd289b7ae1760327cb6e3a2d",
      "in_reply_to_id": 2078987925,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe it's necessary so that repeated calls to `CachedTxIsTrusted` that would now occur once for each TXO can be skipped early.",
      "created_at": "2025-05-08T18:02:24Z",
      "updated_at": "2025-05-08T18:02:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2080202804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080202804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080206413",
      "pull_request_review_id": 2825955053,
      "id": 2080206413,
      "node_id": "PRRC_kwDOABII5857_W5N",
      "diff_hunk": "@@ -285,5 +287,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")",
      "path": "test/functional/wallet_balance.py",
      "position": 25,
      "original_position": 22,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "fb8644ca5f4380b1ae492a1c6ad19d531e8726a0",
      "in_reply_to_id": 2080112837,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is not. That part of the test no longer exists after #28710. I've updated the commit message.",
      "created_at": "2025-05-08T18:05:00Z",
      "updated_at": "2025-05-08T18:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2080206413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080206413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 287,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2082398496",
      "pull_request_review_id": 2829500818,
      "id": 2082398496,
      "node_id": "PRRC_kwDOABII5858HuEg",
      "diff_hunk": "@@ -4621,4 +4627,40 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "in_reply_to_id": 1987822504,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In wallet: Keep track of transaction outputs owned by the wallet (e82763903b5e0723abf09cb46874953c7b523d24):\r\nI’m also not excited about \"TxTXOs\". `RefreshTXOsFromSingleTx(…)` would be just slightly longer and easier to parse. Alternatively `CacheOwnTXOsFromTx(…)`?",
      "created_at": "2025-05-09T19:41:13Z",
      "updated_at": "2025-05-15T00:58:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2082398496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2082398496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089677991",
      "pull_request_review_id": 2841406224,
      "id": 2089677991,
      "node_id": "PRRC_kwDOABII5858jfSn",
      "diff_hunk": "@@ -369,6 +369,28 @@ struct WalletTxOrderComparator {\n         return a->nOrderPos < b->nOrderPos;\n     }\n };\n+\n+class WalletTXO\n+{\n+private:\n+    const CWalletTx& m_wtx;\n+    const CTxOut& m_output;\n+    isminetype m_ismine;\n+\n+public:\n+    WalletTXO(const CWalletTx& wtx, const CTxOut& output, const isminetype ismine)\n+    : m_wtx(wtx),\n+    m_output(output),\n+    m_ismine(ismine)\n+    {}",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 17,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "e82763903b5e0723abf09cb46874953c7b523d24",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe belt and suspenders check that the output belongs to the tx:\r\n```suggestion\r\n    {\r\n        Assume(std::ranges::find(wtx.tx->vout, output) != wtx.tx->vout.end());\r\n    }\r\n```\r\n",
      "created_at": "2025-05-14T20:18:30Z",
      "updated_at": "2025-05-15T01:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2089677991",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089677991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 385,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089860593",
      "pull_request_review_id": 2841406224,
      "id": 2089860593,
      "node_id": "PRRC_kwDOABII5858kL3x",
      "diff_hunk": "@@ -4621,4 +4627,40 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "in_reply_to_id": 1987822504,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "millinit: Maybe the function signature is sufficient to communicate that it's just for a single TX?\r\n\r\n```suggestion\r\nvoid CWallet::RefreshTXOs(const CWalletTx& wtx)\r\n```",
      "created_at": "2025-05-14T22:37:31Z",
      "updated_at": "2025-05-15T01:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2089860593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089860593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089882326",
      "pull_request_review_id": 2841406224,
      "id": 2089882326,
      "node_id": "PRRC_kwDOABII5858kRLW",
      "diff_hunk": "@@ -4454,4 +4462,22 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.contains(outpoint)) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": 90,
      "original_position": 48,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "e82763903b5e0723abf09cb46874953c7b523d24",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit:\r\n\r\nCould be made a bit shorter with:\r\n```suggestion\r\n        auto [it, inserted] = m_txos.emplace(COutPoint{wtx.GetHash(), i}, WalletTXO{wtx, txout, ismine});\r\n        if (!inserted) {\r\n            it->second.SetIsMine(ismine);\r\n        }\r\n```\r\n\r\nBut maybe as-is is more legible. ",
      "created_at": "2025-05-14T23:03:21Z",
      "updated_at": "2025-05-15T01:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2089882326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089882326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 4444,
      "original_start_line": 4475,
      "start_side": "RIGHT",
      "line": 4449,
      "original_line": 4449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089924798",
      "pull_request_review_id": 2829500818,
      "id": 2089924798,
      "node_id": "PRRC_kwDOABII5858kbi-",
      "diff_hunk": "@@ -401,6 +401,7 @@ RPCHelpMan importdescriptors()\n             }\n         }\n         pwallet->ConnectScriptPubKeyManNotifiers();\n+        pwallet->RefreshAllTXOs();",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "850de8343e36a17a5c875b1be974153bf06efaca",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"wallet: Recalculate the wallet's txos after any imports\" (850de8343e36a17a5c875b1be974153bf06efaca):\r\nI’m surprised that the prior commit did not have failing tests if the addition of `RefreshAllTXOs()` is necessary here. Is there maybe test coverage missing here?",
      "created_at": "2025-05-15T00:03:19Z",
      "updated_at": "2025-05-15T00:58:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2089924798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089924798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 397,
      "original_line": 397,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089928193",
      "pull_request_review_id": 2829500818,
      "id": 2089928193,
      "node_id": "PRRC_kwDOABII5858kcYB",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {",
      "path": "src/wallet/receive.cpp",
      "position": 84,
      "original_position": 31,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ff73562fb5df406da95d6a6327e3d22b8d3e12f2",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it would make more sense to me if \"wallet: Change balance calculation to use m_txos\" (ff73562fb5df406da95d6a6327e3d22b8d3e12f2) came after \"test: Test for balance update due to untracked output becoming spendable\" (f062a438620625bfa0d20022e76cad1705587737).\r\n\r\nFirst the fix, then the test, then the refactor passes the test.",
      "created_at": "2025-05-15T00:08:28Z",
      "updated_at": "2025-05-15T00:58:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2089928193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089928193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091927938",
      "pull_request_review_id": 2844924443,
      "id": 2091927938,
      "node_id": "PRRC_kwDOABII5858sEmC",
      "diff_hunk": "@@ -401,6 +401,7 @@ RPCHelpMan importdescriptors()\n             }\n         }\n         pwallet->ConnectScriptPubKeyManNotifiers();\n+        pwallet->RefreshAllTXOs();",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "850de8343e36a17a5c875b1be974153bf06efaca",
      "in_reply_to_id": 2089924798,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The test coverage is added in the next commit \"test: Test for balance update due to untracked output becoming spendable\" which I have now moved to be earlier in the PR.",
      "created_at": "2025-05-15T20:40:44Z",
      "updated_at": "2025-05-15T20:40:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2091927938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091927938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 397,
      "original_line": 397,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091928905",
      "pull_request_review_id": 2844925939,
      "id": 2091928905,
      "node_id": "PRRC_kwDOABII5858sE1J",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {",
      "path": "src/wallet/receive.cpp",
      "position": 84,
      "original_position": 31,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ff73562fb5df406da95d6a6327e3d22b8d3e12f2",
      "in_reply_to_id": 2089928193,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.\r\n\r\nThis actually revealed a bug in `importdescriptors`, I've added a commit to fix that, although it should actually be moot after the changes in this PR.",
      "created_at": "2025-05-15T20:41:27Z",
      "updated_at": "2025-05-15T20:41:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2091928905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091928905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091931854",
      "pull_request_review_id": 2844930542,
      "id": 2091931854,
      "node_id": "PRRC_kwDOABII5858sFjO",
      "diff_hunk": "@@ -4621,4 +4627,40 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "48545bdb3b9f59a8b78640dbf20afff6e2663ad7",
      "in_reply_to_id": 1987822504,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Renamed to `RefreshTXOsFromTx`.",
      "created_at": "2025-05-15T20:43:47Z",
      "updated_at": "2025-05-15T20:43:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2091931854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091931854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091969986",
      "pull_request_review_id": 2844987288,
      "id": 2091969986,
      "node_id": "PRRC_kwDOABII5858sO3C",
      "diff_hunk": "@@ -369,6 +369,28 @@ struct WalletTxOrderComparator {\n         return a->nOrderPos < b->nOrderPos;\n     }\n };\n+\n+class WalletTXO\n+{\n+private:\n+    const CWalletTx& m_wtx;\n+    const CTxOut& m_output;\n+    isminetype m_ismine;\n+\n+public:\n+    WalletTXO(const CWalletTx& wtx, const CTxOut& output, const isminetype ismine)\n+    : m_wtx(wtx),\n+    m_output(output),\n+    m_ismine(ismine)\n+    {}",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 17,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "e82763903b5e0723abf09cb46874953c7b523d24",
      "in_reply_to_id": 2089677991,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2025-05-15T21:14:40Z",
      "updated_at": "2025-05-15T21:14:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2091969986",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091969986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 385,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091971018",
      "pull_request_review_id": 2844988845,
      "id": 2091971018,
      "node_id": "PRRC_kwDOABII5858sPHK",
      "diff_hunk": "@@ -4454,4 +4462,22 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.contains(outpoint)) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": 90,
      "original_position": 48,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "e82763903b5e0723abf09cb46874953c7b523d24",
      "in_reply_to_id": 2089882326,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As-is is more legible, and this area of code changes significantly in #27865 where having it like it is now makes those changes easier to read.",
      "created_at": "2025-05-15T21:15:40Z",
      "updated_at": "2025-05-15T21:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2091971018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091971018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 4444,
      "original_start_line": 4475,
      "start_side": "RIGHT",
      "line": 4449,
      "original_line": 4449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092020703",
      "pull_request_review_id": 2845063474,
      "id": 2092020703,
      "node_id": "PRRC_kwDOABII5858sbPf",
      "diff_hunk": "@@ -4454,4 +4462,22 @@ std::optional<CKey> CWallet::GetKey(const CKeyID& keyid) const\n     }\n     return std::nullopt;\n }\n+\n+void CWallet::RefreshSingleTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.contains(outpoint)) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": 90,
      "original_position": 48,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "e82763903b5e0723abf09cb46874953c7b523d24",
      "in_reply_to_id": 2089882326,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agreed, makes sense.",
      "created_at": "2025-05-15T22:03:30Z",
      "updated_at": "2025-05-15T22:03:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2092020703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092020703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 4444,
      "original_start_line": 4475,
      "start_side": "RIGHT",
      "line": 4449,
      "original_line": 4449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2105070757",
      "pull_request_review_id": 2865141901,
      "id": 2105070757,
      "node_id": "PRRC_kwDOABII5859eNSl",
      "diff_hunk": "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object",
      "path": "src/wallet/receive.cpp",
      "position": 112,
      "original_position": 50,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "in_reply_to_id": 1520373556,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think I just didn’t fully understand what was happening here then.",
      "created_at": "2025-05-23T17:11:03Z",
      "updated_at": "2025-05-23T17:17:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2105070757",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2105070757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2105072678",
      "pull_request_review_id": 2865141901,
      "id": 2105072678,
      "node_id": "PRRC_kwDOABII5859eNwm",
      "diff_hunk": "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "path": "src/wallet/wallet.cpp",
      "position": 21,
      "original_position": 2,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "c91b1de21821f924e34980aef1f8da2ae6571774",
      "in_reply_to_id": 1376793667,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would probably be best documented by updating the description of the `GetDebit` function whenever someone changes code nearby.",
      "created_at": "2025-05-23T17:12:37Z",
      "updated_at": "2025-05-23T17:17:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2105072678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2105072678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1544,
      "original_line": 1544,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124996445",
      "pull_request_review_id": 2894219880,
      "id": 2124996445,
      "node_id": "PRRC_kwDOABII585-qN9d",
      "diff_hunk": "@@ -362,6 +363,30 @@ struct WalletTxOrderComparator {\n         return a->nOrderPos < b->nOrderPos;\n     }\n };\n+\n+class WalletTXO\n+{\n+private:\n+    const CWalletTx& m_wtx;\n+    const CTxOut& m_output;",
      "path": "src/wallet/transaction.h",
      "position": 35,
      "original_position": 17,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "non-blocking suggestion: \r\n\r\nWhat if instead of a reference to a `CTxOut` WalletTXO just kept the vout index of the output. Not even really for performance reasons, but just because it more tightly represents / enforces the meaning/usage of `WalletTXO`.\r\n\r\n This is an implementation detail of `WalletTXO`, and can be handled neatly by `GetTxOut()`, so if the suggestion makes sense, it can be done in a follow-up.",
      "created_at": "2025-06-03T21:56:14Z",
      "updated_at": "2025-06-05T17:58:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2124996445",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124996445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 369,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2125040229",
      "pull_request_review_id": 2894219880,
      "id": 2125040229,
      "node_id": "PRRC_kwDOABII585-qYpl",
      "diff_hunk": "@@ -4456,4 +4464,22 @@ void CWallet::WriteBestBlock() const\n         batch.WriteBestBlock(loc);\n     }\n }\n+\n+void CWallet::RefreshTXOsFromTx(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {",
      "path": "src/wallet/wallet.cpp",
      "position": 82,
      "original_position": 40,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it possible for an outpoint to ever change from something else to `ISMINE_NO`? I'm wondering if there should be a `m_txos.contains(outpoint)` check and `SetIsMine()` update like happens below for the `ISMINE_NO` case.",
      "created_at": "2025-06-03T22:24:07Z",
      "updated_at": "2025-06-05T01:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2125040229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2125040229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4441,
      "original_line": 4441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127103860",
      "pull_request_review_id": 2894219880,
      "id": 2127103860,
      "node_id": "PRRC_kwDOABII585-yQd0",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<Txid>& trusted_parents)",
      "path": "src/wallet/receive.cpp",
      "position": 62,
      "original_position": 1,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "72378b2bf42714b67fb3f0272b5fbb7c37a08898",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/27286/commits/72378b2bf42714b67fb3f0272b5fbb7c37a08898 (_wallet: Exit IsTrustedTx early if wtx is already in trusted_parents_):\r\n\r\nnanonit: commit message `IsTrustedTx` -> `TxIsTrusted`",
      "created_at": "2025-06-04T17:30:46Z",
      "updated_at": "2025-06-05T01:01:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2127103860",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127103860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 212,
      "original_line": 212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127237787",
      "pull_request_review_id": 2894219880,
      "id": 2127237787,
      "node_id": "PRRC_kwDOABII585-yxKb",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<Txid>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.contains(wtx.GetHash())) return true;",
      "path": "src/wallet/receive.cpp",
      "position": 67,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "72378b2bf42714b67fb3f0272b5fbb7c37a08898",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feel free to disregard:\r\n\r\nI'm having some trouble building confidence about whether or not this optimization is correct.\r\n\r\nMy understanding is that in the loop below, a transaction will only be inserted into `trusted_parents` if it, and all of its parents are trusted:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/72378b2bf42714b67fb3f0272b5fbb7c37a08898/src/wallet/receive.cpp#L283-L285\r\n\r\nBut the \"cached\" checks, so to speak, are all of the checks above the `trusted_parents.count()` check in the loop:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/72378b2bf42714b67fb3f0272b5fbb7c37a08898/src/wallet/receive.cpp#L273-L287\r\n\r\nI'm not sure it makes sense to assume a transaction is trusted if we havent checked e.g. `wtx.isBlockConflicted()`, since this can easily change, and cause us to misrepresent a transaction that is the child of a previously confirmed parent that is now conflicted as trusted, no?\r\n\r\nI tried to write a test that would exhibit this misbehavior, but I couldn't, so I think I may have got lost in the plot here, can you help me understand why we can be sure that if a `wtx` was trusted once, it will always be trusted?\r\n\r\n<details>\r\n\r\n<summary>\r\nTest I wrote\r\n</summary>\r\n\r\n\r\n\r\n```python\r\n    def test_descendants_with_block_conflicts(self):\r\n        alice_node = self.nodes[0]\r\n        alice_node.createwallet(\"alice_4\")\r\n        alice = alice_node.get_wallet_rpc(\"alice_4\")\r\n\r\n        bob_node = self.nodes[1]\r\n        bob_node.createwallet(\"bob_2\")\r\n        bob = bob_node.get_wallet_rpc(\"bob_2\")\r\n\r\n        # Give Alice some initial funds\r\n        self.nodes[2].send(outputs=[{alice.getnewaddress(): 25} for _ in range(2)])\r\n        self.generate(self.nodes[2], 1)\r\n        self.sync_blocks()\r\n\r\n        self.log.info(\"Test a scenario where block conflicts affect both parents and their children\")\r\n\r\n        unspents = alice.listunspent()\r\n        assert_equal(len(unspents), 2)\r\n        assert_equal(Decimal(alice.getbalances()['mine']['trusted']), Decimal(\"50.000\"))\r\n\r\n        # Create alice_self_send_tx: Alice sends to Bob using first unspent\r\n        alice_self_send_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress(): 24.999}])\r\n        parent_tx_1 = alice.signrawtransactionwithwallet(alice_self_send_tx)['hex']\r\n        alice_node.sendrawtransaction(parent_tx_1)\r\n        assert_equal(Decimal(alice.getbalances()['mine']['trusted']), Decimal(\"25.000\"))\r\n\r\n        # Create parent_tx_2: Alice sends to herself using both unspents (conflicts with parent_tx_1)\r\n        raw_tx_2 = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{alice.getnewaddress(): 49.990}])\r\n        parent_tx_2 = alice.signrawtransactionwithwallet(raw_tx_2)['hex']\r\n        print(alice.getbalances())\r\n\r\n        # Disconnect nodes to create conflicts on separate chains\r\n        self.disconnect_nodes(0, 1)\r\n        self.disconnect_nodes(1, 2)\r\n\r\n        # Broadcast parent_tx_1 on bob's node and mine it.\r\n        bob_node.sendrawtransaction(parent_tx_1)\r\n        self.generate(bob_node, 1, sync_fun=self.no_op)\r\n        bobs_unspents = bob.listunspent()\r\n        assert_equal(len(bobs_unspents), 1)\r\n        assert_equal(Decimal(bob.getbalances()['mine']['trusted']), Decimal(\"24.999\"))\r\n        \r\n        # Create a child of the conflict transaction that pays bob\r\n        bobs_tx_child_raw = bob.createrawtransaction(inputs=[bobs_unspents[0]], outputs=[{bob.getnewaddress(): 24.998}])\r\n        bobs_tx_child = bob.signrawtransactionwithwallet(bobs_tx_child_raw)['hex']\r\n        bob_node.sendrawtransaction(bobs_tx_child)\r\n        assert_equal(Decimal(bob.getbalances()['mine']['trusted']), Decimal(\"24.998\"))\r\n        \r\n        # Broadcast parent_tx_2 on alice's node and mine it.\r\n        alice_node.sendrawtransaction(parent_tx_2)\r\n        self.generate(alice_node, 1, sync_fun=self.no_op) \r\n        assert_equal(Decimal(alice.getbalances()['mine']['trusted']), Decimal(\"49.99\"))\r\n\r\n        self.connect_nodes(0, 1, wait_for_connect=True)\r\n        self.connect_nodes(0, 2, wait_for_connect=True)\r\n        self.connect_nodes(1, 2, wait_for_connect=True)\r\n\r\n        self.generate(alice_node, 1)  # Create longer chain\r\n        self.sync_blocks()\r\n\r\n        assert_equal(Decimal(alice.getbalances()['mine']['trusted']), Decimal(\"49.99\"))\r\n        # print(alice.getbalances())\r\n        assert_equal(Decimal(bob.getbalances()['mine']['trusted']), Decimal(\"24.998\"))\r\n        # print(bob.getbalances())\r\n\r\n        # Clean up\r\n        alice.unloadwallet()\r\n        bob.unloadwallet()\r\n```\r\n\r\n</details>\r\n\r\n",
      "created_at": "2025-06-04T18:54:17Z",
      "updated_at": "2025-06-05T18:01:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2127237787",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127237787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129798416",
      "pull_request_review_id": 2901675322,
      "id": 2129798416,
      "node_id": "PRRC_kwDOABII585-8iUQ",
      "diff_hunk": "@@ -2348,6 +2353,9 @@ util::Result<void> CWallet::RemoveTxs(WalletBatch& batch, std::vector<Txid>& txs\n             wtxOrdered.erase(it->second.m_it_wtxOrdered);\n             for (const auto& txin : it->second.tx->vin)\n                 mapTxSpends.erase(txin.prevout);\n+            for (unsigned int i = 0; i < it->second.tx->vout.size(); ++i) {\n+                m_txos.erase(COutPoint(Txid::FromUint256(hash), i));\n+            }",
      "path": "src/wallet/wallet.cpp",
      "position": 46,
      "original_position": 25,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/27286/commits/41c82afdfc94d7e0e1daa5ac4f4e5814e113c398 (_wallet: Keep track of transaction outputs owned by the wallet_)\r\n\r\nFeel-free-to-disregard-big-picture-out-of-PR-scope-question-comment: \r\n\r\nI feel like one of the challenges in reading `CWallet` is how much state exists, and how many places that state is modified/read/accessed from, maybe most of this is unavoidable, but I wonder if it would be a benefit to have some of these wallet state members like `m_txos`, manage themselves more.\r\n\r\nE.g. it seems ugly that the wallet is directly modifying the `m_txos` map here, where in `AddWallet()` and `LoadToWallet()`  at least behavior is encapsulated in `RefreshTXOsFromTx()`, but I can see why another `CWallet()` member function was not added since this erasing only happens in one place. But, when reading the code, I think this does have the effect of scattering the places where `m_txos` is modified, and makes it harder to reason about where and in *what way* `m_txos` can change, when there aren't a few narrowly defined functions for modifying it. \r\n\r\nI wonder what you think of e.g. making a bespoke class that houses  `m_txos` and `mapWallet` where `RefreshTXOsFromTx`, `RemoveTx` etc. would live, and one could always be sure that the wallet's tracked transactions and tracked outputs always stay in sync.  I admit that this scatters the code still, just in another way, but I wonder if at this size, we have to start more aggressively encapsulating functionality. ",
      "created_at": "2025-06-05T18:42:04Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2129798416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129798416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2328,
      "original_line": 2328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129872942",
      "pull_request_review_id": 2901675322,
      "id": 2129872942,
      "node_id": "PRRC_kwDOABII585-80gu",
      "diff_hunk": "@@ -3932,6 +3932,10 @@ util::Result<void> CWallet::ApplyMigrationData(WalletBatch& local_wallet_batch,\n         return util::Error{_(\"Error: Unable to read wallet's best block locator record\")};\n     }\n \n+    // Update m_txos to match the descriptors remaining in this wallet\n+    m_txos.clear();\n+    RefreshAllTXOs();",
      "path": "src/wallet/wallet.cpp",
      "position": 66,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ad76a44c3d9f300d5d230af442d36f90b349bc12",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit https://github.com/bitcoin/bitcoin/pull/27286/commits/ad76a44c3d9f300d5d230af442d36f90b349bc12 (_wallet: Recompute wallet TXOs after descriptor migration_)\r\n\r\nnit: This commit should be moved to before `m_txos` is used in `GetBalance()`",
      "created_at": "2025-06-05T18:57:48Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2129872942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129872942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3900,
      "original_line": 3900,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129958056",
      "pull_request_review_id": 2901675322,
      "id": 2129958056,
      "node_id": "PRRC_kwDOABII585-9JSo",
      "diff_hunk": "@@ -399,6 +399,7 @@ RPCHelpMan importdescriptors()\n             }\n         }\n         pwallet->ConnectScriptPubKeyManNotifiers();\n+        pwallet->RefreshAllTXOs();",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "8d9c7c3461d088211dde0551909898b8018059bf",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/8d9c7c3461d088211dde0551909898b8018059bf (_wallet: Recalculate the wallet's txos after any imports_)\r\n\r\n----\r\nJust an observation:\r\n\r\nIt's interesting to me that it's expected behavior that even without a rescan, previously untracked outputs of tracked transactions that become spendable are known to the wallet. I suppose this is a side effect of the logic before this PR, and this PR preserves that behavior. This is tested for in the earlier https://github.com/bitcoin/bitcoin/pull/27286/commits/b3182f311f7e2f1608463da62ed85efba4f78dec (_test: Test for balance update due to untracked output becoming spendable_)\r\n\r\nInitially when reviewing this I wanted to be very sure that `RefreshAllTXOs` took place *anywhere* the result of `IsMine()` on a transaction could happen (as far as I can tell this is the case), but the worst case scenario of this not happening is that a previously untracked output of a tracked transaction doesn't become available on import *without a rescan*, and even that, only until the next time you load the wallet. So, really not something to drip with sweat over. ",
      "created_at": "2025-06-05T19:18:50Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2129958056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129958056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 397,
      "original_line": 397,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130162234",
      "pull_request_review_id": 2902106875,
      "id": 2130162234,
      "node_id": "PRRC_kwDOABII585-97I6",
      "diff_hunk": "@@ -362,6 +363,30 @@ struct WalletTxOrderComparator {\n         return a->nOrderPos < b->nOrderPos;\n     }\n };\n+\n+class WalletTXO\n+{\n+private:\n+    const CWalletTx& m_wtx;\n+    const CTxOut& m_output;",
      "path": "src/wallet/transaction.h",
      "position": 35,
      "original_position": 17,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": 2124996445,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The whole point is to not have `CWalletTx`s permanently in memory eventually, so just an index pretty much defeats that.",
      "created_at": "2025-06-05T20:08:47Z",
      "updated_at": "2025-06-05T20:09:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130162234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130162234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 369,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130169136",
      "pull_request_review_id": 2902115224,
      "id": 2130169136,
      "node_id": "PRRC_kwDOABII585-980w",
      "diff_hunk": "@@ -4456,4 +4464,22 @@ void CWallet::WriteBestBlock() const\n         batch.WriteBestBlock(loc);\n     }\n }\n+\n+void CWallet::RefreshTXOsFromTx(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {",
      "path": "src/wallet/wallet.cpp",
      "position": 82,
      "original_position": 40,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": 2125040229,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is it possible for an outpoint to ever change from something else to ISMINE_NO?\r\n\r\nNo, we don't allow deleting things from the wallet so this cannot happen.",
      "created_at": "2025-06-05T20:10:35Z",
      "updated_at": "2025-06-05T20:10:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130169136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130169136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4441,
      "original_line": 4441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130196799",
      "pull_request_review_id": 2902148658,
      "id": 2130196799,
      "node_id": "PRRC_kwDOABII585--Dk_",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<Txid>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.contains(wtx.GetHash())) return true;",
      "path": "src/wallet/receive.cpp",
      "position": 67,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "72378b2bf42714b67fb3f0272b5fbb7c37a08898",
      "in_reply_to_id": 2127237787,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`trusted_parents` is not a global cache, it is a per-call cache, and is generally unique per-call to `CachedTxIsTrusted`. Since each call to `CachedTxIsTrusted` is guarded by `cs_wallet`, there can be no state changes made to any of the transactions. While that lock is held by the caller of `CachedTxIsTrusted`, the result of checking whether a specific transaction will always be the same, regardless of any state changes that may have occurred.",
      "created_at": "2025-06-05T20:18:17Z",
      "updated_at": "2025-06-05T20:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130196799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130196799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130197939",
      "pull_request_review_id": 2902149984,
      "id": 2130197939,
      "node_id": "PRRC_kwDOABII585--D2z",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<Txid>& trusted_parents)",
      "path": "src/wallet/receive.cpp",
      "position": 62,
      "original_position": 1,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "72378b2bf42714b67fb3f0272b5fbb7c37a08898",
      "in_reply_to_id": 2127103860,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If I need to retouch.",
      "created_at": "2025-06-05T20:18:37Z",
      "updated_at": "2025-06-05T20:18:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130197939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130197939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 212,
      "original_line": 212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130512343",
      "pull_request_review_id": 2901675322,
      "id": 2130512343,
      "node_id": "PRRC_kwDOABII585-_QnX",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/ae50dcb3a49eaf40fb64fd227c447ba90c45db34 (_wallet: Change balance calculation to use m_txos_) \r\n\r\n----\r\nWhy is this check added?",
      "created_at": "2025-06-05T21:40:30Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130512343",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130512343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130604690",
      "pull_request_review_id": 2901675322,
      "id": 2130604690,
      "node_id": "PRRC_kwDOABII585-_nKS",
      "diff_hunk": "@@ -330,31 +345,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;\n \n-            int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-            if (nDepth < (CachedTxIsFromMe(wallet, wtx, ISMINE_ALL) ? 0 : 1))\n-                continue;\n-\n-            for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-                const auto& output = wtx.tx->vout[i];\n-                CTxDestination addr;\n-                if (!wallet.IsMine(output))\n-                    continue;\n-                if(!ExtractDestination(output.scriptPubKey, addr))\n-                    continue;\n-\n-                CAmount n = wallet.IsSpent(COutPoint(walletEntry.first, i)) ? 0 : output.nValue;\n-                balances[addr] += n;\n-            }\n+            CAmount n = wallet.IsSpent(outpoint) ? 0 : txo.GetTxOut().nValue;\n+            balances[addr] += n;\n         }\n     }",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/ae50dcb3a49eaf40fb64fd227c447ba90c45db34 (_wallet: Change balance calculation to use m_txos_)\r\n\r\n---\r\n\r\nnit: here and above, I think `GetTxOut()` and `GetWalletTx()` are used enough to justify a variable, also minimizes diff if names are reused, but I'm ~0 on changing them:\r\n\r\n```suggestion\r\n        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\r\n            const CWalletTx& wtx{txo.GetWalletTx()};\r\n            const CTxOut& output{txo.GetTxOut()};\r\n\r\n            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents)) continue;\r\n            if (wallet.IsTxImmatureCoinBase(wtx)) continue;\r\n\r\n            int nDepth = wallet.GetTxDepthInMainChain(wtx);\r\n            if (nDepth < (CachedTxIsFromMe(wallet, wtx, ISMINE_ALL) ? 0 : 1)) continue;\r\n\r\n            CTxDestination addr;\r\n            Assume(wallet.IsMine(output));\r\n            if(!ExtractDestination(output.scriptPubKey, addr)) continue;\r\n\r\n            CAmount n = wallet.IsSpent(outpoint) ? 0 : output.nValue;\r\n            balances[addr] += n;\r\n        }\r\n    }\r\n```",
      "created_at": "2025-06-05T22:05:53Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130604690",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130604690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 348,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130634083",
      "pull_request_review_id": 2901675322,
      "id": 2130634083,
      "node_id": "PRRC_kwDOABII585-_uVj",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;",
      "path": "src/wallet/receive.cpp",
      "position": 76,
      "original_position": 12,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34 (_wallet: Change balance calculation to use m_txos_)\r\n\r\nNit that can be addressed in a follow up, this commit leaves `ISMINE_USED` and related logic as dead code.",
      "created_at": "2025-06-05T22:13:52Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130634083",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130634083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 296,
      "original_line": 296,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130659438",
      "pull_request_review_id": 2901675322,
      "id": 2130659438,
      "node_id": "PRRC_kwDOABII585-_0hu",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;",
      "path": "src/wallet/receive.cpp",
      "position": 118,
      "original_position": 56,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/ae50dcb3a49eaf40fb64fd227c447ba90c45db34 (_wallet: Change balance calculation to use m_txos_)\r\n\r\nnit: moving this check up would make the diff smaller",
      "created_at": "2025-06-05T22:19:39Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130659438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130659438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 284,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130673491",
      "pull_request_review_id": 2901675322,
      "id": 2130673491,
      "node_id": "PRRC_kwDOABII585-_39T",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {",
      "path": "src/wallet/receive.cpp",
      "position": 116,
      "original_position": 54,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Out of scope observation:\r\n\r\nIt seems strange that there isn't a balance type for outputs that are trusted and confirmed in a block, but below `min_depth` confirmations, you see some balance when the tx is in the mempool, and then when it's got enough confirmations, but in between it disappears from your balances seems odd to me.",
      "created_at": "2025-06-05T22:23:22Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130673491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130673491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 282,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130703872",
      "pull_request_review_id": 2901675322,
      "id": 2130703872,
      "node_id": "PRRC_kwDOABII585-__YA",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed() && tx_depth >= min_depth) {\r\n```\r\n\r\nor alternately, nesting the immature and trusted checks together, maybe like:\r\n\r\n```cpp\r\n             if (is_trusted && tx_depth >= min_depth) {\r\n                    if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\r\n                        ret.m_mine_immature += credit_mine;\r\n                        ret.m_watchonly_immature += credit_watchonly;\r\n                    } else {\r\n                        ret.m_mine_trusted += credit_mine;\r\n                        ret.m_watchonly_trusted += credit_watchonly;\r\n                    }\r\n```\r\n\r\n",
      "created_at": "2025-06-05T22:31:46Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130703872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130703872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130778784",
      "pull_request_review_id": 2901675322,
      "id": 2130778784,
      "node_id": "PRRC_kwDOABII585_ARqg",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;",
      "path": "src/wallet/receive.cpp",
      "position": 76,
      "original_position": 12,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130634083,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "would be better addressed here: https://github.com/bitcoin/bitcoin/pull/32523",
      "created_at": "2025-06-05T22:51:35Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130778784",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130778784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 296,
      "original_line": 296,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130897209",
      "pull_request_review_id": 2901675322,
      "id": 2130897209,
      "node_id": "PRRC_kwDOABII585_Auk5",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130703872,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "from offline discussion with @achow101 this would be a change in behavior so out of scope for this PR, and also incorrect because `min_depth` should only change the meaning of `m_mine_trusted`, and can only be set from the `getbalance()` rpc anyways, which only shows `m_mine_trusted`.",
      "created_at": "2025-06-05T23:24:49Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130897209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130897209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130912274",
      "pull_request_review_id": 2901675322,
      "id": 2130912274,
      "node_id": "PRRC_kwDOABII585_AyQS",
      "diff_hunk": "@@ -257,6 +257,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<Txid>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.contains(wtx.GetHash())) return true;",
      "path": "src/wallet/receive.cpp",
      "position": 67,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "72378b2bf42714b67fb3f0272b5fbb7c37a08898",
      "in_reply_to_id": 2127237787,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh! Thanks, I missed that `trusted_parents` is not global, it's initialized in `GetAddressBalances()` in the same scope as a `LOCK` on `cs_wallet`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ae50dcb3a49eaf40fb64fd227c447ba90c45db34/src/wallet/receive.cpp#L346-L347",
      "created_at": "2025-06-05T23:29:52Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2130912274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130912274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 217,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131014466",
      "pull_request_review_id": 2901675322,
      "id": 2131014466,
      "node_id": "PRRC_kwDOABII585_BLNC",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/854241298059f8b56563ca7ca64f5b61b59f119b (_wallet: Use wallet's TXO set in AvailableCoins_)\r\n\r\n---\r\n\r\nnit: this is a tx-level check and should move down.",
      "created_at": "2025-06-06T00:01:23Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131014466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131014466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131021384",
      "pull_request_review_id": 2901675322,
      "id": 2131021384,
      "node_id": "PRRC_kwDOABII585_BM5I",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();",
      "path": "src/wallet/spend.cpp",
      "position": 59,
      "original_position": 11,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/854241298059f8b56563ca7ca64f5b61b59f119b (_wallet: Use wallet's TXO set in AvailableCoins_)\r\n\r\nnit: I think this is easier to review if the transaction level checks stay at the top, smaller diff, and easier to see that all the transaction-level and output-level checks have been kept the same.",
      "created_at": "2025-06-06T00:03:53Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131021384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131021384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131028856",
      "pull_request_review_id": 2901675322,
      "id": 2131028856,
      "node_id": "PRRC_kwDOABII585_BOt4",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(txid, i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/854241298059f8b56563ca7ca64f5b61b59f119b (_wallet: Use wallet's TXO set in AvailableCoins_)\r\n\r\n---\r\n\r\nnit: this is also a tx-level check.",
      "created_at": "2025-06-06T00:07:33Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131028856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131028856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131062570",
      "pull_request_review_id": 2901675322,
      "id": 2131062570,
      "node_id": "PRRC_kwDOABII585_BW8q",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(txid, i);\n+        assert(mine != ISMINE_NO);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/854241298059f8b56563ca7ca64f5b61b59f119b (_wallet: Use wallet's TXO set in AvailableCoins_)\r\n\r\n---\r\n\r\nnit: \r\n\r\nThe output-level checks are shuffled in this commit, easier to reason about this commit, and smaller diff if the order is preserved.\r\n\r\n```cpp\r\n        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\r\n            continue;\r\n\r\n        // Skip manually selected coins (the caller can fetch them directly)\r\n        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\r\n            continue;\r\n\r\n        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\r\n            continue;\r\n\r\n        if (wallet.IsSpent(outpoint))\r\n            continue;\r\n\r\n        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\r\n            continue;\r\n\r\n        isminetype mine = wallet.IsMine(output);\r\n\r\n        assert(mine != ISMINE_NO);\r\n\r\n        int nDepth = wallet.GetTxDepthInMainChain(wtx);\r\n        if (nDepth < 0)\r\n            continue;\r\n\r\n        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\r\n            continue;\r\n        }\r\n```\r\n",
      "created_at": "2025-06-06T00:19:41Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131062570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131062570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 343,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131083966",
      "pull_request_review_id": 2901675322,
      "id": 2131083966,
      "node_id": "PRRC_kwDOABII585_BcK-",
      "diff_hunk": "@@ -3932,6 +3932,10 @@ util::Result<void> CWallet::ApplyMigrationData(WalletBatch& local_wallet_batch,\n         return util::Error{_(\"Error: Unable to read wallet's best block locator record\")};\n     }\n \n+    // Update m_txos to match the descriptors remaining in this wallet\n+    m_txos.clear();\n+    RefreshAllTXOs();",
      "path": "src/wallet/wallet.cpp",
      "position": 66,
      "original_position": 6,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ad76a44c3d9f300d5d230af442d36f90b349bc12",
      "in_reply_to_id": 2129872942,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nevermind, not needed for `GetBalance` and `AvailableCoins()` because wallets are reloaded after migration,  but needed because `GetDebit()` is changed in the next commit to use `m_txos`, and part of the migration process uses `IsFromMe()`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ae024137bda9fe189f4e7ccf26dbaffd44cbbeb6/src/wallet/wallet.cpp#L1635-L1639\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/854241298059f8b56563ca7ca64f5b61b59f119b/src/wallet/wallet.cpp#L3963\r\n\r\n`IsMine()` tells you whether or not a transaction contains outputs spendable by the wallet, `IsFromMe()` tells you whether or not a transaction contains outputs created by the wallet.\r\n",
      "created_at": "2025-06-06T00:26:47Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131083966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131083966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3900,
      "original_line": 3900,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131120796",
      "pull_request_review_id": 2901675322,
      "id": 2131120796,
      "node_id": "PRRC_kwDOABII585_BlKc",
      "diff_hunk": "@@ -189,7 +196,7 @@ static void AvailableCoins(benchmark::Bench& bench, const std::vector<OutputType\n \n     // Check available balance\n     auto bal = WITH_LOCK(wallet.cs_wallet, return wallet::AvailableCoins(wallet).GetTotalAmount()); // Cache\n-    assert(bal == 50 * COIN * (chain_size - COINBASE_MATURITY));\n+    assert(bal == 49 * COIN * (chain_size - COINBASE_MATURITY));\n \n     bench.epochIterations(2).run([&] {\n         LOCK(wallet.cs_wallet);",
      "path": "src/bench/wallet_create_tx.cpp",
      "position": 54,
      "original_position": 44,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "39734259fc10b1339db2ae80c5fab12916cf0aff",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/27286/commits/39734259fc10b1339db2ae80c5fab12916cf0aff (_bench: Have AvailableCoins benchmark include a lot of unrelated utxos_)\r\n\r\nnit: This should be the first commit of the branch in my opinion and remove the unnecessary hardcoded nEpochIterations values as suggested by @rkrux (https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-2850393076)",
      "created_at": "2025-06-06T00:39:42Z",
      "updated_at": "2025-06-06T01:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2131120796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131120796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132793068",
      "pull_request_review_id": 2905955339,
      "id": 2132793068,
      "node_id": "PRRC_kwDOABII585_H9bs",
      "diff_hunk": "@@ -2348,6 +2353,9 @@ util::Result<void> CWallet::RemoveTxs(WalletBatch& batch, std::vector<Txid>& txs\n             wtxOrdered.erase(it->second.m_it_wtxOrdered);\n             for (const auto& txin : it->second.tx->vin)\n                 mapTxSpends.erase(txin.prevout);\n+            for (unsigned int i = 0; i < it->second.tx->vout.size(); ++i) {\n+                m_txos.erase(COutPoint(Txid::FromUint256(hash), i));\n+            }",
      "path": "src/wallet/wallet.cpp",
      "position": 46,
      "original_position": 25,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "41c82afdfc94d7e0e1daa5ac4f4e5814e113c398",
      "in_reply_to_id": 2129798416,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I wonder what you think of e.g. making a bespoke class that houses m_txos and mapWallet where RefreshTXOsFromTx, RemoveTx etc. would live, and one could always be sure that the wallet's tracked transactions and tracked outputs always stay in sync. I admit that this scatters the code still, just in another way, but I wonder if at this size, we have to start more aggressively encapsulating functionality.\r\n\r\nI don't think that makes sense to do as it would end up being just another wrapper around a `std::map`.\r\n\r\nIn any case, definitely out of scope for this PR.",
      "created_at": "2025-06-06T19:23:33Z",
      "updated_at": "2025-06-06T19:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132793068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132793068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2328,
      "original_line": 2328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132803868",
      "pull_request_review_id": 2905971815,
      "id": 2132803868,
      "node_id": "PRRC_kwDOABII585_IAEc",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130512343,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't remember. Can remove if I need to retouch.",
      "created_at": "2025-06-06T19:30:48Z",
      "updated_at": "2025-06-06T19:30:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132803868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132803868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132809017",
      "pull_request_review_id": 2905979908,
      "id": 2132809017,
      "node_id": "PRRC_kwDOABII585_IBU5",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {",
      "path": "src/wallet/receive.cpp",
      "position": 116,
      "original_position": 54,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130673491,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would make more sense to drop unconfirmed balances when min_depth > 0 rather than include less than min_depth as a separate balance. Regardless, this PR is not trying to change user facing behavior, so this is out of scope.",
      "created_at": "2025-06-06T19:34:29Z",
      "updated_at": "2025-06-06T19:34:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132809017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132809017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 282,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132884946",
      "pull_request_review_id": 2906104975,
      "id": 2132884946,
      "node_id": "PRRC_kwDOABII585_IT3S",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;",
      "path": "src/wallet/receive.cpp",
      "position": 118,
      "original_position": 56,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130659438,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since we are no longer using `CachedTxGetAvailableCredit` and `CachedTxGetImmautreCredit`, we have to first check whether the output is an immature coinbase. Otherwise immature coinbases will be included in the trusted balances which is incorrect.",
      "created_at": "2025-06-06T20:42:05Z",
      "updated_at": "2025-06-06T20:42:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132884946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132884946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 284,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906675",
      "pull_request_review_id": 2906140972,
      "id": 2132906675,
      "node_id": "PRRC_kwDOABII585_IZKz",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130512343,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:03:46Z",
      "updated_at": "2025-06-06T21:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132906675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906794",
      "pull_request_review_id": 2906141178,
      "id": 2132906794,
      "node_id": "PRRC_kwDOABII585_IZMq",
      "diff_hunk": "@@ -330,31 +345,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;\n \n-            int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-            if (nDepth < (CachedTxIsFromMe(wallet, wtx, ISMINE_ALL) ? 0 : 1))\n-                continue;\n-\n-            for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-                const auto& output = wtx.tx->vout[i];\n-                CTxDestination addr;\n-                if (!wallet.IsMine(output))\n-                    continue;\n-                if(!ExtractDestination(output.scriptPubKey, addr))\n-                    continue;\n-\n-                CAmount n = wallet.IsSpent(COutPoint(walletEntry.first, i)) ? 0 : output.nValue;\n-                balances[addr] += n;\n-            }\n+            CAmount n = wallet.IsSpent(outpoint) ? 0 : txo.GetTxOut().nValue;\n+            balances[addr] += n;\n         }\n     }",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130604690,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:03:55Z",
      "updated_at": "2025-06-06T21:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132906794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 348,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906970",
      "pull_request_review_id": 2906141624,
      "id": 2132906970,
      "node_id": "PRRC_kwDOABII585_IZPa",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": 2131014466,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:04:09Z",
      "updated_at": "2025-06-06T21:04:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132906970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132906970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132907093",
      "pull_request_review_id": 2906141913,
      "id": 2132907093,
      "node_id": "PRRC_kwDOABII585_IZRV",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();",
      "path": "src/wallet/spend.cpp",
      "position": 59,
      "original_position": 11,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": 2131021384,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:04:17Z",
      "updated_at": "2025-06-06T21:04:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132907093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132907093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132907214",
      "pull_request_review_id": 2906142090,
      "id": 2132907214,
      "node_id": "PRRC_kwDOABII585_IZTO",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(txid, i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": 2131028856,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:04:24Z",
      "updated_at": "2025-06-06T21:04:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132907214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132907214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132909169",
      "pull_request_review_id": 2906146249,
      "id": 2132909169,
      "node_id": "PRRC_kwDOABII585_IZxx",
      "diff_hunk": "@@ -330,137 +330,146 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<Txid> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const Txid& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx level checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.contains(outpoint.hash) && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(txid, i);\n+        assert(mine != ISMINE_NO);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "854241298059f8b56563ca7ca64f5b61b59f119b",
      "in_reply_to_id": 2131062570,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:06:40Z",
      "updated_at": "2025-06-06T21:06:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132909169",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132909169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": 343,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132909275",
      "pull_request_review_id": 2906146477,
      "id": 2132909275,
      "node_id": "PRRC_kwDOABII585_IZzb",
      "diff_hunk": "@@ -189,7 +196,7 @@ static void AvailableCoins(benchmark::Bench& bench, const std::vector<OutputType\n \n     // Check available balance\n     auto bal = WITH_LOCK(wallet.cs_wallet, return wallet::AvailableCoins(wallet).GetTotalAmount()); // Cache\n-    assert(bal == 50 * COIN * (chain_size - COINBASE_MATURITY));\n+    assert(bal == 49 * COIN * (chain_size - COINBASE_MATURITY));\n \n     bench.epochIterations(2).run([&] {\n         LOCK(wallet.cs_wallet);",
      "path": "src/bench/wallet_create_tx.cpp",
      "position": 54,
      "original_position": 44,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "39734259fc10b1339db2ae80c5fab12916cf0aff",
      "in_reply_to_id": 2131120796,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-06T21:06:48Z",
      "updated_at": "2025-06-06T21:06:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132909275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132909275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132983477",
      "pull_request_review_id": 2906293553,
      "id": 2132983477,
      "node_id": "PRRC_kwDOABII585_Ir61",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && txo.GetWalletTx().isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;",
      "path": "src/wallet/receive.cpp",
      "position": 118,
      "original_position": 56,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "ae50dcb3a49eaf40fb64fd227c447ba90c45db34",
      "in_reply_to_id": 2130659438,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My mistake, that makes sense. ",
      "created_at": "2025-06-06T22:34:49Z",
      "updated_at": "2025-06-06T22:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2132983477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132983477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 284,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2172976692",
      "pull_request_review_id": 2968182392,
      "id": 2172976692,
      "node_id": "PRRC_kwDOABII586BhP40",
      "diff_hunk": "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<Txid> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            const CWalletTx& wtx = txo.GetWalletTx();\n+\n             const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n             const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(wtx) && wtx.isConfirmed()) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } else if (!is_trusted && wtx.InMempool()) {\n+                    ret.m_mine_untrusted_pending += credit_mine;\n+                    ret.m_watchonly_untrusted_pending += credit_watchonly;",
      "path": "src/wallet/receive.cpp",
      "position": 121,
      "original_position": 57,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "dde7cbe105ba6daaa636466d0fa3a83d15609417",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was just rereading the commit \"wallet: Change balance calculation to use m_txos\" (dde7cbe105ba6daaa636466d0fa3a83d15609417) and I’m aware that this is not a behavior change, but I am wondering about how the balances are calculated.\r\n\r\nAs seen, this distinguishes three groups of TXOs:\r\n\r\n- \"immature\"\r\n  `if (wallet.IsTxImmatureCoinBase(wtx) && wtx.isConfirmed()) {`\r\n- \"trusted\"\r\n  `} else if (is_trusted && tx_depth >= min_depth) {`\r\n- \"untrusted_pending\"\r\n  `} else if (!is_trusted && wtx.InMempool()) {`\r\n  \r\nand it made me wonder, whether a change output on an unconfirmed transaction our wallet created would just not count toward any of these balances. We trust our own transactions, so our change output should be `is_trusted`—and `min_depth` is 0 by default. Nevermind.",
      "created_at": "2025-06-27T23:31:15Z",
      "updated_at": "2025-06-27T23:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2172976692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2172976692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 279,
      "original_start_line": 325,
      "start_side": "RIGHT",
      "line": 287,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2175625170",
      "pull_request_review_id": 2972194802,
      "id": 2175625170,
      "node_id": "PRRC_kwDOABII586BrWfS",
      "diff_hunk": "@@ -279,5 +282,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"importupdate\")\n+\n+        import_key1 = get_generate_key()\n+        import_key2 = get_generate_key()\n+        wallet.importdescriptors([{\"desc\": descsum_create(f\"wpkh({import_key1.privkey})\"), \"timestamp\": \"now\"}])\n+\n+        amount = 15\n+        default.send([{import_key1.p2wpkh_addr: amount},{import_key2.p2wpkh_addr: amount}])\n+        self.generate(self.nodes[0], 1)\n+        # Mock the time forward by 1 day so that \"now\" will exclude the block we just mined\n+        self.nodes[0].setmocktime(int(time.time()) + 86400)\n+        # Mine 11 blocks to move the MTP past the block we just mined\n+        self.generate(self.nodes[0], 11, sync_fun=self.no_op)",
      "path": "test/functional/wallet_balance.py",
      "position": 38,
      "original_position": 38,
      "commit_id": "215e5999e2070a38c68e343c5c3f1dc37d567f58",
      "original_commit_id": "5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e",
      "in_reply_to_id": null,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 5cc32ee2a7addb38ae4a4c97d306d0c5d9cc2d5e \"test: Test for balance update due to untracked output becoming spendable\"\r\n\r\nvery minor nit: it is not clear to me as to why the time needs to be moved forward for this test to be effective, so perhaps a sentence could be added to explain that?",
      "created_at": "2025-06-30T18:06:12Z",
      "updated_at": "2025-06-30T19:40:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r2175625170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2175625170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
        }
      },
      "start_line": 297,
      "original_start_line": 297,
      "start_side": "RIGHT",
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    }
  ]
}