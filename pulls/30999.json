{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999",
    "id": 2097728767,
    "node_id": "PR_kwDOABII5859CMz_",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30999",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30999.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30999.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30999",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30999/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6e4935df880b5dfe859fcb026f1566766e4dd9a4",
    "number": 30999,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Cover remaining tinyformat usages in CheckFormatSpecifiers",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Split out of https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779584565\r\n\r\nThe current string formatter couldn't validate every string format template that we were using.\r\nExtended it with dynamic widths, fixed a number parsing bug that could go over the string's content and added a `%n` validation.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-09-29T18:54:13Z",
    "updated_at": "2025-10-01T11:49:10Z",
    "closed_at": "2024-10-01T08:15:45Z",
    "mergeable_state": "unknown",
    "merged": false,
    "merge_commit_sha": "9ab2bc246f1738da29357ad3df3d256967ae7f08",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "l0rinc:l0rinc/ConstevalFOrmatString",
      "ref": "l0rinc/ConstevalFOrmatString",
      "sha": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 273858,
        "default_branch": "master",
        "open_issues_count": 12,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-01T02:49:34Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2025-09-30T22:36:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37922,
        "stargazers_count": 85799,
        "watchers_count": 85799,
        "size": 294282,
        "default_branch": "master",
        "open_issues_count": 804,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-01T10:36:48Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-01T10:36:56Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 123,
    "deletions": 103,
    "changed_files": 2,
    "commits": 5,
    "review_comments": 14,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2381482040,
      "node_id": "IC_kwDOABII586N8og4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2381482040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T18:54:16Z",
      "updated_at": "2024-09-30T20:29:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30999).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#issuecomment-2381482040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30999"
    },
    {
      "event": "labeled",
      "id": 14446103879,
      "node_id": "LE_lADOABII586YS3nYzwAAAANdDg1H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14446103879",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T18:54:18Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "renamed",
      "id": 14446170875,
      "node_id": "RTE_lADOABII586YS3nYzwAAAANdDxL7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14446170875",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T18:57:30Z",
      "rename": {
        "from": "test: streamline CheckFormatSpecifiers testability",
        "to": "Cover remaining tinyformat usages in CheckFormatSpecifiers"
      }
    },
    {
      "event": "ready_for_review",
      "id": 14446649049,
      "node_id": "RFRE_lADOABII586YS3nYzwAAAANdFl7Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14446649049",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T20:59:42Z"
    },
    {
      "event": "reviewed",
      "id": 2336508940,
      "node_id": "PRR_kwDOABII586LREwM",
      "url": null,
      "actor": null,
      "commit_id": "23f2887af3d6d088433d25cf682575955b5bccd8",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-30T06:51:40Z",
      "author_association": "MEMBER",
      "body": "d49dfafa9aea349ae6741f49ed992b78a88b6839 looks correct, but I am not sure the others.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#pullrequestreview-2336508940",
      "submitted_at": "2024-09-30T06:51:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14454042819,
      "node_id": "HRFPE_lADOABII586YS3nYzwAAAANdhzDD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14454042819",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44aa62e98b113e118a620d9cf0cee92d8684c8fb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/44aa62e98b113e118a620d9cf0cee92d8684c8fb",
      "created_at": "2024-09-30T11:04:04Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiNTNlNjU2MGVhMTFlNGQ5Mjg5MzQyMzllYzY2M2YxZGYwOGU2OTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab53e6560ea11e4d928934239ec663f1df08e695",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab53e6560ea11e4d928934239ec663f1df08e695",
      "tree": {
        "sha": "a02e6114f97bcc05381a07c0eea8d948725c71ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a02e6114f97bcc05381a07c0eea8d948725c71ec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d812cf11896a2214467b6fa72d7b763bac6077c5",
          "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d812cf11896a2214467b6fa72d7b763bac6077c5"
        }
      ],
      "message": "test: streamline CheckFormatSpecifiers testability\n\n* Renamed `Detail_CheckNumFormatSpecifiers` to `CheckFormatSpecifiers` since we're checking more than the number of parameters\n* Moved it out of `ConstevalFormatString` to make it easier to test\n* Inline `FailFmtWithError` (and rename `PassFmt` to `ValidFormatSpecifiers`) in tests to provide better errors messages on failure (e.g. line number)",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-30T12:05:33Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-29T18:19:56Z"
      },
      "sha": "ab53e6560ea11e4d928934239ec663f1df08e695"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3MDFjY2EzZTFhMzY4ODMzYjlmMzlmY2UwM2JjMWE4NWFhYjU2NjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f701cca3e1a368833b9f39fce03bc1a85aab5664",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f701cca3e1a368833b9f39fce03bc1a85aab5664",
      "tree": {
        "sha": "622b20a5fcc142460e6c2509effb943713503ac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/622b20a5fcc142460e6c2509effb943713503ac0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab53e6560ea11e4d928934239ec663f1df08e695",
          "sha": "ab53e6560ea11e4d928934239ec663f1df08e695",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab53e6560ea11e4d928934239ec663f1df08e695"
        }
      ],
      "message": "test: Unify CheckFormatSpecifiers error messages",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-30T12:06:04Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-29T18:23:38Z"
      },
      "sha": "f701cca3e1a368833b9f39fce03bc1a85aab5664"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxYzU2ZThiMzgwMzNiOTZmYjM5MzBjMmJjYmEzYWRkMjA0N2QzMjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51c56e8b38033b96fb3930c2bcba3add2047d324",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51c56e8b38033b96fb3930c2bcba3add2047d324",
      "tree": {
        "sha": "2db7774bf127ad42540da4c6793825eaa9c248aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2db7774bf127ad42540da4c6793825eaa9c248aa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f701cca3e1a368833b9f39fce03bc1a85aab5664",
          "sha": "f701cca3e1a368833b9f39fce03bc1a85aab5664",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f701cca3e1a368833b9f39fce03bc1a85aab5664"
        }
      ],
      "message": "CheckFormatSpecifiers shouldn't iterate beyond string bounds",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-30T12:06:04Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-29T18:29:42Z"
      },
      "sha": "51c56e8b38033b96fb3930c2bcba3add2047d324"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5ZmMyNDJhZDM1MzIwMjkxZTNmYzcyODJjMmQwMDFjN2JjN2VkNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49fc242ad35320291e3fc7282c2d001c7bc7ed4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49fc242ad35320291e3fc7282c2d001c7bc7ed4a",
      "tree": {
        "sha": "faf2523282476c678167142ca2b827099490fcc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faf2523282476c678167142ca2b827099490fcc5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51c56e8b38033b96fb3930c2bcba3add2047d324",
          "sha": "51c56e8b38033b96fb3930c2bcba3add2047d324",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51c56e8b38033b96fb3930c2bcba3add2047d324"
        }
      ],
      "message": "Implement dynamic width validation in CheckFormatSpecifiers\n\nThey were used in bitcoin-cli",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-30T12:07:00Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-29T18:38:18Z"
      },
      "sha": "49fc242ad35320291e3fc7282c2d001c7bc7ed4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlNDkzNWRmODgwYjVkZmU4NTlmY2IwMjZmMTU2Njc2NmU0ZGQ5YTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "tree": {
        "sha": "febf19e55082874cf8ae7fc33ad5df8fdc635a8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/febf19e55082874cf8ae7fc33ad5df8fdc635a8e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49fc242ad35320291e3fc7282c2d001c7bc7ed4a",
          "sha": "49fc242ad35320291e3fc7282c2d001c7bc7ed4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49fc242ad35320291e3fc7282c2d001c7bc7ed4a"
        }
      ],
      "message": "Prohibit %n usages in format\n\nIt's not supported in tinyformat: https://github.com/bitcoin/bitcoin/blob/master/src/tinyformat.h#L843-L845",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-30T12:07:03Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-29T18:40:48Z"
      },
      "sha": "6e4935df880b5dfe859fcb026f1566766e4dd9a4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14454986386,
      "node_id": "HRFPE_lADOABII586YS3nYzwAAAANdlZaS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14454986386",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "created_at": "2024-09-30T12:11:34Z"
    },
    {
      "event": "reviewed",
      "id": 2339348510,
      "node_id": "PRR_kwDOABII586Lb6Ae",
      "url": null,
      "actor": null,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-10-01T07:51:07Z",
      "author_association": "MEMBER",
      "body": "As mentioned previously, it looks like there is one correct commit. However, I have a hard time seeing how the others are useful in a great picture, given that some of them are incomplete anyway.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#pullrequestreview-2339348510",
      "submitted_at": "2024-10-01T07:51:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
    },
    {
      "event": "commented",
      "id": 2385096310,
      "node_id": "IC_kwDOABII586OKa52",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2385096310",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T08:15:45Z",
      "updated_at": "2024-10-01T08:15:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm closing it for lack of interest, feel free to cherry-pick changes to other PRs",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#issuecomment-2385096310",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30999"
    },
    {
      "event": "closed",
      "id": 14467969587,
      "node_id": "CE_lADOABII586YS3nYzwAAAANeW7Iz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14467969587",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T08:15:45Z"
    },
    {
      "event": "locked",
      "id": 20032302770,
      "node_id": "LOE_lADOABII586YS3nYzwAAAASqBK6y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20032302770",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-01T11:49:10Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780512926",
      "pull_request_review_id": 2336508940,
      "id": 1780512926,
      "node_id": "PRRC_kwDOABII585qIHie",
      "diff_hunk": "@@ -11,75 +11,61 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n-// Helper to allow compile-time sanity checks while providing the number of\n-// args directly. Normally PassFmt<sizeof...(Args)> would be used.\n-template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 13,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in cba51f2e380f0f89f799369b489c2e25e7215221: Not sure about turning the passing one into a runtime check from a compile-time check. Previously it was trivial to compile a single unit (this test) to sanity check the parser, as well as check the compile failures for various errors, by simply looking at the compile output. Also, the code was as close as possible to the real code, serving as documentation of how to use it.\r\n\r\nNow, checking the passing cases requires not only compiling, but also linking and executing the test. Also, triggering a compile error to see that it works and to see how it looks is harder.\r\n\r\nI understand you want better error messages on failure, but changing the passing cases isn't required for that.",
      "created_at": "2024-09-30T06:35:48Z",
      "updated_at": "2024-09-30T06:51:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780512926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780512926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "LEFT",
      "line": 17,
      "original_line": 17,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780515759",
      "pull_request_review_id": 2336508940,
      "id": 1780515759,
      "node_id": "PRRC_kwDOABII585qIIOv",
      "diff_hunk": "@@ -32,51 +32,52 @@ namespace util {\n  * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n  * side-step this struct and call tinyformat directly.\n  */\n-template <unsigned num_params>\n-struct ConstevalFormatString {\n-    const char* const fmt;\n-    consteval ConstevalFormatString(const char* str) : fmt{str} { Detail_CheckNumFormatSpecifiers(fmt); }\n-    constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)\n-    {\n-        unsigned count_normal{0}; // Number of \"normal\" specifiers, like %s\n-        unsigned count_pos{0};    // Max number in positional specifier, like %8$s\n-        for (auto it{str.begin()}; it < str.end();) {\n-            if (*it != '%') {\n-                ++it;\n-                continue;\n-            }\n+constexpr static void CheckFormatSpecifiers(std::string_view str, int num_params)\n+{\n+    int count_normal{0}; // Number of \"normal\" specifiers, like %s\n+    int count_pos{0};    // Max number in positional specifier, like %8$s\n+    for (auto it{str.begin()}; it < str.end();) {\n+        if (*it != '%') {\n+            ++it;\n+            continue;\n+        }\n+\n+        if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n+        if (*it == '%') {\n+            // Percent escape: %%\n+            ++it;\n+            continue;\n+        }\n \n+        int maybe_num{0};\n+        while ('0' <= *it && *it <= '9') {\n+            maybe_num *= 10;\n+            maybe_num += *it - '0';\n+            ++it;\n+        };\n+\n+        if (*it == '$') {\n+            // Positional specifier, like %8$s\n+            if (maybe_num == 0) throw \"Positional format specifier must have position of at least 1\";\n+            count_pos = std::max(count_pos, maybe_num);\n             if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n-            if (*it == '%') {\n-                // Percent escape: %%\n-                ++it;\n-                continue;\n-            }\n-\n-            unsigned maybe_num{0};\n-            while ('0' <= *it && *it <= '9') {\n-                maybe_num *= 10;\n-                maybe_num += *it - '0';\n-                ++it;\n-            };\n-\n-            if (*it == '$') {\n-                // Positional specifier, like %8$s\n-                if (maybe_num == 0) throw \"Positional format specifier must have position of at least 1\";\n-                count_pos = std::max(count_pos, maybe_num);\n-                if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n-            } else {\n-                // Non-positional specifier, like %s\n-                ++count_normal;\n-                ++it;\n-            }\n-            // The remainder \"[flags][width][.precision][length]type\" of the\n-            // specifier is not checked. Parsing continues with the next '%'.\n+        } else {\n+            // Non-positional specifier, like %s\n+            ++count_normal;\n+            ++it;\n         }\n-        if (count_normal && count_pos) throw \"Format specifiers must be all positional or all non-positional!\";\n-        unsigned count{count_normal | count_pos};\n-        if (num_params != count) throw \"Format specifier count must match the argument count!\";\n+        // The remainder \"[flags][width][.precision][length]type\" of the\n+        // specifier is not checked. Parsing continues with the next '%'.\n     }\n+    if (count_normal && count_pos) throw \"Format specifiers must be all positional or all non-positional!\";\n+    int count{count_normal | count_pos};\n+    if (num_params != count) throw \"Format specifier count must match the argument count!\";\n+}\n+\n+template <int num_params>",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 87,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: not sure about changing this back again to accommodate test-only code. Instead of using `-1` for test code, you could set `constexpr INVALID=-1;` and use that.",
      "created_at": "2024-09-30T06:38:41Z",
      "updated_at": "2024-09-30T06:51:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780515759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780515759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780527702",
      "pull_request_review_id": 2336508940,
      "id": 1780527702,
      "node_id": "PRRC_kwDOABII585qILJW",
      "diff_hunk": "@@ -25,58 +25,58 @@ namespace util {\n  * strings, to reduce the likelihood of tinyformat throwing exceptions at\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n- *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n- * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n- * they are not used in the codebase. Usage of these fields is not counted and\n- * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n- * side-step this struct and call tinyformat directly.",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "23f2887af3d6d088433d25cf682575955b5bccd8",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why remove this comment? `format(\"'%1$*3$s %2$-*3$s'\", \"hi\", \"w\", 12)` is still unsupported and parsed incorrectly at compile time.",
      "created_at": "2024-09-30T06:50:07Z",
      "updated_at": "2024-09-30T06:51:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780527702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780527702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "LEFT",
      "line": null,
      "original_line": 33,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907250",
      "pull_request_review_id": 2337170164,
      "id": 1780907250,
      "node_id": "PRRC_kwDOABII585qJnzy",
      "diff_hunk": "@@ -11,75 +11,61 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n-// Helper to allow compile-time sanity checks while providing the number of\n-// args directly. Normally PassFmt<sizeof...(Args)> would be used.\n-template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 13,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": 1780512926,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Valid complaint, I've [added](https://github.com/bitcoin/bitcoin/compare/23f2887af3d6d088433d25cf682575955b5bccd8..44aa62e98b113e118a620d9cf0cee92d8684c8fb) a `consteval ValidFormatSpecifiers` local delegate and split the valid tests from the `BOOST_CHECK_EXCEPTION`s - this way failures still show the correct lines both for the valid and invalid tests.",
      "created_at": "2024-09-30T11:05:41Z",
      "updated_at": "2024-09-30T11:08:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780907250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "LEFT",
      "line": 17,
      "original_line": 17,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907365",
      "pull_request_review_id": 2337170342,
      "id": 1780907365,
      "node_id": "PRRC_kwDOABII585qJn1l",
      "diff_hunk": "@@ -32,51 +32,52 @@ namespace util {\n  * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n  * side-step this struct and call tinyformat directly.\n  */\n-template <unsigned num_params>\n-struct ConstevalFormatString {\n-    const char* const fmt;\n-    consteval ConstevalFormatString(const char* str) : fmt{str} { Detail_CheckNumFormatSpecifiers(fmt); }\n-    constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)\n-    {\n-        unsigned count_normal{0}; // Number of \"normal\" specifiers, like %s\n-        unsigned count_pos{0};    // Max number in positional specifier, like %8$s\n-        for (auto it{str.begin()}; it < str.end();) {\n-            if (*it != '%') {\n-                ++it;\n-                continue;\n-            }\n+constexpr static void CheckFormatSpecifiers(std::string_view str, int num_params)\n+{\n+    int count_normal{0}; // Number of \"normal\" specifiers, like %s\n+    int count_pos{0};    // Max number in positional specifier, like %8$s\n+    for (auto it{str.begin()}; it < str.end();) {\n+        if (*it != '%') {\n+            ++it;\n+            continue;\n+        }\n+\n+        if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n+        if (*it == '%') {\n+            // Percent escape: %%\n+            ++it;\n+            continue;\n+        }\n \n+        int maybe_num{0};\n+        while ('0' <= *it && *it <= '9') {\n+            maybe_num *= 10;\n+            maybe_num += *it - '0';\n+            ++it;\n+        };\n+\n+        if (*it == '$') {\n+            // Positional specifier, like %8$s\n+            if (maybe_num == 0) throw \"Positional format specifier must have position of at least 1\";\n+            count_pos = std::max(count_pos, maybe_num);\n             if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n-            if (*it == '%') {\n-                // Percent escape: %%\n-                ++it;\n-                continue;\n-            }\n-\n-            unsigned maybe_num{0};\n-            while ('0' <= *it && *it <= '9') {\n-                maybe_num *= 10;\n-                maybe_num += *it - '0';\n-                ++it;\n-            };\n-\n-            if (*it == '$') {\n-                // Positional specifier, like %8$s\n-                if (maybe_num == 0) throw \"Positional format specifier must have position of at least 1\";\n-                count_pos = std::max(count_pos, maybe_num);\n-                if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\n-            } else {\n-                // Non-positional specifier, like %s\n-                ++count_normal;\n-                ++it;\n-            }\n-            // The remainder \"[flags][width][.precision][length]type\" of the\n-            // specifier is not checked. Parsing continues with the next '%'.\n+        } else {\n+            // Non-positional specifier, like %s\n+            ++count_normal;\n+            ++it;\n         }\n-        if (count_normal && count_pos) throw \"Format specifiers must be all positional or all non-positional!\";\n-        unsigned count{count_normal | count_pos};\n-        if (num_params != count) throw \"Format specifier count must match the argument count!\";\n+        // The remainder \"[flags][width][.precision][length]type\" of the\n+        // specifier is not checked. Parsing continues with the next '%'.\n     }\n+    if (count_normal && count_pos) throw \"Format specifiers must be all positional or all non-positional!\";\n+    int count{count_normal | count_pos};\n+    if (num_params != count) throw \"Format specifier count must match the argument count!\";\n+}\n+\n+template <int num_params>",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 87,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": 1780515759,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Good idea](https://github.com/bitcoin/bitcoin/compare/23f2887af3d6d088433d25cf682575955b5bccd8..44aa62e98b113e118a620d9cf0cee92d8684c8fb), thanks",
      "created_at": "2024-09-30T11:05:46Z",
      "updated_at": "2024-09-30T11:05:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780907365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907498",
      "pull_request_review_id": 2337170576,
      "id": 1780907498,
      "node_id": "PRRC_kwDOABII585qJn3q",
      "diff_hunk": "@@ -25,58 +25,58 @@ namespace util {\n  * strings, to reduce the likelihood of tinyformat throwing exceptions at\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n- *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n- * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n- * they are not used in the codebase. Usage of these fields is not counted and\n- * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n- * side-step this struct and call tinyformat directly.",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "23f2887af3d6d088433d25cf682575955b5bccd8",
      "in_reply_to_id": 1780527702,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Added back](https://github.com/bitcoin/bitcoin/compare/23f2887af3d6d088433d25cf682575955b5bccd8..44aa62e98b113e118a620d9cf0cee92d8684c8fb) the part that I think is relevant, let me know if you'd like me to rewrite it.",
      "created_at": "2024-09-30T11:05:53Z",
      "updated_at": "2024-09-30T11:05:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780907498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780907498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "LEFT",
      "line": null,
      "original_line": 33,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780976817",
      "pull_request_review_id": 2337286400,
      "id": 1780976817,
      "node_id": "PRRC_kwDOABII585qJ4yx",
      "diff_hunk": "@@ -11,75 +11,61 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n-// Helper to allow compile-time sanity checks while providing the number of\n-// args directly. Normally PassFmt<sizeof...(Args)> would be used.\n-template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 13,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": 1780512926,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is the benefit of `ValidFormatSpecifiers` over the existing `PassFmt`, other than dropping the code coverage stats?\r\n\r\nSeems fine to update the comment below to say `// Execute compile-time check again at run-time to get code coverage stats.`, but not sure about dropping it.",
      "created_at": "2024-09-30T11:54:25Z",
      "updated_at": "2024-09-30T11:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780976817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780976817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "LEFT",
      "line": 17,
      "original_line": 17,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780979165",
      "pull_request_review_id": 2337286400,
      "id": 1780979165,
      "node_id": "PRRC_kwDOABII585qJ5Xd",
      "diff_hunk": "@@ -25,58 +25,58 @@ namespace util {\n  * strings, to reduce the likelihood of tinyformat throwing exceptions at\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n- *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n- * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n- * they are not used in the codebase. Usage of these fields is not counted and\n- * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n- * side-step this struct and call tinyformat directly.",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "23f2887af3d6d088433d25cf682575955b5bccd8",
      "in_reply_to_id": 1780527702,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Those are dynamic width fields, so I still don't understand why you remove that from the comment.",
      "created_at": "2024-09-30T11:56:17Z",
      "updated_at": "2024-09-30T11:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780979165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780979165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "LEFT",
      "line": null,
      "original_line": 33,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780998335",
      "pull_request_review_id": 2337322874,
      "id": 1780998335,
      "node_id": "PRRC_kwDOABII585qJ-C_",
      "diff_hunk": "@@ -11,75 +11,61 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n-// Helper to allow compile-time sanity checks while providing the number of\n-// args directly. Normally PassFmt<sizeof...(Args)> would be used.\n-template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 13,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": 1780512926,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've [added the comment back](https://github.com/bitcoin/bitcoin/compare/44aa62e98b113e118a620d9cf0cee92d8684c8fb..6e4935df880b5dfe859fcb026f1566766e4dd9a4), that's indeed important context.\r\nCompared to `PassFmt` I found the `ValidFormatSpecifiers` to be more specific (I'm not a fan of abbrvs and // comments).\r\nDon't have strong preference here, I can be convinced to rename it back, if you do.",
      "created_at": "2024-09-30T12:11:56Z",
      "updated_at": "2024-09-30T12:12:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780998335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780998335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "LEFT",
      "line": 17,
      "original_line": 17,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780998380",
      "pull_request_review_id": 2337322962,
      "id": 1780998380,
      "node_id": "PRRC_kwDOABII585qJ-Ds",
      "diff_hunk": "@@ -25,58 +25,58 @@ namespace util {\n  * strings, to reduce the likelihood of tinyformat throwing exceptions at\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n- *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n- * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n- * they are not used in the codebase. Usage of these fields is not counted and\n- * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n- * side-step this struct and call tinyformat directly.",
      "path": "src/util/string.h",
      "position": 1,
      "original_position": 9,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "23f2887af3d6d088433d25cf682575955b5bccd8",
      "in_reply_to_id": 1780527702,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Because we do have some dynamic width support for the values that were used in the codebase.\r\nBut [I've reverted](https://github.com/bitcoin/bitcoin/compare/44aa62e98b113e118a620d9cf0cee92d8684c8fb..6e4935df880b5dfe859fcb026f1566766e4dd9a4) the original comment (but deleted `%*c` which is a compile-time failure now).",
      "created_at": "2024-09-30T12:11:59Z",
      "updated_at": "2024-09-30T12:12:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1780998380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780998380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "LEFT",
      "line": null,
      "original_line": 33,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782259660",
      "pull_request_review_id": 2339348510,
      "id": 1782259660,
      "node_id": "PRRC_kwDOABII585qOx_M",
      "diff_hunk": "@@ -11,75 +11,61 @@ using namespace util;\n \n BOOST_AUTO_TEST_SUITE(util_string_tests)\n \n-// Helper to allow compile-time sanity checks while providing the number of\n-// args directly. Normally PassFmt<sizeof...(Args)> would be used.\n-template <unsigned NumArgs>\n-inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)",
      "path": "src/test/util_string_tests.cpp",
      "position": 13,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "cba51f2e380f0f89f799369b489c2e25e7215221",
      "in_reply_to_id": 1780512926,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Compared to `PassFmt` I found the `ValidFormatSpecifiers` to be more specific (I'm not a fan of abbrvs and // comments).\r\n\r\nI don't care about naming, so if you want to rename `PassFmt` to something else, this is fine. However, the `//` comment isn't useless: It explains that the goal of this helper function is to be close as possible to the real code (and document the only difference). I found that useful as a single compilation unit that serves as a close proxy to the real code, with almost the same compile-time error messages (and behavior).\r\n\r\nI understand you want better error messages on failure, but changing the behavior of the passing cases isn't required for that.\r\n\r\nGenerally, if there isn't a reason to change something, it is better to leave the code as-is, because it was most likely intentionally written in that way.",
      "created_at": "2024-10-01T07:34:49Z",
      "updated_at": "2024-10-01T07:51:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1782259660",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782259660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "LEFT",
      "line": 17,
      "original_line": 17,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782271399",
      "pull_request_review_id": 2339348510,
      "id": 1782271399,
      "node_id": "PRRC_kwDOABII585qO02n",
      "diff_hunk": "@@ -26,57 +26,63 @@ namespace util {\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n  *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n+ * @note Counting of `*` dynamic width and precision fields (such as\n  * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n  * they are not used in the codebase. Usage of these fields is not counted and",
      "path": "src/util/string.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about implementing a random and specific subset of `*` in specifiers. I think it is easier to either fully support them, or not at all. But having developers read the parser to understand which subset they are allowed to use may be causing more frustration than solving any real issue.\r\n\r\n\r\n<!--\r\n\r\nformat(\"%-*.*f\", 9, 2, 2.13)\r\n\r\nhttps://godbolt.org/z/YoqfxEjMz",
      "created_at": "2024-10-01T07:44:24Z",
      "updated_at": "2024-10-01T07:51:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1782271399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782271399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782276063",
      "pull_request_review_id": 2339348510,
      "id": 1782276063,
      "node_id": "PRRC_kwDOABII585qO1_f",
      "diff_hunk": "@@ -26,57 +26,63 @@ namespace util {\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n  *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n+ * @note Counting of `*` dynamic width and precision fields (such as\n  * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n  * they are not used in the codebase. Usage of these fields is not counted and\n  * can lead to run-time exceptions. Code wanting to use the `*` specifier can\n  * side-step this struct and call tinyformat directly.\n  */\n+constexpr static void CheckFormatSpecifiers(std::string_view str, unsigned num_params)",
      "path": "src/util/string.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about moving this out. This will break the doxygen comment above. Also, it drops the \"detail-namespace\".\r\n\r\nGenerally, I think that test-only code should follow the real code, not the other way round. As long as real code is testable, optimizing other parts of the unit tests doesn't seem too useful, especially if it breaks the existing construct and documentation.",
      "created_at": "2024-10-01T07:48:02Z",
      "updated_at": "2024-10-01T07:51:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1782276063",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782276063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782312001",
      "pull_request_review_id": 2339434218,
      "id": 1782312001,
      "node_id": "PRRC_kwDOABII585qO-xB",
      "diff_hunk": "@@ -26,57 +26,63 @@ namespace util {\n  * run-time. Validation is partial to try and prevent the most common errors\n  * while avoiding re-implementing the entire parsing logic.\n  *\n- * @note Counting of `*` dynamic width and precision fields (such as `%*c`,\n+ * @note Counting of `*` dynamic width and precision fields (such as\n  * `%2$*3$d`, `%.*f`) is not implemented to minimize code complexity as long as\n  * they are not used in the codebase. Usage of these fields is not counted and",
      "path": "src/util/string.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "original_commit_id": "6e4935df880b5dfe859fcb026f1566766e4dd9a4",
      "in_reply_to_id": 1782271399,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> not implemented to minimize code complexity as long as they are not used in the codebase\r\n\r\nI've implemented the part that was used, not a \"random subset\"",
      "created_at": "2024-10-01T08:14:32Z",
      "updated_at": "2024-10-01T08:14:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30999#discussion_r1782312001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782312001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30999"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    }
  ]
}