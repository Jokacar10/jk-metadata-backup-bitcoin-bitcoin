{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184",
    "id": 2743147697,
    "node_id": "PR_kwDOABII586jgRyx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33184",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33184.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33184.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33184",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33184/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5544dae6709629b2b88d9cd9d7221745ed5b40a1",
    "number": 33184,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: Replace legacy wallet with MiniWallet in rpc_getblockstats.py",
    "user": {
      "login": "enirox001",
      "id": 66912335,
      "node_id": "MDQ6VXNlcjY2OTEyMzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enirox001",
      "html_url": "https://github.com/enirox001",
      "followers_url": "https://api.github.com/users/enirox001/followers",
      "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
      "organizations_url": "https://api.github.com/users/enirox001/orgs",
      "repos_url": "https://api.github.com/users/enirox001/repos",
      "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/enirox001/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `rpc_getblockstats.py` test was failing with `--gen-test-data` because it used legacy wallet operations that could be affected by wallet changes, making the test data inconsistent.\r\n\r\nI replaced the legacy wallet with MiniWallet to fix this. This makes the test data generation deterministic and reliable.\r\n\r\n**Changes:**\r\n- Switched from `wallet_importprivkey`/`sendtoaddress` to `MiniWallet.send_to()`\r\n- Added helper methods for OP_RETURN creation and block retrieval\r\n- Made assertions dynamic instead of hardcoded\r\n- Updated the test data JSON to match MiniWallet's SegWit transactions\r\n\r\nThe test now passes consistently with both `--gen-test-data` and existing data.\r\n\r\nFixes #31838",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-08-13T14:52:22Z",
    "updated_at": "2025-08-27T01:39:40Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "96f3a389c755d39cfc8ce97d3b9e0e4a8e0d1fa3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "enirox001:2025_08_refactor_getblockstats",
      "ref": "2025_08_refactor_getblockstats",
      "sha": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 949079120,
        "node_id": "R_kgDOOJHMUA",
        "name": "bitcoin",
        "full_name": "enirox001/bitcoin",
        "owner": {
          "login": "enirox001",
          "id": 66912335,
          "node_id": "MDQ6VXNlcjY2OTEyMzM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/enirox001",
          "html_url": "https://github.com/enirox001",
          "followers_url": "https://api.github.com/users/enirox001/followers",
          "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
          "organizations_url": "https://api.github.com/users/enirox001/orgs",
          "repos_url": "https://api.github.com/users/enirox001/repos",
          "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/enirox001/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/enirox001/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/enirox001/bitcoin",
        "archive_url": "https://api.github.com/repos/enirox001/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/enirox001/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/enirox001/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/enirox001/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/enirox001/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/enirox001/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/enirox001/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/enirox001/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/enirox001/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/enirox001/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/enirox001/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/enirox001/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/enirox001/bitcoin/events",
        "forks_url": "https://api.github.com/repos/enirox001/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/enirox001/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/enirox001/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/enirox001/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/enirox001/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/enirox001/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/enirox001/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/enirox001/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/enirox001/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/enirox001/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/enirox001/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/enirox001/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/enirox001/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/enirox001/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/enirox001/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/enirox001/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:enirox001/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/enirox001/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/enirox001/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/enirox001/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/enirox001/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/enirox001/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/enirox001/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/enirox001/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/enirox001/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/enirox001/bitcoin/hooks",
        "svn_url": "https://github.com/enirox001/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 249338,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-26T17:52:32Z",
        "created_at": "2025-03-15T16:19:26Z",
        "updated_at": "2025-08-23T14:31:21Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ca6f3b37b992591726bd13b494369bee3bd6468",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37656,
        "stargazers_count": 85213,
        "watchers_count": 85213,
        "size": 291722,
        "default_branch": "master",
        "open_issues_count": 758,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-25T21:12:06Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-27T01:54:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 217,
    "deletions": 190,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 12,
    "comments": 2
  },
  "events": [
    {
      "event": "labeled",
      "id": 19139375144,
      "node_id": "LE_lADOABII587F0KG0zwAAAAR0y7Ao",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19139375144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-13T14:52:26Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 3184261229,
      "node_id": "IC_kwDOABII5869y_ht",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3184261229",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-13T14:52:27Z",
      "updated_at": "2025-08-27T01:39:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33184.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32138](https://github.com/bitcoin/bitcoin/pull/32138) (wallet, rpc: remove settxfee and paytxfee by polespinasa)\n* [#31449](https://github.com/bitcoin/bitcoin/pull/31449) (coins,refactor: Reduce `getblockstats` RPC UTXO overhead estimation by l0rinc)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#issuecomment-3184261229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33184"
    },
    {
      "event": "reviewed",
      "id": 3141893731,
      "node_id": "PRR_kwDOABII5867RX5j",
      "url": null,
      "actor": null,
      "commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-21T18:45:37Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#pullrequestreview-3141893731",
      "submitted_at": "2025-08-21T18:45:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
    },
    {
      "event": "reviewed",
      "id": 3141905933,
      "node_id": "PRR_kwDOABII5867Ra4N",
      "url": null,
      "actor": null,
      "commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-21T18:49:54Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#pullrequestreview-3141905933",
      "submitted_at": "2025-08-21T18:49:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19290606536,
      "node_id": "HRFPE_lADOABII587F0KG0zwAAAAR9z0vI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19290606536",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "commit_url": "https://api.github.com/repos/enirox001/bitcoin/commits/10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "created_at": "2025-08-22T16:30:32Z"
    },
    {
      "event": "reviewed",
      "id": 3150220430,
      "node_id": "PRR_kwDOABII5867xIyO",
      "url": null,
      "actor": null,
      "commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-26T03:06:04Z",
      "author_association": "NONE",
      "body": "I'm new to this code base, so I might have missed something or made some mistakes in my review.\nPlease feel free to correct me if that's the case. Thanks!",
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#pullrequestreview-3150220430",
      "submitted_at": "2025-08-26T03:06:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19352473778,
      "node_id": "HRFPE_lADOABII587F0KG0zwAAAASBf1Cy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352473778",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3321cad0cba70ede3b5cfa5bd91e207a91ba25c6",
      "commit_url": "https://api.github.com/repos/enirox001/bitcoin/commits/3321cad0cba70ede3b5cfa5bd91e207a91ba25c6",
      "created_at": "2025-08-26T17:40:32Z"
    },
    {
      "event": "labeled",
      "id": 19352481173,
      "node_id": "LE_lADOABII587F0KG0zwAAAASBf22V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352481173",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:40:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3225121744,
      "node_id": "IC_kwDOABII587AO3PQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3225121744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:41:08Z",
      "updated_at": "2025-08-26T17:41:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/48935536189</sub>\n<sub>LLM reason (✨ experimental): Lint check failed due to a style error detected by rust's `ruff`, specifically an unused import in a Python test file.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#issuecomment-3225121744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33184"
    },
    {
      "event": "closed",
      "id": 19352559470,
      "node_id": "CE_lADOABII587F0KG0zwAAAASBgJ9u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352559470",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:45:31Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 19352559531,
      "node_id": "HRDE_lADOABII587F0KG0zwAAAASBgJ-r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352559531",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:45:32Z"
    },
    {
      "event": "head_ref_restored",
      "id": 19352560063,
      "node_id": "HRRE_lADOABII587F0KG0zwAAAASBgKG_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352560063",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:45:34Z"
    },
    {
      "event": "reopened",
      "id": 19352607490,
      "node_id": "REE_lADOABII587F0KG0zwAAAASBgVsC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352607490",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T17:48:15Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1NDRkYWU2NzA5NjI5YjJiODhkOWNkOWQ3MjIxNzQ1ZWQ1YjQwYTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "tree": {
        "sha": "609d8934b1c2076974562041a593e305fb6e6681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/609d8934b1c2076974562041a593e305fb6e6681"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41642d43b3b29a9dfa880ab04cc31c5c873fc408",
          "sha": "41642d43b3b29a9dfa880ab04cc31c5c873fc408",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/41642d43b3b29a9dfa880ab04cc31c5c873fc408"
        }
      ],
      "message": "test: Replace legacy wallet with MiniWallet in rpc_getblockstats.py\n\n- Remove unnecessary FEE_SATOSHIS constant\n- Use MiniWallet's default fee instead of hardcoded 31200 satoshis\n- Fix OP_RETURN transaction serialization bug\n- Ensure OP_RETURN output is actually included in sent transaction",
      "committer": {
        "name": "Ehnamuram Enoch",
        "email": "enirox001@gmail.com",
        "date": "2025-08-26T17:52:24Z"
      },
      "author": {
        "name": "Ehnamuram Enoch",
        "email": "enirox001@gmail.com",
        "date": "2025-08-26T17:52:24Z"
      },
      "sha": "5544dae6709629b2b88d9cd9d7221745ed5b40a1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19352683785,
      "node_id": "HRFPE_lADOABII587F0KG0zwAAAASBgoUJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19352683785",
      "actor": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "commit_url": "https://api.github.com/repos/enirox001/bitcoin/commits/5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "created_at": "2025-08-26T17:52:33Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291867656",
      "pull_request_review_id": 3141893731,
      "id": 2291867656,
      "node_id": "PRRC_kwDOABII586ImyAI",
      "diff_hunk": "@@ -41,29 +45,60 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+        FEE_SATOSHIS = 31200\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, description) in enumerate(TRANSACTIONS):",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 63,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\r\n```",
      "created_at": "2025-08-21T18:45:36Z",
      "updated_at": "2025-08-21T18:45:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2291867656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291867656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291876302",
      "pull_request_review_id": 3141905933,
      "id": 2291876302,
      "node_id": "PRRC_kwDOABII586Im0HO",
      "diff_hunk": "@@ -41,29 +45,60 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+        FEE_SATOSHIS = 31200",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 46,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "545aafb902cfe16194f90f7eb11cd5221b30015e: Do we need this `FEE_SATOSHIS`? Couldn't we use the default value from `send_to`?",
      "created_at": "2025-08-21T18:49:53Z",
      "updated_at": "2025-08-21T18:49:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2291876302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291876302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2294175851",
      "pull_request_review_id": 3145122449,
      "id": 2294175851,
      "node_id": "PRRC_kwDOABII586Ivlhr",
      "diff_hunk": "@@ -41,29 +45,60 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+        FEE_SATOSHIS = 31200",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 46,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "in_reply_to_id": 2291876302,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch! Removed FEE_SATOSHIS and now using the default fee. The original settxfee(0.003) was arbitrary - since getblockstats measures UTXOs (not fees), the default fee works fine. Test still passes and code is cleaner.\r\n",
      "created_at": "2025-08-22T16:31:10Z",
      "updated_at": "2025-08-22T16:31:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2294175851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2294175851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2294179108",
      "pull_request_review_id": 3145127309,
      "id": 2294179108,
      "node_id": "PRRC_kwDOABII586IvmUk",
      "diff_hunk": "@@ -41,29 +45,60 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+        FEE_SATOSHIS = 31200\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, description) in enumerate(TRANSACTIONS):",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 63,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "545aafb902cfe16194f90f7eb11cd5221b30015e",
      "in_reply_to_id": 2291867656,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-22T16:33:06Z",
      "updated_at": "2025-08-22T16:33:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2294179108",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2294179108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297317597",
      "pull_request_review_id": 3150220430,
      "id": 2297317597,
      "node_id": "PRRC_kwDOABII586I7kjd",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)\n+\n+        self._create_op_return_transaction(wallet)\n+\n         self.sync_all()\n-        self.generate(self.nodes[0], 1)\n+        self.generate(wallet, 1)\n \n         self.expected_stats = self.get_stats()\n+        blocks = self._get_all_blocks()\n+\n+        to_dump = {\n+            'blocks': blocks,\n+            'mocktime': int(MOCKTIME),\n+            'stats': self.expected_stats,\n+        }\n+        with open(filename, 'w', encoding=\"utf8\") as f:\n+            json.dump(to_dump, f, sort_keys=True, indent=2)\n+\n+    def _create_op_return_transaction(self, wallet):\n+        \"\"\"Create a transaction with OP_RETURN output to test statistics exclusion.\"\"\"\n+        tx = wallet.create_self_transfer(fee_rate=Decimal(\"0.003\"))",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 91,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": null,
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a reason we need to explicitly specify fee_rate here?\nFrom what I can see, the test seems to pass even without setting this value.\nI understand that in the original test, the transaction with the OP_RETURN was sent with a fee rate of 0.003 implicitly. However, since we are not testing the fee rate in this case, I'm concerned that explicitly setting it here might be confusing for future readers.",
      "created_at": "2025-08-25T07:19:29Z",
      "updated_at": "2025-08-26T03:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2297317597",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297317597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297380324",
      "pull_request_review_id": 3150220430,
      "id": 2297380324,
      "node_id": "PRRC_kwDOABII586I7z3k",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 70,
      "original_position": 70,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": null,
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we are not specifically testing address type or scripts here, perhaps we could use `wallet.send_self_transfer(from_node=self.nodes)` instead?\nI think this might make the code simpler than generating scripts and using wallet.send_to.",
      "created_at": "2025-08-25T07:51:18Z",
      "updated_at": "2025-08-26T03:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2297380324",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297380324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": 62,
      "original_start_line": 62,
      "start_side": "RIGHT",
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299427937",
      "pull_request_review_id": 3150220430,
      "id": 2299427937,
      "node_id": "PRRC_kwDOABII586JDnxh",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": null,
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "May I ask why we need to mine here after the first transaction?\nI noticed that the original test also mines at this point, but I’m not sure about the reason behind it:\nhttps://github.com/bitcoin/bitcoin/blob/6ca6f3b37b992591726bd13b494369bee3bd6468/test/functional/rpc_getblockstats.py#L53-L54\n\n",
      "created_at": "2025-08-26T00:34:32Z",
      "updated_at": "2025-08-26T03:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2299427937",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299427937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299494594",
      "pull_request_review_id": 3150220430,
      "id": 2299494594,
      "node_id": "PRRC_kwDOABII586JD4DC",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)\n+\n+        self._create_op_return_transaction(wallet)\n+\n         self.sync_all()\n-        self.generate(self.nodes[0], 1)\n+        self.generate(wallet, 1)\n \n         self.expected_stats = self.get_stats()\n+        blocks = self._get_all_blocks()\n+\n+        to_dump = {\n+            'blocks': blocks,\n+            'mocktime': int(MOCKTIME),\n+            'stats': self.expected_stats,\n+        }\n+        with open(filename, 'w', encoding=\"utf8\") as f:\n+            json.dump(to_dump, f, sort_keys=True, indent=2)\n+\n+    def _create_op_return_transaction(self, wallet):\n+        \"\"\"Create a transaction with OP_RETURN output to test statistics exclusion.\"\"\"\n+        tx = wallet.create_self_transfer(fee_rate=Decimal(\"0.003\"))\n+        op_return_data = b'\\x21'\n+        tx[\"tx\"].vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, op_return_data])))\n+        wallet.sendrawtransaction(from_node=self.nodes[0], tx_hex=tx[\"hex\"])",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 94,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": null,
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just to confirm, it seems we need to re-serialize the transaction after changing the output.\nIs that correct?\n\n```suggestion\n        wallet.sendrawtransaction(from_node=self.nodes[0], tx_hex=tx[\"tx\"].serialize().hex())\n```",
      "created_at": "2025-08-26T01:27:34Z",
      "updated_at": "2025-08-26T03:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2299494594",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299494594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301723616",
      "pull_request_review_id": 3156721944,
      "id": 2301723616,
      "node_id": "PRRC_kwDOABII586JMYPg",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)\n+\n+        self._create_op_return_transaction(wallet)\n+\n         self.sync_all()\n-        self.generate(self.nodes[0], 1)\n+        self.generate(wallet, 1)\n \n         self.expected_stats = self.get_stats()\n+        blocks = self._get_all_blocks()\n+\n+        to_dump = {\n+            'blocks': blocks,\n+            'mocktime': int(MOCKTIME),\n+            'stats': self.expected_stats,\n+        }\n+        with open(filename, 'w', encoding=\"utf8\") as f:\n+            json.dump(to_dump, f, sort_keys=True, indent=2)\n+\n+    def _create_op_return_transaction(self, wallet):\n+        \"\"\"Create a transaction with OP_RETURN output to test statistics exclusion.\"\"\"\n+        tx = wallet.create_self_transfer(fee_rate=Decimal(\"0.003\"))",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 91,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": 2297317597,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch! You're right - since `create_self_transfer()` defaults to `fee_rate=0.003`, explicitly setting it here is redundant and potentially confusing. I've removed the parameter to use the default.",
      "created_at": "2025-08-26T17:56:40Z",
      "updated_at": "2025-08-26T17:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2301723616",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301723616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301724711",
      "pull_request_review_id": 3156723468,
      "id": 2301724711,
      "node_id": "PRRC_kwDOABII586JMYgn",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 70,
      "original_position": 70,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": 2297380324,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, but `send_self_transfer()` only creates self-transfers (sending back to the wallet's own address). For this test, we need external outputs to properly test `getblockstats` UTXO statistics. The `send_to()` method is necessary here to create transactions with external recipients.",
      "created_at": "2025-08-26T17:57:10Z",
      "updated_at": "2025-08-26T17:57:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2301724711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301724711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": 62,
      "original_start_line": 62,
      "start_side": "RIGHT",
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301728062",
      "pull_request_review_id": 3156728660,
      "id": 2301728062,
      "node_id": "PRRC_kwDOABII586JMZU-",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 69,
      "original_position": 69,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": 2299427937,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This mining pattern is intentional - it creates a specific block structure for testing:\r\n- Block 1: 1 transaction (first 10 BTC send)\r\n- Block 2: 4 transactions (remaining sends + OP_RETURN)\r\n\r\nThis allows testing `getblockstats` across different block scenarios (single vs multi-transaction blocks) rather than having all transactions in one block.",
      "created_at": "2025-08-26T17:58:40Z",
      "updated_at": "2025-08-26T17:58:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2301728062",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301728062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301731981",
      "pull_request_review_id": 3156734238,
      "id": 2301731981,
      "node_id": "PRRC_kwDOABII586JMaSN",
      "diff_hunk": "@@ -41,29 +45,58 @@ def get_stats(self):\n         return [self.nodes[0].getblockstats(hash_or_height=self.start_height + i) for i in range(self.max_stat_pos+1)]\n \n     def generate_test_data(self, filename):\n-        mocktime = 1525107225\n-        self.nodes[0].setmocktime(mocktime)\n-        self.nodes[0].createwallet(wallet_name='test')\n-        privkey = self.nodes[0].get_deterministic_priv_key().key\n-        wallet_importprivkey(self.nodes[0], privkey, 0)\n-\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        address = self.nodes[0].get_deterministic_priv_key().address\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.generate(self.nodes[0], 1)\n-\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n-        self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n-        self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n-        # Send to OP_RETURN output to test its exclusion from statistics\n-        self.nodes[0].send(outputs={\"data\": \"21\"})\n+        MOCKTIME = 1525107225\n+\n+        TRANSACTIONS = [\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC with fee subtracted\"),\n+            (10, \"Send 10 BTC without subtracting fee\"),\n+            (1, \"Send 1 BTC with higher fee rate\"),\n+        ]\n+\n+        self.nodes[0].setmocktime(MOCKTIME)\n+        wallet = MiniWallet(self.nodes[0])\n+\n+        self.generate(wallet, COINBASE_MATURITY + 1)\n+\n+        external_address = self.nodes[0].get_deterministic_priv_key().address\n+        external_script = address_to_scriptpubkey(external_address)\n+\n+        for i, (amount_btc, _) in enumerate(TRANSACTIONS):\n+            amount_satoshis = int(amount_btc * COIN)\n+            wallet.send_to(\n+                from_node=self.nodes[0],\n+                scriptPubKey=external_script,\n+                amount=amount_satoshis,\n+            )\n+            if i == 0:\n+                self.generate(wallet, 1)\n+\n+        self._create_op_return_transaction(wallet)\n+\n         self.sync_all()\n-        self.generate(self.nodes[0], 1)\n+        self.generate(wallet, 1)\n \n         self.expected_stats = self.get_stats()\n+        blocks = self._get_all_blocks()\n+\n+        to_dump = {\n+            'blocks': blocks,\n+            'mocktime': int(MOCKTIME),\n+            'stats': self.expected_stats,\n+        }\n+        with open(filename, 'w', encoding=\"utf8\") as f:\n+            json.dump(to_dump, f, sort_keys=True, indent=2)\n+\n+    def _create_op_return_transaction(self, wallet):\n+        \"\"\"Create a transaction with OP_RETURN output to test statistics exclusion.\"\"\"\n+        tx = wallet.create_self_transfer(fee_rate=Decimal(\"0.003\"))\n+        op_return_data = b'\\x21'\n+        tx[\"tx\"].vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN, op_return_data])))\n+        wallet.sendrawtransaction(from_node=self.nodes[0], tx_hex=tx[\"hex\"])",
      "path": "test/functional/rpc_getblockstats.py",
      "position": 1,
      "original_position": 94,
      "commit_id": "5544dae6709629b2b88d9cd9d7221745ed5b40a1",
      "original_commit_id": "10da636b155a26949ee0b31dbe1bca5a15ec4314",
      "in_reply_to_id": 2299494594,
      "user": {
        "login": "enirox001",
        "id": 66912335,
        "node_id": "MDQ6VXNlcjY2OTEyMzM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/66912335?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enirox001",
        "html_url": "https://github.com/enirox001",
        "followers_url": "https://api.github.com/users/enirox001/followers",
        "following_url": "https://api.github.com/users/enirox001/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/enirox001/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/enirox001/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/enirox001/subscriptions",
        "organizations_url": "https://api.github.com/users/enirox001/orgs",
        "repos_url": "https://api.github.com/users/enirox001/repos",
        "events_url": "https://api.github.com/users/enirox001/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/enirox001/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're  right - we need to re-serialize after modifying the transaction. The `tx[\"hex\"]` contains the original transaction, but we're modifying `tx[\"tx\"]` by adding the OP_RETURN output. Without re-serializing, the OP_RETURN wouldn't actually be included in the sent transaction.\r\n\r\nI've applied your suggested fix.",
      "created_at": "2025-08-26T18:00:34Z",
      "updated_at": "2025-08-26T18:00:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33184#discussion_r2301731981",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301731981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33184"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    }
  ]
}