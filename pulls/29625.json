{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625",
    "id": 1766540432,
    "node_id": "PR_kwDOABII585pS0SQ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29625",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29625.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29625.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
    "number": 29625,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Several randomness improvements",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR contains a number of vaguely-related improvements to the random module.\r\n\r\nThe specific changes and more detailed rationale is in the commit messages, but the highlights are:\r\n\r\n* `XoRoShiRo128PlusPlus` (previously a test-only RNG) moves to random.h and becomes `InsecureRandomContext`, which is even faster than `FastRandomContext` but non-cryptographic. It also gets all helper randomness functions (`randrange`, `fillrand`, ...), making it a lot more succinct to use.\r\n* During tests, **all** randomness is made deterministic (except for `GetStrongRandBytes`) but non-repeating (like `GetRand()` used to be when `g_mock_deterministic_tests` was used), either fixed, or from a random seed (overridden by env var).\r\n* Several infrequently used top-level functions (`GetRandMillis`, `GetRandMicros`, `GetExponentialRand`) are converted into member functions of `FastRandomContext` (and `InsecureRandomContext`).\r\n* `GetRand<T>()` (without argument) can now return the maximum value of the type (previously e.g. `GetRand<uint32_t>()` would never return 0xffffffff).",
    "labels": [],
    "created_at": "2024-03-11T19:36:49Z",
    "updated_at": "2025-07-31T14:17:52Z",
    "closed_at": "2024-07-04T10:26:52Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-07-04T10:26:52Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "5c0cd205a1ab1529bd2e5bf9319474ac9703d7d3",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "sipa:202403_rand_rework",
      "ref": "202403_rand_rework",
      "sha": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 91,
        "watchers_count": 91,
        "size": 269428,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-14T14:43:12Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2025-07-23T19:29:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fe70be537783aeadf9e3f72cad07efd66775285b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37591,
        "stargazers_count": 84826,
        "watchers_count": 84826,
        "size": 289751,
        "default_branch": "master",
        "open_issues_count": 750,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-31T14:08:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-31T14:37:47Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 707,
    "deletions": 533,
    "changed_files": 42,
    "commits": 23,
    "review_comments": 102,
    "comments": 35
  },
  "events": [
    {
      "event": "commented",
      "id": 1989283694,
      "node_id": "IC_kwDOABII5852kg9u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989283694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T19:36:52Z",
      "updated_at": "2024-07-04T09:58:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29625).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2200850676), [maflcko](https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2156620993), [hodlinator](https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2154709229), [dergoegge](https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2158527393) |\n| Concept ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2083365482) |\n| Stale ACK | [EthanHeilman](https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2106304644) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30377](https://github.com/bitcoin/bitcoin/pull/30377) (refactor: Make uint256S(const char*) consteval by hodlinator)\n* [#30277](https://github.com/bitcoin/bitcoin/pull/30277) ([DO NOT MERGE] Erlay: bandwidth-efficient transaction relay protocol (Full implementation) by sr-gi)\n* [#30116](https://github.com/bitcoin/bitcoin/pull/30116) (p2p: Fill reconciliation sets (Erlay) attempt 2 by sr-gi)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29543](https://github.com/bitcoin/bitcoin/pull/29543) (refactor: Avoid unsigned integer overflow in `script/interpreter.cpp` by hebasto)\n* [#29536](https://github.com/bitcoin/bitcoin/pull/29536) (fuzz: fuzz connman with non-empty addrman + ASMap by brunoerg)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#26114](https://github.com/bitcoin/bitcoin/pull/26114) (net: Make AddrFetch connections to fixed seeds by mzumsande)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1989283694",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "labeled",
      "id": 12082996166,
      "node_id": "LE_lADOABII586B8ROnzwAAAALQM-PG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12082996166",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T04:41:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1990350891,
      "node_id": "IC_kwDOABII5852olgr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1990350891",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T04:41:53Z",
      "updated_at": "2024-03-12T04:41:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22530315845</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1990350891",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 1991256586,
      "node_id": "IC_kwDOABII5852sCoK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991256586",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T10:09:39Z",
      "updated_at": "2024-03-12T10:09:39Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThere are a few places in the fuzz tests where this will allow to easily replace `FastRandomContext` with a `InsecureRandomContext`, which is beneficial for performance (e.g. the addrman harnesses partially fill the addrman with addresses from rng) and we don't need cryptographic rng there anyway.\r\n\r\n> During tests, all randomness is made deterministic \r\n\r\nGreat, this should help with #29018",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1991256586",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 1991884113,
      "node_id": "IC_kwDOABII5852ub1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991884113",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T15:11:44Z",
      "updated_at": "2024-03-12T15:11:44Z",
      "author_association": "MEMBER",
      "body": "What's the impact on the fuzz corpus of switching to a different (?) deterministic RNG?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1991884113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 1991989979,
      "node_id": "IC_kwDOABII5852u1rb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991989979",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T15:53:35Z",
      "updated_at": "2024-03-12T15:53:35Z",
      "author_association": "MEMBER",
      "body": "> What's the impact on the fuzz corpus of switching to a different (?) deterministic RNG?\r\n\r\nI would expect that switching to a **different** rng should have no meaningful effect on the corpus itself. The corpus for a particular harness might change but the coverage for the code we intend to test should remain the same. This is because using rng in a fuzz harness only makes sense in very rare cases. It should never be used in a way that can significantly affect the coverage reached, otherwise there is no point in using a coverage-guided fuzzer, we could just pipe /dev/random to our harnesses.\r\n\r\nFor example, if we need to populate some data that we don't really expect to have an impact on the thing we are testing, we might use rng instead of consuming from the fuzz input (we do this in the p2p transport harnesses to fill message contents, which are essentially irrelevant to the transport logic).\r\n\r\nSwitching to **deterministic** rng can cause a corpus' coverage to grow because coverage-guided feedback loops start working more reliably when the code under test is deterministic. This can vary from harness to harness, but we've seen coverage-guided fuzzers find bugs once we've improved on determinism.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1991989979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12094638098,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALQ5YgS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12094638098",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8d2aa9a43455b29b65bafef7a17b1d8379b44f1",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b8d2aa9a43455b29b65bafef7a17b1d8379b44f1",
      "created_at": "2024-03-12T20:30:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12094859951,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALQ6Oqv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12094859951",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3ad67b0374b46bc14408ff482b796c8d49171c22",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/3ad67b0374b46bc14408ff482b796c8d49171c22",
      "created_at": "2024-03-12T20:55:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12102391525,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRW9bl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12102391525",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "60fd6c879c42eee3caf55fa81bec1cfbcb2a8d33",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/60fd6c879c42eee3caf55fa81bec1cfbcb2a8d33",
      "created_at": "2024-03-13T12:01:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107461789,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRqTSd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107461789",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "01f3152567e9e882ddd459de98fecd1104c4f1e0",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/01f3152567e9e882ddd459de98fecd1104c4f1e0",
      "created_at": "2024-03-13T18:15:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107503703,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRqdhX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107503703",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9ad65c950f144f8991e716d7c366b6b80b25ad74",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/9ad65c950f144f8991e716d7c366b6b80b25ad74",
      "created_at": "2024-03-13T18:19:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107517082,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRqgya",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107517082",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0d1274c5ec866f7bc66a9be0614aa964765d4500",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0d1274c5ec866f7bc66a9be0614aa964765d4500",
      "created_at": "2024-03-13T18:21:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107618500,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRq5jE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107618500",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7cf4e18c6bdf6233e765bd45b1ee1b567994af31",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/7cf4e18c6bdf6233e765bd45b1ee1b567994af31",
      "created_at": "2024-03-13T18:30:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107690802,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRrLMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107690802",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eeeb133a7e65926f624c9724b6f5214d46ed3273",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/eeeb133a7e65926f624c9724b6f5214d46ed3273",
      "created_at": "2024-03-13T18:36:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12107726610,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRrT8S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107726610",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c07a68c79e68a67617e007af09f447349fe657f1",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/c07a68c79e68a67617e007af09f447349fe657f1",
      "created_at": "2024-03-13T18:39:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12108283274,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALRtb2K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12108283274",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b5c10a4287aa7b03bb0fb012db08b456f64e9da7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b5c10a4287aa7b03bb0fb012db08b456f64e9da7",
      "created_at": "2024-03-13T19:32:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12122197739,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSig7r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12122197739",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa5851a8f7a927ec007871a7655f504f86013dca",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/fa5851a8f7a927ec007871a7655f504f86013dca",
      "created_at": "2024-03-14T18:12:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123037882,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSluC6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123037882",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4159bcbefa47eda0e4d6da04355f0cb488ef4ffd",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/4159bcbefa47eda0e4d6da04355f0cb488ef4ffd",
      "created_at": "2024-03-14T19:38:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123276256,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSmoPg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123276256",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "05d19a158b95748213754340aaf4152f1f099c04",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/05d19a158b95748213754340aaf4152f1f099c04",
      "created_at": "2024-03-14T20:00:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123335431,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSm2sH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123335431",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "019d4839515864e16b329c7751f82e719110f144",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/019d4839515864e16b329c7751f82e719110f144",
      "created_at": "2024-03-14T20:05:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123597848,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSn2wY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123597848",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b75d687c72dc2ea40a51007481eb044641d8cf7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/1b75d687c72dc2ea40a51007481eb044641d8cf7",
      "created_at": "2024-03-14T20:30:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123808579,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSoqND",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123808579",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "decd3df204373068e4d872fd6b86b1549c890dc9",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/decd3df204373068e4d872fd6b86b1549c890dc9",
      "created_at": "2024-03-14T20:54:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12124017630,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSpdPe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124017630",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5a71bb88224ab03bbc44e9ef63074a8df77b2b07",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5a71bb88224ab03bbc44e9ef63074a8df77b2b07",
      "created_at": "2024-03-14T21:18:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12124489441,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSrQbh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124489441",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ee6ac64232c11bc8b469a89e479bb6097a840f8d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ee6ac64232c11bc8b469a89e479bb6097a840f8d",
      "created_at": "2024-03-14T22:19:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12124796623,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALSsbbP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124796623",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "246ee18b88d97643be50f8e5aa03f55922316e6a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/246ee18b88d97643be50f8e5aa03f55922316e6a",
      "created_at": "2024-03-14T22:49:14Z"
    },
    {
      "event": "commented",
      "id": 1998634935,
      "node_id": "IC_kwDOABII5853IL-3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1998634935",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T23:21:37Z",
      "updated_at": "2024-03-14T23:21:37Z",
      "author_association": "MEMBER",
      "body": "I'm baffled by what is happening here. In the fuzz test CI job, the *data directory* gets deleted in between two fuzz input runs??",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1998634935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 1999205501,
      "node_id": "IC_kwDOABII5853KXR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1999205501",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T08:57:37Z",
      "updated_at": "2024-03-15T09:02:39Z",
      "author_association": "MEMBER",
      "body": "This is expected, because all fuzz tests in this pull request branch use the same datadir (`5a19fd2bc079272a9b138710c6e50c5ea512c1a0736333c9817c4df1d77c8518`). Maybe the randomness is too deterministic and returns a constant?\r\n\r\nYou can double check with something like:\r\n\r\n```diff\r\ndiff --git a/src/test/util/setup_common.cpp b/src/test/util/setup_common.cpp\r\nindex 2c18184261..422f495246 100644\r\n--- a/src/test/util/setup_common.cpp\r\n+++ b/src/test/util/setup_common.cpp\r\n@@ -153,6 +153,7 @@ BasicTestingSetup::BasicTestingSetup(const ChainType chainType, const std::vecto\r\n         const auto rand_str{g_insecure_rand_ctx_temp_path.rand256().ToString()};\r\n         m_path_root = fs::temp_directory_path() / \"test_common_\" PACKAGE_NAME / rand_str;\r\n         TryCreateDirectories(m_path_root);\r\n+        Assert(util::LockDirectory(m_path_root, \".lock\", /*probe_only=*/false) == util::LockResult::Success) ;\r\n     } else {\r\n         // Custom data directory\r\n         m_has_custom_datadir = true;\r\n```\r\n\r\nwhich will print:\r\n\r\n```\r\nRun addrman_serdeser with args ['/bitcoin-core/src/test/fuzz/fuzz', '-runs=1', PosixPath('folder_3/addrman_serdeser')]test/util/setup_common.cpp:156 BasicTestingSetup: Assertion `util::LockDirectory(m_path_root, \".lock\", false) == util::LockResult::Success' failed.\r\n```\r\n\r\nAlso, the issue should happen locally as well, not only on CI. Something like `./test/fuzz/test_runner.py -j 9 -l DEBUG ./folder_temp` reproduces it for me.\r\n\r\n\r\n\r\nEdit:\r\n\r\n```\r\n25d4e22d8b25c33f60b91193673336e4ad1c9406 is the first bad commit\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1999205501",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12131263837,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALTFGVd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12131263837",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4ac448d2b066d4788502669a3a2b21baa853f686",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/4ac448d2b066d4788502669a3a2b21baa853f686",
      "created_at": "2024-03-15T12:54:10Z"
    },
    {
      "event": "commented",
      "id": 1999608898,
      "node_id": "IC_kwDOABII5853L5xC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1999608898",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T12:55:58Z",
      "updated_at": "2024-03-15T12:55:58Z",
      "author_association": "MEMBER",
      "body": "@maflcko Thank you! I suspect that is it. I indeed made all fuzz test use the same deterministic seed. I've dropped that change now.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-1999608898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "mentioned",
      "id": 12131284111,
      "node_id": "MEE_lADOABII586B8ROnzwAAAALTFLSP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12131284111",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T12:55:59Z"
    },
    {
      "event": "subscribed",
      "id": 12131284131,
      "node_id": "SE_lADOABII586B8ROnzwAAAALTFLSj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12131284131",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T12:55:59Z"
    },
    {
      "event": "unlabeled",
      "id": 12132023222,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAALTH_u2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12132023222",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T13:52:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12133742500,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALTOjek",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12133742500",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e898186edda91970c639625e45f035e08fdc335",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6e898186edda91970c639625e45f035e08fdc335",
      "created_at": "2024-03-15T16:00:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12135447319,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALTVDsX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12135447319",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8e3b39828ead4920c98fcb2f8e6e3043f71ceff9",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/8e3b39828ead4920c98fcb2f8e6e3043f71ceff9",
      "created_at": "2024-03-15T18:37:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12135701850,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALTWB1a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12135701850",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "036555ff4fe6d47771621e2eb4c3e749d26f5ed4",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/036555ff4fe6d47771621e2eb4c3e749d26f5ed4",
      "created_at": "2024-03-15T19:04:02Z"
    },
    {
      "event": "labeled",
      "id": 12135702350,
      "node_id": "LE_lADOABII586B8ROnzwAAAALTWB9O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12135702350",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T19:04:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2000281667,
      "node_id": "IC_kwDOABII5853OeBD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000281667",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T19:04:07Z",
      "updated_at": "2024-03-15T19:04:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22719690018</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2000281667",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 12136381027,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAALTYnpj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12136381027",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T20:15:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2002515874,
      "node_id": "IC_kwDOABII5853W_ei",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002515874",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T15:50:07Z",
      "updated_at": "2024-03-17T15:50:07Z",
      "author_association": "MEMBER",
      "body": "Ready for review.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2002515874",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "labeled",
      "id": 12169475889,
      "node_id": "LE_lADOABII586B8ROnzwAAAALVW3cx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12169475889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T13:26:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12170943158,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALVcdq2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12170943158",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0707eeaf74be9586f438d6e30dc9a6655fd5ed2a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0707eeaf74be9586f438d6e30dc9a6655fd5ed2a",
      "created_at": "2024-03-19T14:57:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12171590292,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALVe7qU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12171590292",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5904c0c828982e43c6868567d8f527ff67489cba",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5904c0c828982e43c6868567d8f527ff67489cba",
      "created_at": "2024-03-19T15:37:56Z"
    },
    {
      "event": "unlabeled",
      "id": 12171695176,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAALVfVRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12171695176",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T15:44:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2016494476,
      "node_id": "IC_kwDOABII5854MUOM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2016494476",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-23T13:23:57Z",
      "updated_at": "2024-03-23T17:57:27Z",
      "author_association": "MEMBER",
      "body": "@Sjors \r\n\r\n> What's the impact on the fuzz corpus of switching to a different (?) deterministic RNG?\r\n\r\nLet's break it down into cases:\r\n* **The main \"random.h\" RNG** (`GetRand()` and friends, default-constructed `FastRandomContext` objects, ...). This used to be truly random in fuzz tests, and will now be deterministic with a fixed seed. In theory this should have no impact, because the fuzz tests shouldn't be relying on this randomness in the first place. But possibly there are some which do, indirectly through code that wasn't properly mocked or otherwise avoiding it, in which case making things deterministic should be a strict improvement by not making the fuzzer waste time on chasing the effects of that randomness.\r\n* **XoRoShiRo128PlusPlus**. There are a few fuzz tests (bip324, crypto_chacha20, p2p_transport_serialization, poolresource) that use this very fast deterministic RNG to construct certain data. This PR changes the behavior of some of them by replacing ad-hoc code to use that randomness with general helper functions that become available for all RNGs. In theory this might invalidate part of the fuzz corpus for those tests, but in practice I expect it won't, because the data drawn from those RNGs is data that *shouldn't* matter for the test much (if it did, it'd be drawn from the fuzz input instead).\r\n\r\nSo overall, it might invalidate a few tests' corpus (but probably not), and for others it should either have no effect or be a strict improvement.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2016494476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "mentioned",
      "id": 12224416413,
      "node_id": "MEE_lADOABII586B8ROnzwAAAALYocqd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12224416413",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-23T13:23:59Z"
    },
    {
      "event": "subscribed",
      "id": 12224416414,
      "node_id": "SE_lADOABII586B8ROnzwAAAALYocqe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12224416414",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-23T13:23:59Z"
    },
    {
      "event": "commented",
      "id": 2040694615,
      "node_id": "IC_kwDOABII5855oodX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2040694615",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T22:10:26Z",
      "updated_at": "2024-04-05T22:10:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa I plan to do a review of this next week",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2040694615",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "mentioned",
      "id": 12379679590,
      "node_id": "MEE_lADOABII586B8ROnzwAAAALh4utm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12379679590",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T22:10:27Z"
    },
    {
      "event": "subscribed",
      "id": 12379679593,
      "node_id": "SE_lADOABII586B8ROnzwAAAALh4utp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12379679593",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-05T22:10:27Z"
    },
    {
      "event": "reviewed",
      "id": 2030738805,
      "node_id": "PRR_kwDOABII5855Cp11",
      "url": null,
      "actor": null,
      "commit_id": "5904c0c828982e43c6868567d8f527ff67489cba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2030738805",
      "submitted_at": "2024-04-30T09:44:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12663004338,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAALyxhyy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12663004338",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "636e4864516782b7e6e33be2b2ec7743afaae8ba",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/636e4864516782b7e6e33be2b2ec7743afaae8ba",
      "created_at": "2024-04-30T19:30:14Z"
    },
    {
      "event": "labeled",
      "id": 12663874284,
      "node_id": "LE_lADOABII586B8ROnzwAAAALy02Ls",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12663874284",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T20:57:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12685285215,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAL0Ghdf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12685285215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T15:39:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2066132059,
      "node_id": "PRR_kwDOABII5857Jqxb",
      "url": null,
      "actor": null,
      "commit_id": "636e4864516782b7e6e33be2b2ec7743afaae8ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 636e4864516782b7e6e33be2b2ec7743afaae8ba",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2066132059",
      "submitted_at": "2024-05-20T12:38:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2083365482,
      "node_id": "PRR_kwDOABII5858LaJq",
      "url": null,
      "actor": null,
      "commit_id": "636e4864516782b7e6e33be2b2ec7743afaae8ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK and first-pass code review ACK excluding tests.\r\n\r\nI don't feel qualified to review the rand_expo_duration changes.\r\n\r\nI manually verified the randbits impls with some local tests as the shifts weren't intuitive to me at first glance.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2083365482",
      "submitted_at": "2024-05-28T19:13:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2083670646,
      "node_id": "PRR_kwDOABII5858Mkp2",
      "url": null,
      "actor": null,
      "commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2083670646",
      "submitted_at": "2024-05-28T19:17:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12962652866,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMEomLC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12962652866",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6bb00e2bd3c4b86851f9b884627c750b16c29e1d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6bb00e2bd3c4b86851f9b884627c750b16c29e1d",
      "created_at": "2024-05-28T20:06:12Z"
    },
    {
      "event": "comment_deleted",
      "id": 12962862217,
      "node_id": "CDE_lADOABII586B8ROnzwAAAAMEpZSJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12962862217",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T20:26:29Z"
    },
    {
      "event": "labeled",
      "id": 12964008224,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMEtxEg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12964008224",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T23:10:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2137496121,
      "node_id": "IC_kwDOABII585_Z5o5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2137496121",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T14:02:33Z",
      "updated_at": "2024-05-29T14:02:33Z",
      "author_association": "MEMBER",
      "body": "```\r\n node0 stderr random.h:218:26: runtime error: shift exponent -23 is negative\r\n    #0 0x61cb8c410ee5 in RandomMixin<FastRandomContext>::randbits(int) src/./random.h:218:26\r\n    #1 0x61cb8c460b2c in long RandomMixin<FastRandomContext>::randrange<long>(long) src/./random.h:270:35\r\n    #2 0x61cb8c460b2c in std::chrono::duration<long, std::ratio<1l, 1000l>> RandomMixin<FastRandomContext>::randrange<std::chrono::duration<long, std::ratio<1l, 1000l>>>(std::common_type<std::chrono::duration<long, std::ratio<1l, 1000l>>>::type) src/./random.h:352:27\r\n    #3 0x61cb8c460b2c in (anonymous namespace)::PeerManagerImpl::StartScheduledTasks(CScheduler&) src/net_processing.cpp:2080:38\r\n    #4 0x61cb8c340ea6 in AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1980:37\r\n    #5 0x61cb8c2fa474 in AppInit(node::NodeContext&) src/bitcoind.cpp:227:43\r\n    #6 0x61cb8c2fa474 in main src/bitcoind.cpp:273:10\r\n    #7 0x77f2e3bd21c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 4d9090d61bf70e6b3225d583f0f08193f54670b2)\r\n    #8 0x77f2e3bd228a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 4d9090d61bf70e6b3225d583f0f08193f54670b2)\r\n    #9 0x61cb8c21cfe4 in _start (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0xa1dfe4) (BuildId: 478a61c7d2f8deae95e82eb455a5b93dcb36ffa7)\r\nSUMMARY: UndefinedBehaviorSanitizer: invalid-shift-exponent random.h:218:26 ",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2137496121",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2137789019,
      "node_id": "IC_kwDOABII585_bBJb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2137789019",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T16:12:29Z",
      "updated_at": "2024-05-29T16:12:29Z",
      "author_association": "MEMBER",
      "body": "@maflcko That makes absolutely no sense. The shift value is `bits - bitbuf_size`, and it's inside a branch on conditional `bits > bitbuf_size`...?!",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2137789019",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "mentioned",
      "id": 12974308827,
      "node_id": "MEE_lADOABII586B8ROnzwAAAAMFVD3b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12974308827",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T16:12:30Z"
    },
    {
      "event": "subscribed",
      "id": 12974308843,
      "node_id": "SE_lADOABII586B8ROnzwAAAAMFVD3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12974308843",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-29T16:12:30Z"
    },
    {
      "event": "reviewed",
      "id": 2086514071,
      "node_id": "PRR_kwDOABII5858Xa2X",
      "url": null,
      "actor": null,
      "commit_id": "84dcdac57558c0c72b8f45856965ca3029f1899d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2086514071",
      "submitted_at": "2024-05-29T21:12:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2087961384,
      "node_id": "PRR_kwDOABII5858c8Mo",
      "url": null,
      "actor": null,
      "commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2087961384",
      "submitted_at": "2024-05-30T11:06:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13000424067,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMG4rqD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13000424067",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "05746d74a3e02be30d182c952af83986900e10fa",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/05746d74a3e02be30d182c952af83986900e10fa",
      "created_at": "2024-05-31T13:09:43Z"
    },
    {
      "event": "unlabeled",
      "id": 13001507230,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMG80Ge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13001507230",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-31T14:25:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2097721638,
      "node_id": "PRR_kwDOABII5859CLEm",
      "url": null,
      "actor": null,
      "commit_id": "e7676b6c52672f557f0e2b036d5e877393f1ce46",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed up to 64bcc828cde51a5da551b49a31b9fe44e0a255c3",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2097721638",
      "submitted_at": "2024-06-05T02:17:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13051424234,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMJ7O3q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13051424234",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a92e28e852f213c522df9858e240470299e4ecaa",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/a92e28e852f213c522df9858e240470299e4ecaa",
      "created_at": "2024-06-05T13:31:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13051493511,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMJ7fyH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13051493511",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "471d27d5d740f82fd9f51a6e909a8ae3bdd75828",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/471d27d5d740f82fd9f51a6e909a8ae3bdd75828",
      "created_at": "2024-06-05T13:36:20Z"
    },
    {
      "event": "reviewed",
      "id": 2098835816,
      "node_id": "PRR_kwDOABII5859GbFo",
      "url": null,
      "actor": null,
      "commit_id": "471d27d5d740f82fd9f51a6e909a8ae3bdd75828",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "e7676b6c52672f557f0e2b036d5e877393f1ce46 🎩\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: e7676b6c52672f557f0e2b036d5e877393f1ce46 🎩\r\ncxzra7fTi/Rsr6+8RvbXnVktwr1MJ/eJJsVn5hm1X2uUnnz3rNYpzIbtPyGWi9dcTAB7fkupq9pQeUC8sQG4AQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2098835816",
      "submitted_at": "2024-06-05T13:38:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2099240800,
      "node_id": "PRR_kwDOABII5859H99g",
      "url": null,
      "actor": null,
      "commit_id": "c099cd2e3c20fc416e3f7fc1da4798bb8042af1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2099240800",
      "submitted_at": "2024-06-05T13:39:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13088244151,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMMHsG3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13088244151",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "31f93690a06382218caa872d7f404dfb038a5e76",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/31f93690a06382218caa872d7f404dfb038a5e76",
      "created_at": "2024-06-08T12:24:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13088414076,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMMIVl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13088414076",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/462cca90c4ce25eb8e103971dd635facdb042310",
      "created_at": "2024-06-08T13:23:47Z"
    },
    {
      "event": "commented",
      "id": 2156037857,
      "node_id": "IC_kwDOABII586Agobh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2156037857",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-08T13:29:33Z",
      "updated_at": "2024-06-08T13:29:33Z",
      "author_association": "MEMBER",
      "body": "I've rebased on top of the now-merged #30161, and believe I've addressed outstanding comments.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2156037857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "reviewed",
      "id": 2105998276,
      "node_id": "PRR_kwDOABII5859hvvE",
      "url": null,
      "actor": null,
      "commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2105998276",
      "submitted_at": "2024-06-09T00:14:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13091413037,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMMTxwt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13091413037",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "125509f395a214465ebf379164e41e4c6d19d443",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/125509f395a214465ebf379164e41e4c6d19d443",
      "created_at": "2024-06-09T13:08:27Z"
    },
    {
      "event": "labeled",
      "id": 13091621149,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMMUkkd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13091621149",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T14:27:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2106304644,
      "node_id": "PRR_kwDOABII5859i6iE",
      "url": null,
      "actor": null,
      "commit_id": "125509f395a214465ebf379164e41e4c6d19d443",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 125509f395a214465ebf379164e41e4c6d19d443\r\nI have not tested the code. All my comments have been addressed.",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2106304644",
      "submitted_at": "2024-06-09T16:02:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "review_requested",
      "id": 13091898287,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMMVoOv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13091898287",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T16:02:51Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13091898316,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMMVoPM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13091898316",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T16:02:51Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 13092100188,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMMWZhc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13092100188",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T17:30:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13092211562,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMMW0tq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13092211562",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T18:30:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13092464672,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMMXygg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13092464672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T20:07:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13092474283,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMMX02r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13092474283",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T20:13:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13092597626,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMMYS96",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13092597626",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-09T21:07:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2158091611,
      "node_id": "IC_kwDOABII586Aod1b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2158091611",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T11:30:55Z",
      "updated_at": "2024-06-10T11:30:55Z",
      "author_association": "MEMBER",
      "body": "The false positive CI error still happens. I am taking another look.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2158091611",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2159234188,
      "node_id": "IC_kwDOABII586As0yM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2159234188",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T20:34:04Z",
      "updated_at": "2024-06-10T20:35:53Z",
      "author_association": "MEMBER",
      "body": "I could reproduce once outside the CI env on a 24.04 Ubuntu vm:\r\n\r\n```\r\n./configure CC='clang-18 -ftrivial-auto-var-init=pattern' CXX='clang++-18 -ftrivial-auto-var-init=pattern' --with-sanitizers=float-divide-by-zero,integer,undefined --enable-usdt --enable-zmq --with-incompatible-bdb --with-gui=qt5  && make\r\n\r\nwhile ( UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" ./test/functional/test_runner.py -j 22 --timeout-factor=2  ) ; do ( echo 1 >> /tmp/ok ) ; done\r\n```\r\n\r\nRequired diff to remove known UB from leveldb:\r\n\r\n```diff\r\ndiff --git a/src/leveldb/db/db_impl.cc b/src/leveldb/db/db_impl.cc\r\nindex 65e31724b..f61b47195 100644\r\n--- a/src/leveldb/db/db_impl.cc\r\n+++ b/src/leveldb/db/db_impl.cc\r\n@@ -1028,9 +1028,6 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {\r\n       stats.bytes_read += compact->compaction->input(which, i)->file_size;\r\n     }\r\n   }\r\n-  for (size_t i = 0; i < compact->outputs.size(); i++) {\r\n-    stats.bytes_written += compact->outputs[i].file_size;\r\n-  }\r\n \r\n   mutex_.Lock();\r\n   stats_[compact->compaction->level() + 1].Add(stats);\r\n```\r\n\r\nWill try some more stuff later on.\r\n\r\n<!--\r\n\r\n    1  export DEBIAN_FRONTEND=noninteractive && apt update && apt install curl wget htop git vim ccache -y && git clone https://github.com/bitcoin/bitcoin.git  --depth=1 ./bitcoin-core && cd bitcoin-core && apt install libc++abi-dev libc++-dev clang llvm build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq      make automake cmake curl g++-multilib libtool binutils bsdmainutils pkg-config python3 patch bison        -y  && ./autogen.sh && apt-get install clang ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-dev -y && apt install libsqlite3-dev systemtap-sdt-dev libminiupnpc-dev libnatpmp-dev qtbase5-dev qttools5-dev qttools5-dev-tools qtwayland5 libqrencode-dev -y && ./configure CC='clang-18 -ftrivial-auto-var-init=pattern' CXX='clang++-18 -ftrivial-auto-var-init=pattern' --with-sanitizers=float-divide-by-zero,integer,undefined --enable-usdt --enable-zmq --with-incompatible-bdb --with-gui=qt5  && make clean && make -j $(nproc) \r\n    2  make -j 22 && while ( UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" ./test/functional/test_runner.py -j 22 --timeout-factor=2  ) ; do ( echo 1 >> /tmp/ok ) ; done \r\n    3  cat ci/test/03_test_script.sh |less\r\n    4  vim /tmp/a\r\n    5  cat /tmp/a|git apply \r\n    6  make -j 22 && while ( UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" ./test/functional/test_runner.py -j 22 --timeout-factor=2  ) ; do ( echo 1 >> /tmp/ok ) ; done \r\n    7  git log \r\n    8  git log -1\r\n    9  git fetch origin 125509f395a214465ebf379164e41e4c6d19d443 \r\n   10  git checkout 125509f395a214465ebf379164e41e4c6d19d443\r\n   11  make -j 22 && while ( UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" ./test/functional/test_runner.py -j 22 --timeout-factor=2  ) ; do ( echo 1 >> /tmp/ok ) ; done \r\n   12  history \r\n   13  ./configure CC='clang-18 -ftrivial-auto-var-init=pattern' CXX='clang++-18 -ftrivial-auto-var-init=pattern' --with-sanitizers=float-divide-by-zero,integer,undefined --enable-usdt --enable-zmq --with-incompatible-bdb --with-gui=qt5  && make clean && make -j $(nproc) \r\n   14  ./auto&& ./configure CC='clang-18 -ftrivial-auto-var-init=pattern' CXX='clang++-18 -ftrivial-auto-var-init=pattern' --with-sanitizers=float-divide-by-zero,integer,undefined --enable-usdt --enable-zmq --with-incompatible-bdb --with-gui=qt5  && make clean && make -j $(nproc)  \r\n   15  ./autogen.sh && ./configure CC='clang-18 -ftrivial-auto-var-init=pattern' CXX='clang++-18 -ftrivial-auto-var-init=pattern' --with-sanitizers=float-divide-by-zero,integer,undefined --enable-usdt --enable-zmq --with-incompatible-bdb --with-gui=qt5  && make clean && make -j $(nproc)  \r\n   16  cat /tmp/a\r\n   17  make -j 22 && while ( UBSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\" ./test/functional/test_runner.py -j 22 --timeout-factor=2  ) ; do ( echo 1 >> /tmp/ok ) ; done \r\n   18  history \r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2159234188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2159465142,
      "node_id": "IC_kwDOABII586AttK2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2159465142",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T23:17:28Z",
      "updated_at": "2024-06-10T23:17:28Z",
      "author_association": "MEMBER",
      "body": "@maflcko Thanks, I can also reproduce that way.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2159465142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "mentioned",
      "id": 13108503156,
      "node_id": "MEE_lADOABII586B8ROnzwAAAAMNU-J0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13108503156",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T23:17:30Z"
    },
    {
      "event": "subscribed",
      "id": 13108503165,
      "node_id": "SE_lADOABII586B8ROnzwAAAAMNU-J9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13108503165",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T23:17:30Z"
    },
    {
      "event": "labeled",
      "id": 13123651664,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMOOwhQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13123651664",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T23:14:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13123676908,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMOO2rs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13123676908",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cc8ec065ac64278bf743f686cbee2f2d467cf03e",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/cc8ec065ac64278bf743f686cbee2f2d467cf03e",
      "created_at": "2024-06-11T23:19:16Z"
    },
    {
      "event": "commented",
      "id": 2161757848,
      "node_id": "IC_kwDOABII586A2c6Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2161757848",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T23:19:19Z",
      "updated_at": "2024-06-11T23:19:19Z",
      "author_association": "MEMBER",
      "body": "Rebased.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2161757848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 13124372399,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMORgev",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13124372399",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T01:18:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2162346676,
      "node_id": "IC_kwDOABII586A4sq0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2162346676",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T07:52:55Z",
      "updated_at": "2024-06-12T07:52:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26102938676</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2162346676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "labeled",
      "id": 13127547015,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMOdniH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13127547015",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T07:52:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13130344366,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMOoSeu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13130344366",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e905f86fec6ca7ab8b1137f39522a40a5eced82",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6e905f86fec6ca7ab8b1137f39522a40a5eced82",
      "created_at": "2024-06-12T11:22:26Z"
    },
    {
      "event": "commented",
      "id": 2162765346,
      "node_id": "IC_kwDOABII586A6S4i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2162765346",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T11:23:32Z",
      "updated_at": "2024-06-12T11:23:32Z",
      "author_association": "MEMBER",
      "body": "Now actually rebased, after merge of #30160.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2162765346",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 13135072913,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMO6U6R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13135072913",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T17:13:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13137699038,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMPEWDe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13137699038",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T21:39:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13137899480,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMPFG_Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13137899480",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T22:07:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13138116887,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMPF8EX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138116887",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T22:43:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13138263341,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMPGf0t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138263341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T23:09:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13138850168,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMPIvF4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138850168",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T00:45:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13138959500,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMPJJyM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138959500",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T01:06:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2164863762,
      "node_id": "IC_kwDOABII586BCTMS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2164863762",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T07:41:23Z",
      "updated_at": "2024-06-15T07:38:17Z",
      "author_association": "MEMBER",
      "body": "I am still looking into the clang error. I couldn't find an issue with your code, but minimizing/reducing the clang bug will take some time, because it appears non-deterministic.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2164863762",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2169245079,
      "node_id": "IC_kwDOABII586BTA2X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2169245079",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-15T09:33:00Z",
      "updated_at": "2024-06-15T09:33:00Z",
      "author_association": "MEMBER",
      "body": "Ok, I think I found the bug: https://github.com/bitcoin/bitcoin/pull/29625/files#r1640954007\r\n\r\nIt is in your code, and not a compiler bug :sweat_smile: ",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2169245079",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2169520624,
      "node_id": "IC_kwDOABII586BUEHw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2169520624",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-15T12:50:52Z",
      "updated_at": "2024-06-15T12:50:52Z",
      "author_association": "MEMBER",
      "body": "> Ok, I think I found the bug: https://github.com/bitcoin/bitcoin/pull/29625/files#r1640954007\n> \n> It is in your code, and not a compiler bug :sweat_smile: \n\nWow, nice catch, thank you. Will fix next week.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2169520624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13204206713,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMTCDR5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13204206713",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6a218261ed6b93e4fa40701d6f1503d6fdff268e",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6a218261ed6b93e4fa40701d6f1503d6fdff268e",
      "created_at": "2024-06-18T17:07:55Z"
    },
    {
      "event": "commented",
      "id": 2176619287,
      "node_id": "IC_kwDOABII586BvJMX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2176619287",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T17:29:05Z",
      "updated_at": "2024-06-18T17:29:05Z",
      "author_association": "MEMBER",
      "body": "Made the following changes:\r\n\r\n```diff\r\ndiff --git a/src/random.cpp b/src/random.cpp\r\nindex 71a2fcc781..39a1e3eab9 100644\r\n--- a/src/random.cpp\r\n+++ b/src/random.cpp\r\n@@ -763,5 +763,12 @@ void RandomInit()\r\n \r\n double MakeExponentiallyDistributed(uint64_t uniform) noexcept\r\n {\r\n-    return -std::log1p(uniform * -5.42101086242752217e-20 /* -1/2^64 */);\r\n+    // To convert uniform into an exponentially-distributed double, we use two steps:\r\n+    // - Convert uniform into a uniformly-distributed double in range [0, 1), use the expression\r\n+    //   ((uniform >> 11) * 0x1.0p-53), as described in https://prng.di.unimi.it/ under\r\n+    //   \"Generating uniform doubles in the unit interval\". Call this value x.\r\n+    // - Given an x in uniformly distributed in [0, 1), we find an exponentially distributed value\r\n+    //   with mean 1 as (-log(1 - x)).\r\n+    // Combining the two, and using log1p(x) = log(1 + x), we obtain the following:\r\n+    return -std::log1p((uniform >> 11) * -0x1.0p-53);\r\n }\r\ndiff --git a/src/random.h b/src/random.h\r\nindex 5766411bb8..8e8001d078 100644\r\n--- a/src/random.h\r\n+++ b/src/random.h\r\n@@ -150,7 +150,7 @@ concept StdChronoDuration = requires {\r\n         std::type_identity<T>());\r\n };\r\n \r\n-/** Given a uniformly random 64-bit value uniform, return an exponentially distributed value with mean 1. */\r\n+/** Given a uniformly random uint64_t, return an exponentially distributed double with mean 1. */\r\n double MakeExponentiallyDistributed(uint64_t uniform) noexcept;\r\n \r\n /** Mixin class that provides helper randomness functions.\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 7a0b0996d0..e52b897921 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -513,7 +514,7 @@ public:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\r\n \r\n     /** Implement PeerManager */\r\n-    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\r\n+    void StartScheduledTasks(CScheduler& scheduler) override;\r\n     void CheckForStaleTipAndEvictPeers() override;\r\n     std::optional<std::string> FetchBlock(NodeId peer_id, const CBlockIndex& block_index) override\r\n@@ -2077,7 +2080,7 @@ void PeerManagerImpl::StartScheduledTasks(CScheduler& scheduler)\r\n     scheduler.scheduleEvery([this] { this->CheckForStaleTipAndEvictPeers(); }, std::chrono::seconds{EXTRA_PEER_CHECK_INTERVAL});\r\n \r\n     // schedule next run for 10-15 minutes in the future\r\n-    const auto delta = 10min + m_rng.randrange<std::chrono::milliseconds>(5min);\r\n+    const auto delta = 10min + FastRandomContext().randrange<std::chrono::milliseconds>(5min);\r\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\r\n }\r\n```",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2176619287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "labeled",
      "id": 13206565265,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMTLDGR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13206565265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T21:05:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13208085294,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMTQ2Mu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13208085294",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T00:00:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13232759938,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMUu-SC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13232759938",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T18:05:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13232878254,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMUvbKu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13232878254",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/f0e5681e97450b696de26ff21e61f961370a9946",
      "created_at": "2024-06-20T18:17:17Z"
    },
    {
      "event": "commented",
      "id": 2181274931,
      "node_id": "IC_kwDOABII586CA50z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2181274931",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T18:19:22Z",
      "updated_at": "2024-06-20T18:19:22Z",
      "author_association": "MEMBER",
      "body": "Rebased after the merge of #30202.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2181274931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 13234004315,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMUzuFb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13234004315",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T20:09:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2136647508,
      "node_id": "PRR_kwDOABII585_WqdU",
      "url": null,
      "actor": null,
      "commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2136647508",
      "submitted_at": "2024-06-24T20:25:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "commented",
      "id": 2187344321,
      "node_id": "IC_kwDOABII586CYDnB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2187344321",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-24T20:25:50Z",
      "updated_at": "2024-06-24T20:25:50Z",
      "author_association": "MEMBER",
      "body": "75bcc1057bbf7d8e0803df09780f4237c10c4264 says \"rand_exp_delay\" in the commit message, but the actual function is \"rand_exp_duration\".",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2187344321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "reviewed",
      "id": 2141300770,
      "node_id": "PRR_kwDOABII585_oagi",
      "url": null,
      "actor": null,
      "commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some nits/questions. Happy to re-ACK if you address them.\r\n\r\nACK f0e5681e97450b696de26ff21e61f961370a9946 📲\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK f0e5681e97450b696de26ff21e61f961370a9946 📲\r\nAB6nWi2n4+9yfQdFBUUnXA6K+p5+MCJdNp0EwxcHMQLi2gsdpbpVFB1JswtGdQXvPjEmoK3HiR1ROg5SCYouBg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2141300770",
      "submitted_at": "2024-06-27T13:50:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "review_requested",
      "id": 13317851696,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMZzkow",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13317851696",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T13:50:42Z",
      "requested_reviewer": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2145571724,
      "node_id": "PRR_kwDOABII585_4tOM",
      "url": null,
      "actor": null,
      "commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2145571724",
      "submitted_at": "2024-06-27T14:26:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13320837810,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMZ-9qy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13320837810",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0b1c29b086790871fdc2776fe0af80056c9e1fff",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0b1c29b086790871fdc2776fe0af80056c9e1fff",
      "created_at": "2024-06-27T17:21:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13320925291,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMZ_TBr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13320925291",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "00c830f638d93013c76172aca916ede44c8a7e86",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/00c830f638d93013c76172aca916ede44c8a7e86",
      "created_at": "2024-06-27T17:29:18Z"
    },
    {
      "event": "commented",
      "id": 2195282495,
      "node_id": "IC_kwDOABII586C2Vo_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195282495",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T17:32:05Z",
      "updated_at": "2024-06-27T17:32:05Z",
      "author_association": "MEMBER",
      "body": "I've addressed the outstanding comments, I believe, including:\r\n* Rename `allow_deterministic` to `always_use_real_rng` (with inverted meaning).\r\n* Dropped `GetRand()` (but not `GetRand(nRange)`), inlining it instead.\r\n* Removed `GetOSRand` from the public random.h interface, and moved it into the anonymous namespace.\r\n* Fixed/improved a few comments\r\n* Dropped most of the specializations in `randbits<BITS>`.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2195282495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "reviewed",
      "id": 2146100484,
      "node_id": "PRR_kwDOABII585_6uUE",
      "url": null,
      "actor": null,
      "commit_id": "326c76909fd7add514d320bc76a576af31d40dc0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2146100484",
      "submitted_at": "2024-06-27T17:47:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13321132917,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMaAFt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13321132917",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1a2eae1f6d2487e8363b660e68c22474c317921e",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/1a2eae1f6d2487e8363b660e68c22474c317921e",
      "created_at": "2024-06-27T17:49:19Z"
    },
    {
      "event": "reviewed",
      "id": 2146109507,
      "node_id": "PRR_kwDOABII585_6whD",
      "url": null,
      "actor": null,
      "commit_id": "c8da96061a777a4206e05f7cde0f5de6f3ce3e8e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2146109507",
      "submitted_at": "2024-06-27T17:52:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "commented",
      "id": 2195320994,
      "node_id": "IC_kwDOABII586C2fCi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195320994",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T17:57:37Z",
      "updated_at": "2024-06-27T17:57:37Z",
      "author_association": "MEMBER",
      "body": "re-ACK 1a2eae1f6d2487e8363b660e68c22474c317921e 📔\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 1a2eae1f6d2487e8363b660e68c22474c317921e 📔\r\nvRAK+CHCfdQf29Wi5SlQBtyqV2a5lM/AN7M668NmR6z64J6fK3caCcseAFa7teNUWKSn3Mh1pwV2EJEkl3jNCg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2195320994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13321857093,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMaC2hF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13321857093",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/15cc11b4e591f4c67fcdefb224fadf4383064340",
      "created_at": "2024-06-27T18:25:01Z"
    },
    {
      "event": "commented",
      "id": 2196327312,
      "node_id": "IC_kwDOABII586C6UuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2196327312",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T07:39:53Z",
      "updated_at": "2024-06-28T07:39:53Z",
      "author_association": "MEMBER",
      "body": "ACK 15cc11b4e591f4c67fcdefb224fadf4383064340 🙂\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 15cc11b4e591f4c67fcdefb224fadf4383064340 🙂\r\n0j6VtcxripaaIl87IztqaKJ2ftUfu5QGfXpE1UunfWhi9zm5rwutInKzouU588H6SbK1u44c5X0qCsH7L2YtBw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2196327312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "reviewed",
      "id": 2147359609,
      "node_id": "PRR_kwDOABII585__ht5",
      "url": null,
      "actor": null,
      "commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2147359609",
      "submitted_at": "2024-06-28T08:24:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2147363981,
      "node_id": "PRR_kwDOABII585__iyN",
      "url": null,
      "actor": null,
      "commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2147363981",
      "submitted_at": "2024-06-28T08:26:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2147384765,
      "node_id": "PRR_kwDOABII585__n29",
      "url": null,
      "actor": null,
      "commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some more nits. Feel free to ignore.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2147384765",
      "submitted_at": "2024-06-28T09:08:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13331526354,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAManvLS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13331526354",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "42757ae119b8bee208c7c997cb77470c8e624522",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/42757ae119b8bee208c7c997cb77470c8e624522",
      "created_at": "2024-06-28T13:12:00Z"
    },
    {
      "event": "commented",
      "id": 2197042027,
      "node_id": "IC_kwDOABII586C9DNr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197042027",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T14:16:50Z",
      "updated_at": "2024-06-28T14:16:50Z",
      "author_association": "MEMBER",
      "body": "ACK 42757ae119b8bee208c7c997cb77470c8e624522 🏓\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 42757ae119b8bee208c7c997cb77470c8e624522 🏓\r\nNgZh0AsVIOuu4C/7KGajemIqKpSfMLJdz0iYVRCgYZjlS6mQS6n6CSJ8tYF3Hw+byhVgfdka8JjffQw0rL5fAQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2197042027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "commented",
      "id": 2197235201,
      "node_id": "IC_kwDOABII586C9yYB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197235201",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T16:02:33Z",
      "updated_at": "2024-06-28T16:02:33Z",
      "author_association": "MEMBER",
      "body": "If there are further nits, I will address them in a follow-up.\r\n\r\nReady for more (re)review.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2197235201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "labeled",
      "id": 13352293897,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMb29YJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13352293897",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T14:20:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5M2EyZTAyNGU4NDVlNjIzZTIwMmUzZWVmZTFjYzIwMTBlOWI1MTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/493a2e024e845e623e202e3eefe1cc2010e9b514",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/493a2e024e845e623e202e3eefe1cc2010e9b514",
      "tree": {
        "sha": "e9d87be53cc8eb17cae1834bd2d099b89f68ee16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9d87be53cc8eb17cae1834bd2d099b89f68ee16"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bd2bd1efb4b88d7f9eb9a1203560d69e07d97c3",
          "sha": "0bd2bd1efb4b88d7f9eb9a1203560d69e07d97c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0bd2bd1efb4b88d7f9eb9a1203560d69e07d97c3"
        }
      ],
      "message": "random: write rand256() in function of fillrand()",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T11:41:42Z"
      },
      "sha": "493a2e024e845e623e202e3eefe1cc2010e9b514"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzYjM4MmRkZTIwMmFkNTA4YmFmNTUzODE3YzViMzhmZGQyZDRhMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3b382dde202ad508baf553817c5b38fdd2d4a0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b3b382dde202ad508baf553817c5b38fdd2d4a0c",
      "tree": {
        "sha": "f16a8aa8b19dba63f3888b108276a1f946b9caa9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f16a8aa8b19dba63f3888b108276a1f946b9caa9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/493a2e024e845e623e202e3eefe1cc2010e9b514",
          "sha": "493a2e024e845e623e202e3eefe1cc2010e9b514",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/493a2e024e845e623e202e3eefe1cc2010e9b514"
        }
      ],
      "message": "random: move rand256() and randbytes() to .h file",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T11:46:47Z"
      },
      "sha": "b3b382dde202ad508baf553817c5b38fdd2d4a0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3Y2VmYzdmZDZhNmExNTk3NzlmNTcyZjRjM2EwNjE3MGY5NTVlZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27cefc7fd6a6a159779f572f4c3a06170f955ed8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27cefc7fd6a6a159779f572f4c3a06170f955ed8",
      "tree": {
        "sha": "4babc93e82e5742a758fb6d60c96d4496b8c2cec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4babc93e82e5742a758fb6d60c96d4496b8c2cec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3b382dde202ad508baf553817c5b38fdd2d4a0c",
          "sha": "b3b382dde202ad508baf553817c5b38fdd2d4a0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b3b382dde202ad508baf553817c5b38fdd2d4a0c"
        }
      ],
      "message": "random: add a few noexcepts to FastRandomContext",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T11:57:47Z"
      },
      "sha": "27cefc7fd6a6a159779f572f4c3a06170f955ed8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwZGQ4NmZjM2I2MGQ3YTY3YTk3MjBhODRhNjg1ZjE2ZTNmMDViMDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40dd86fc3b60d7a67a9720a84a685f16e3f05b06",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40dd86fc3b60d7a67a9720a84a685f16e3f05b06",
      "tree": {
        "sha": "d8bd77f37c1ba3c37d9d4c352dbc02eb1750e537",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8bd77f37c1ba3c37d9d4c352dbc02eb1750e537"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27cefc7fd6a6a159779f572f4c3a06170f955ed8",
          "sha": "27cefc7fd6a6a159779f572f4c3a06170f955ed8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27cefc7fd6a6a159779f572f4c3a06170f955ed8"
        }
      ],
      "message": "random: use BasicByte concept in randbytes",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T12:05:27Z"
      },
      "sha": "40dd86fc3b60d7a67a9720a84a685f16e3f05b06"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliMTRkM2QyZGEwNWY3NGZmYjZhMmFjMjBiN2Q5ZWZlZmJlMjk2MzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634",
      "tree": {
        "sha": "4db3a3da503c881409068bb7fadb32dcaf1a12b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4db3a3da503c881409068bb7fadb32dcaf1a12b3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40dd86fc3b60d7a67a9720a84a685f16e3f05b06",
          "sha": "40dd86fc3b60d7a67a9720a84a685f16e3f05b06",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/40dd86fc3b60d7a67a9720a84a685f16e3f05b06"
        }
      ],
      "message": "random: refactor: move rand* utilities to RandomMixin\n\nRather than make all the useful types of randomness be exclusive to\nFastRandomContext, move it to a separate RandomMixin class where it can be reused by\nother RNGs.\n\nA Curiously Recurring Template Pattern (CRTP) is used for this, to provide the ability\nfor individual RNG classes to override one or more randomness functions, without\nneeding the runtime-cost of virtual classes.\n\nSpecifically, RNGs are expected to only provide fillrand and rand64, while all others\nare derived from those:\n- randbits\n- randrange\n- randbytes\n- rand32\n- rand256\n- randbool\n- rand_uniform_delay\n- rand_uniform_duration\n- min(), max(), operator()(), to comply with C++ URBG concept.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T12:58:56Z"
      },
      "sha": "9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxY2U5ZDg2NThmZWQwZDNlNDU1MmU4YjAyYTY5MDJjYjMxYzU3MmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
      "tree": {
        "sha": "6a8d8e03df95060ef27c89215a78fb616faa69d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a8d8e03df95060ef27c89215a78fb616faa69d5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634",
          "sha": "9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b14d3d2da05f74ffb6a2ac20b7d9efefbe29634"
        }
      ],
      "message": "random: Improve RandomMixin::randbits\n\nThe previous randbits code would, when requesting more randomness than available\nin its random bits buffer, discard the remaining entropy and generate new.\n\nBenchmarks show that it's usually better to first consume the existing randomness\nand only then generate new ones. This adds some complexity to randbits, but it\ndoesn't weigh up against the reduced need to generate more randomness.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T14:16:30Z"
      },
      "sha": "21ce9d8658fed0d3e4552e8b02a6902cb31c572e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkYjdkMjZjZmQ5NmMxZjYyNmRlZjQ3NTVlMGUxYjVhYWFjOTRkM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e",
      "tree": {
        "sha": "6a460803a2e6cf9ea92998fc3e8b19d5dea276d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a460803a2e6cf9ea92998fc3e8b19d5dea276d6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
          "sha": "21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21ce9d8658fed0d3e4552e8b02a6902cb31c572e"
        }
      ],
      "message": "random: add RandomMixin::randbits with compile-known bits\n\nIn many cases, it is known at compile time how many bits are requested from\nrandbits. Provide a variant of randbits that accepts this number as a template,\nto make sure the compiler can make use of this knowledge. This is used immediately\nin rand32() and randbool(), and a few further call sites.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T16:38:14Z"
      },
      "sha": "ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5MjRmNTEyMGY2NjI2OWMwNDYzMzE2N2RlZjAxZjgyYzc0ZWE3MzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8924f5120f66269c04633167def01f82c74ea730",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8924f5120f66269c04633167def01f82c74ea730",
      "tree": {
        "sha": "b34e69cd23e86e0be234c6437f1a59b8550c1af3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b34e69cd23e86e0be234c6437f1a59b8550c1af3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e",
          "sha": "ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ddb7d26cfd96c1f626def4755e0e1b5aaac94d3e"
        }
      ],
      "message": "random: modernize XoRoShiRo128PlusPlus a bit\n\nMake use of C++20 functions in XoRoShiRo128PlusPlus.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T18:29:28Z"
      },
      "sha": "8924f5120f66269c04633167def01f82c74ea730"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhmNWFjMGQwYjYwOGJkZjM5NmQ4ZjJkNzU4YTc5MmY4NjljMmNkMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a",
      "tree": {
        "sha": "78b0ba6c841d77e4133d544375b0488ba27df5b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78b0ba6c841d77e4133d544375b0488ba27df5b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8924f5120f66269c04633167def01f82c74ea730",
          "sha": "8924f5120f66269c04633167def01f82c74ea730",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8924f5120f66269c04633167def01f82c74ea730"
        }
      ],
      "message": "xoroshiro128plusplus: drop comment about nonexisting copy()",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T12:42:53Z"
      },
      "sha": "8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjYzJmNDUwNjVmYzE4NjRmODc5MjQ4ZDFlMTQ0NDU4OGUyNzA3NmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cc2f45065fc1864f879248d1e1444588e27076b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8cc2f45065fc1864f879248d1e1444588e27076b",
      "tree": {
        "sha": "42262bcb5f2536a568f3bbc114ef630831ae80b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42262bcb5f2536a568f3bbc114ef630831ae80b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a",
          "sha": "8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5ac0d0b608bdf396d8f2d758a792f869c2cd2a"
        }
      ],
      "message": "random: move XoRoShiRo128PlusPlus into random module\n\nThis is preparation for making it more generally accessible.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T18:50:20Z"
      },
      "sha": "8cc2f45065fc1864f879248d1e1444588e27076b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjZmRjNWIxMDRjYWY5OTUyMzkzZjlkYWMyYTM2NTM5ZDk2NDA3N2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cfdc5b104caf9952393f9dac2a36539d964077f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6cfdc5b104caf9952393f9dac2a36539d964077f",
      "tree": {
        "sha": "1cef33e30adb25e9bef98e9eab2561d0c58f2f04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cef33e30adb25e9bef98e9eab2561d0c58f2f04"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cc2f45065fc1864f879248d1e1444588e27076b",
          "sha": "8cc2f45065fc1864f879248d1e1444588e27076b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8cc2f45065fc1864f879248d1e1444588e27076b"
        }
      ],
      "message": "random: convert XoRoShiRo128PlusPlus into full RNG\n\nConvert XoRoShiRo128PlusPlus into a full RandomMixin-based RNG class,\nproviding all utility functionality that FastRandomContext has. In doing so,\nit is renamed to InsecureRandomContext, highlighting its non-cryptographic\nnature.\n\nTo do this, a fillrand fallback is added to RandomMixin (where it is used by\nInsecureRandomContext), but FastRandomContext still uses its own fillrand.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T19:16:20Z"
      },
      "sha": "6cfdc5b104caf9952393f9dac2a36539d964077f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxMGNkZjZiNGUxMmExZmRhY2U3OTk4ZDc1YjRkYWY4YjY3ZDcwMjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/810cdf6b4e12a1fdace7998d75b4daf8b67d7028",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/810cdf6b4e12a1fdace7998d75b4daf8b67d7028",
      "tree": {
        "sha": "60e77d0360dc21f2271e946491987d308aeb767a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60e77d0360dc21f2271e946491987d308aeb767a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cfdc5b104caf9952393f9dac2a36539d964077f",
          "sha": "6cfdc5b104caf9952393f9dac2a36539d964077f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6cfdc5b104caf9952393f9dac2a36539d964077f"
        }
      ],
      "message": "tests: overhaul deterministic test randomness\n\nThe existing code provides two randomness mechanisms for test purposes:\n- g_insecure_rand_ctx (with its wrappers InsecureRand*), which during tests is\n  initialized using either zeros (SeedRand::ZEROS), or using environment-provided\n  randomness (SeedRand::SEED).\n- g_mock_deterministic_tests, which controls some (but not all) of the normal\n  randomness output if set, but then makes it extremely predictable (identical\n  output repeatedly).\n\nReplace this with a single mechanism, which retains the SeedRand modes to control\nall randomness. There is a new internal deterministic PRNG inside the random\nmodule, which is used in GetRandBytes() when in test mode, and which is also used\nto initialize g_insecure_rand_ctx. This means that during tests, all random numbers\nare made deterministic. There is one exception, GetStrongRandBytes(), which even\nin test mode still uses the normal PRNG state.\n\nThis probably opens the door to removing a lot of the ad-hoc \"deterministic\" mode\nfunctions littered through the codebase (by simply running relevant tests in\nSeedRand::ZEROS mode), but this isn't done yet.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-10T23:49:42Z"
      },
      "sha": "810cdf6b4e12a1fdace7998d75b4daf8b67d7028"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyZDFmODQ4NTg0ODU2NTBmZjc0Mzc1M2ZmYTVjNjc5ZjIxMGE5OTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2d1f84858485650ff743753ffa5c679f210a992",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e2d1f84858485650ff743753ffa5c679f210a992",
      "tree": {
        "sha": "80485673fd7588be09c319ece6a9d05cac6fa17d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80485673fd7588be09c319ece6a9d05cac6fa17d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/810cdf6b4e12a1fdace7998d75b4daf8b67d7028",
          "sha": "810cdf6b4e12a1fdace7998d75b4daf8b67d7028",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/810cdf6b4e12a1fdace7998d75b4daf8b67d7028"
        }
      ],
      "message": "random: make GetRand() support entire range (incl. max)\n\nThe existing code uses GetRand(nMax), with a default value for nMax, where nMax is the\nrange of values (not the maximum!) that the output is allowed to take. This will always\nmiss the last possible value (e.g. GetRand<uint32_t>() will never return 0xffffffff).\n\nFix this, by moving the functionality largely in RandomMixin, and also adding a\nseparate RandomMixin::rand function, which returns a value in the entire (non-negative)\nrange of an integer.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T14:26:46Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-11T03:38:31Z"
      },
      "sha": "e2d1f84858485650ff743753ffa5c679f210a992"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13353300827,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMb6zNb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13353300827",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aeb4de2d1b302c8d6e95870fb1e5109cf738831d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/aeb4de2d1b302c8d6e95870fb1e5109cf738831d",
      "created_at": "2024-07-01T15:33:50Z"
    },
    {
      "event": "commented",
      "id": 2200478173,
      "node_id": "IC_kwDOABII586DKKHd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2200478173",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T15:36:13Z",
      "updated_at": "2024-07-01T15:36:13Z",
      "author_association": "MEMBER",
      "body": "Rebased after the merge of #30237.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2200478173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 13353936699,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMb9Oc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13353936699",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T16:29:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkYzE4NGQ5OTlkN2UxYTg3ZWZhZjZiY2IyMjIxODZmMGRjZDg3ZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddc184d999d7e1a87efaf6bcb222186f0dcd87ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc184d999d7e1a87efaf6bcb222186f0dcd87ec",
      "tree": {
        "sha": "b5f108b5f86a71f952df306ef80fd6af9ee3d652",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5f108b5f86a71f952df306ef80fd6af9ee3d652"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2d1f84858485650ff743753ffa5c679f210a992",
          "sha": "e2d1f84858485650ff743753ffa5c679f210a992",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e2d1f84858485650ff743753ffa5c679f210a992"
        }
      ],
      "message": "random: get rid of GetRand by inlining",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:53Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-27T15:40:00Z"
      },
      "sha": "ddc184d999d7e1a87efaf6bcb222186f0dcd87ec"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgyZGUxYjgwZDk1ZmM5NDQ3ZTY0YzA5OGRjYWRiNmI4YTJmMWYyZWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee",
      "tree": {
        "sha": "e86e2c4215fa892821605e1496e645c41d98ad2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e86e2c4215fa892821605e1496e645c41d98ad2e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddc184d999d7e1a87efaf6bcb222186f0dcd87ec",
          "sha": "ddc184d999d7e1a87efaf6bcb222186f0dcd87ec",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc184d999d7e1a87efaf6bcb222186f0dcd87ec"
        }
      ],
      "message": "net: use GetRandMicros for cache expiration\n\nThis matches the data type of m_cache_entry_expiration.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-09T12:13:01Z"
      },
      "sha": "82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlYWEyMzlkYzNlMTg5MzY5ZDU5MTQ0YjUyNGNiMjgwOGNiZWY4YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eaa239dc3e189369d59144b524cb2808cbef8c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4eaa239dc3e189369d59144b524cb2808cbef8c3",
      "tree": {
        "sha": "6c2471ad2111e89d097f4c132795c09151c2d9ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c2471ad2111e89d097f4c132795c09151c2d9ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee",
          "sha": "82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82de1b80d95fc9447e64c098dcadb6b8a2f1f2ee"
        }
      ],
      "message": "random: convert GetRand{Micros,Millis} into randrange\n\nThere are only a few call sites of these throughout the codebase, so\nmove the functionality into FastRandomContext, and rewrite all call sites.\n\nThis requires the callers to explicit construct FastRandomContext objects,\nwhich do add to the verbosity, but also make potentially apparent locations\nwhere the code can be improved by reusing a FastRandomContext object (see\nfurther commit).",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-11T14:17:20Z"
      },
      "sha": "4eaa239dc3e189369d59144b524cb2808cbef8c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNmYjBkZmUyY2YwYjQ2ZjNlYTllNjI5OTJhZGU5ODk4NjBmMDg2Yzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfb0dfe2cf0b46f3ea9e62992ade989860f086c8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cfb0dfe2cf0b46f3ea9e62992ade989860f086c8",
      "tree": {
        "sha": "33d188843afed2320387ebee58172c5284411cd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33d188843afed2320387ebee58172c5284411cd2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eaa239dc3e189369d59144b524cb2808cbef8c3",
          "sha": "4eaa239dc3e189369d59144b524cb2808cbef8c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4eaa239dc3e189369d59144b524cb2808cbef8c3"
        }
      ],
      "message": "random: convert GetExponentialRand into rand_exp_duration",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-11T14:44:35Z"
      },
      "sha": "cfb0dfe2cf0b46f3ea9e62992ade989860f086c8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1ZmNiZTk2NmJjNTAxZGI4YmY2YTM4MDk2MzNmMGI4MmU2YWU1NDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
      "tree": {
        "sha": "b94b0589d424c8cad15a6869c07e1ea544d7db2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b94b0589d424c8cad15a6869c07e1ea544d7db2b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfb0dfe2cf0b46f3ea9e62992ade989860f086c8",
          "sha": "cfb0dfe2cf0b46f3ea9e62992ade989860f086c8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cfb0dfe2cf0b46f3ea9e62992ade989860f086c8"
        }
      ],
      "message": "random: improve precision of MakeExponentiallyDistributed",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-18T16:39:56Z"
      },
      "sha": "d5fcbe966bc501db8bf6a3809633f0b82e6ae547"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlMzFjZjljOWI1ZTlmZGQwMWU4YjIyMGMwOGEzY2NkZTVjZjU4NGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c",
      "tree": {
        "sha": "0ed7bc9bc15920b242a97e16bf5d1db6e8e3c743",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ed7bc9bc15920b242a97e16bf5d1db6e8e3c743"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
          "sha": "d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d5fcbe966bc501db8bf6a3809633f0b82e6ae547"
        }
      ],
      "message": "net, net_processing: use existing RNG objects more\n\nPeerManagerImpl, as well as several net functions, already have existing\nFastRandomContext objects. Reuse them instead of constructing new ones.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-18T15:23:10Z"
      },
      "sha": "8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJjOTEzMzBkZDY4MDY0ZTQwMmU4ZWNlZWEzZGY5NDc0YmI3YWZkNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c91330dd68064e402e8eceea3df9474bb7afd48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c91330dd68064e402e8eceea3df9474bb7afd48",
      "tree": {
        "sha": "7823d0ce6235b49452ddb4764a250d87c6242891",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7823d0ce6235b49452ddb4764a250d87c6242891"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c",
          "sha": "8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e31cf9c9b5e9fdd01e8b220c08a3ccde5cf584c"
        }
      ],
      "message": "random: cleanup order, comments, static",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-11T18:10:44Z"
      },
      "sha": "2c91330dd68064e402e8eceea3df9474bb7afd48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ZTE2ZjU3MDQyY2FiMDdlNWU3M2Y2YmVkMTlmZWVjMjAwNmU0Zjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97e16f57042cab07e5e73f6bed19feec2006e4f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97e16f57042cab07e5e73f6bed19feec2006e4f7",
      "tree": {
        "sha": "b44f87a8715574b430292373969db7545d3bc82a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b44f87a8715574b430292373969db7545d3bc82a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c91330dd68064e402e8eceea3df9474bb7afd48",
          "sha": "2c91330dd68064e402e8eceea3df9474bb7afd48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2c91330dd68064e402e8eceea3df9474bb7afd48"
        }
      ],
      "message": "tests: make fuzz tests (mostly) deterministic with fixed seed",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-03-15T18:32:20Z"
      },
      "sha": "97e16f57042cab07e5e73f6bed19feec2006e4f7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhZTM5MmQ1NjFlY2ZkZjgxODU1ZTZkZjZiOWFkM2Q4ODQzY2RmYTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2",
      "tree": {
        "sha": "37278669a126fc3a10a1c5966ec4e5e1ea059a6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37278669a126fc3a10a1c5966ec4e5e1ea059a6b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97e16f57042cab07e5e73f6bed19feec2006e4f7",
          "sha": "97e16f57042cab07e5e73f6bed19feec2006e4f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97e16f57042cab07e5e73f6bed19feec2006e4f7"
        }
      ],
      "message": "random: use LogError for init failure",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-06-08T12:19:35Z"
      },
      "sha": "2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlODA5NDI0NmVlOTUyMzJlOWQ4NGY3ZTM3ZjNjMGE0M2VmNTg3Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "tree": {
        "sha": "bf4e750a2192039d3bfd5515d93fdd576ddd05dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf4e750a2192039d3bfd5515d93fdd576ddd05dd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2",
          "sha": "2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae392d561ecfdf81855e6df6b9ad3d8843cdfa2"
        }
      ],
      "message": "random: replace construct/assign with explicit Reseed()",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-01T16:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-31T14:39:23Z"
      },
      "sha": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13354048490,
      "node_id": "HRFPE_lADOABII586B8ROnzwAAAAMb9pvq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13354048490",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "created_at": "2024-07-01T16:40:09Z"
    },
    {
      "event": "commented",
      "id": 2200850676,
      "node_id": "IC_kwDOABII586DLlD0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2200850676",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T19:14:12Z",
      "updated_at": "2024-07-01T19:14:12Z",
      "author_association": "MEMBER",
      "body": "ACK ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2200850676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "review_requested",
      "id": 13355533581,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMcDUUN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13355533581",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T19:14:17Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2156620993,
      "node_id": "PRR_kwDOABII586Ai2zB",
      "url": null,
      "actor": null,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK ce8094246ee95232e9d84f7e37f3c0a43ef587ce 🐈\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK ce8094246ee95232e9d84f7e37f3c0a43ef587ce 🐈\r\niPUv215Td9GqZ8iEiD8qyKJufeqJCMlNIHYw/Ha/B/66jmXmcrePorRaTQ+YqnML9Nkr4A+IaY3dqwDPvXI5Cg==\r\n```\r\n\r\n</details>\r\n\r\n\r\nReminder for myself: https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658724899",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2156620993",
      "submitted_at": "2024-07-03T14:30:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "review_request_removed",
      "id": 13381761607,
      "node_id": "RRRE_lADOABII586B8ROnzwAAAAMdnXpH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381761607",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:23Z",
      "requested_reviewer": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 13381761633,
      "node_id": "RRRE_lADOABII586B8ROnzwAAAAMdnXph",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381761633",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:23Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 13381761643,
      "node_id": "RRRE_lADOABII586B8ROnzwAAAAMdnXpr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381761643",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:23Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13381763691,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMdnYJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381763691",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:30Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13381764508,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMdnYWc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381764508",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:34Z",
      "requested_reviewer": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13381765126,
      "node_id": "RRE_lADOABII586B8ROnzwAAAAMdnYgG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381765126",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T14:31:36Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2154709229,
      "node_id": "PRR_kwDOABII586AbkDt",
      "url": null,
      "actor": null,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK ce8094246ee95232e9d84f7e37f3c0a43ef587ce\r\n\r\nMainly code review. Did not attempt to check thread safety compliance. (Passed `make check` & `test/functional/test_runner.py`).\r\n\r\n### e2d1f84858485650ff743753ffa5c679f210a992 - random: make GetRand() support entire range (incl. max)\r\n\r\nThe commit message title probably should be \"random: make GetRand\\<T\\>() support entire range (incl. max)\", since the overloads taking parameters still are exclusive at the end. It felt dangerous that `GetRand<T>(void)` behavior differed in this way from the overloads - happy others suggested the calls be inlined as `randrange()` and `rand<T>()` are much clearer!",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2154709229",
      "submitted_at": "2024-07-03T22:04:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "reviewed",
      "id": 2158527393,
      "node_id": "PRR_kwDOABII586AqIOh",
      "url": null,
      "actor": null,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2158527393",
      "submitted_at": "2024-07-04T09:57:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "merged",
      "id": 13392847712,
      "node_id": "ME_lADOABII586B8ROnzwAAAAMeRqNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13392847712",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c0cd205a1ab1529bd2e5bf9319474ac9703d7d3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c0cd205a1ab1529bd2e5bf9319474ac9703d7d3",
      "created_at": "2024-07-04T10:26:52Z"
    },
    {
      "event": "closed",
      "id": 13392847742,
      "node_id": "CE_lADOABII586B8ROnzwAAAAMeRqN-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13392847742",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T10:26:53Z"
    },
    {
      "event": "labeled",
      "id": 13396103601,
      "node_id": "LE_lADOABII586B8ROnzwAAAAMeeFGx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13396103601",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T14:50:13Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "referenced",
      "id": 13447128595,
      "node_id": "REFE_lADOABII586B8ROnzwAAAAMhguYT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13447128595",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10677713ca32eea76167383d4be2242e140d9029",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10677713ca32eea76167383d4be2242e140d9029",
      "created_at": "2024-07-09T21:52:58Z"
    },
    {
      "event": "referenced",
      "id": 13475236583,
      "node_id": "REFE_lADOABII586B8ROnzwAAAAMjL8rn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13475236583",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e51653985cc882904cfea0be14cd3eeeebaabf23",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51653985cc882904cfea0be14cd3eeeebaabf23",
      "created_at": "2024-07-11T17:37:24Z"
    },
    {
      "event": "commented",
      "id": 2227217140,
      "node_id": "IC_kwDOABII586EwKL0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2227217140",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-14T06:51:42Z",
      "updated_at": "2024-07-14T06:51:42Z",
      "author_association": "MEMBER",
      "body": "Ported to the CMake-based build system in https://github.com/hebasto/bitcoin/pull/264.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#issuecomment-2227217140",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29625"
    },
    {
      "event": "unlabeled",
      "id": 13497148247,
      "node_id": "UNLE_lADOABII586B8ROnzwAAAAMkfiNX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13497148247",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-14T06:51:48Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "reviewed",
      "id": 2209831085,
      "node_id": "PRR_kwDOABII586Dt1it",
      "url": null,
      "actor": null,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#pullrequestreview-2209831085",
      "submitted_at": "2024-07-31T10:52:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
    },
    {
      "event": "locked",
      "id": 18920682892,
      "node_id": "LOE_lADOABII586B8ROnzwAAAARnwrWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18920682892",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-31T14:17:52Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1584428294",
      "pull_request_review_id": 2030738805,
      "id": 1584428294,
      "node_id": "PRRC_kwDOABII585ecHUG",
      "diff_hunk": "@@ -5501,7 +5503,7 @@ void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, Peer& peer, std::chrono::mi\n             MakeAndPushMessage(pto, NetMsgType::FEEFILTER, filterToSend);\n             peer.m_fee_filter_sent = filterToSend;\n         }\n-        peer.m_next_send_feefilter = GetExponentialRand(current_time, AVG_FEEFILTER_BROADCAST_INTERVAL);\n+        peer.m_next_send_feefilter = current_time + FastRandomContext().rand_expo_duration(AVG_FEEFILTER_BROADCAST_INTERVAL);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "1779a379726b34cccc71ed1555f25975f1e073f5",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/28558 made PeerManager own a FastRandomContext, so we could (should?) use `m_rng` here instead (otherwise `PeerManager::Options::deterministic_rng` still only applies to some of the randomness).\r\n\r\nSince this PR kind of makes individual \"make this component deterministic\" options redudant, we could consider reverting #28558 (not necessarily in this PR)?\r\n\r\nI was thinking that in the long run we could break the dependencies between components and the specific rng they use (maybe something like `template<RandomNumberGenerator R> class PeerManager { ... }`), which would allow more fine grained mocking than a global \"make rng deterministic\" in tests (e.g. we could have a \"rng\" type that consumes from a `FuzzedDataProvider`). I guess this can be done by using globals as well.",
      "created_at": "2024-04-30T09:18:02Z",
      "updated_at": "2024-04-30T09:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1584428294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1584428294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1585458355",
      "pull_request_review_id": 2032409067,
      "id": 1585458355,
      "node_id": "PRRC_kwDOABII585egCyz",
      "diff_hunk": "@@ -5501,7 +5503,7 @@ void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, Peer& peer, std::chrono::mi\n             MakeAndPushMessage(pto, NetMsgType::FEEFILTER, filterToSend);\n             peer.m_fee_filter_sent = filterToSend;\n         }\n-        peer.m_next_send_feefilter = GetExponentialRand(current_time, AVG_FEEFILTER_BROADCAST_INTERVAL);\n+        peer.m_next_send_feefilter = current_time + FastRandomContext().rand_expo_duration(AVG_FEEFILTER_BROADCAST_INTERVAL);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "1779a379726b34cccc71ed1555f25975f1e073f5",
      "in_reply_to_id": 1584428294,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> #28558 made PeerManager own a FastRandomContext, so we could (should?) use `m_rng` here instead (otherwise `PeerManager::Options::deterministic_rng` still only applies to some of the randomness).\r\n\r\nI've changed the PR to reuse `PeerManagerImpl::m_rng`.\r\n\r\n\r\n\r\n> Since this PR kind of makes individual \"make this component deterministic\" options redudant, we could consider reverting #28558 (not necessarily in this PR)?\r\n\r\nMaybe. I've opted to use it where possible for now as it's a smaller change, and has some (possibly negligible) performance advantage (no need to lock the global RNG mutex to get randomness when you already hold `g_msgproc_mutex`), but I think that can be reconsidered.\r\n\r\nIndependently, we may be able to just drop `PeerManager::Options::deterministic_rng`, relying on global deterministic mode instead.\r\n\r\n\r\n\r\n> I was thinking that in the long run we could break the dependencies between components and the specific rng they use (maybe something like `template<RandomNumberGenerator R> class PeerManager { ... }`), which would allow more fine grained mocking than a global \"make rng deterministic\" in tests (e.g. we could have a \"rng\" type that consumes from a `FuzzedDataProvider`). I guess this can be done by using globals as well.\r\n\r\nMaybe, though that means testing something very different from what we're doing here: testing under conditions where the RNG returns actually decidedly non-random results (which is different from a deterministic `FastRandomContext` which is still cryptographically-strong, just deterministic. I don't know for how many things this makes sense.",
      "created_at": "2024-04-30T19:55:57Z",
      "updated_at": "2024-04-30T19:55:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1585458355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1585458355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617597271",
      "pull_request_review_id": 2083365482,
      "id": 1617597271,
      "node_id": "PRRC_kwDOABII585gapNX",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */",
      "path": "src/random.h",
      "position": 187,
      "original_position": 11,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "91f0e3cc55ee6f152ef09e1d0cc58c92353ede55",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Neat :)",
      "created_at": "2024-05-28T16:32:32Z",
      "updated_at": "2024-05-28T19:13:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617597271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617597271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 145,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617727453",
      "pull_request_review_id": 2083365482,
      "id": 1617727453,
      "node_id": "PRRC_kwDOABII585gbI_d",
      "diff_hunk": "@@ -219,6 +219,40 @@ class RandomMixin\n         return ret & ((uint64_t{1} << bits) - 1);\n     }\n \n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 64) {",
      "path": "src/random.h",
      "position": 321,
      "original_position": 9,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "f9bf239a930e130c3897779be5e61fbe5162b956",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Add a quick zero-case here too?",
      "created_at": "2024-05-28T18:24:17Z",
      "updated_at": "2024-05-28T19:13:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617727453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617727453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 233,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617743561",
      "pull_request_review_id": 2083365482,
      "id": 1617743561,
      "node_id": "PRRC_kwDOABII585gbM7J",
      "diff_hunk": "@@ -267,6 +265,20 @@ class RandomMixin\n         }\n     }\n \n+    /** Fill a Span with random bytes. */\n+    void fillrand(Span<std::byte> span) noexcept\n+    {\n+        while (span.size() >= 8) {\n+            uint64_t gen = Impl().rand64();\n+            WriteLE64(UCharCast(span.data()), gen);\n+            span = span.subspan(8);\n+        }\n+        while (span.size()) {",
      "path": "src/random.h",
      "position": 372,
      "original_position": 21,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why not do a rand32() if size() >= 4 first?",
      "created_at": "2024-05-28T18:39:21Z",
      "updated_at": "2024-05-28T19:13:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617743561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617743561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 279,
      "original_line": 279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617765084",
      "pull_request_review_id": 2083365482,
      "id": 1617765084,
      "node_id": "PRRC_kwDOABII585gbSLc",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unrelated change?\r\n\r\nEdit: Or because of use of m_rng?",
      "created_at": "2024-05-28T18:59:51Z",
      "updated_at": "2024-05-28T19:13:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617765084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617765084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617782150",
      "pull_request_review_id": 2083670646,
      "id": 1617782150,
      "node_id": "PRRC_kwDOABII585gbWWG",
      "diff_hunk": "@@ -351,19 +363,19 @@ class FastRandomContext : public RandomMixin<FastRandomContext>\n         return ReadLE64(UCharCast(buf.data()));\n     }\n \n-    /** Fill a byte Span with random bytes. */\n+    /** Fill a byte Span with random bytes. This overrides the RandomMixin version. */",
      "path": "src/random.h",
      "position": 509,
      "original_position": 35,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is kinda sneaky and surprising (to me at least) to see with CRTP.\r\n\r\nIt would be nice to specify as part of the concept which functions are _not_ allowed to be overridden, but sadly \r\n[std::experimental::detected_t](https://en.cppreference.com/w/cpp/experimental/is_detected) is.. well.. experimental.",
      "created_at": "2024-05-28T19:17:18Z",
      "updated_at": "2024-05-28T19:17:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617782150",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617782150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617796685",
      "pull_request_review_id": 2083694483,
      "id": 1617796685,
      "node_id": "PRRC_kwDOABII585gbZ5N",
      "diff_hunk": "@@ -351,19 +363,19 @@ class FastRandomContext : public RandomMixin<FastRandomContext>\n         return ReadLE64(UCharCast(buf.data()));\n     }\n \n-    /** Fill a byte Span with random bytes. */\n+    /** Fill a byte Span with random bytes. This overrides the RandomMixin version. */",
      "path": "src/random.h",
      "position": 509,
      "original_position": 35,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "in_reply_to_id": 1617782150,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Well being able to ad-hoc override individual functions, while still being able to have non-overridden functions be able to refer to it, is sort of the point of CRTP (virtual functions have the same behavior, but CRTP gives it without runtime overhead). If we didn't want this ability, it'd be possible to just have a `template<typename R> class  RNGUtility { R m_int; ...}`, where there are low-level `ChaCha20RNG` and `XoRoShiRo128PlusPlusRNG` classes, and high-level `using FastRandomContext = RNGUtility<ChaCha20RNG>;` and `using InsecureRandomContext = RNGUtility<XoRoShiRo128PlusPlusRNG>`.\r\n\r\nBeing able to selectively mark certain functions as non-overridable would be nice of course, but I don't see a way to do that currently.",
      "created_at": "2024-05-28T19:29:38Z",
      "updated_at": "2024-05-28T19:29:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617796685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617796685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617811698",
      "pull_request_review_id": 2083718448,
      "id": 1617811698,
      "node_id": "PRRC_kwDOABII585gbdjy",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It appeared to be necessary, IIRC.",
      "created_at": "2024-05-28T19:44:20Z",
      "updated_at": "2024-05-28T19:44:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617811698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617811698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617833166",
      "pull_request_review_id": 2083753859,
      "id": 1617833166,
      "node_id": "PRRC_kwDOABII585gbizO",
      "diff_hunk": "@@ -267,6 +265,20 @@ class RandomMixin\n         }\n     }\n \n+    /** Fill a Span with random bytes. */\n+    void fillrand(Span<std::byte> span) noexcept\n+    {\n+        while (span.size() >= 8) {\n+            uint64_t gen = Impl().rand64();\n+            WriteLE64(UCharCast(span.data()), gen);\n+            span = span.subspan(8);\n+        }\n+        while (span.size()) {",
      "path": "src/random.h",
      "position": 372,
      "original_position": 21,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "in_reply_to_id": 1617743561,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-05-28T20:06:16Z",
      "updated_at": "2024-05-28T20:06:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617833166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617833166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 279,
      "original_line": 279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617833753",
      "pull_request_review_id": 2083754908,
      "id": 1617833753,
      "node_id": "PRRC_kwDOABII585gbi8Z",
      "diff_hunk": "@@ -219,6 +219,40 @@ class RandomMixin\n         return ret & ((uint64_t{1} << bits) - 1);\n     }\n \n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 64) {",
      "path": "src/random.h",
      "position": 321,
      "original_position": 9,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "f9bf239a930e130c3897779be5e61fbe5162b956",
      "in_reply_to_id": 1617727453,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think I decided that the compiler should be smart enough to optimize the final \"else\" case with `Bits == 0` to effectively a `return 0;`, but it's more obvious to just make it explicit. Done.",
      "created_at": "2024-05-28T20:06:57Z",
      "updated_at": "2024-05-28T20:06:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1617833753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1617833753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 233,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1619482803",
      "pull_request_review_id": 2086514071,
      "id": 1619482803,
      "node_id": "PRRC_kwDOABII585gh1iz",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};\n+\n+/** Mixin class that provides helper randomness functions.\n  *\n- * This class is not thread-safe.\n+ * Intended to be used through CRTP: https://en.cppreference.com/w/cpp/language/crtp.\n+ * An RNG class FunkyRNG would derive publicly from RandomMixin<FunkyRNG>. This permits\n+ * RandomMixin from accessing the derived class's rand64() function, while also allowing\n+ * the derived class to provide more.\n+ *\n+ * The derived class must satisfy the RandomNumberGenerator concept.\n  */\n-class FastRandomContext\n+template<typename T>\n+class RandomMixin\n {\n private:\n-    bool requires_seed;\n-    ChaCha20 rng;\n-\n     uint64_t bitbuf;\n-    int bitbuf_size;\n+    int bitbuf_size{0};\n \n-    void RandomSeed();\n+    /** Access the underlying generator.\n+     *\n+     * This also enforces the RandomNumberGenerator concept. We cannot declare that in the template\n+     * (no template<RandomNumberGenerator T>) because the type isn't fully instantiated yet there.\n+     */\n+    RandomNumberGenerator auto& Impl() { return static_cast<T&>(*this); }\n \n     void FillBitBuffer()\n     {\n-        bitbuf = rand64();\n+        bitbuf = Impl().rand64();\n         bitbuf_size = 64;\n     }\n \n public:\n-    explicit FastRandomContext(bool fDeterministic = false) noexcept;\n-\n-    /** Initialize with explicit seed (only for testing) */\n-    explicit FastRandomContext(const uint256& seed) noexcept;\n+    RandomMixin() noexcept = default;\n \n-    // Do not permit copying a FastRandomContext (move it, or create a new one to get reseeded).\n-    FastRandomContext(const FastRandomContext&) = delete;\n-    FastRandomContext(FastRandomContext&&) = delete;\n-    FastRandomContext& operator=(const FastRandomContext&) = delete;\n+    // Do not permit copying an RNG.\n+    RandomMixin(const RandomMixin&) = delete;\n+    RandomMixin& operator=(const RandomMixin&) = delete;\n \n-    /** Move a FastRandomContext. If the original one is used again, it will be reseeded. */\n-    FastRandomContext& operator=(FastRandomContext&& from) noexcept;\n+    RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n+    {\n+        other.bitbuf_size = 0;\n+    }\n \n-    /** Generate a random 64-bit integer. */\n-    uint64_t rand64() noexcept\n+    RandomMixin& operator=(RandomMixin&& other) noexcept",
      "path": "src/random.h",
      "position": null,
      "original_position": 83,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "84dcdac57558c0c72b8f45856965ca3029f1899d",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While you're at it, how about replacing these move assignments with `Reseed()` functions?\r\n\r\nI find the idea of moving an rng to be unintuitive. And as far as I can tell, every case of \r\n\r\n`RandomMixin = foo` and `FastRandomContext = foo` and `InsecureRandomContext = foo` (all in tests) really just means \"reseed\".",
      "created_at": "2024-05-29T21:12:42Z",
      "updated_at": "2024-05-29T21:12:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1619482803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1619482803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620494947",
      "pull_request_review_id": 2087961384,
      "id": 1620494947,
      "node_id": "PRRC_kwDOABII585glspj",
      "diff_hunk": "@@ -215,6 +215,7 @@ class RandomMixin\n             // number becomes the new bitbuf.\n             uint64_t gen = Impl().rand64();\n             ret = (gen << bitbuf_size) | bitbuf;\n+            assert(bits >= bitbuf_size);",
      "path": "src/random.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\n node1 stderr bitcoind: random.h:218: uint64_t RandomMixin<FastRandomContext>::randbits(int) [T = FastRandomContext]: Assertion `bits >= bitbuf_size' failed. \r\n```\r\n\r\nI guess this is a compiler bug. I'll try to take a look here.",
      "created_at": "2024-05-30T11:06:59Z",
      "updated_at": "2024-05-30T11:06:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1620494947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620494947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620962324",
      "pull_request_review_id": 2088639691,
      "id": 1620962324,
      "node_id": "PRRC_kwDOABII585gnewU",
      "diff_hunk": "@@ -215,6 +215,7 @@ class RandomMixin\n             // number becomes the new bitbuf.\n             uint64_t gen = Impl().rand64();\n             ret = (gen << bitbuf_size) | bitbuf;\n+            assert(bits >= bitbuf_size);",
      "path": "src/random.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "in_reply_to_id": 1620494947,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I tried to track down if/how it could be a race condition, but given that it's in init and all locks seems to be in place, I don't see how that could possibly be the case.",
      "created_at": "2024-05-30T15:32:01Z",
      "updated_at": "2024-05-30T15:32:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1620962324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1620962324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1621830415",
      "pull_request_review_id": 2090016295,
      "id": 1621830415,
      "node_id": "PRRC_kwDOABII585gqysP",
      "diff_hunk": "@@ -215,6 +215,7 @@ class RandomMixin\n             // number becomes the new bitbuf.\n             uint64_t gen = Impl().rand64();\n             ret = (gen << bitbuf_size) | bitbuf;\n+            assert(bits >= bitbuf_size);",
      "path": "src/random.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "in_reply_to_id": 1620494947,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Actually, I can't reproduce it so far. So a corrupt CI machine is more likely.",
      "created_at": "2024-05-31T06:52:10Z",
      "updated_at": "2024-05-31T06:52:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1621830415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1621830415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622387886",
      "pull_request_review_id": 2090780122,
      "id": 1622387886,
      "node_id": "PRRC_kwDOABII585gs6yu",
      "diff_hunk": "@@ -215,6 +215,7 @@ class RandomMixin\n             // number becomes the new bitbuf.\n             uint64_t gen = Impl().rand64();\n             ret = (gen << bitbuf_size) | bitbuf;\n+            assert(bits >= bitbuf_size);",
      "path": "src/random.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "in_reply_to_id": 1620494947,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Clearing the cache helped, for some reason. (Adding the assert should have already cleared the ccache entry for this translation unit, but now it seems to work :shrug: )",
      "created_at": "2024-05-31T13:01:33Z",
      "updated_at": "2024-05-31T13:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1622387886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622387886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622525854",
      "pull_request_review_id": 2091022522,
      "id": 1622525854,
      "node_id": "PRRC_kwDOABII585gtcee",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};\n+\n+/** Mixin class that provides helper randomness functions.\n  *\n- * This class is not thread-safe.\n+ * Intended to be used through CRTP: https://en.cppreference.com/w/cpp/language/crtp.\n+ * An RNG class FunkyRNG would derive publicly from RandomMixin<FunkyRNG>. This permits\n+ * RandomMixin from accessing the derived class's rand64() function, while also allowing\n+ * the derived class to provide more.\n+ *\n+ * The derived class must satisfy the RandomNumberGenerator concept.\n  */\n-class FastRandomContext\n+template<typename T>\n+class RandomMixin\n {\n private:\n-    bool requires_seed;\n-    ChaCha20 rng;\n-\n     uint64_t bitbuf;\n-    int bitbuf_size;\n+    int bitbuf_size{0};\n \n-    void RandomSeed();\n+    /** Access the underlying generator.\n+     *\n+     * This also enforces the RandomNumberGenerator concept. We cannot declare that in the template\n+     * (no template<RandomNumberGenerator T>) because the type isn't fully instantiated yet there.\n+     */\n+    RandomNumberGenerator auto& Impl() { return static_cast<T&>(*this); }\n \n     void FillBitBuffer()\n     {\n-        bitbuf = rand64();\n+        bitbuf = Impl().rand64();\n         bitbuf_size = 64;\n     }\n \n public:\n-    explicit FastRandomContext(bool fDeterministic = false) noexcept;\n-\n-    /** Initialize with explicit seed (only for testing) */\n-    explicit FastRandomContext(const uint256& seed) noexcept;\n+    RandomMixin() noexcept = default;\n \n-    // Do not permit copying a FastRandomContext (move it, or create a new one to get reseeded).\n-    FastRandomContext(const FastRandomContext&) = delete;\n-    FastRandomContext(FastRandomContext&&) = delete;\n-    FastRandomContext& operator=(const FastRandomContext&) = delete;\n+    // Do not permit copying an RNG.\n+    RandomMixin(const RandomMixin&) = delete;\n+    RandomMixin& operator=(const RandomMixin&) = delete;\n \n-    /** Move a FastRandomContext. If the original one is used again, it will be reseeded. */\n-    FastRandomContext& operator=(FastRandomContext&& from) noexcept;\n+    RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n+    {\n+        other.bitbuf_size = 0;\n+    }\n \n-    /** Generate a random 64-bit integer. */\n-    uint64_t rand64() noexcept\n+    RandomMixin& operator=(RandomMixin&& other) noexcept",
      "path": "src/random.h",
      "position": null,
      "original_position": 83,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "84dcdac57558c0c72b8f45856965ca3029f1899d",
      "in_reply_to_id": 1619482803,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@theuni Nice idea, done.",
      "created_at": "2024-05-31T14:39:48Z",
      "updated_at": "2024-05-31T14:39:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1622525854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622525854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622999723",
      "pull_request_review_id": 2091793613,
      "id": 1622999723,
      "node_id": "PRRC_kwDOABII585gvQKr",
      "diff_hunk": "@@ -215,6 +215,7 @@ class RandomMixin\n             // number becomes the new bitbuf.\n             uint64_t gen = Impl().rand64();\n             ret = (gen << bitbuf_size) | bitbuf;\n+            assert(bits >= bitbuf_size);",
      "path": "src/random.h",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6ce883eb1f6eccc80e35a2fc7067c6756b6c3366",
      "in_reply_to_id": 1620494947,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@maflcko Thanks, problem seems fixed indeed!",
      "created_at": "2024-05-31T22:34:04Z",
      "updated_at": "2024-05-31T22:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1622999723",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622999723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626823379",
      "pull_request_review_id": 2097721638,
      "id": 1626823379,
      "node_id": "PRRC_kwDOABII585g91rT",
      "diff_hunk": "@@ -188,31 +182,41 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();",
      "path": "src/random.h",
      "position": 288,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "309f00b59485454117416dcfcae37e2c675069b7",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 309f00b59485454117416dcfcae37e2c675069b7 \"random: Improve RandomMixin::randbits\"\r\n\r\nShould probably include `bits > 64` here since it seems like larger numbers would be problematic below.\r\n\r\n```suggestion\r\n        if (bits >= 64) return Impl().rand64();\r\n```\r\n\r\nOr maybe just assert that `bits` is in range.",
      "created_at": "2024-06-05T01:54:39Z",
      "updated_at": "2024-06-05T02:17:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1626823379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626823379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 208,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627554476",
      "pull_request_review_id": 2098835816,
      "id": 1627554476,
      "node_id": "PRRC_kwDOABII585hAoKs",
      "diff_hunk": "@@ -659,31 +659,13 @@ void FastRandomContext::RandomSeed()\n     requires_seed = false;\n }\n \n-uint256 FastRandomContext::rand256() noexcept\n-{\n-    if (requires_seed) RandomSeed();\n-    uint256 ret;\n-    rng.Keystream(MakeWritableByteSpan(ret));\n-    return ret;\n-}\n-\n-template <typename B>\n-std::vector<B> FastRandomContext::randbytes(size_t len)\n-{\n-    std::vector<B> ret(len);\n-    fillrand(MakeWritableByteSpan(ret));\n-    return ret;\n-}\n-template std::vector<unsigned char> FastRandomContext::randbytes(size_t);\n-template std::vector<std::byte> FastRandomContext::randbytes(size_t);",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a:\r\n\r\nLooks like this commit is doing several things at once. It may be easier to review if move-only stuff (like moving rand256 and randbytes function bodies to the header file, and removing the explicit template instantiation) was done in a separate prepare commit?",
      "created_at": "2024-06-05T11:16:24Z",
      "updated_at": "2024-06-05T13:38:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627554476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627554476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 662,
      "start_side": "LEFT",
      "line": null,
      "original_line": 678,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627567196",
      "pull_request_review_id": 2098835816,
      "id": 1627567196,
      "node_id": "PRRC_kwDOABII585hArRc",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};",
      "path": "src/random.h",
      "position": null,
      "original_position": 20,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a: Not sure I understand this concept. Is there anything that is not already enforced normally in C++ that would be enforced by this concept?\r\n\r\nFor example, `static_cast` in the `Impl()` method, which enforces this concept should already check for inheritance:\r\n\r\n```\r\n<source>:17:40: error: static_cast from 'Mixin<FRC> *' to 'FRC *', which are not related by inheritance, is not allowed\r\n```\r\n\r\nConversely, if the class wasn't derived from `RandomMixin`, the `RandomMixin::Impl()` method wouldn't be called and this check would be skipped anyway.\r\n\r\nEven when the code is rewritten to C++23 using `__cpp_explicit_this_parameter`, the same should hold.\r\n\r\nSimilarly, calling `rand64`, when it is not provided should also result in a compile failure without this concept.\r\n\r\nI guess it enforces the function signature of `rand64` is noexcept?",
      "created_at": "2024-06-05T11:24:57Z",
      "updated_at": "2024-06-05T13:38:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627567196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627567196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 143,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627736240",
      "pull_request_review_id": 2098835816,
      "id": 1627736240,
      "node_id": "PRRC_kwDOABII585hBUiw",
      "diff_hunk": "@@ -357,6 +357,57 @@ class FastRandomContext : public RandomMixin<FastRandomContext>\n     void fillrand(Span<std::byte> output) noexcept;\n };\n \n+/** xoroshiro128++ PRNG. Extremely fast, not appropriate for cryptographic purposes.\n+ *\n+ * Memory footprint is 128bit, period is 2^128 - 1.\n+ * This class is not thread-safe.\n+ *\n+ * Reference implementation available at https://prng.di.unimi.it/xoroshiro128plusplus.c\n+ * See https://prng.di.unimi.it/\n+ */\n+class XoRoShiRo128PlusPlus\n+{\n+    uint64_t m_s0;\n+    uint64_t m_s1;\n+\n+    [[nodiscard]] constexpr static uint64_t SplitMix64(uint64_t& seedval) noexcept\n+    {\n+        uint64_t z = (seedval += 0x9e3779b97f4a7c15);\n+        z = (z ^ (z >> 30)) * 0xbf58476d1ce4e5b9;\n+        z = (z ^ (z >> 27)) * 0x94d049bb133111eb;\n+        return z ^ (z >> 31);\n+    }\n+\n+public:\n+    using result_type = uint64_t;\n+\n+    constexpr explicit XoRoShiRo128PlusPlus(uint64_t seedval) noexcept\n+        : m_s0(SplitMix64(seedval)), m_s1(SplitMix64(seedval)) {}\n+\n+    // no copy - that is dangerous, we don't want accidentally copy the RNG and then have two streams\n+    // with exactly the same results. If you need a copy, call copy().",
      "path": "src/random.h",
      "position": null,
      "original_position": 32,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6370a51aac06a430ec53f29fe03f5bbd08371b34",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "unrelated q in 6370a51aac06a430ec53f29fe03f5bbd08371b34: Can you explain where one finds this \"copy()\" method?",
      "created_at": "2024-06-05T13:08:28Z",
      "updated_at": "2024-06-05T13:38:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627736240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627736240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 447,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627796687",
      "pull_request_review_id": 2099222931,
      "id": 1627796687,
      "node_id": "PRRC_kwDOABII585hBjTP",
      "diff_hunk": "@@ -188,31 +182,41 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();",
      "path": "src/random.h",
      "position": 288,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "309f00b59485454117416dcfcae37e2c675069b7",
      "in_reply_to_id": 1626823379,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added an Assume that `bits` is in range.",
      "created_at": "2024-06-05T13:32:43Z",
      "updated_at": "2024-06-05T13:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627796687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627796687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 208,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627807244",
      "pull_request_review_id": 2099240800,
      "id": 1627807244,
      "node_id": "PRRC_kwDOABII585hBl4M",
      "diff_hunk": "@@ -45,13 +45,15 @@\n #include <sys/auxv.h>\n #endif\n \n-[[noreturn]] static void RandFailure()\n+namespace {\n+\n+[[noreturn]] void RandFailure()\n {\n     LogPrintf(\"Failed to read randomness, aborting\\n\");",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c099cd2e3c20fc416e3f7fc1da4798bb8042af1c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in c099cd2e3c20fc416e3f7fc1da4798bb8042af1c: Could increase the severity to `LogError()` while touching this?",
      "created_at": "2024-06-05T13:39:18Z",
      "updated_at": "2024-06-05T13:39:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627807244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627807244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627821690",
      "pull_request_review_id": 2099264027,
      "id": 1627821690,
      "node_id": "PRRC_kwDOABII585hBpZ6",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};",
      "path": "src/random.h",
      "position": null,
      "original_position": 20,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a",
      "in_reply_to_id": 1627567196,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Well in my view, concepts are really a kind of compiler-enforced documentation. Their primary purpose is giving a readable compiler error when template instantiation ought to be failing, but often also would be failing anyway. In this case, someone implementing a new RNG `class FancyRNG : public RandomMixin<FancyRNG>` but say missing `rand64`, would instead of getting an error in the instantiation of `RandomMixin` get an error message that references `RandomNumberGenerator`, which then explicitly lists what one is required to do to make it work.",
      "created_at": "2024-06-05T13:47:55Z",
      "updated_at": "2024-06-05T13:48:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627821690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627821690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 143,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627952167",
      "pull_request_review_id": 2099479013,
      "id": 1627952167,
      "node_id": "PRRC_kwDOABII585hCJQn",
      "diff_hunk": "@@ -188,31 +182,41 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();",
      "path": "src/random.h",
      "position": 288,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "309f00b59485454117416dcfcae37e2c675069b7",
      "in_reply_to_id": 1626823379,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Did you really push it? https://github.com/bitcoin/bitcoin/compare/a92e28e852f213c522df9858e240470299e4ecaa..471d27d5d740f82fd9f51a6e909a8ae3bdd75828 says no changes.",
      "created_at": "2024-06-05T14:59:08Z",
      "updated_at": "2024-06-05T14:59:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627952167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627952167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 208,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627952472",
      "pull_request_review_id": 2099479485,
      "id": 1627952472,
      "node_id": "PRRC_kwDOABII585hCJVY",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};",
      "path": "src/random.h",
      "position": null,
      "original_position": 20,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a",
      "in_reply_to_id": 1627567196,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, fair enough.",
      "created_at": "2024-06-05T14:59:19Z",
      "updated_at": "2024-06-05T14:59:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1627952472",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1627952472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 143,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632035840",
      "pull_request_review_id": 2105840678,
      "id": 1632035840,
      "node_id": "PRRC_kwDOABII585hRuQA",
      "diff_hunk": "@@ -659,31 +659,13 @@ void FastRandomContext::RandomSeed()\n     requires_seed = false;\n }\n \n-uint256 FastRandomContext::rand256() noexcept\n-{\n-    if (requires_seed) RandomSeed();\n-    uint256 ret;\n-    rng.Keystream(MakeWritableByteSpan(ret));\n-    return ret;\n-}\n-\n-template <typename B>\n-std::vector<B> FastRandomContext::randbytes(size_t len)\n-{\n-    std::vector<B> ret(len);\n-    fillrand(MakeWritableByteSpan(ret));\n-    return ret;\n-}\n-template std::vector<unsigned char> FastRandomContext::randbytes(size_t);\n-template std::vector<std::byte> FastRandomContext::randbytes(size_t);",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0b92cd2ae4a317be4fe0dfd208017a7d05d1eb2a",
      "in_reply_to_id": 1627554476,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a few preparatory commits before this one, please have a look.",
      "created_at": "2024-06-08T12:25:01Z",
      "updated_at": "2024-06-08T12:25:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632035840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632035840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 662,
      "start_side": "LEFT",
      "line": null,
      "original_line": 678,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632036023",
      "pull_request_review_id": 2105840815,
      "id": 1632036023,
      "node_id": "PRRC_kwDOABII585hRuS3",
      "diff_hunk": "@@ -45,13 +45,15 @@\n #include <sys/auxv.h>\n #endif\n \n-[[noreturn]] static void RandFailure()\n+namespace {\n+\n+[[noreturn]] void RandFailure()\n {\n     LogPrintf(\"Failed to read randomness, aborting\\n\");",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c099cd2e3c20fc416e3f7fc1da4798bb8042af1c",
      "in_reply_to_id": 1627807244,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, in an additional commit.",
      "created_at": "2024-06-08T12:26:13Z",
      "updated_at": "2024-06-08T12:26:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632036023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632036023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632043452",
      "pull_request_review_id": 2105847687,
      "id": 1632043452,
      "node_id": "PRRC_kwDOABII585hRwG8",
      "diff_hunk": "@@ -188,31 +182,41 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();",
      "path": "src/random.h",
      "position": 288,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "309f00b59485454117416dcfcae37e2c675069b7",
      "in_reply_to_id": 1626823379,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems I did not. Done now.",
      "created_at": "2024-06-08T13:24:05Z",
      "updated_at": "2024-06-08T13:24:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632043452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632043452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 208,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632043992",
      "pull_request_review_id": 2105848133,
      "id": 1632043992,
      "node_id": "PRRC_kwDOABII585hRwPY",
      "diff_hunk": "@@ -357,6 +357,57 @@ class FastRandomContext : public RandomMixin<FastRandomContext>\n     void fillrand(Span<std::byte> output) noexcept;\n };\n \n+/** xoroshiro128++ PRNG. Extremely fast, not appropriate for cryptographic purposes.\n+ *\n+ * Memory footprint is 128bit, period is 2^128 - 1.\n+ * This class is not thread-safe.\n+ *\n+ * Reference implementation available at https://prng.di.unimi.it/xoroshiro128plusplus.c\n+ * See https://prng.di.unimi.it/\n+ */\n+class XoRoShiRo128PlusPlus\n+{\n+    uint64_t m_s0;\n+    uint64_t m_s1;\n+\n+    [[nodiscard]] constexpr static uint64_t SplitMix64(uint64_t& seedval) noexcept\n+    {\n+        uint64_t z = (seedval += 0x9e3779b97f4a7c15);\n+        z = (z ^ (z >> 30)) * 0xbf58476d1ce4e5b9;\n+        z = (z ^ (z >> 27)) * 0x94d049bb133111eb;\n+        return z ^ (z >> 31);\n+    }\n+\n+public:\n+    using result_type = uint64_t;\n+\n+    constexpr explicit XoRoShiRo128PlusPlus(uint64_t seedval) noexcept\n+        : m_s0(SplitMix64(seedval)), m_s1(SplitMix64(seedval)) {}\n+\n+    // no copy - that is dangerous, we don't want accidentally copy the RNG and then have two streams\n+    // with exactly the same results. If you need a copy, call copy().",
      "path": "src/random.h",
      "position": null,
      "original_position": 32,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6370a51aac06a430ec53f29fe03f5bbd08371b34",
      "in_reply_to_id": 1627736240,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It was added in #26153, with a commit originally taken from #25325. I assume it originally had an explicit `copy()` member function, which was removed before merge. I've added a commit to remove it.",
      "created_at": "2024-06-08T13:28:38Z",
      "updated_at": "2024-06-08T13:28:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632043992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632043992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 447,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632130266",
      "pull_request_review_id": 2105998276,
      "id": 1632130266,
      "node_id": "PRRC_kwDOABII585hSFTa",
      "diff_hunk": "@@ -3475,7 +3475,8 @@ std::vector<CAddress> CConnman::GetAddresses(CNode& requestor, size_t max_addres\n         // nodes to be \"terrible\" (see IsTerrible()) if the timestamps are older than 30 days,\n         // max. 24 hours of \"penalty\" due to cache shouldn't make any meaningful difference\n         // in terms of the freshness of the response.\n-        cache_entry.m_cache_entry_expiration = current_time + std::chrono::hours(21) + GetRandMillis(std::chrono::hours(6));\n+        cache_entry.m_cache_entry_expiration = current_time +\n+            21h + FastRandomContext().randrange<std::chrono::microseconds>(6h);",
      "path": "src/net.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is the change from milliseconds to microseconds intentional?",
      "created_at": "2024-06-08T23:14:46Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632130266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632130266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3479,
      "original_line": 3479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632131052",
      "pull_request_review_id": 2105998276,
      "id": 1632131052,
      "node_id": "PRRC_kwDOABII585hSFfs",
      "diff_hunk": "@@ -50,207 +51,417 @@\n  *   - Strengthen the entropy for 10 ms using repeated SHA512.\n  *   This is run once every minute.\n  *\n- * On first use of the RNG (regardless of what function is called first), all entropy\n- * sources used in the 'slow' seeder are included, but also:\n- * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - Dynamic environment data (performance monitoring, ...)\n- * - Static environment data\n- * - Strengthen the entropy for 100 ms using repeated SHA512.\n+ * - On first use of the RNG (regardless of what function is called first), all entropy\n+ *   sources used in the 'slow' seeder are included, but also:\n+ *   - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Static environment data\n+ *   - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n */\n \n+\n+/* ============================= INITIALIZATION AND ADDING ENTROPY ============================= */\n+\n /**\n- * Generate random data via the internal PRNG.\n+ * Initialize global RNG state and log any CPU features that are used.\n  *\n- * These functions are designed to be fast (sub microsecond), but do not necessarily\n- * meaningfully add entropy to the PRNG state.\n+ * Calling this function is optional. RNG state will be initialized when first\n+ * needed if it is not called.\n+ */\n+void RandomInit();\n+\n+/**\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void GetRandBytes(Span<unsigned char> bytes) noexcept;\n-/** Generate a uniform random integer in the range [0..range). Precondition: range > 0 */\n-uint64_t GetRandInternal(uint64_t nMax) noexcept;\n-/** Generate a uniform random integer of type T in the range [0..nMax)\n- *  nMax defaults to std::numeric_limits<T>::max()\n- *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n- */\n-template<typename T>\n-T GetRand(T nMax=std::numeric_limits<T>::max()) noexcept {\n-    static_assert(std::is_integral<T>(), \"T must be integral\");\n-    static_assert(std::numeric_limits<T>::max() <= std::numeric_limits<uint64_t>::max(), \"GetRand only supports up to uint64_t\");\n-    return T(GetRandInternal(nMax));\n-}\n-/** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n-template <typename D>\n-D GetRandomDuration(typename std::common_type<D>::type max) noexcept\n-// Having the compiler infer the template argument from the function argument\n-// is dangerous, because the desired return value generally has a different\n-// type than the function argument. So std::common_type is used to force the\n-// call site to specify the type of the return value.\n-{\n-    assert(max.count() > 0);\n-    return D{GetRand(max.count())};\n-};\n-constexpr auto GetRandMicros = GetRandomDuration<std::chrono::microseconds>;\n-constexpr auto GetRandMillis = GetRandomDuration<std::chrono::milliseconds>;\n+void RandAddPeriodic() noexcept;\n \n /**\n- * Return a timestamp in the future sampled from an exponential distribution\n- * (https://en.wikipedia.org/wiki/Exponential_distribution). This distribution\n- * is memoryless and should be used for repeated network events (e.g. sending a\n- * certain type of message) to minimize leaking information to observers.\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n  *\n- * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n- * is the average interval between events.\n- * */\n-std::chrono::microseconds GetExponentialRand(std::chrono::microseconds now, std::chrono::seconds average_interval);\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info) noexcept;\n+\n \n-uint256 GetRandHash() noexcept;\n+/* =========================== BASE RANDOMNESS GENERATION FUNCTIONS ===========================\n+ *\n+ * All produced randomness is eventually generated by one of these functions.\n+ */\n \n /**\n- * Gather entropy from various sources, feed it into the internal PRNG, and\n- * generate random data using it.\n+ * Generate random data via the internal PRNG.\n  *\n- * This function will cause failure whenever the OS RNG fails.\n+ * These functions are designed to be fast (sub microsecond), but do not necessarily\n+ * meaningfully add entropy to the PRNG state.\n+ *\n+ * In test mode (see SeedRandomForTest in src/test/util/random.h), the normal PRNG state is\n+ * bypassed, and a deterministic, seeded, PRNG is used instead.\n  *\n  * Thread-safe.\n  */\n-void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n+void GetRandBytes(Span<unsigned char> bytes) noexcept;\n \n /**\n- * Gather entropy from various expensive sources, and feed them to the PRNG state.\n+ * Gather entropy from various sources, feed it into the internal PRNG, and\n+ * generate random data using it.\n+ *\n+ * This function will cause failure whenever the OS RNG fails.\n+ *\n+ * The normal PRNG is never bypassed here, even in test mode.\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic() noexcept;\n+void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n \n-/**\n- * Gathers entropy from the low bits of the time at which events occur. Should\n- * be called with a uint32_t describing the event at the time an event occurs.\n+\n+/* ============================= RANDOM NUMBER GENERATION CLASSES =============================\n  *\n- * Thread-safe.\n+ * In this section, 3 classes are defined:\n+ * - RandomMixin:            a base class that adds functionality to all RNG classes.\n+ * - FastRandomContext:      a cryptographic RNG (seeded through GetRandBytes in its default\n+ *                           constructor).\n+ * - InsecureRandomContext:  a non-cryptographic, very fast, RNG.\n  */\n-void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};\n+\n+/** A concept for C++ std::chrono durations. */\n+template<typename T>\n+concept StdChronoDuration = requires {\n+    []<class Rep, class Period>(std::type_identity<std::chrono::duration<Rep, Period>>){}(\n+        std::type_identity<T>());\n+};\n+\n+/** Given a uniformly random 64-bit value uniform, return an exponentially distributed value with mean 1. */\n+double MakeExponentiallyDistributed(uint64_t uniform) noexcept;\n+\n+/** Mixin class that provides helper randomness functions.\n  *\n- * This class is not thread-safe.\n+ * Intended to be used through CRTP: https://en.cppreference.com/w/cpp/language/crtp.\n+ * An RNG class FunkyRNG would derive publicly from RandomMixin<FunkyRNG>. This permits\n+ * RandomMixin from accessing the derived class's rand64() function, while also allowing\n+ * the derived class to provide more.\n+ *\n+ * The derived class must satisfy the RandomNumberGenerator concept.\n  */\n-class FastRandomContext\n+template<typename T>\n+class RandomMixin\n {\n private:\n-    bool requires_seed;\n-    ChaCha20 rng;\n-\n-    uint64_t bitbuf;\n-    int bitbuf_size;\n+    uint64_t bitbuf{0};\n+    int bitbuf_size{0};\n \n-    void RandomSeed();\n+    /** Access the underlying generator.\n+     *\n+     * This also enforces the RandomNumberGenerator concept. We cannot declare that in the template\n+     * (no template<RandomNumberGenerator T>) because the type isn't fully instantiated yet there.\n+     */\n+    RandomNumberGenerator auto& Impl() noexcept { return static_cast<T&>(*this); }\n \n-    void FillBitBuffer()\n+protected:\n+    constexpr void FlushCache() noexcept\n     {\n-        bitbuf = rand64();\n-        bitbuf_size = 64;\n+        bitbuf = 0;\n+        bitbuf_size = 0;\n     }\n \n public:\n-    explicit FastRandomContext(bool fDeterministic = false) noexcept;\n-\n-    /** Initialize with explicit seed (only for testing) */\n-    explicit FastRandomContext(const uint256& seed) noexcept;\n-\n-    // Do not permit copying a FastRandomContext (move it, or create a new one to get reseeded).\n-    FastRandomContext(const FastRandomContext&) = delete;\n-    FastRandomContext(FastRandomContext&&) = delete;\n-    FastRandomContext& operator=(const FastRandomContext&) = delete;\n+    constexpr RandomMixin() noexcept = default;\n \n-    /** Move a FastRandomContext. If the original one is used again, it will be reseeded. */\n-    FastRandomContext& operator=(FastRandomContext&& from) noexcept;\n-\n-    /** Generate a random 64-bit integer. */\n-    uint64_t rand64() noexcept\n-    {\n-        if (requires_seed) RandomSeed();\n-        std::array<std::byte, 8> buf;\n-        rng.Keystream(buf);\n-        return ReadLE64(UCharCast(buf.data()));\n-    }\n+    // Do not permit copying or moving an RNG.\n+    RandomMixin(const RandomMixin&) = delete;\n+    RandomMixin& operator=(const RandomMixin&) = delete;\n+    RandomMixin(RandomMixin&&) = delete;\n+    RandomMixin& operator=(RandomMixin&&) = delete;\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        Assume(bits <= 64);\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();\n+        uint64_t ret;\n+        if (bits <= bitbuf_size) {\n+            // If there is enough entropy left in bitbuf, return its bottom bits bits.\n+            ret = bitbuf;\n             bitbuf >>= bits;\n             bitbuf_size -= bits;\n+        } else {\n+            // If not, return all of bitbuf, supplemented with the (bits - bitbuf_size) bottom\n+            // bits of a newly generated 64-bit number on top. The remainder of that generated\n+            // number becomes the new bitbuf.\n+            uint64_t gen = Impl().rand64();\n+            ret = (gen << bitbuf_size) | bitbuf;\n+            bitbuf = gen >> (bits - bitbuf_size);\n+            bitbuf_size = 64 + bitbuf_size - bits;\n+        }\n+        // Return the bottom bits bits of ret.\n+        return ret & ((uint64_t{1} << bits) - 1);\n+    }\n+\n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 0) {\n+            return 0;\n+        } else if constexpr (Bits == 64) {\n+            return Impl().rand64();\n+        } else if constexpr (Bits == 1) {\n+            uint64_t ret;\n+            if (bitbuf_size == 0) {\n+                bitbuf = Impl().rand64();\n+                bitbuf_size = 64;\n+            }\n+            ret = bitbuf & 1;\n+            bitbuf >>= 1;\n+            bitbuf_size -= 1;\n             return ret;\n+        } else {\n+            uint64_t ret;\n+            if (Bits <= bitbuf_size) {\n+                ret = bitbuf;\n+                bitbuf >>= Bits;\n+                bitbuf_size -= Bits;\n+            } else {\n+                uint64_t gen = Impl().rand64();\n+                ret = (gen << bitbuf_size) | bitbuf;\n+                bitbuf = gen >> (Bits - bitbuf_size);\n+                bitbuf_size = 64 + bitbuf_size - Bits;\n+            }\n+            constexpr uint64_t MASK = (uint64_t{1} << Bits) - 1;\n+            return ret & MASK;\n         }\n     }\n \n-    /** Generate a random integer in the range [0..range).\n-     * Precondition: range > 0.\n-     */\n-    uint64_t randrange(uint64_t range) noexcept\n+    /** Generate a random integer in the range [0..range), with range > 0. */\n+    template<std::integral I>\n+    I randrange(I range) noexcept\n     {\n-        assert(range);\n-        --range;\n-        int bits = std::bit_width(range);\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max());\n+        Assume(range > 0);\n+        uint64_t maxval = range - 1U;\n+        int bits = std::bit_width(maxval);\n         while (true) {\n-            uint64_t ret = randbits(bits);\n-            if (ret <= range) return ret;\n+            uint64_t ret = Impl().randbits(bits);\n+            if (ret <= maxval) return ret;\n         }\n     }\n \n-    /** Generate random bytes. */\n-    template <typename B = unsigned char>\n-    std::vector<B> randbytes(size_t len);\n+    /** Fill a Span with random bytes. */\n+    void fillrand(Span<std::byte> span) noexcept\n+    {\n+        while (span.size() >= 8) {\n+            uint64_t gen = Impl().rand64();\n+            WriteLE64(UCharCast(span.data()), gen);\n+            span = span.subspan(8);\n+        }\n+        if (span.size() >= 4) {\n+            uint32_t gen = Impl().rand32();\n+            WriteLE32(UCharCast(span.data()), gen);\n+            span = span.subspan(4);\n+        }\n+        while (span.size()) {\n+            span[0] = std::byte(Impl().template randbits<8>());\n+            span = span.subspan(1);\n+        }\n+    }\n+\n+    /** Generate a random integer in its entire (non-negative) range. */\n+    template<std::integral I>\n+    I rand() noexcept\n+    {\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max());\n+        static constexpr auto BITS = std::bit_width(uint64_t(std::numeric_limits<I>::max()));\n+        static_assert(std::numeric_limits<I>::max() == std::numeric_limits<uint64_t>::max() >> (64 - BITS));\n+        return I(Impl().template randbits<BITS>());\n+    }\n \n-    /** Fill a byte Span with random bytes. */\n-    void fillrand(Span<std::byte> output);\n+    /** Generate random bytes. */\n+    template <BasicByte B = unsigned char>\n+    std::vector<B> randbytes(size_t len) noexcept\n+    {\n+        std::vector<B> ret(len);\n+        Impl().fillrand(MakeWritableByteSpan(ret));\n+        return ret;\n+    }\n \n     /** Generate a random 32-bit integer. */\n-    uint32_t rand32() noexcept { return randbits(32); }\n+    uint32_t rand32() noexcept { return Impl().template randbits<32>(); }\n \n     /** generate a random uint256. */\n-    uint256 rand256() noexcept;\n+    uint256 rand256() noexcept\n+    {\n+        uint256 ret;\n+        Impl().fillrand(MakeWritableByteSpan(ret));\n+        return ret;\n+    }\n \n     /** Generate a random boolean. */\n-    bool randbool() noexcept { return randbits(1); }\n+    bool randbool() noexcept { return Impl().template randbits<1>(); }\n \n     /** Return the time point advanced by a uniform random duration. */\n     template <typename Tp>\n-    Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n+    Tp rand_uniform_delay(const Tp& time, typename Tp::duration range) noexcept\n     {\n-        return time + rand_uniform_duration<Tp>(range);\n+        return time + Impl().template rand_uniform_duration<Tp>(range);\n     }\n \n     /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n-    template <typename Chrono>\n+    template <typename Chrono> requires StdChronoDuration<typename Chrono::duration>\n     typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n     {\n         using Dur = typename Chrono::duration;\n-        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{Impl().randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{Impl().randrange(-range.count())} :\n                                    /* interval [0..0] */ Dur{0};\n     };\n \n+    /** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n+    template <StdChronoDuration Dur>\n+    Dur randrange(typename std::common_type_t<Dur> range) noexcept\n+    // Having the compiler infer the template argument from the function argument\n+    // is dangerous, because the desired return value generally has a different\n+    // type than the function argument. So std::common_type is used to force the\n+    // call site to specify the type of the return value.\n+    {\n+        return Dur{Impl().randrange(range.count())};\n+    }\n+\n+    /**\n+     * Return a duration sampled from an exponential distribution\n+     * (https://en.wikipedia.org/wiki/Exponential_distribution). Successive events\n+     * whose intervals are distributed according to this form a memoryless Poisson\n+     * process. This should be used for repeated network events (e.g. sending a\n+     * certain type of message) to minimize leaking information to observers.\n+     *\n+     * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n+     * is the average interval between events.\n+     * */\n+    std::chrono::microseconds rand_expo_duration(std::chrono::microseconds mean) noexcept",
      "path": "src/random.h",
      "position": null,
      "original_position": 445,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Why not rand_exp_duration instead? It is one character shorter and `exp` reads more clearly to me as exponential than `expo`?",
      "created_at": "2024-06-08T23:22:40Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632131052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632131052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632132631",
      "pull_request_review_id": 2105998276,
      "id": 1632132631,
      "node_id": "PRRC_kwDOABII585hSF4X",
      "diff_hunk": "@@ -345,64 +348,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n }\n #endif\n \n-/** Get 32 bytes of system entropy. */\n-void GetOSRand(unsigned char *ent32)",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As far as I can tell GetOSRand is unchanged in this PR. Why move below the `class RNGState` declaration? ",
      "created_at": "2024-06-08T23:38:44Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632132631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632132631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632133792",
      "pull_request_review_id": 2105998276,
      "id": 1632133792,
      "node_id": "PRRC_kwDOABII585hSGKg",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This confused me because MixExtract is a deterministic function based on hasher, m_counter, and m_state. Unless I am mistaken the non-determinism comes from the calling function determining on the value of ret. Why not address strengthen ret value in the calling function rather than here?",
      "created_at": "2024-06-08T23:49:32Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632133792",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632133792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632133956",
      "pull_request_review_id": 2105998276,
      "id": 1632133956,
      "node_id": "PRRC_kwDOABII585hSGNE",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     * If allow_deterministic is true, and MakeDeterministic has been called before, output\r\n     * from the deterministic PRNG.\r\n```",
      "created_at": "2024-06-08T23:51:28Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632133956",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632133956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632134959",
      "pull_request_review_id": 2105998276,
      "id": 1632134959,
      "node_id": "PRRC_kwDOABII585hSGcv",
      "diff_hunk": "@@ -549,16 +514,16 @@ static void SeedSlow(CSHA512& hasher, RNGState& rng) noexcept\n }\n \n /** Extract entropy from rng, strengthen it, and feed it into hasher. */\n-static void SeedStrengthen(CSHA512& hasher, RNGState& rng, SteadyClock::duration dur) noexcept\n+void SeedStrengthen(CSHA512& hasher, RNGState& rng, SteadyClock::duration dur) noexcept\n {\n     // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n     unsigned char strengthen_seed[32];\n-    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n+    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false, /*allow_deterministic=*/true);",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 314,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If I am understanding this logic correctly, if `m_deterministic_prng.has_value()` is true then MixExtract in SeedStrengthen will never use m_counter or m_state to do MixExtract? \r\n\r\nStrengthen is going to make the output of this call non-deterministic anyways, so what value does `allow_deterministic=true` as an argument provide in MixExtract? Shouldn't this be false?\r\n\r\nIs the intention to make Strengthen deterministic at some later point?",
      "created_at": "2024-06-08T23:59:53Z",
      "updated_at": "2024-06-09T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632134959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632134959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 521,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632135242",
      "pull_request_review_id": 2105998276,
      "id": 1632135242,
      "node_id": "PRRC_kwDOABII585hSGhK",
      "diff_hunk": "@@ -479,6 +438,13 @@ class RNGState {\n             hasher.Finalize(buf);\n             // Store the last 32 bytes of the hash output as new RNG state.\n             memcpy(m_state, buf + 32, 32);\n+            // Handle requests for deterministic randomness.\n+            if (allow_deterministic && m_deterministic_prng.has_value()) {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 263,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does `allow_deterministic=false` and `m_deterministic_prng.has_value()=true` imply that something has gone wrong? Should we log an error or take some action or are there cases where this is expected behavior?",
      "created_at": "2024-06-09T00:02:49Z",
      "updated_at": "2024-06-09T00:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632135242",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632135242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632256491",
      "pull_request_review_id": 2106167263,
      "id": 1632256491,
      "node_id": "PRRC_kwDOABII585hSkHr",
      "diff_hunk": "@@ -345,64 +348,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n }\n #endif\n \n-/** Get 32 bytes of system entropy. */\n-void GetOSRand(unsigned char *ent32)",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632132631,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is done in commit e5658e7a40f03b0b07b1f83f22a9d834bc8fd5c6 which only improves the code organization. Specifically here the reason for moving is to have all the non-exposed functions in `random.cpp` within one anonymous `namespace` at the start of the file, and all public one below.",
      "created_at": "2024-06-09T12:24:02Z",
      "updated_at": "2024-06-09T12:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632256491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632256491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632268413",
      "pull_request_review_id": 2106177477,
      "id": 1632268413,
      "node_id": "PRRC_kwDOABII585hSnB9",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632133792,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see how this is confusing; `MixExtract` is indeed a deterministic function, and arguably, all of `RNGState` is deterministic when considered in isolation.\r\n\r\nThe \"determinism\" referred here is the introduction of a new deterministic mode for the entire RNG (module-wide, including seeding/initializations/hardware, ...). In order to do that, a separate RNG is embedded within `RNGState` which is only ever explicitly initialized, and if it is, `MixExtract` can be asked to draw its output from there instead of from its normal SHA512-based mechanism. The entropy fed to `MixExtract` is still processed normally in this case because for some purposes (cryptographic keys) I think we always want normal high-quality randomness for belt-and-suspenders reasons. Finally, all of this is done inside `MixExtract` instead of elsewhere so that the same lock can be used for everything (`RNGState::m_mutex`), meaning the performance penalty of introducing this mechanism is limited to the `if (allow_deterministic && m_deterministic_prng.has_value())` conditional, which involves no atomics or locks.\r\n\r\nSo really I think we want to call the RNG-wide name for this feature \"deterministic mode\" (e.g. at `ProcRand`), but maybe using the same name at the level of `RNGState` is confusing? Would it help to call it call it something else?",
      "created_at": "2024-06-09T12:37:04Z",
      "updated_at": "2024-06-09T13:14:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632268413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632268413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632290445",
      "pull_request_review_id": 2106208213,
      "id": 1632290445,
      "node_id": "PRRC_kwDOABII585hSsaN",
      "diff_hunk": "@@ -479,6 +438,13 @@ class RNGState {\n             hasher.Finalize(buf);\n             // Store the last 32 bytes of the hash output as new RNG state.\n             memcpy(m_state, buf + 32, 32);\n+            // Handle requests for deterministic randomness.\n+            if (allow_deterministic && m_deterministic_prng.has_value()) {",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 263,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632135242,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm. The intent was that this is supported behavior; `GetStrongRandBytes()` never sets `allow_deterministic`, and thus in deterministic mode would still return from the normal fully-seeded RNG (because I don't want to introduce anything in the code path of `GetStrongRandBytes` that could return anything but high quality randomness). This means that if `GetStrongRandBytes` is called anywhere in test code that enables deterministic randomness, the condition you state occurs.\r\n\r\nIt's probably possible to instead make the behavior to abort if `allow_deterministic=false` and `m_deterministic_prng.has_value()=true`, but it would involve going over all cases where tests use `GetStrongRandBytes` (directly, or indirectly). I don't think I want to do that in this PR.",
      "created_at": "2024-06-09T13:06:51Z",
      "updated_at": "2024-06-09T13:07:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632290445",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632290445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632292752",
      "pull_request_review_id": 2106211999,
      "id": 1632292752,
      "node_id": "PRRC_kwDOABII585hSs-Q",
      "diff_hunk": "@@ -3475,7 +3475,8 @@ std::vector<CAddress> CConnman::GetAddresses(CNode& requestor, size_t max_addres\n         // nodes to be \"terrible\" (see IsTerrible()) if the timestamps are older than 30 days,\n         // max. 24 hours of \"penalty\" due to cache shouldn't make any meaningful difference\n         // in terms of the freshness of the response.\n-        cache_entry.m_cache_entry_expiration = current_time + std::chrono::hours(21) + GetRandMillis(std::chrono::hours(6));\n+        cache_entry.m_cache_entry_expiration = current_time +\n+            21h + FastRandomContext().randrange<std::chrono::microseconds>(6h);",
      "path": "src/net.cpp",
      "position": 41,
      "original_position": 41,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632130266,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, because `m_cache_entry_expiration` is expressed in microseconds anyway; no need to reduce accuracy. I've moved the behavior change to a separate commit.",
      "created_at": "2024-06-09T13:09:17Z",
      "updated_at": "2024-06-09T13:09:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632292752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632292752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3479,
      "original_line": 3479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293002",
      "pull_request_review_id": 2106212231,
      "id": 1632293002,
      "node_id": "PRRC_kwDOABII585hStCK",
      "diff_hunk": "@@ -50,207 +51,417 @@\n  *   - Strengthen the entropy for 10 ms using repeated SHA512.\n  *   This is run once every minute.\n  *\n- * On first use of the RNG (regardless of what function is called first), all entropy\n- * sources used in the 'slow' seeder are included, but also:\n- * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - Dynamic environment data (performance monitoring, ...)\n- * - Static environment data\n- * - Strengthen the entropy for 100 ms using repeated SHA512.\n+ * - On first use of the RNG (regardless of what function is called first), all entropy\n+ *   sources used in the 'slow' seeder are included, but also:\n+ *   - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Static environment data\n+ *   - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n */\n \n+\n+/* ============================= INITIALIZATION AND ADDING ENTROPY ============================= */\n+\n /**\n- * Generate random data via the internal PRNG.\n+ * Initialize global RNG state and log any CPU features that are used.\n  *\n- * These functions are designed to be fast (sub microsecond), but do not necessarily\n- * meaningfully add entropy to the PRNG state.\n+ * Calling this function is optional. RNG state will be initialized when first\n+ * needed if it is not called.\n+ */\n+void RandomInit();\n+\n+/**\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void GetRandBytes(Span<unsigned char> bytes) noexcept;\n-/** Generate a uniform random integer in the range [0..range). Precondition: range > 0 */\n-uint64_t GetRandInternal(uint64_t nMax) noexcept;\n-/** Generate a uniform random integer of type T in the range [0..nMax)\n- *  nMax defaults to std::numeric_limits<T>::max()\n- *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n- */\n-template<typename T>\n-T GetRand(T nMax=std::numeric_limits<T>::max()) noexcept {\n-    static_assert(std::is_integral<T>(), \"T must be integral\");\n-    static_assert(std::numeric_limits<T>::max() <= std::numeric_limits<uint64_t>::max(), \"GetRand only supports up to uint64_t\");\n-    return T(GetRandInternal(nMax));\n-}\n-/** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n-template <typename D>\n-D GetRandomDuration(typename std::common_type<D>::type max) noexcept\n-// Having the compiler infer the template argument from the function argument\n-// is dangerous, because the desired return value generally has a different\n-// type than the function argument. So std::common_type is used to force the\n-// call site to specify the type of the return value.\n-{\n-    assert(max.count() > 0);\n-    return D{GetRand(max.count())};\n-};\n-constexpr auto GetRandMicros = GetRandomDuration<std::chrono::microseconds>;\n-constexpr auto GetRandMillis = GetRandomDuration<std::chrono::milliseconds>;\n+void RandAddPeriodic() noexcept;\n \n /**\n- * Return a timestamp in the future sampled from an exponential distribution\n- * (https://en.wikipedia.org/wiki/Exponential_distribution). This distribution\n- * is memoryless and should be used for repeated network events (e.g. sending a\n- * certain type of message) to minimize leaking information to observers.\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n  *\n- * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n- * is the average interval between events.\n- * */\n-std::chrono::microseconds GetExponentialRand(std::chrono::microseconds now, std::chrono::seconds average_interval);\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info) noexcept;\n+\n \n-uint256 GetRandHash() noexcept;\n+/* =========================== BASE RANDOMNESS GENERATION FUNCTIONS ===========================\n+ *\n+ * All produced randomness is eventually generated by one of these functions.\n+ */\n \n /**\n- * Gather entropy from various sources, feed it into the internal PRNG, and\n- * generate random data using it.\n+ * Generate random data via the internal PRNG.\n  *\n- * This function will cause failure whenever the OS RNG fails.\n+ * These functions are designed to be fast (sub microsecond), but do not necessarily\n+ * meaningfully add entropy to the PRNG state.\n+ *\n+ * In test mode (see SeedRandomForTest in src/test/util/random.h), the normal PRNG state is\n+ * bypassed, and a deterministic, seeded, PRNG is used instead.\n  *\n  * Thread-safe.\n  */\n-void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n+void GetRandBytes(Span<unsigned char> bytes) noexcept;\n \n /**\n- * Gather entropy from various expensive sources, and feed them to the PRNG state.\n+ * Gather entropy from various sources, feed it into the internal PRNG, and\n+ * generate random data using it.\n+ *\n+ * This function will cause failure whenever the OS RNG fails.\n+ *\n+ * The normal PRNG is never bypassed here, even in test mode.\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic() noexcept;\n+void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n \n-/**\n- * Gathers entropy from the low bits of the time at which events occur. Should\n- * be called with a uint32_t describing the event at the time an event occurs.\n+\n+/* ============================= RANDOM NUMBER GENERATION CLASSES =============================\n  *\n- * Thread-safe.\n+ * In this section, 3 classes are defined:\n+ * - RandomMixin:            a base class that adds functionality to all RNG classes.\n+ * - FastRandomContext:      a cryptographic RNG (seeded through GetRandBytes in its default\n+ *                           constructor).\n+ * - InsecureRandomContext:  a non-cryptographic, very fast, RNG.\n  */\n-void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;\n+};\n+\n+/** A concept for C++ std::chrono durations. */\n+template<typename T>\n+concept StdChronoDuration = requires {\n+    []<class Rep, class Period>(std::type_identity<std::chrono::duration<Rep, Period>>){}(\n+        std::type_identity<T>());\n+};\n+\n+/** Given a uniformly random 64-bit value uniform, return an exponentially distributed value with mean 1. */\n+double MakeExponentiallyDistributed(uint64_t uniform) noexcept;\n+\n+/** Mixin class that provides helper randomness functions.\n  *\n- * This class is not thread-safe.\n+ * Intended to be used through CRTP: https://en.cppreference.com/w/cpp/language/crtp.\n+ * An RNG class FunkyRNG would derive publicly from RandomMixin<FunkyRNG>. This permits\n+ * RandomMixin from accessing the derived class's rand64() function, while also allowing\n+ * the derived class to provide more.\n+ *\n+ * The derived class must satisfy the RandomNumberGenerator concept.\n  */\n-class FastRandomContext\n+template<typename T>\n+class RandomMixin\n {\n private:\n-    bool requires_seed;\n-    ChaCha20 rng;\n-\n-    uint64_t bitbuf;\n-    int bitbuf_size;\n+    uint64_t bitbuf{0};\n+    int bitbuf_size{0};\n \n-    void RandomSeed();\n+    /** Access the underlying generator.\n+     *\n+     * This also enforces the RandomNumberGenerator concept. We cannot declare that in the template\n+     * (no template<RandomNumberGenerator T>) because the type isn't fully instantiated yet there.\n+     */\n+    RandomNumberGenerator auto& Impl() noexcept { return static_cast<T&>(*this); }\n \n-    void FillBitBuffer()\n+protected:\n+    constexpr void FlushCache() noexcept\n     {\n-        bitbuf = rand64();\n-        bitbuf_size = 64;\n+        bitbuf = 0;\n+        bitbuf_size = 0;\n     }\n \n public:\n-    explicit FastRandomContext(bool fDeterministic = false) noexcept;\n-\n-    /** Initialize with explicit seed (only for testing) */\n-    explicit FastRandomContext(const uint256& seed) noexcept;\n-\n-    // Do not permit copying a FastRandomContext (move it, or create a new one to get reseeded).\n-    FastRandomContext(const FastRandomContext&) = delete;\n-    FastRandomContext(FastRandomContext&&) = delete;\n-    FastRandomContext& operator=(const FastRandomContext&) = delete;\n+    constexpr RandomMixin() noexcept = default;\n \n-    /** Move a FastRandomContext. If the original one is used again, it will be reseeded. */\n-    FastRandomContext& operator=(FastRandomContext&& from) noexcept;\n-\n-    /** Generate a random 64-bit integer. */\n-    uint64_t rand64() noexcept\n-    {\n-        if (requires_seed) RandomSeed();\n-        std::array<std::byte, 8> buf;\n-        rng.Keystream(buf);\n-        return ReadLE64(UCharCast(buf.data()));\n-    }\n+    // Do not permit copying or moving an RNG.\n+    RandomMixin(const RandomMixin&) = delete;\n+    RandomMixin& operator=(const RandomMixin&) = delete;\n+    RandomMixin(RandomMixin&&) = delete;\n+    RandomMixin& operator=(RandomMixin&&) = delete;\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        Assume(bits <= 64);\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();\n+        uint64_t ret;\n+        if (bits <= bitbuf_size) {\n+            // If there is enough entropy left in bitbuf, return its bottom bits bits.\n+            ret = bitbuf;\n             bitbuf >>= bits;\n             bitbuf_size -= bits;\n+        } else {\n+            // If not, return all of bitbuf, supplemented with the (bits - bitbuf_size) bottom\n+            // bits of a newly generated 64-bit number on top. The remainder of that generated\n+            // number becomes the new bitbuf.\n+            uint64_t gen = Impl().rand64();\n+            ret = (gen << bitbuf_size) | bitbuf;\n+            bitbuf = gen >> (bits - bitbuf_size);\n+            bitbuf_size = 64 + bitbuf_size - bits;\n+        }\n+        // Return the bottom bits bits of ret.\n+        return ret & ((uint64_t{1} << bits) - 1);\n+    }\n+\n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 0) {\n+            return 0;\n+        } else if constexpr (Bits == 64) {\n+            return Impl().rand64();\n+        } else if constexpr (Bits == 1) {\n+            uint64_t ret;\n+            if (bitbuf_size == 0) {\n+                bitbuf = Impl().rand64();\n+                bitbuf_size = 64;\n+            }\n+            ret = bitbuf & 1;\n+            bitbuf >>= 1;\n+            bitbuf_size -= 1;\n             return ret;\n+        } else {\n+            uint64_t ret;\n+            if (Bits <= bitbuf_size) {\n+                ret = bitbuf;\n+                bitbuf >>= Bits;\n+                bitbuf_size -= Bits;\n+            } else {\n+                uint64_t gen = Impl().rand64();\n+                ret = (gen << bitbuf_size) | bitbuf;\n+                bitbuf = gen >> (Bits - bitbuf_size);\n+                bitbuf_size = 64 + bitbuf_size - Bits;\n+            }\n+            constexpr uint64_t MASK = (uint64_t{1} << Bits) - 1;\n+            return ret & MASK;\n         }\n     }\n \n-    /** Generate a random integer in the range [0..range).\n-     * Precondition: range > 0.\n-     */\n-    uint64_t randrange(uint64_t range) noexcept\n+    /** Generate a random integer in the range [0..range), with range > 0. */\n+    template<std::integral I>\n+    I randrange(I range) noexcept\n     {\n-        assert(range);\n-        --range;\n-        int bits = std::bit_width(range);\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max());\n+        Assume(range > 0);\n+        uint64_t maxval = range - 1U;\n+        int bits = std::bit_width(maxval);\n         while (true) {\n-            uint64_t ret = randbits(bits);\n-            if (ret <= range) return ret;\n+            uint64_t ret = Impl().randbits(bits);\n+            if (ret <= maxval) return ret;\n         }\n     }\n \n-    /** Generate random bytes. */\n-    template <typename B = unsigned char>\n-    std::vector<B> randbytes(size_t len);\n+    /** Fill a Span with random bytes. */\n+    void fillrand(Span<std::byte> span) noexcept\n+    {\n+        while (span.size() >= 8) {\n+            uint64_t gen = Impl().rand64();\n+            WriteLE64(UCharCast(span.data()), gen);\n+            span = span.subspan(8);\n+        }\n+        if (span.size() >= 4) {\n+            uint32_t gen = Impl().rand32();\n+            WriteLE32(UCharCast(span.data()), gen);\n+            span = span.subspan(4);\n+        }\n+        while (span.size()) {\n+            span[0] = std::byte(Impl().template randbits<8>());\n+            span = span.subspan(1);\n+        }\n+    }\n+\n+    /** Generate a random integer in its entire (non-negative) range. */\n+    template<std::integral I>\n+    I rand() noexcept\n+    {\n+        static_assert(std::numeric_limits<I>::max() <= std::numeric_limits<uint64_t>::max());\n+        static constexpr auto BITS = std::bit_width(uint64_t(std::numeric_limits<I>::max()));\n+        static_assert(std::numeric_limits<I>::max() == std::numeric_limits<uint64_t>::max() >> (64 - BITS));\n+        return I(Impl().template randbits<BITS>());\n+    }\n \n-    /** Fill a byte Span with random bytes. */\n-    void fillrand(Span<std::byte> output);\n+    /** Generate random bytes. */\n+    template <BasicByte B = unsigned char>\n+    std::vector<B> randbytes(size_t len) noexcept\n+    {\n+        std::vector<B> ret(len);\n+        Impl().fillrand(MakeWritableByteSpan(ret));\n+        return ret;\n+    }\n \n     /** Generate a random 32-bit integer. */\n-    uint32_t rand32() noexcept { return randbits(32); }\n+    uint32_t rand32() noexcept { return Impl().template randbits<32>(); }\n \n     /** generate a random uint256. */\n-    uint256 rand256() noexcept;\n+    uint256 rand256() noexcept\n+    {\n+        uint256 ret;\n+        Impl().fillrand(MakeWritableByteSpan(ret));\n+        return ret;\n+    }\n \n     /** Generate a random boolean. */\n-    bool randbool() noexcept { return randbits(1); }\n+    bool randbool() noexcept { return Impl().template randbits<1>(); }\n \n     /** Return the time point advanced by a uniform random duration. */\n     template <typename Tp>\n-    Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n+    Tp rand_uniform_delay(const Tp& time, typename Tp::duration range) noexcept\n     {\n-        return time + rand_uniform_duration<Tp>(range);\n+        return time + Impl().template rand_uniform_duration<Tp>(range);\n     }\n \n     /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n-    template <typename Chrono>\n+    template <typename Chrono> requires StdChronoDuration<typename Chrono::duration>\n     typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n     {\n         using Dur = typename Chrono::duration;\n-        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{Impl().randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{Impl().randrange(-range.count())} :\n                                    /* interval [0..0] */ Dur{0};\n     };\n \n+    /** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n+    template <StdChronoDuration Dur>\n+    Dur randrange(typename std::common_type_t<Dur> range) noexcept\n+    // Having the compiler infer the template argument from the function argument\n+    // is dangerous, because the desired return value generally has a different\n+    // type than the function argument. So std::common_type is used to force the\n+    // call site to specify the type of the return value.\n+    {\n+        return Dur{Impl().randrange(range.count())};\n+    }\n+\n+    /**\n+     * Return a duration sampled from an exponential distribution\n+     * (https://en.wikipedia.org/wiki/Exponential_distribution). Successive events\n+     * whose intervals are distributed according to this form a memoryless Poisson\n+     * process. This should be used for repeated network events (e.g. sending a\n+     * certain type of message) to minimize leaking information to observers.\n+     *\n+     * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n+     * is the average interval between events.\n+     * */\n+    std::chrono::microseconds rand_expo_duration(std::chrono::microseconds mean) noexcept",
      "path": "src/random.h",
      "position": null,
      "original_position": 445,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632131052,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think I was inspired by Python's `random.expovariate`, but I agree \"exp\" is much more naturally associated with \"exponential\". Done.",
      "created_at": "2024-06-09T13:10:37Z",
      "updated_at": "2024-06-09T13:10:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632293002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 360,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293085",
      "pull_request_review_id": 2106212304,
      "id": 1632293085,
      "node_id": "PRRC_kwDOABII585hStDd",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632133956,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done (I left the \"instead\" in place).",
      "created_at": "2024-06-09T13:10:58Z",
      "updated_at": "2024-06-09T13:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632293085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293173",
      "pull_request_review_id": 2106212390,
      "id": 1632293173,
      "node_id": "PRRC_kwDOABII585hStE1",
      "diff_hunk": "@@ -549,16 +514,16 @@ static void SeedSlow(CSHA512& hasher, RNGState& rng) noexcept\n }\n \n /** Extract entropy from rng, strengthen it, and feed it into hasher. */\n-static void SeedStrengthen(CSHA512& hasher, RNGState& rng, SteadyClock::duration dur) noexcept\n+void SeedStrengthen(CSHA512& hasher, RNGState& rng, SteadyClock::duration dur) noexcept\n {\n     // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n     unsigned char strengthen_seed[32];\n-    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n+    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false, /*allow_deterministic=*/true);",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 314,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632134959,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice catch. Done, and added a comment to explain.",
      "created_at": "2024-06-09T13:11:19Z",
      "updated_at": "2024-06-09T13:11:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632293173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632293173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 521,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632311931",
      "pull_request_review_id": 2106241335,
      "id": 1632311931,
      "node_id": "PRRC_kwDOABII585hSxp7",
      "diff_hunk": "@@ -345,64 +348,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n }\n #endif\n \n-/** Get 32 bytes of system entropy. */\n-void GetOSRand(unsigned char *ent32)",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632132631,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That makes sense. This improved organization is worth it.",
      "created_at": "2024-06-09T14:24:06Z",
      "updated_at": "2024-06-09T14:24:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632311931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632311931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632314639",
      "pull_request_review_id": 2106243849,
      "id": 1632314639,
      "node_id": "PRRC_kwDOABII585hSyUP",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632133792,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1. If I understand, you don't want to replace `MixExtract` entirely when the deterministic test RNG is used, because when `MixExtract` to still run and add/mix entropy in case someone decides to generate a keying material while the deterministic test RNG is on. This was what I was missing.\r\n\r\n2. I like the name deterministic mode because it makes it more clear this is a RNG wide change.\r\n\r\n3. Thought I had after waking up this morning was to change this to `bool fail_on_deterministic_mode`. Thus if someone had the deterministic test RNG activated and then tried to generate a key it would throw an error because `fail_on_deterministic_mode=true`. That said, I'm not sure this works with the current approach since if someone calls SeedStrengthen with the deterministic test RNG activated it would fail and it is reasonable to call SeedStrengthen in tests/fuzzing. **Edit:** You make a similar point in the next comment. I don't think my proposed change here is worth making in this PR.",
      "created_at": "2024-06-09T14:38:36Z",
      "updated_at": "2024-06-09T14:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632314639",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632314639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632321305",
      "pull_request_review_id": 2106277195,
      "id": 1632321305,
      "node_id": "PRRC_kwDOABII585hSz8Z",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632133792,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about having an `always_use_real_rng` bool instead, with meaning `!allow_deterministic`. That means the \"deterministic\" terminology would be more clearly referring to the mode (is the deterministic PRNG enabled), but not to the produced numbers.",
      "created_at": "2024-06-09T15:10:32Z",
      "updated_at": "2024-06-09T15:10:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1632321305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1632321305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1640954007",
      "pull_request_review_id": 2120293332,
      "id": 1640954007,
      "node_id": "PRRC_kwDOABII585hzviX",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It appeared to be necessary, IIRC.\r\n\r\nYes, it is required. However, adding the annotation will only silence the compiler warning.\r\n\r\n`FastRandomContext` is not thread safe, so the lock will actually have to be taken.\r\n\r\nPutting an `EXCLUSIVE_LOCKS_REQUIRED` only into the c++ file and leaving it out from the header file will not work, because the compiler has no way to see the annotation outside of the module. For example, it can not be seen from `init.cpp`.",
      "created_at": "2024-06-15T09:32:15Z",
      "updated_at": "2024-06-15T09:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1640954007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1640954007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641145353",
      "pull_request_review_id": 2120427316,
      "id": 1641145353,
      "node_id": "PRRC_kwDOABII585h0eQJ",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, apparently these annotations are not nearly as smart as I assumed they were!",
      "created_at": "2024-06-15T12:52:14Z",
      "updated_at": "2024-06-15T12:52:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1641145353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641145353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641289196",
      "pull_request_review_id": 2120605682,
      "id": 1641289196,
      "node_id": "PRRC_kwDOABII585h1BXs",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Lol, I even spent a few hours looking directly at this and trying to figure out if this could be a threading problem.\r\n\r\n🤦\r\n\r\nI suppose I trusted the annotations so much I didn't even notice that the code didn't take the lock. That's embarrassing!\r\n\r\nLooks like [this is our issue](https://github.com/llvm/llvm-project/pull/67520).\r\n\r\nI'll give that patched branch a shot next week and see if it turns up anything else in our codebase. Will chime in upstream with a +1 as well (assuming it works).",
      "created_at": "2024-06-15T16:38:09Z",
      "updated_at": "2024-06-15T16:38:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1641289196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1641289196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648006777",
      "pull_request_review_id": 2131144923,
      "id": 1648006777,
      "node_id": "PRRC_kwDOABII585iOpZ5",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I used the WIP above to check for other issues like this in our codebase. It only turned up a few false-positives because of duplicate annotations in declarations + definitions. Thankfully there were no cases of them _only_ in definitions. PR'd here: #30316.",
      "created_at": "2024-06-20T18:54:29Z",
      "updated_at": "2024-06-20T18:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1648006777",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648006777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1650969447",
      "pull_request_review_id": 2135697619,
      "id": 1650969447,
      "node_id": "PRRC_kwDOABII585iZ8tn",
      "diff_hunk": "@@ -508,7 +508,7 @@ class PeerManagerImpl final : public PeerManager\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_recent_confirmed_transactions_mutex, !m_most_recent_block_mutex, g_msgproc_mutex);\n \n     /** Implement PeerManager */\n-    void StartScheduledTasks(CScheduler& scheduler) override;\n+    void StartScheduledTasks(CScheduler& scheduler) override EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "8504bfc5dc8e1ff906f0a2b845dce8c37528b67b",
      "in_reply_to_id": 1617765084,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have addressed this by making `StartScheduledTasks` not use `m_rng`, but just grab a new `FastRandomContext` instead; performance doesn't matter for this function.",
      "created_at": "2024-06-24T12:42:56Z",
      "updated_at": "2024-06-24T12:42:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1650969447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1650969447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1651551124",
      "pull_request_review_id": 2136647508,
      "id": 1651551124,
      "node_id": "PRRC_kwDOABII585icKuU",
      "diff_hunk": "@@ -345,64 +348,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n }\n #endif\n \n-/** Get 32 bytes of system entropy. */\n-void GetOSRand(unsigned char *ent32)",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632132631,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Although `GetOSRand` is declared in `random.h`, it isn't actually used by anything outside of `random.cpp`, so it could remain inside the anonymous `namespace`.",
      "created_at": "2024-06-24T20:02:19Z",
      "updated_at": "2024-06-24T20:25:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1651551124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1651551124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1651558600",
      "pull_request_review_id": 2136647508,
      "id": 1651558600,
      "node_id": "PRRC_kwDOABII585icMjI",
      "diff_hunk": "@@ -445,6 +430,33 @@ void Shuffle(I first, I last, R&& rng)\n     }\n }\n \n+/** Generate a uniform random integer of type T in the range [0..nMax)\n+ *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n+ */\n+template<typename T>\n+T GetRand(T nMax) noexcept {",
      "path": "src/random.h",
      "position": null,
      "original_position": 83,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "cf04e6c90e1902be28a85ef181b8f1ee4b89e11d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In cf04e6c90e1902be28a85ef181b8f1ee4b89e11d \"random: make GetRand() support entire range (incl. max)\"\r\n\r\nSince this function is only used in a few places, would it make sense to just inline it where it is used?",
      "created_at": "2024-06-24T20:10:23Z",
      "updated_at": "2024-06-24T20:25:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1651558600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1651558600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1654844892",
      "pull_request_review_id": 2141300770,
      "id": 1654844892,
      "node_id": "PRRC_kwDOABII585iou3c",
      "diff_hunk": "@@ -11,6 +11,7 @@\n #include <boost/test/unit_test.hpp>\n \n #include <algorithm>\n+#include <bitset>",
      "path": "src/test/random_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0807afa5c431f34f70dcbdb58de65480216ca800",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 0807afa5c431f34f70dcbdb58de65480216ca800: Unused include?",
      "created_at": "2024-06-26T13:30:17Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1654844892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1654844892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656563853",
      "pull_request_review_id": 2141300770,
      "id": 1656563853,
      "node_id": "PRRC_kwDOABII585ivSiN",
      "diff_hunk": "@@ -221,6 +221,42 @@ class RandomMixin\n         return ret & ((uint64_t{1} << bits) - 1);\n     }\n \n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 0) {\n+            return 0;\n+        } else if constexpr (Bits == 64) {\n+            return Impl().rand64();\n+        } else if constexpr (Bits == 1) {\n+            uint64_t ret;\n+            if (bitbuf_size == 0) {\n+                bitbuf = Impl().rand64();\n+                bitbuf_size = 64;\n+            }\n+            ret = bitbuf & 1;\n+            bitbuf >>= 1;\n+            bitbuf_size -= 1;\n+            return ret;",
      "path": "src/random.h",
      "position": null,
      "original_position": 22,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e4eb03715d5944e999a399538919089862d8c7c6",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in e4eb03715d5944e999a399538919089862d8c7c6: I don't understand this branch. To me it looks identical to the fallback branch, just with `Bits==1` manually hardcoded. But it is known at compile time, so the compiler can do it for you, and you can just remove this branch, no? (Same for `Bits==0`)\r\n\r\nI tested it locally and didn't see a speedup when including this branch. (Maybe a trivial speedup when *removing* it, but this is likely noise)\r\n\r\nIf there is a benefit that I am missing, it would be good to mention it in the commit message or in a benchmark, or otherwise.",
      "created_at": "2024-06-27T06:58:32Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1656563853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656563853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 233,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656579259",
      "pull_request_review_id": 2141300770,
      "id": 1656579259,
      "node_id": "PRRC_kwDOABII585ivWS7",
      "diff_hunk": "@@ -221,6 +221,42 @@ class RandomMixin\n         return ret & ((uint64_t{1} << bits) - 1);\n     }\n \n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 0) {\n+            return 0;\n+        } else if constexpr (Bits == 64) {\n+            return Impl().rand64();\n+        } else if constexpr (Bits == 1) {\n+            uint64_t ret;\n+            if (bitbuf_size == 0) {\n+                bitbuf = Impl().rand64();\n+                bitbuf_size = 64;\n+            }\n+            ret = bitbuf & 1;\n+            bitbuf >>= 1;\n+            bitbuf_size -= 1;\n+            return ret;",
      "path": "src/random.h",
      "position": null,
      "original_position": 22,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e4eb03715d5944e999a399538919089862d8c7c6",
      "in_reply_to_id": 1656563853,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In fact, I don't understand this whole function. I'd presume the performance bottleneck is always `Impl().rand64()` and whether a few bit operations or shifts use an operator known at compile time or not shouldn't matter, no?\r\n\r\nLocally I could only find a difference when using `InsecureRandomContext`, but that doesn't use the `randbits<>()` method outside of test, or at all? So I wonder if the function is useful at all.\r\n\r\nThough, maybe I just did the wrong benchmarks.",
      "created_at": "2024-06-27T07:10:47Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1656579259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656579259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 233,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656587979",
      "pull_request_review_id": 2141300770,
      "id": 1656587979,
      "node_id": "PRRC_kwDOABII585ivYbL",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;",
      "path": "src/random.h",
      "position": 193,
      "original_position": 19,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "7f24615249a53ed4ac000013f86634c2b81569f2",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/7f24615249a53ed4ac000013f86634c2b81569f2: Missing include for \r\n\r\n```cpp\r\n#include <concepts>\r\n#include <type_traits>",
      "created_at": "2024-06-27T07:18:08Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1656587979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656587979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656925084",
      "pull_request_review_id": 2141300770,
      "id": 1656925084,
      "node_id": "PRRC_kwDOABII585iwquc",
      "diff_hunk": "@@ -13,21 +13,31 @@\n \n FastRandomContext g_insecure_rand_ctx;\n \n-/** Return the unsigned from the environment var if available, otherwise 0 */\n-static uint256 GetUintFromEnv(const std::string& env_name)\n-{\n-    const char* num = std::getenv(env_name.c_str());\n-    if (!num) return {};\n-    return uint256S(num);\n-}\n+extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n-void Seed(FastRandomContext& ctx)\n+void SeedRandomForTest(SeedRand seedtype)\n {\n-    // Should be enough to get the seed once for the process\n-    static uint256 seed{};\n     static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-    if (seed.IsNull()) seed = GetUintFromEnv(RANDOM_CTX_SEED);\n-    if (seed.IsNull()) seed = GetRandHash();\n-    LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());\n-    ctx = FastRandomContext(seed);\n+\n+    // Do this once, on the first call, regardless of seedtype, because once\n+    // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n+    // no longer truly random. It should be enough to get the seed once for the\n+    // process.\n+    static const uint256 seed = []() {\n+        // If RANDOM_CTX_SEED is set, use that as seed.\n+        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n+        if (num) return uint256S(num);\n+        // Otherwise use a (truly) random value.\n+        return GetRandHash();\n+    }();\n+\n+    uint256 use_seed;\n+    if (seedtype == SeedRand::SEED) {\n+        LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6d7f91db5069ddbbaa48c7e3f842ec68f0f717bb",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 6d7f91db5069ddbbaa48c7e3f842ec68f0f717bb:\r\n\r\nI see you want to preserve the previous behavior, but I think it makes sense to log this even when `ZEROS` are passed.\r\n\r\nThis makes it clear that any env-provided seed is ignored for this sub-test.\r\n\r\nAlso, the diff would be smaller by one line :sweat_smile: ",
      "created_at": "2024-06-27T10:51:09Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1656925084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656925084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656931808",
      "pull_request_review_id": 2141300770,
      "id": 1656931808,
      "node_id": "PRRC_kwDOABII585iwsXg",
      "diff_hunk": "@@ -13,21 +13,31 @@\n \n FastRandomContext g_insecure_rand_ctx;\n \n-/** Return the unsigned from the environment var if available, otherwise 0 */\n-static uint256 GetUintFromEnv(const std::string& env_name)\n-{\n-    const char* num = std::getenv(env_name.c_str());\n-    if (!num) return {};\n-    return uint256S(num);\n-}\n+extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n-void Seed(FastRandomContext& ctx)\n+void SeedRandomForTest(SeedRand seedtype)\n {\n-    // Should be enough to get the seed once for the process\n-    static uint256 seed{};\n     static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-    if (seed.IsNull()) seed = GetUintFromEnv(RANDOM_CTX_SEED);\n-    if (seed.IsNull()) seed = GetRandHash();\n-    LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());\n-    ctx = FastRandomContext(seed);\n+\n+    // Do this once, on the first call, regardless of seedtype, because once\n+    // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n+    // no longer truly random. It should be enough to get the seed once for the\n+    // process.\n+    static const uint256 seed = []() {\n+        // If RANDOM_CTX_SEED is set, use that as seed.\n+        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n+        if (num) return uint256S(num);\n+        // Otherwise use a (truly) random value.\n+        return GetRandHash();\n+    }();\n+\n+    uint256 use_seed;\n+    if (seedtype == SeedRand::SEED) {\n+        LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6d7f91db5069ddbbaa48c7e3f842ec68f0f717bb",
      "in_reply_to_id": 1656925084,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Something like:\r\n\r\n```cpp\r\nstatic const uint256 ctx_seed = ...;\r\nconst uint256& seed{seedtype == SeedRand::SEED ? ctx_seed : uint256::ZERO};\r\nLogPrintf(... seed);\r\nMakeRandDeterministicDANGEROUS(seed);",
      "created_at": "2024-06-27T10:57:04Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1656931808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1656931808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657159709",
      "pull_request_review_id": 2141300770,
      "id": 1657159709,
      "node_id": "PRRC_kwDOABII585ixkAd",
      "diff_hunk": "@@ -26,7 +26,7 @@\n  * The following (classes of) functions interact with that state by mixing in new\n  * entropy, and optionally extracting random output from it:\n  *\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\n+ * - GetRandBytes, GetRandHash, as well as construction of FastRandomContext objects,",
      "path": "src/random.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "818fb4aa837c748cf241f20efc81e1b2df0594e1",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 818fb4aa837c748cf241f20efc81e1b2df0594e1: Missing GetRand and GetRandDur",
      "created_at": "2024-06-27T13:38:56Z",
      "updated_at": "2024-06-27T13:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657159709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657159709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657242662",
      "pull_request_review_id": 2145571724,
      "id": 1657242662,
      "node_id": "PRRC_kwDOABII585ix4Qm",
      "diff_hunk": "@@ -37,7 +37,7 @@ BOOST_AUTO_TEST_SUITE(cuckoocache_tests);\n  */",
      "path": "src/test/cuckoocache_tests.cpp",
      "position": 6,
      "original_position": 1,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "unrelated nit: (one line above) `insecure_GetRandHash` was replaced years ago by `InsecureRand256`. Can ideally be fixed up in a follow-up.",
      "created_at": "2024-06-27T14:26:36Z",
      "updated_at": "2024-06-27T14:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657242662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657242662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657537328",
      "pull_request_review_id": 2146071613,
      "id": 1657537328,
      "node_id": "PRRC_kwDOABII585izAMw",
      "diff_hunk": "@@ -457,11 +406,21 @@ class RNGState {\n         m_events_hasher.Write(events_hash, 32);\n     }\n \n+    /** Make the output of MixExtract (if allow_deterministic) deterministic, with specified seed. */\n+    void MakeDeterministic(const uint256& seed) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex)\n+    {\n+        LOCK(m_mutex);\n+        m_deterministic_prng.emplace(MakeByteSpan(seed));\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n+     *\n+     * If allow_deterministic is true, and MakeDeterministic has been called before, output\n+     * from the deterministic PRNG is output instead.",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632133792,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-06-27T17:32:31Z",
      "updated_at": "2024-06-27T17:32:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657537328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657537328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 420,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 421,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539130",
      "pull_request_review_id": 2146075075,
      "id": 1657539130,
      "node_id": "PRRC_kwDOABII585izAo6",
      "diff_hunk": "@@ -345,64 +348,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n }\n #endif\n \n-/** Get 32 bytes of system entropy. */\n-void GetOSRand(unsigned char *ent32)",
      "path": "src/random.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "462cca90c4ce25eb8e103971dd635facdb042310",
      "in_reply_to_id": 1632132631,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moved `GetOSRand` to the anonymous namespace (meaning it can stay in its relative location in random.cpp, reducing the diff size), and dropped it from random.h.",
      "created_at": "2024-06-27T17:33:15Z",
      "updated_at": "2024-06-27T17:33:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657539130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539323",
      "pull_request_review_id": 2146075621,
      "id": 1657539323,
      "node_id": "PRRC_kwDOABII585izAr7",
      "diff_hunk": "@@ -445,6 +430,33 @@ void Shuffle(I first, I last, R&& rng)\n     }\n }\n \n+/** Generate a uniform random integer of type T in the range [0..nMax)\n+ *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n+ */\n+template<typename T>\n+T GetRand(T nMax) noexcept {",
      "path": "src/random.h",
      "position": null,
      "original_position": 83,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "cf04e6c90e1902be28a85ef181b8f1ee4b89e11d",
      "in_reply_to_id": 1651558600,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, in a new commit.",
      "created_at": "2024-06-27T17:33:23Z",
      "updated_at": "2024-06-27T17:33:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657539323",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539323"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539584",
      "pull_request_review_id": 2146076106,
      "id": 1657539584,
      "node_id": "PRRC_kwDOABII585izAwA",
      "diff_hunk": "@@ -11,6 +11,7 @@\n #include <boost/test/unit_test.hpp>\n \n #include <algorithm>\n+#include <bitset>",
      "path": "src/test/random_tests.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "0807afa5c431f34f70dcbdb58de65480216ca800",
      "in_reply_to_id": 1654844892,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-06-27T17:33:33Z",
      "updated_at": "2024-06-27T17:33:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657539584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657539584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543406",
      "pull_request_review_id": 2146082053,
      "id": 1657543406,
      "node_id": "PRRC_kwDOABII585izBru",
      "diff_hunk": "@@ -221,6 +221,42 @@ class RandomMixin\n         return ret & ((uint64_t{1} << bits) - 1);\n     }\n \n+    /** Same as above, but with compile-time fixed bits count. */\n+    template<int Bits>\n+    uint64_t randbits() noexcept\n+    {\n+        static_assert(Bits >= 0 && Bits <= 64);\n+        if constexpr (Bits == 0) {\n+            return 0;\n+        } else if constexpr (Bits == 64) {\n+            return Impl().rand64();\n+        } else if constexpr (Bits == 1) {\n+            uint64_t ret;\n+            if (bitbuf_size == 0) {\n+                bitbuf = Impl().rand64();\n+                bitbuf_size = 64;\n+            }\n+            ret = bitbuf & 1;\n+            bitbuf >>= 1;\n+            bitbuf_size -= 1;\n+            return ret;",
      "path": "src/random.h",
      "position": null,
      "original_position": 22,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e4eb03715d5944e999a399538919089862d8c7c6",
      "in_reply_to_id": 1656563853,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I don't expect this to matter for `FastRandomContext`, where the production of randomness is expensive enough that it doesn't matter. But for `InsecureRandomContext`, I want to make sure the compiler creates a suitably specialized instance of `randbits` for use in `randbool` for example. While not done in this PR, the original reason for starting to work on this PR is because I want a fast `InsecureRandomContext` for use in #30286.\r\n\r\nThat said, you're right that all the different manual specializations in this function are overkill, and should be obviously creatable by the compiler. I've dropped them all except `BITS == 64` (which needs special handling anyway).",
      "created_at": "2024-06-27T17:36:45Z",
      "updated_at": "2024-06-27T17:36:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657543406",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": 233,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543513",
      "pull_request_review_id": 2146082236,
      "id": 1657543513,
      "node_id": "PRRC_kwDOABII585izBtZ",
      "diff_hunk": "@@ -135,50 +135,68 @@ void RandAddPeriodic() noexcept;\n  */\n void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {\n+    // A random number generator must provide rand64().\n+    { rng.rand64() } noexcept -> std::same_as<uint64_t>;\n+    // A random number generator must provide randfill(Span<std::byte>).\n+    { rng.fillrand(s) } noexcept;\n+    // A random number generator must derive from RandomMixin, which adds other rand* functions.\n+    requires std::derived_from<std::remove_reference_t<T>, RandomMixin<std::remove_reference_t<T>>>;",
      "path": "src/random.h",
      "position": 193,
      "original_position": 19,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "7f24615249a53ed4ac000013f86634c2b81569f2",
      "in_reply_to_id": 1656587979,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-06-27T17:36:52Z",
      "updated_at": "2024-06-27T17:36:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657543513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543755",
      "pull_request_review_id": 2146082602,
      "id": 1657543755,
      "node_id": "PRRC_kwDOABII585izBxL",
      "diff_hunk": "@@ -13,21 +13,31 @@\n \n FastRandomContext g_insecure_rand_ctx;\n \n-/** Return the unsigned from the environment var if available, otherwise 0 */\n-static uint256 GetUintFromEnv(const std::string& env_name)\n-{\n-    const char* num = std::getenv(env_name.c_str());\n-    if (!num) return {};\n-    return uint256S(num);\n-}\n+extern void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept;\n \n-void Seed(FastRandomContext& ctx)\n+void SeedRandomForTest(SeedRand seedtype)\n {\n-    // Should be enough to get the seed once for the process\n-    static uint256 seed{};\n     static const std::string RANDOM_CTX_SEED{\"RANDOM_CTX_SEED\"};\n-    if (seed.IsNull()) seed = GetUintFromEnv(RANDOM_CTX_SEED);\n-    if (seed.IsNull()) seed = GetRandHash();\n-    LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());\n-    ctx = FastRandomContext(seed);\n+\n+    // Do this once, on the first call, regardless of seedtype, because once\n+    // MakeRandDeterministicDANGEROUS is called, the output of GetRandHash is\n+    // no longer truly random. It should be enough to get the seed once for the\n+    // process.\n+    static const uint256 seed = []() {\n+        // If RANDOM_CTX_SEED is set, use that as seed.\n+        const char* num = std::getenv(RANDOM_CTX_SEED.c_str());\n+        if (num) return uint256S(num);\n+        // Otherwise use a (truly) random value.\n+        return GetRandHash();\n+    }();\n+\n+    uint256 use_seed;\n+    if (seedtype == SeedRand::SEED) {\n+        LogPrintf(\"%s: Setting random seed for current tests to %s=%s\\n\", __func__, RANDOM_CTX_SEED, seed.GetHex());",
      "path": "src/test/util/random.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "6d7f91db5069ddbbaa48c7e3f842ec68f0f717bb",
      "in_reply_to_id": 1656925084,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, done.",
      "created_at": "2024-06-27T17:37:03Z",
      "updated_at": "2024-06-27T17:37:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657543755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657543755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657544090",
      "pull_request_review_id": 2146083177,
      "id": 1657544090,
      "node_id": "PRRC_kwDOABII585izB2a",
      "diff_hunk": "@@ -37,7 +37,7 @@ BOOST_AUTO_TEST_SUITE(cuckoocache_tests);\n  */",
      "path": "src/test/cuckoocache_tests.cpp",
      "position": 6,
      "original_position": 1,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "f0e5681e97450b696de26ff21e61f961370a9946",
      "in_reply_to_id": 1657242662,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed, in the \"cleanup\" commit.",
      "created_at": "2024-06-27T17:37:24Z",
      "updated_at": "2024-06-27T17:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657544090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657544090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657544231",
      "pull_request_review_id": 2146083441,
      "id": 1657544231,
      "node_id": "PRRC_kwDOABII585izB4n",
      "diff_hunk": "@@ -26,7 +26,7 @@\n  * The following (classes of) functions interact with that state by mixing in new\n  * entropy, and optionally extracting random output from it:\n  *\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\n+ * - GetRandBytes, GetRandHash, as well as construction of FastRandomContext objects,",
      "path": "src/random.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "818fb4aa837c748cf241f20efc81e1b2df0594e1",
      "in_reply_to_id": 1657159709,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-06-27T17:37:33Z",
      "updated_at": "2024-06-27T17:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657544231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657544231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657554069",
      "pull_request_review_id": 2146099019,
      "id": 1657554069,
      "node_id": "PRRC_kwDOABII585izESV",
      "diff_hunk": "@@ -26,7 +26,7 @@\n  * The following (classes of) functions interact with that state by mixing in new\n  * entropy, and optionally extracting random output from it:\n  *\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\n+ * - GetRandBytes, GetRandHash, as well as construction of FastRandomContext objects,",
      "path": "src/random.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "818fb4aa837c748cf241f20efc81e1b2df0594e1",
      "in_reply_to_id": 1657159709,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Forgot to address this?",
      "created_at": "2024-06-27T17:46:16Z",
      "updated_at": "2024-06-27T17:46:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657554069",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657554069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657554962",
      "pull_request_review_id": 2146100484,
      "id": 1657554962,
      "node_id": "PRRC_kwDOABII585izEgS",
      "diff_hunk": "@@ -323,29 +325,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n     memory_cleanse(buffer, sizeof(buffer));\n }\n \n-#ifndef WIN32\n-/** Fallback: get 32 bytes of system entropy from /dev/urandom. The most",
      "path": "src/random.cpp",
      "position": 159,
      "original_position": 146,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "326c76909fd7add514d320bc76a576af31d40dc0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 326c76909fd7add514d320bc76a576af31d40dc0: Why move this?",
      "created_at": "2024-06-27T17:47:05Z",
      "updated_at": "2024-06-27T17:47:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657554962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657554962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 326,
      "original_line": 326,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657558910",
      "pull_request_review_id": 2146106688,
      "id": 1657558910,
      "node_id": "PRRC_kwDOABII585izFd-",
      "diff_hunk": "@@ -323,29 +325,6 @@ static void Strengthen(const unsigned char (&seed)[32], SteadyClock::duration du\n     memory_cleanse(buffer, sizeof(buffer));\n }\n \n-#ifndef WIN32\n-/** Fallback: get 32 bytes of system entropy from /dev/urandom. The most",
      "path": "src/random.cpp",
      "position": 159,
      "original_position": 146,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "326c76909fd7add514d320bc76a576af31d40dc0",
      "in_reply_to_id": 1657554962,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-06-27T17:50:31Z",
      "updated_at": "2024-06-27T17:50:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657558910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657558910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 326,
      "original_line": 326,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657560540",
      "pull_request_review_id": 2146109507,
      "id": 1657560540,
      "node_id": "PRRC_kwDOABII585izF3c",
      "diff_hunk": "@@ -63,6 +63,10 @@\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG is put into a special deterministic mode, in which the output of\n+ * all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG that is initialized once and then never reseeded.",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c8da96061a777a4206e05f7cde0f5de6f3ce3e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in c8da96061a777a4206e05f7cde0f5de6f3ce3e8e: Are you sure about \"never reseeded\"?\r\n\r\nIt should be possible to call `SeedRandomForTest` twice, to toggle the seed, or reseed with the existing seed, no?",
      "created_at": "2024-06-27T17:52:11Z",
      "updated_at": "2024-06-27T17:52:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657560540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657560540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657560878",
      "pull_request_review_id": 2146110082,
      "id": 1657560878,
      "node_id": "PRRC_kwDOABII585izF8u",
      "diff_hunk": "@@ -26,7 +26,7 @@\n  * The following (classes of) functions interact with that state by mixing in new\n  * entropy, and optionally extracting random output from it:\n  *\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\n+ * - GetRandBytes, GetRandHash, as well as construction of FastRandomContext objects,",
      "path": "src/random.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "818fb4aa837c748cf241f20efc81e1b2df0594e1",
      "in_reply_to_id": 1657159709,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Forgot to address this?\r\n\r\nI don't think so?\r\n\r\n```diff\r\ndiff --git a/src/random.h b/src/random.h\r\nindex ab4e049817..fd05e7e575 100644\r\n--- a/src/random.h\r\n+++ b/src/random.h\r\n@@ -28,8 +28,8 @@\r\n  * The following (classes of) functions interact with that state by mixing in new\r\n  * entropy, and optionally extracting random output from it:\r\n  *\r\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\r\n- *   perform 'fast' seeding, consisting of mixing in:\r\n+ * - GetRandBytes, GetRandHash, GetRand, GetRandDur, as well as construction of FastRandomContext\r\n+ *   objects, perform 'fast' seeding, consisting of mixing in:\r\n  *   - A stack pointer (indirectly committing to calling thread and call stack)\r\n```",
      "created_at": "2024-06-27T17:52:31Z",
      "updated_at": "2024-06-27T17:52:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657560878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657560878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657561740",
      "pull_request_review_id": 2146111474,
      "id": 1657561740,
      "node_id": "PRRC_kwDOABII585izGKM",
      "diff_hunk": "@@ -26,7 +26,7 @@\n  * The following (classes of) functions interact with that state by mixing in new\n  * entropy, and optionally extracting random output from it:\n  *\n- * - The GetRand*() class of functions, as well as construction of FastRandomContext objects,\n+ * - GetRandBytes, GetRandHash, as well as construction of FastRandomContext objects,",
      "path": "src/random.h",
      "position": null,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "818fb4aa837c748cf241f20efc81e1b2df0594e1",
      "in_reply_to_id": 1657159709,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, I looked at the previous force push :sweat_smile: ",
      "created_at": "2024-06-27T17:53:15Z",
      "updated_at": "2024-06-27T17:53:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657561740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657561740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657563307",
      "pull_request_review_id": 2146114165,
      "id": 1657563307,
      "node_id": "PRRC_kwDOABII585izGir",
      "diff_hunk": "@@ -63,6 +63,10 @@\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG is put into a special deterministic mode, in which the output of\n+ * all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG that is initialized once and then never reseeded.",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c8da96061a777a4206e05f7cde0f5de6f3ce3e8e",
      "in_reply_to_id": 1657560540,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Eh, I see how this is confusing.\r\n\r\nIt can obviously be reinitialized (resetting it), but it doesn't ever gather real entropy, and is unaffected by `RandAddPeriod()` or `RandAddEvent()`.\r\n\r\nFeel like proposing some language that would be clearer?",
      "created_at": "2024-06-27T17:54:45Z",
      "updated_at": "2024-06-27T17:55:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657563307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657563307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657596728",
      "pull_request_review_id": 2146170218,
      "id": 1657596728,
      "node_id": "PRRC_kwDOABII585izOs4",
      "diff_hunk": "@@ -63,6 +63,10 @@\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG is put into a special deterministic mode, in which the output of\n+ * all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG that is initialized once and then never reseeded.",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c8da96061a777a4206e05f7cde0f5de6f3ce3e8e",
      "in_reply_to_id": 1657560540,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe \"never strengthened\", or \"never fed further bytes\", or \"never fed entropy\", instead of \"never reseeded\"? But just a nit. Anything is fine here.",
      "created_at": "2024-06-27T18:16:24Z",
      "updated_at": "2024-06-27T18:23:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657596728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657596728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657625195",
      "pull_request_review_id": 2146204728,
      "id": 1657625195,
      "node_id": "PRRC_kwDOABII585izVpr",
      "diff_hunk": "@@ -63,6 +63,10 @@\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG is put into a special deterministic mode, in which the output of\n+ * all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG that is initialized once and then never reseeded.",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "c8da96061a777a4206e05f7cde0f5de6f3ce3e8e",
      "in_reply_to_id": 1657560540,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```diff\r\ndiff --git a/src/random.h b/src/random.h\r\nindex e67e295b5f..f447216776 100644\r\n--- a/src/random.h\r\n+++ b/src/random.h\r\n@@ -64,9 +64,11 @@\r\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\r\n  * become the new RNG state.\r\n  *\r\n- * During tests, the RNG is put into a special deterministic mode, in which the output of\r\n- * all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\r\n- * output of a deterministic RNG that is initialized once and then never reseeded.\r\n+ * During tests, the RNG can be put into a special deterministic mode, in which the output\r\n+ * of all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\r\n+ * output of a deterministic RNG. This deterministic RNG does not gather entropy, and is\r\n+ * unaffected by RandAddPeriodic() or RandAddEvent(). It produces pseudorandom data that\r\n+ * only depends on the seed it was initialized with, possibly until it is reinitialized.\r\n */\r\n```",
      "created_at": "2024-06-27T18:25:09Z",
      "updated_at": "2024-06-27T18:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1657625195",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657625195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658344049",
      "pull_request_review_id": 2147359609,
      "id": 1658344049,
      "node_id": "PRRC_kwDOABII585i2FJx",
      "diff_hunk": "@@ -261,7 +468,7 @@ class FastRandomContext\n  * debug mode detects and panics on. This is a known issue, see\n  * https://stackoverflow.com/questions/22915325/avoiding-self-assignment-in-stdshuffle",
      "path": "src/random.h",
      "position": 572,
      "original_position": 572,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "unrelated nit: The debug mode part has been fixed in https://gcc.gnu.org/bugzilla/show_bug.cgi?id=85828#c3 / https://github.com/gcc-mirror/gcc/commit/c2fb0a1a2e7a0fb15cf3cf876f621902ccd273f0 for all version supported by Bitcoin Core, so this part can be removed.\r\n\r\nAbout whether the stdlib is faster or uses more entropy, I haven't benchmarked it, but wanted to note that it generates two ints with one 64-bit rng call and uses https://github.com/lemire/FastShuffleExperiments",
      "created_at": "2024-06-28T08:24:19Z",
      "updated_at": "2024-06-28T08:24:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658344049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658344049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658346921",
      "pull_request_review_id": 2147363981,
      "id": 1658346921,
      "node_id": "PRRC_kwDOABII585i2F2p",
      "diff_hunk": "@@ -50,207 +53,411 @@\n  *   - Strengthen the entropy for 10 ms using repeated SHA512.\n  *   This is run once every minute.\n  *\n- * On first use of the RNG (regardless of what function is called first), all entropy\n- * sources used in the 'slow' seeder are included, but also:\n- * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - Dynamic environment data (performance monitoring, ...)\n- * - Static environment data\n- * - Strengthen the entropy for 100 ms using repeated SHA512.\n+ * - On first use of the RNG (regardless of what function is called first), all entropy\n+ *   sources used in the 'slow' seeder are included, but also:\n+ *   - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Static environment data\n+ *   - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG can be put into a special deterministic mode, in which the output\n+ * of all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG. This deterministic RNG does not gather entropy, and is\n+ * unaffected by RandAddPeriodic() or RandAddEvent(). It produces pseudorandom data that\n+ * only depends on the seed it was initialized with, possibly until it is reinitialized.\n */\n \n+\n+/* ============================= INITIALIZATION AND ADDING ENTROPY ============================= */\n+\n /**\n- * Generate random data via the internal PRNG.\n+ * Initialize global RNG state and log any CPU features that are used.\n  *\n- * These functions are designed to be fast (sub microsecond), but do not necessarily\n- * meaningfully add entropy to the PRNG state.\n+ * Calling this function is optional. RNG state will be initialized when first\n+ * needed if it is not called.\n+ */\n+void RandomInit();\n+\n+/**\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void GetRandBytes(Span<unsigned char> bytes) noexcept;\n-/** Generate a uniform random integer in the range [0..range). Precondition: range > 0 */\n-uint64_t GetRandInternal(uint64_t nMax) noexcept;\n-/** Generate a uniform random integer of type T in the range [0..nMax)\n- *  nMax defaults to std::numeric_limits<T>::max()\n- *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n- */\n-template<typename T>\n-T GetRand(T nMax=std::numeric_limits<T>::max()) noexcept {\n-    static_assert(std::is_integral<T>(), \"T must be integral\");\n-    static_assert(std::numeric_limits<T>::max() <= std::numeric_limits<uint64_t>::max(), \"GetRand only supports up to uint64_t\");\n-    return T(GetRandInternal(nMax));\n-}\n-/** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n-template <typename D>\n-D GetRandomDuration(typename std::common_type<D>::type max) noexcept\n-// Having the compiler infer the template argument from the function argument\n-// is dangerous, because the desired return value generally has a different\n-// type than the function argument. So std::common_type is used to force the\n-// call site to specify the type of the return value.\n-{\n-    assert(max.count() > 0);\n-    return D{GetRand(max.count())};\n-};\n-constexpr auto GetRandMicros = GetRandomDuration<std::chrono::microseconds>;\n-constexpr auto GetRandMillis = GetRandomDuration<std::chrono::milliseconds>;\n+void RandAddPeriodic() noexcept;\n \n /**\n- * Return a timestamp in the future sampled from an exponential distribution\n- * (https://en.wikipedia.org/wiki/Exponential_distribution). This distribution\n- * is memoryless and should be used for repeated network events (e.g. sending a\n- * certain type of message) to minimize leaking information to observers.\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n  *\n- * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n- * is the average interval between events.\n- * */\n-std::chrono::microseconds GetExponentialRand(std::chrono::microseconds now, std::chrono::seconds average_interval);\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info) noexcept;\n+\n \n-uint256 GetRandHash() noexcept;\n+/* =========================== BASE RANDOMNESS GENERATION FUNCTIONS ===========================\n+ *\n+ * All produced randomness is eventually generated by one of these functions.\n+ */\n \n /**\n- * Gather entropy from various sources, feed it into the internal PRNG, and\n- * generate random data using it.\n+ * Generate random data via the internal PRNG.\n  *\n- * This function will cause failure whenever the OS RNG fails.\n+ * These functions are designed to be fast (sub microsecond), but do not necessarily\n+ * meaningfully add entropy to the PRNG state.\n+ *\n+ * In test mode (see SeedRandomForTest in src/test/util/random.h), the normal PRNG state is\n+ * bypassed, and a deterministic, seeded, PRNG is used instead.\n  *\n  * Thread-safe.\n  */\n-void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n+void GetRandBytes(Span<unsigned char> bytes) noexcept;\n \n /**\n- * Gather entropy from various expensive sources, and feed them to the PRNG state.\n+ * Gather entropy from various sources, feed it into the internal PRNG, and\n+ * generate random data using it.\n+ *\n+ * This function will cause failure whenever the OS RNG fails.\n+ *\n+ * The normal PRNG is never bypassed here, even in test mode.\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic() noexcept;\n+void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n \n-/**\n- * Gathers entropy from the low bits of the time at which events occur. Should\n- * be called with a uint32_t describing the event at the time an event occurs.\n+\n+/* ============================= RANDOM NUMBER GENERATION CLASSES =============================\n  *\n- * Thread-safe.\n+ * In this section, 3 classes are defined:\n+ * - RandomMixin:            a base class that adds functionality to all RNG classes.\n+ * - FastRandomContext:      a cryptographic RNG (seeded through GetRandBytes in its default\n+ *                           constructor).\n+ * - InsecureRandomContext:  a non-cryptographic, very fast, RNG.\n  */\n-void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {",
      "path": "src/random.h",
      "position": 189,
      "original_position": 189,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could also require `concept std::uniform_random_bit_generator` inside of `RandomNumberGenerator`?",
      "created_at": "2024-06-28T08:26:40Z",
      "updated_at": "2024-06-28T08:26:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658346921",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658346921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 147,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658360003",
      "pull_request_review_id": 2147384765,
      "id": 1658360003,
      "node_id": "PRRC_kwDOABII585i2JDD",
      "diff_hunk": "@@ -274,29 +481,26 @@ void Shuffle(I first, I last, R&& rng)\n     }\n }\n \n+/** Generate a uniform random integer of type T in the range [0..nMax)\n+ *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n+ */\n+template<typename T>\n+T GetRand(T nMax) noexcept {",
      "path": "src/random.h",
      "position": null,
      "original_position": 587,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: This is used in 5 places, in 3 of them \"incorrectly\". (BIP 330 doesn't disallow a uint64_t max as salt, same for `CSipHasher` in `PriorityComputer`). So you could replace them with a call to `rand`. The remaining two could just be inlined with a call to randrange.",
      "created_at": "2024-06-28T08:37:56Z",
      "updated_at": "2024-06-28T09:08:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658360003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658360003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658362617",
      "pull_request_review_id": 2147384765,
      "id": 1658362617,
      "node_id": "PRRC_kwDOABII585i2Jr5",
      "diff_hunk": "@@ -461,29 +502,18 @@ T GetRand(T nMax) noexcept {\n     return T(FastRandomContext().randrange(nMax));\n }\n \n+/* ============================= MISCELLANEOUS TEST-ONLY FUNCTIONS ============================= */\n+\n /* Number of random bytes returned by GetOSRand.\n  * When changing this constant make sure to change all call sites, and make\n  * sure that the underlying OS APIs for all platforms support the number.\n  * (many cap out at 256 bytes).\n  */\n static const int NUM_OS_RANDOM_BYTES = 32;",
      "path": "src/random.h",
      "position": null,
      "original_position": 154,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "b128d1d0ab48d2c4e535ff0e90225d6aae626817",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in b128d1d0ab48d2c4e535ff0e90225d6aae626817: When making `GetOSRand` private, you should make this one private as well?",
      "created_at": "2024-06-28T08:40:09Z",
      "updated_at": "2024-06-28T09:08:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658362617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658362617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 512,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658389327",
      "pull_request_review_id": 2147384765,
      "id": 1658389327,
      "node_id": "PRRC_kwDOABII585i2QNP",
      "diff_hunk": "@@ -267,6 +265,20 @@ class RandomMixin\n         }\n     }\n \n+    /** Fill a Span with random bytes. */\n+    void fillrand(Span<std::byte> span) noexcept\n+    {\n+        while (span.size() >= 8) {\n+            uint64_t gen = Impl().rand64();\n+            WriteLE64(UCharCast(span.data()), gen);\n+            span = span.subspan(8);\n+        }\n+        while (span.size()) {",
      "path": "src/random.h",
      "position": 372,
      "original_position": 21,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "89fa561ab9cbc165eb2ab260a72b85fa4389e89c",
      "in_reply_to_id": 1617743561,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I benchmarked this suggested change and it was an improvement for my CPU.",
      "created_at": "2024-06-28T09:02:18Z",
      "updated_at": "2024-06-28T09:08:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658389327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658389327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 279,
      "original_line": 279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658724899",
      "pull_request_review_id": 2147983581,
      "id": 1658724899,
      "node_id": "PRRC_kwDOABII585i3iIj",
      "diff_hunk": "@@ -261,7 +468,7 @@ class FastRandomContext\n  * debug mode detects and panics on. This is a known issue, see\n  * https://stackoverflow.com/questions/22915325/avoiding-self-assignment-in-stdshuffle",
      "path": "src/random.h",
      "position": 572,
      "original_position": 572,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": 1658344049,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That looks very interesting. Going to leave this for a follow-up, as it'll need some benchmarking.",
      "created_at": "2024-06-28T13:12:35Z",
      "updated_at": "2024-06-28T13:12:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658724899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658724899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658725627",
      "pull_request_review_id": 2147984903,
      "id": 1658725627,
      "node_id": "PRRC_kwDOABII585i3iT7",
      "diff_hunk": "@@ -50,207 +53,411 @@\n  *   - Strengthen the entropy for 10 ms using repeated SHA512.\n  *   This is run once every minute.\n  *\n- * On first use of the RNG (regardless of what function is called first), all entropy\n- * sources used in the 'slow' seeder are included, but also:\n- * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - Dynamic environment data (performance monitoring, ...)\n- * - Static environment data\n- * - Strengthen the entropy for 100 ms using repeated SHA512.\n+ * - On first use of the RNG (regardless of what function is called first), all entropy\n+ *   sources used in the 'slow' seeder are included, but also:\n+ *   - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Static environment data\n+ *   - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n  * (up to) the first 32 bytes of H are produced as output, while the last 32 bytes\n  * become the new RNG state.\n+ *\n+ * During tests, the RNG can be put into a special deterministic mode, in which the output\n+ * of all RNG functions, with the exception of GetStrongRandBytes(), is replaced with the\n+ * output of a deterministic RNG. This deterministic RNG does not gather entropy, and is\n+ * unaffected by RandAddPeriodic() or RandAddEvent(). It produces pseudorandom data that\n+ * only depends on the seed it was initialized with, possibly until it is reinitialized.\n */\n \n+\n+/* ============================= INITIALIZATION AND ADDING ENTROPY ============================= */\n+\n /**\n- * Generate random data via the internal PRNG.\n+ * Initialize global RNG state and log any CPU features that are used.\n  *\n- * These functions are designed to be fast (sub microsecond), but do not necessarily\n- * meaningfully add entropy to the PRNG state.\n+ * Calling this function is optional. RNG state will be initialized when first\n+ * needed if it is not called.\n+ */\n+void RandomInit();\n+\n+/**\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void GetRandBytes(Span<unsigned char> bytes) noexcept;\n-/** Generate a uniform random integer in the range [0..range). Precondition: range > 0 */\n-uint64_t GetRandInternal(uint64_t nMax) noexcept;\n-/** Generate a uniform random integer of type T in the range [0..nMax)\n- *  nMax defaults to std::numeric_limits<T>::max()\n- *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n- */\n-template<typename T>\n-T GetRand(T nMax=std::numeric_limits<T>::max()) noexcept {\n-    static_assert(std::is_integral<T>(), \"T must be integral\");\n-    static_assert(std::numeric_limits<T>::max() <= std::numeric_limits<uint64_t>::max(), \"GetRand only supports up to uint64_t\");\n-    return T(GetRandInternal(nMax));\n-}\n-/** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n-template <typename D>\n-D GetRandomDuration(typename std::common_type<D>::type max) noexcept\n-// Having the compiler infer the template argument from the function argument\n-// is dangerous, because the desired return value generally has a different\n-// type than the function argument. So std::common_type is used to force the\n-// call site to specify the type of the return value.\n-{\n-    assert(max.count() > 0);\n-    return D{GetRand(max.count())};\n-};\n-constexpr auto GetRandMicros = GetRandomDuration<std::chrono::microseconds>;\n-constexpr auto GetRandMillis = GetRandomDuration<std::chrono::milliseconds>;\n+void RandAddPeriodic() noexcept;\n \n /**\n- * Return a timestamp in the future sampled from an exponential distribution\n- * (https://en.wikipedia.org/wiki/Exponential_distribution). This distribution\n- * is memoryless and should be used for repeated network events (e.g. sending a\n- * certain type of message) to minimize leaking information to observers.\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n  *\n- * The probability of an event occurring before time x is 1 - e^-(x/a) where a\n- * is the average interval between events.\n- * */\n-std::chrono::microseconds GetExponentialRand(std::chrono::microseconds now, std::chrono::seconds average_interval);\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info) noexcept;\n+\n \n-uint256 GetRandHash() noexcept;\n+/* =========================== BASE RANDOMNESS GENERATION FUNCTIONS ===========================\n+ *\n+ * All produced randomness is eventually generated by one of these functions.\n+ */\n \n /**\n- * Gather entropy from various sources, feed it into the internal PRNG, and\n- * generate random data using it.\n+ * Generate random data via the internal PRNG.\n  *\n- * This function will cause failure whenever the OS RNG fails.\n+ * These functions are designed to be fast (sub microsecond), but do not necessarily\n+ * meaningfully add entropy to the PRNG state.\n+ *\n+ * In test mode (see SeedRandomForTest in src/test/util/random.h), the normal PRNG state is\n+ * bypassed, and a deterministic, seeded, PRNG is used instead.\n  *\n  * Thread-safe.\n  */\n-void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n+void GetRandBytes(Span<unsigned char> bytes) noexcept;\n \n /**\n- * Gather entropy from various expensive sources, and feed them to the PRNG state.\n+ * Gather entropy from various sources, feed it into the internal PRNG, and\n+ * generate random data using it.\n+ *\n+ * This function will cause failure whenever the OS RNG fails.\n+ *\n+ * The normal PRNG is never bypassed here, even in test mode.\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic() noexcept;\n+void GetStrongRandBytes(Span<unsigned char> bytes) noexcept;\n \n-/**\n- * Gathers entropy from the low bits of the time at which events occur. Should\n- * be called with a uint32_t describing the event at the time an event occurs.\n+\n+/* ============================= RANDOM NUMBER GENERATION CLASSES =============================\n  *\n- * Thread-safe.\n+ * In this section, 3 classes are defined:\n+ * - RandomMixin:            a base class that adds functionality to all RNG classes.\n+ * - FastRandomContext:      a cryptographic RNG (seeded through GetRandBytes in its default\n+ *                           constructor).\n+ * - InsecureRandomContext:  a non-cryptographic, very fast, RNG.\n  */\n-void RandAddEvent(const uint32_t event_info) noexcept;\n \n-/**\n- * Fast randomness source. This is seeded once with secure random data, but\n- * is completely deterministic and does not gather more entropy after that.\n+// Forward declaration of RandomMixin, used in RandomNumberGenerator concept.\n+template<typename T>\n+class RandomMixin;\n+\n+/** A concept for RandomMixin-based random number generators. */\n+template<typename T>\n+concept RandomNumberGenerator = requires(T& rng, Span<std::byte> s) {",
      "path": "src/random.h",
      "position": 189,
      "original_position": 189,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": 1658346921,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Going to leave this as a follow-up (I think making this work with CRTP may mean splitting it up into two concepts).",
      "created_at": "2024-06-28T13:13:16Z",
      "updated_at": "2024-06-28T13:13:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658725627",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658725627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 147,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658726118",
      "pull_request_review_id": 2147985813,
      "id": 1658726118,
      "node_id": "PRRC_kwDOABII585i3ibm",
      "diff_hunk": "@@ -274,29 +481,26 @@ void Shuffle(I first, I last, R&& rng)\n     }\n }\n \n+/** Generate a uniform random integer of type T in the range [0..nMax)\n+ *  Precondition: nMax > 0, T is an integral type, no larger than uint64_t\n+ */\n+template<typename T>\n+T GetRand(T nMax) noexcept {",
      "path": "src/random.h",
      "position": null,
      "original_position": 587,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": 1658360003,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. ",
      "created_at": "2024-06-28T13:13:43Z",
      "updated_at": "2024-06-28T13:13:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658726118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658726118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658726213",
      "pull_request_review_id": 2147985983,
      "id": 1658726213,
      "node_id": "PRRC_kwDOABII585i3idF",
      "diff_hunk": "@@ -461,29 +502,18 @@ T GetRand(T nMax) noexcept {\n     return T(FastRandomContext().randrange(nMax));\n }\n \n+/* ============================= MISCELLANEOUS TEST-ONLY FUNCTIONS ============================= */\n+\n /* Number of random bytes returned by GetOSRand.\n  * When changing this constant make sure to change all call sites, and make\n  * sure that the underlying OS APIs for all platforms support the number.\n  * (many cap out at 256 bytes).\n  */\n static const int NUM_OS_RANDOM_BYTES = 32;",
      "path": "src/random.h",
      "position": null,
      "original_position": 154,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "b128d1d0ab48d2c4e535ff0e90225d6aae626817",
      "in_reply_to_id": 1658362617,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-06-28T13:13:49Z",
      "updated_at": "2024-06-28T13:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1658726213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658726213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 512,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1663070564",
      "pull_request_review_id": 2154709229,
      "id": 1663070564,
      "node_id": "PRRC_kwDOABII585jIHFk",
      "diff_hunk": "@@ -190,31 +185,42 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        Assume(bits <= 64);\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();\n+        uint64_t ret;\n+        if (bits <= bitbuf_size) {\n+            // If there is enough entropy left in bitbuf, return its bottom bits bits.",
      "path": "src/random.h",
      "position": 291,
      "original_position": 62,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 21ce9d8658fed0d3e4552e8b02a6902cb31c572e: nit: typo - \"bits bits\"",
      "created_at": "2024-07-02T19:41:16Z",
      "updated_at": "2024-07-03T22:04:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1663070564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1663070564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664293289",
      "pull_request_review_id": 2156620993,
      "id": 1664293289,
      "node_id": "PRRC_kwDOABII585jMxmp",
      "diff_hunk": "@@ -2522,7 +2522,7 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n                 if (a_recent_compact_block && a_recent_compact_block->header.GetHash() == pindex->GetBlockHash()) {\n                     MakeAndPushMessage(pfrom, NetMsgType::CMPCTBLOCK, *a_recent_compact_block);\n                 } else {\n-                    CBlockHeaderAndShortTxIDs cmpctblock{*pblock, GetRand<uint64_t>()};\n+                    CBlockHeaderAndShortTxIDs cmpctblock{*pblock, FastRandomContext().rand64()};",
      "path": "src/net_processing.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: (haven't tried), but in a follow-up this could use `m_rng`, because the lock is already taken IIRC.",
      "created_at": "2024-07-03T14:30:40Z",
      "updated_at": "2024-07-03T14:30:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664293289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664293289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2525,
      "original_line": 2525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664692692",
      "pull_request_review_id": 2154709229,
      "id": 1664692692,
      "node_id": "PRRC_kwDOABII585jOTHU",
      "diff_hunk": "@@ -775,5 +775,14 @@ void RandomInit()\n \n double MakeExponentiallyDistributed(uint64_t uniform) noexcept\n {\n-    return -std::log1p((uniform >> 16) * -0.0000000000000035527136788 /* -1/2^48 */);\n+    // To convert uniform into an exponentially-distributed double, we use two steps:\n+    // - Convert uniform into a uniformly-distributed double in range [0, 1), use the expression\n+    //   ((uniform >> 11) * 0x1.0p-53), as described in https://prng.di.unimi.it/ under\n+    //   \"Generating uniform doubles in the unit interval\". Call this value x.\n+    // - Given an x in uniformly distributed in [0, 1), we find an exponentially distributed value\n+    //   by applying the quantile function to it. For the exponential distribution with mean 1 this\n+    //   is F(x) = -log(1 - x).\n+    //\n+    // Combining the two, and using log1p(x) = log(1 + x), we obtain the following:\n+    return -std::log1p((uniform >> 11) * -0x1.0p-53);",
      "path": "src/random.cpp",
      "position": 442,
      "original_position": 14,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d5fcbe966bc501db8bf6a3809633f0b82e6ae547: Always throwing away 11 bits of entropy in the new version compared to 0 before the PR. I guess you want to preserve the expression from the linked site and it's unclear whether not throwing away the bits would be more performant.",
      "created_at": "2024-07-03T19:55:37Z",
      "updated_at": "2024-07-03T22:04:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664692692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664692692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 788,
      "original_line": 787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664818014",
      "pull_request_review_id": 2154709229,
      "id": 1664818014,
      "node_id": "PRRC_kwDOABII585jOxte",
      "diff_hunk": "@@ -126,7 +126,7 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candida\n             /*fRelevantServices=*/random_context.randbool(),\n             /*m_relay_txs=*/random_context.randbool(),\n             /*fBloomFilter=*/random_context.randbool(),\n-            /*nKeyedNetGroup=*/random_context.randrange(100),\n+            /*nKeyedNetGroup=*/random_context.randrange(100u),",
      "path": "src/test/util/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e2d1f84858485650ff743753ffa5c679f210a992",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In e2d1f84858485650ff743753ffa5c679f210a992: Now we are in C++20 land, it might be time to use real designated initializers instead of comments when touching blocks like these?\r\n```C++\r\n            .id=id,\r\n            .m_connected=std::chrono::seconds{random_context.randrange(100)},\r\n            .m_min_ping_time=std::chrono::microseconds{random_context.randrange(100)},\r\n            .m_last_block_time=std::chrono::seconds{random_context.randrange(100)},\r\n            .m_last_tx_time=std::chrono::seconds{random_context.randrange(100)},\r\n            .fRelevantServices=random_context.randbool(),\r\n            .m_relay_txs=random_context.randbool(),\r\n            .fBloomFilter=random_context.randbool(),\r\n            .nKeyedNetGroup=random_context.randrange(100u),\r\n            .prefer_evict=random_context.randbool(),\r\n            .m_is_local=random_context.randbool(),\r\n            .m_network=ALL_NETWORKS[random_context.randrange(ALL_NETWORKS.size())],\r\n            .m_noban=false,\r\n            .m_conn_type=ConnectionType::INBOUND,\r\n```",
      "created_at": "2024-07-03T21:15:41Z",
      "updated_at": "2024-07-03T22:04:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664818014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664818014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664856842",
      "pull_request_review_id": 2154709229,
      "id": 1664856842,
      "node_id": "PRRC_kwDOABII585jO7MK",
      "diff_hunk": "@@ -657,7 +657,7 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n {\n     if (m_opts.check_ratio == 0) return;\n \n-    if (GetRand(m_opts.check_ratio) >= 1) return;\n+    if (FastRandomContext().randrange(m_opts.check_ratio) >= 1) return;",
      "path": "src/txmempool.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "ddc184d999d7e1a87efaf6bcb222186f0dcd87ec",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In ddc184d999d7e1a87efaf6bcb222186f0dcd87ec: The commit message in e2d1f84858485650ff743753ffa5c679f210a992 made me do a survey of (mis)uses of `GetRand()` . 2 similar cases stood out to me at first, but they appear correct after some noodling. This is one of them and the other is `check_block_index` in validation.cpp.\r\n\r\n(`check_ratio` is often set to `1` (always) or `0` (never)).\r\n\r\nSharing the same `return` path actually makes the behavior slightly quicker for me to grok:\r\n```C++\r\n    if (m_opts.check_ratio == 0\r\n        || FastRandomContext().randrange(m_opts.check_ratio) >= 1)\r\n        return;\r\n```",
      "created_at": "2024-07-03T21:57:43Z",
      "updated_at": "2024-07-03T22:04:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664856842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664856842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": 658,
      "original_start_line": 658,
      "start_side": "RIGHT",
      "line": 660,
      "original_line": 660,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664868589",
      "pull_request_review_id": 2157583047,
      "id": 1664868589,
      "node_id": "PRRC_kwDOABII585jO-Dt",
      "diff_hunk": "@@ -190,31 +185,42 @@ class RandomMixin\n \n     RandomMixin(RandomMixin&& other) noexcept : bitbuf(other.bitbuf), bitbuf_size(other.bitbuf_size)\n     {\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n     }\n \n     RandomMixin& operator=(RandomMixin&& other) noexcept\n     {\n         bitbuf = other.bitbuf;\n         bitbuf_size = other.bitbuf_size;\n+        other.bitbuf = 0;\n         other.bitbuf_size = 0;\n         return *this;\n     }\n \n     /** Generate a random (bits)-bit integer. */\n     uint64_t randbits(int bits) noexcept\n     {\n-        if (bits == 0) {\n-            return 0;\n-        } else if (bits > 32) {\n-            return Impl().rand64() >> (64 - bits);\n-        } else {\n-            if (bitbuf_size < bits) FillBitBuffer();\n-            uint64_t ret = bitbuf & (~uint64_t{0} >> (64 - bits));\n+        Assume(bits <= 64);\n+        // Requests for the full 64 bits are passed through.\n+        if (bits == 64) return Impl().rand64();\n+        uint64_t ret;\n+        if (bits <= bitbuf_size) {\n+            // If there is enough entropy left in bitbuf, return its bottom bits bits.",
      "path": "src/random.h",
      "position": 291,
      "original_position": 62,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "21ce9d8658fed0d3e4552e8b02a6902cb31c572e",
      "in_reply_to_id": 1663070564,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's not actually a typo, it means \"Return the bottom `bits` many bits\", but I do see why it'd confusing. Will address if I have to repush.",
      "created_at": "2024-07-03T22:16:20Z",
      "updated_at": "2024-07-03T22:16:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664868589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664868589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664869992",
      "pull_request_review_id": 2157586495,
      "id": 1664869992,
      "node_id": "PRRC_kwDOABII585jO-Zo",
      "diff_hunk": "@@ -775,5 +775,14 @@ void RandomInit()\n \n double MakeExponentiallyDistributed(uint64_t uniform) noexcept\n {\n-    return -std::log1p((uniform >> 16) * -0.0000000000000035527136788 /* -1/2^48 */);\n+    // To convert uniform into an exponentially-distributed double, we use two steps:\n+    // - Convert uniform into a uniformly-distributed double in range [0, 1), use the expression\n+    //   ((uniform >> 11) * 0x1.0p-53), as described in https://prng.di.unimi.it/ under\n+    //   \"Generating uniform doubles in the unit interval\". Call this value x.\n+    // - Given an x in uniformly distributed in [0, 1), we find an exponentially distributed value\n+    //   by applying the quantile function to it. For the exponential distribution with mean 1 this\n+    //   is F(x) = -log(1 - x).\n+    //\n+    // Combining the two, and using log1p(x) = log(1 + x), we obtain the following:\n+    return -std::log1p((uniform >> 11) * -0x1.0p-53);",
      "path": "src/random.cpp",
      "position": 442,
      "original_position": 14,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "d5fcbe966bc501db8bf6a3809633f0b82e6ae547",
      "in_reply_to_id": 1664692692,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I wanted to keep `MakeExponential` as stand-alone reviewable as possible. I don't think any of the call sites are so performance-critical that the difference matters.",
      "created_at": "2024-07-03T22:18:55Z",
      "updated_at": "2024-07-03T22:18:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1664869992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664869992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 788,
      "original_line": 787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665187839",
      "pull_request_review_id": 2158069402,
      "id": 1665187839,
      "node_id": "PRRC_kwDOABII585jQL__",
      "diff_hunk": "@@ -126,7 +126,7 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candida\n             /*fRelevantServices=*/random_context.randbool(),\n             /*m_relay_txs=*/random_context.randbool(),\n             /*fBloomFilter=*/random_context.randbool(),\n-            /*nKeyedNetGroup=*/random_context.randrange(100),\n+            /*nKeyedNetGroup=*/random_context.randrange(100u),",
      "path": "src/test/util/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e2d1f84858485650ff743753ffa5c679f210a992",
      "in_reply_to_id": 1664818014,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is already a list initialization, so I don't think clang-tidy can pick up the named args at all. Happy to review a follow-up, if you decide to open one.",
      "created_at": "2024-07-04T06:22:55Z",
      "updated_at": "2024-07-04T06:22:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1665187839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665187839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665615924",
      "pull_request_review_id": 2158780665,
      "id": 1665615924,
      "node_id": "PRRC_kwDOABII585jR0g0",
      "diff_hunk": "@@ -261,7 +468,7 @@ class FastRandomContext\n  * debug mode detects and panics on. This is a known issue, see\n  * https://stackoverflow.com/questions/22915325/avoiding-self-assignment-in-stdshuffle",
      "path": "src/random.h",
      "position": 572,
      "original_position": 572,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "15cc11b4e591f4c67fcdefb224fadf4383064340",
      "in_reply_to_id": 1658344049,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "First half done in https://github.com/bitcoin/bitcoin/pull/30393",
      "created_at": "2024-07-04T12:08:26Z",
      "updated_at": "2024-07-04T12:08:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1665615924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665615924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665616205",
      "pull_request_review_id": 2158780947,
      "id": 1665616205,
      "node_id": "PRRC_kwDOABII585jR0lN",
      "diff_hunk": "@@ -2522,7 +2522,7 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n                 if (a_recent_compact_block && a_recent_compact_block->header.GetHash() == pindex->GetBlockHash()) {\n                     MakeAndPushMessage(pfrom, NetMsgType::CMPCTBLOCK, *a_recent_compact_block);\n                 } else {\n-                    CBlockHeaderAndShortTxIDs cmpctblock{*pblock, GetRand<uint64_t>()};\n+                    CBlockHeaderAndShortTxIDs cmpctblock{*pblock, FastRandomContext().rand64()};",
      "path": "src/net_processing.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "in_reply_to_id": 1664293289,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/30393",
      "created_at": "2024-07-04T12:08:36Z",
      "updated_at": "2024-07-04T12:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1665616205",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665616205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2525,
      "original_line": 2525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1667103367",
      "pull_request_review_id": 2161206437,
      "id": 1667103367,
      "node_id": "PRRC_kwDOABII585jXfqH",
      "diff_hunk": "@@ -126,7 +126,7 @@ std::vector<NodeEvictionCandidate> GetRandomNodeEvictionCandidates(int n_candida\n             /*fRelevantServices=*/random_context.randbool(),\n             /*m_relay_txs=*/random_context.randbool(),\n             /*fBloomFilter=*/random_context.randbool(),\n-            /*nKeyedNetGroup=*/random_context.randrange(100),\n+            /*nKeyedNetGroup=*/random_context.randrange(100u),",
      "path": "src/test/util/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "e2d1f84858485650ff743753ffa5c679f210a992",
      "in_reply_to_id": 1664818014,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Follow-up: #30397",
      "created_at": "2024-07-05T20:12:26Z",
      "updated_at": "2024-07-05T20:12:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1667103367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1667103367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698309568",
      "pull_request_review_id": 2209831085,
      "id": 1698309568,
      "node_id": "PRRC_kwDOABII585lOiXA",
      "diff_hunk": "@@ -625,65 +655,61 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level) noexcept\n     }\n \n     // Combine with and update state\n-    if (!rng.MixExtract(out, num, std::move(hasher), false)) {\n+    if (!rng.MixExtract(out, num, std::move(hasher), false, always_use_real_rng)) {\n         // On the first invocation, also seed with SeedStartup().\n         CSHA512 startup_hasher;\n         SeedStartup(startup_hasher, rng);\n-        rng.MixExtract(out, num, std::move(startup_hasher), true);\n+        rng.MixExtract(out, num, std::move(startup_hasher), true, always_use_real_rng);\n     }\n }\n \n-void GetRandBytes(Span<unsigned char> bytes) noexcept { ProcRand(bytes.data(), bytes.size(), RNGLevel::FAST); }\n-void GetStrongRandBytes(Span<unsigned char> bytes) noexcept { ProcRand(bytes.data(), bytes.size(), RNGLevel::SLOW); }\n-void RandAddPeriodic() noexcept { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n-void RandAddEvent(const uint32_t event_info) noexcept { GetRNGState().AddEvent(event_info); }\n+} // namespace\n \n-bool g_mock_deterministic_tests{false};\n \n-uint64_t GetRandInternal(uint64_t nMax) noexcept\n+/** Internal function to set g_determinstic_rng. Only accessed from tests. */\n+void MakeRandDeterministicDANGEROUS(const uint256& seed) noexcept\n {\n-    return FastRandomContext(g_mock_deterministic_tests).randrange(nMax);\n+    GetRNGState().MakeDeterministic(seed);\n }\n \n-uint256 GetRandHash() noexcept\n+void GetRandBytes(Span<unsigned char> bytes) noexcept\n {\n-    uint256 hash;\n-    GetRandBytes(hash);\n-    return hash;\n+    ProcRand(bytes.data(), bytes.size(), RNGLevel::FAST, /*always_use_real_rng=*/false);\n }\n \n-void FastRandomContext::RandomSeed()\n+void GetStrongRandBytes(Span<unsigned char> bytes) noexcept\n {\n-    uint256 seed = GetRandHash();\n-    rng.SetKey(MakeByteSpan(seed));\n-    requires_seed = false;\n+    ProcRand(bytes.data(), bytes.size(), RNGLevel::SLOW, /*always_use_real_rng=*/true);\n }\n \n-uint256 FastRandomContext::rand256() noexcept\n+void RandAddPeriodic() noexcept\n {\n-    if (requires_seed) RandomSeed();\n-    uint256 ret;\n-    rng.Keystream(MakeWritableByteSpan(ret));\n-    return ret;\n+    ProcRand(nullptr, 0, RNGLevel::PERIODIC, /*always_use_real_rng=*/false);",
      "path": "src/random.cpp",
      "position": 350,
      "original_position": 350,
      "commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "original_commit_id": "ce8094246ee95232e9d84f7e37f3c0a43ef587ce",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "test-only follow-up question: Just a nit, because this only affects tests, but for consistency, I couldn't figure out why the periodic seed does not use the real RNG. The result is only used internally, so it should be fine, in line with the other calls. For example, `SeedStrengthen`, which is called as part of the periodic seeding and also uses the real RNG.  Also, if this were problematic and made tests non-deterministic, the same issues should appear when someone in the tests called `GetStrongRandBytes` or `Random_SanityCheck`, no?\r\n\r\n",
      "created_at": "2024-07-31T10:52:24Z",
      "updated_at": "2024-07-31T10:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29625#discussion_r1698309568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698309568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29625"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 687,
      "original_line": 687,
      "side": "RIGHT"
    }
  ]
}