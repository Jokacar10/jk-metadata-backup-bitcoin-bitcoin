{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860",
    "id": 2062706651,
    "node_id": "PR_kwDOABII58568mfb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30860",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30860.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30860.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/abf6ad42bdb2c8f3f01b11df1658268d984bc574",
    "number": 30860,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: autogenerate bash completion",
    "user": {
      "login": "BrandonOdiwuor",
      "id": 15610188,
      "node_id": "MDQ6VXNlcjE1NjEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrandonOdiwuor",
      "html_url": "https://github.com/BrandonOdiwuor",
      "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
      "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
      "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
      "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
      "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Fixes https://github.com/bitcoin/bitcoin/issues/17289, and follows up on https://github.com/bitcoin/bitcoin/pull/18606\r\n\r\nAdds a functional test that parses available RPC commands, generates the associated bitcoin-cli autocomplete file and checks that the current autocomplete file matches.\r\n\r\nAn outdated autocomplete file can be updated via the --overwrite test parameter.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-09-10T08:26:33Z",
    "updated_at": "2025-01-21T10:02:55Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "0116ce17282538f74ab67191a528a3770551a5a4",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "BrandonOdiwuor:bash-completion",
      "ref": "bash-completion",
      "sha": "abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 659246344,
        "node_id": "R_kgDOJ0tNCA",
        "name": "bitcoin",
        "full_name": "BrandonOdiwuor/bitcoin",
        "owner": {
          "login": "BrandonOdiwuor",
          "id": 15610188,
          "node_id": "MDQ6VXNlcjE1NjEwMTg4",
          "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/BrandonOdiwuor",
          "html_url": "https://github.com/BrandonOdiwuor",
          "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
          "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
          "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
          "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
          "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/BrandonOdiwuor/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin",
        "archive_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/events",
        "forks_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/BrandonOdiwuor/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:BrandonOdiwuor/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/BrandonOdiwuor/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/hooks",
        "svn_url": "https://github.com/BrandonOdiwuor/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 232293,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-18T07:26:56Z",
        "created_at": "2023-06-27T12:31:32Z",
        "updated_at": "2024-04-10T13:10:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "477b357460743a9304cccfb672e5445f364891ae",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36579,
        "stargazers_count": 81536,
        "watchers_count": 81536,
        "size": 274415,
        "default_branch": "master",
        "open_issues_count": 692,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-21T10:20:50Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-21T10:21:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 498,
    "deletions": 57,
    "changed_files": 11,
    "commits": 3,
    "review_comments": 2,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 2340002106,
      "node_id": "IC_kwDOABII586LeZk6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2340002106",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T08:26:36Z",
      "updated_at": "2025-01-21T10:02:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/30860.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31250](https://github.com/bitcoin/bitcoin/pull/31250) (wallet: Disable creating and loading legacy wallets by achow101)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#issuecomment-2340002106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860"
    },
    {
      "event": "labeled",
      "id": 14194718213,
      "node_id": "LE_lADOABII586V83f7zwAAAANOEjYF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14194718213",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T08:26:38Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2341307714,
      "node_id": "IC_kwDOABII586LjYVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2341307714",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T15:44:25Z",
      "updated_at": "2024-09-10T15:44:25Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/actions/runs/10788681404/job/29919981336?pr=30860#step:7:3564:\r\n```bash\r\nRun rpc with args ['/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-x86_64-apple-darwin/src/test/fuzz/fuzz', PosixPath('/Users/runner/work/bitcoin/bitcoin/ci/scratch/qa-assets/fuzz_corpora/rpc')]Error: RPC command \"format\" not found in RPC_COMMANDS_SAFE_FOR_FUZZING or RPC_COMMANDS_NOT_SAFE_FOR_FUZZING. Please update src/test/fuzz/rpc.cpp.\r\nlibc++abi: terminating\r\n\r\nError: RPC command \"format\" not found in RPC_COMMANDS_SAFE_FOR_FUZZING or RPC_COMMANDS_NOT_SAFE_FOR_FUZZING. Please update src/test/fuzz/rpc.cpp.\r\nlibc++abi: terminating\r\n\r\nTarget ['/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-x86_64-apple-darwin/src/test/fuzz/fuzz', PosixPath('/Users/runner/work/bitcoin/bitcoin/ci/scratch/qa-assets/fuzz_corpora/rpc')] failed with exit code -6\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#issuecomment-2341307714",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860"
    },
    {
      "event": "commented",
      "id": 2341828191,
      "node_id": "IC_kwDOABII586LlXZf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2341828191",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T19:14:15Z",
      "updated_at": "2024-09-10T19:14:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29919986329</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#issuecomment-2341828191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860"
    },
    {
      "event": "labeled",
      "id": 14204442558,
      "node_id": "LE_lADOABII586V83f7zwAAAANOppe-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14204442558",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T19:14:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2385663727,
      "node_id": "IC_kwDOABII586OMlbv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2385663727",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T12:35:30Z",
      "updated_at": "2024-10-01T12:35:30Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this? (It looks like this has been opened as draft, with failing CI, which is fine. However, without any progress, it seems better to close this for now.)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#issuecomment-2385663727",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30860"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14512499315,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAANhAypz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14512499315",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9049a8ae9948a0d4129e40b71ddc53cfc4ddfc34",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/9049a8ae9948a0d4129e40b71ddc53cfc4ddfc34",
      "created_at": "2024-10-04T02:54:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14512535569,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAANhA7gR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14512535569",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "791096da0b0ace63264c04fbf86571058804a1e8",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/791096da0b0ace63264c04fbf86571058804a1e8",
      "created_at": "2024-10-04T03:01:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14512586393,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAANhBH6Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14512586393",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6b6a7219a7748b4f32b8fb87aebc7ef127833959",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/6b6a7219a7748b4f32b8fb87aebc7ef127833959",
      "created_at": "2024-10-04T03:11:04Z"
    },
    {
      "event": "labeled",
      "id": 14591414771,
      "node_id": "LE_lADOABII586V83f7zwAAAANlt1Hz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14591414771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T13:27:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14804708707,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAANybe1j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14804708707",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2f4b076dbb9d96fc184cd0e5d839b152b64e9110",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/2f4b076dbb9d96fc184cd0e5d839b152b64e9110",
      "created_at": "2024-10-23T08:36:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14805863643,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAANyf4zb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14805863643",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7c8b021fee3b528ff28b85ec2e8933ebc5b2b488",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/7c8b021fee3b528ff28b85ec2e8933ebc5b2b488",
      "created_at": "2024-10-23T08:51:41Z"
    },
    {
      "event": "unlabeled",
      "id": 14808522903,
      "node_id": "UNLE_lADOABII586V83f7zwAAAANyqCCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14808522903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T10:04:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14809601316,
      "node_id": "UNLE_lADOABII586V83f7zwAAAANyuJUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14809601316",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T10:23:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2439000219,
      "node_id": "PRR_kwDOABII586RYDCb",
      "url": null,
      "actor": null,
      "commit_id": "7c8b021fee3b528ff28b85ec2e8933ebc5b2b488",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#pullrequestreview-2439000219",
      "submitted_at": "2024-11-15T15:44:43Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860"
    },
    {
      "event": "labeled",
      "id": 15492407881,
      "node_id": "LE_lADOABII586V83f7zwAAAAOba2JJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15492407881",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T12:38:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmYTQ0MGI0YzVjNjI4ZWQ1MDcyYWM1ZDgzOWUxM2E4OTY4NWE5YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fa440b4c5c628ed5072ac5d839e13a89685a9c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1fa440b4c5c628ed5072ac5d839e13a89685a9c3",
      "tree": {
        "sha": "b3bc7661128481ef6e6275af53aa8ac95db7cbf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3bc7661128481ef6e6275af53aa8ac95db7cbf4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/477b357460743a9304cccfb672e5445f364891ae",
          "sha": "477b357460743a9304cccfb672e5445f364891ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/477b357460743a9304cccfb672e5445f364891ae"
        }
      ],
      "message": "rpc: add format command with support for args_cli\n\n - add format command to get infos about commands via a particular format\n - add output format args_cli to get arguments type info of shown commands\n - refactor RPCArg::ToTypeString to be used accross multiple output formats\n - overload CRPCTable::execute to call != methods than in their request\n\nCo-authored-by: pierrenn <git@pnn.sh>",
      "committer": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-12-18T05:02:59Z"
      },
      "author": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-09-09T07:40:31Z"
      },
      "sha": "1fa440b4c5c628ed5072ac5d839e13a89685a9c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzOTIxMTkxYTZhZTBlMWY4MWYwNzIwYWEzMTdkNGRiZmYzMjc1MjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03921191a6ae0e1f81f0720aa317d4dbff327522",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/03921191a6ae0e1f81f0720aa317d4dbff327522",
      "tree": {
        "sha": "e883318bb3ab5a5f221863724a5cb8d11ad185b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e883318bb3ab5a5f221863724a5cb8d11ad185b2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fa440b4c5c628ed5072ac5d839e13a89685a9c3",
          "sha": "1fa440b4c5c628ed5072ac5d839e13a89685a9c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1fa440b4c5c628ed5072ac5d839e13a89685a9c3"
        }
      ],
      "message": "contrib: sync bitcoin-cli bash autocompletion",
      "committer": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-12-18T07:22:32Z"
      },
      "author": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-09-10T05:23:02Z"
      },
      "sha": "03921191a6ae0e1f81f0720aa317d4dbff327522"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiZjZhZDQyYmRiMmM4ZjNmMDFiMTFkZjE2NTgyNjhkOTg0YmM1NzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "tree": {
        "sha": "9bd8c166832bd4a9c7cb3e4cbf55e4f49be600e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bd8c166832bd4a9c7cb3e4cbf55e4f49be600e6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03921191a6ae0e1f81f0720aa317d4dbff327522",
          "sha": "03921191a6ae0e1f81f0720aa317d4dbff327522",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/03921191a6ae0e1f81f0720aa317d4dbff327522"
        }
      ],
      "message": "test: keeps bitcoin-cli autocomplete in sync\n\nAdds a functional test which parses available RPC commands, generates\nthe associated bitcoin-cli autcomplete file and checks that the current\nautocomplete matches the file\nAn outdated autcomplete file can be updated using the --overwrite parameter\n\nCo-authored-by: pierrenn <git@pnn.sh>",
      "committer": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-12-18T07:25:24Z"
      },
      "author": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2024-09-10T05:29:32Z"
      },
      "sha": "abf6ad42bdb2c8f3f01b11df1658268d984bc574"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15698766881,
      "node_id": "HRFPE_lADOABII586V83f7zwAAAAOnuCwh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15698766881",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "commit_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits/abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "created_at": "2024-12-18T07:26:57Z"
    },
    {
      "event": "review_requested",
      "id": 15698787874,
      "node_id": "RRE_lADOABII586V83f7zwAAAAOnuH4i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15698787874",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T07:28:31Z",
      "requested_reviewer": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 15699649828,
      "node_id": "UNLE_lADOABII586V83f7zwAAAAOnxaUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15699649828",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T08:44:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1844079617",
      "pull_request_review_id": 2439000219,
      "id": 1844079617,
      "node_id": "PRRC_kwDOABII585t6mwB",
      "diff_hunk": "@@ -0,0 +1,282 @@\n+#!/usr/bin/env python3\n+\n+from os import path\n+from collections import defaultdict\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+# bash cli completion file header\n+COMPLETION_HEADER = \"\"\"# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+\"\"\"\n+\n+# option types which are limited to certain values\n+TYPED_OPTIONS = [\n+        [\"estimate_mode\", {\"UNSET\", \"ECONOMICAL\", \"CONSERVATIVE\"}],\n+        [\"sighashtype\", {\"ALL\", \"NONE\", \"SINGLE\", \"ALL|ANYONECANPAY\",\n+                         \"NONE|ANYONECANPAY\", \"SINGLE|ANYONECANPAY\"}]\n+]\n+\n+\n+class PossibleArgs():\n+    \"\"\" Helper class to store options associated to a command. \"\"\"\n+    def __init__(self, command):\n+        self.command = command\n+        self.arguments = {}\n+\n+    def set_args(self, position, values):\n+        \"\"\" Set the position-th positional argument as having values as possible values. \"\"\"\n+        if position in self.arguments:\n+            raise AssertionError(f\"The positional parameter at position {position} is already defined for command '{self.command}'\")\n+\n+        self.arguments[position] = values\n+        return self\n+\n+    def set_bool_args(self, position):\n+        return self.set_args(position, {\"true\", \"false\"})\n+\n+    def set_file_args(self, position):\n+        # We consider an empty string as a file value for the sake of simplicity (don't\n+        # have to create an extra level of indirection).\n+        return self.set_args(position, {\"\"})\n+\n+    def set_unknown_args(self, position):\n+        return self.set_args(position, {})\n+\n+    def set_typed_option(self, position, arg_name):\n+        \"\"\" Checks if arg_name is a typed option; if it is, sets it and return True. \"\"\"\n+        for option_type in TYPED_OPTIONS:\n+            if arg_name == option_type[0]:\n+                self.set_args(position, option_type[1])\n+                return True\n+        return False\n+\n+    def has_option(self, position):\n+        return position in self.arguments and len(self.arguments[position]) > 0\n+\n+    def get_num_args(self):\n+        \"\"\" Return the max number of positional argument the option accepts. \"\"\"\n+        pos = list(self.arguments.keys())\n+        if len(pos) == 0:\n+            return 0\n+\n+        return max(pos)\n+\n+    def generate_autocomplete(self, pos):\n+        \"\"\" Generate the autocomplete file line relevent to the given position pos. \"\"\"\n+        if len(self.arguments[pos]) == 0:\n+            raise AssertionError(f\"generating undefined arg id {pos} ({self.arguments})\")\n+\n+        # handle special file case\n+        if len(self.arguments[pos]) == 1 and len(next(iter(self.arguments[pos]))) == 0:\n+            return \"_filedir\"\n+\n+        # a set order is undefined, so we order args alphabetically\n+        args = list(self.arguments[pos])\n+        args.sort()\n+\n+        return \"COMPREPLY=( $( compgen -W \\\"\" + ' '.join(args) + \"\\\" -- \\\"$cur\\\" ) )\"\n+\n+# commands where the option type can only be difficultly derived from the help message\n+SPECIAL_OPTIONS = [\n+        PossibleArgs(\"addnode\").set_args(2, {\"add\", \"remove\", \"onetry\"}),\n+        PossibleArgs(\"setban\").set_args(2, {\"add\", \"remove\"}),\n+]\n+\n+\n+def generate_start_complete(cword):\n+    \"\"\" Generate the start of an autocomplete block (beware of indentation). \"\"\"\n+    if cword > 1:\n+        return f\"\"\"    if ((cword > {cword})); then\n+        case ${{words[cword-{cword}]}} in\"\"\"\n+\n+    return \"    case \\\"$prev\\\" in\"\n+\n+\n+def generate_end_complete(cword):\n+    \"\"\" Generate the end of an autocomplete block. \"\"\"\n+    if cword > 1:\n+        return f\"\\n{' ' * 8}esac\\n{' ' * 4}fi\\n\\n\"\n+\n+    return f\"\\n{' ' * 4}esac\\n\"\n+\n+\n+class CliCompletionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+        # self.skip_if_no_wallet()\n+        self.skip_if_no_bitcoind_zmq()\n+\n+    def add_options(self, parser):\n+        parser.add_argument(\n+                '--header',\n+                help='Static header part of the bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--footer',\n+                help='Static footer part of the bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--completion',\n+                help='Location of the current bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--overwrite',\n+                default=False,\n+                action='store_true',\n+                help='Force the test to overwrite the file pointer to by the --completion'\n+                    'to the newly generated completion file',\n+        )\n+    def parse_single_helper(self, option):\n+        \"\"\" Complete the arguments of option via the RPC format command. \"\"\"\n+\n+        res = self.nodes[0].format(command=option.command, output='args_cli')\n+        if len(res) == 0:\n+            return option\n+\n+        if res.count('\\n') > 1:\n+            raise AssertionError(\n+                f\"command {option.command} doesn't support format RPC. Should it be a hidden command? \"\n+                f\"Please call RPCHelpMan::Check when adding a new non-hidden command. Returned: {res}\"\n+            )\n+\n+        for idx, argument in enumerate(res.split(\",\")):\n+            elems = argument.split(\":\")\n+\n+            if option.set_typed_option(idx+1, elems[0]):\n+                continue\n+\n+            if elems[1] == \"boolean\":\n+                option.set_bool_args(idx+1)\n+                continue\n+\n+            if elems[1] == \"file\":\n+                option.set_file_args(idx+1)\n+                continue\n+\n+            if not option.has_option(idx+1):\n+                option.set_unknown_args(idx+1)\n+\n+        return option\n+\n+    def get_command_options(self, command):\n+        \"\"\" Returns the corresponding PossibleArgs for the command. \"\"\"\n+\n+        # verify it's not a special option first\n+        for soption in SPECIAL_OPTIONS:\n+            if command == soption.command:\n+                return self.parse_single_helper(soption)\n+\n+        return self.parse_single_helper(PossibleArgs(command))\n+\n+    def generate_completion_block(self, options):\n+        commands = [o.command for o in options]\n+        self.log.info(f\"Generating part of the completion file for options {commands}\")\n+\n+        if len(options) == 0:\n+            return \"\"\n+\n+        generated = \"\"\n+        max_pos_options = max(options, key=lambda o: o.get_num_args()).get_num_args()\n+        for cword in range(max_pos_options, 0, -1):\n+            this_options = [option for option in options if option.has_option(cword)]\n+            if len(this_options) == 0:\n+                continue\n+\n+            # group options by their arguments value\n+            grouped_options = defaultdict(list)\n+            for option in this_options:\n+                arg = option.generate_autocomplete(cword)\n+                grouped_options[arg].append(option)\n+\n+            # generate the cword block\n+            indent = 12 if cword > 1 else 8\n+            generated += generate_start_complete(cword)\n+            for line, opt_gr in grouped_options.items():\n+                opt_gr.sort(key=lambda o: o.command)  # show options alphabetically for clarity\n+                args = '|'.join([o.command for o in opt_gr])\n+                generated += f\"\\n{' '*indent}{args})\\n\"\n+                generated += f\"{' ' * (indent + 4)}{line}\\n{' ' * (indent + 4)}return 0\\n{' ' * (indent + 4)};;\"\n+            generated += generate_end_complete(cword)\n+\n+        return generated\n+\n+    def generate_completion_file(self, commands):\n+        try:\n+            with open(self.options.header, 'r', encoding='utf-8') as header_file:\n+                header = header_file.read()\n+\n+            with open(self.options.footer, 'r', encoding='utf-8') as footer_file:\n+                footer = footer_file.read()\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not read header/footer ({self.options.header} and {self.options.footer}) files. \"\n+                        f\"Tell the test where to find them using the --header/--footer parameters ({e}).\"\n+            )\n+        return COMPLETION_HEADER + header + commands + footer\n+\n+    def write_completion_file(self, new_file):\n+        try:\n+            with open(self.options.completion, 'w', encoding='utf-8') as completion_file:\n+                completion_file.write(new_file)\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not write the autocomplete file to {self.options.completion}. \"\n+                        f\"Tell the test where to find it using the --completion parameters ({e}).\"\n+            )\n+\n+    def read_completion_file(self):\n+        try:\n+            with open(self.options.completion, 'r', encoding='utf-8') as completion_file:\n+                return completion_file.read()\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not read the autocomplete file ({self.options.completion}) file. \"\n+                        f\"Tell the test where to find it using the --completion parameters ({e}).\"\n+            )\n+\n+\n+    def run_test(self):\n+        # self.config is not available in self.add_options, so complete filepaths here\n+        src_dir = self.config[\"environment\"][\"SRCDIR\"]\n+        test_data_dir = path.join(src_dir, 'test', 'functional', 'data', 'completion')\n+        if self.options.header is None or len(self.options.header) == 0:\n+            self.options.header = path.join(test_data_dir, 'bitcoin-cli.header.bash-completion')\n+\n+        if self.options.footer is None or len(self.options.footer) == 0:\n+            self.options.footer = path.join(test_data_dir, 'bitcoin-cli.footer.bash-completion')\n+\n+        if self.options.completion is None or len(self.option.completion) == 0:",
      "path": "test/functional/tool_cli_bash_completion.py",
      "position": null,
      "original_position": 261,
      "commit_id": "abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "original_commit_id": "7c8b021fee3b528ff28b85ec2e8933ebc5b2b488",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        if self.options.completion is None or len(self.options.completion) == 0:\r\n```",
      "created_at": "2024-11-15T15:44:36Z",
      "updated_at": "2024-11-15T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#discussion_r1844079617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1844079617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889745910",
      "pull_request_review_id": 2511012586,
      "id": 1889745910,
      "node_id": "PRRC_kwDOABII585wozv2",
      "diff_hunk": "@@ -0,0 +1,282 @@\n+#!/usr/bin/env python3\n+\n+from os import path\n+from collections import defaultdict\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+# bash cli completion file header\n+COMPLETION_HEADER = \"\"\"# Dynamic bash programmable completion for bitcoin-cli(1)\n+#     DO NOT EDIT THIS FILE BY HAND -- THIS WILL FAIL THE FUNCTIONAL TEST tool_cli_completion\n+# This file is auto-generated by the functional test tool_cli_completion.\n+# If you want to modify this file, modify test/functional/tool_cli_completion.py and re-autogenerate\n+# this file via the --overwrite test flag.\n+\n+\"\"\"\n+\n+# option types which are limited to certain values\n+TYPED_OPTIONS = [\n+        [\"estimate_mode\", {\"UNSET\", \"ECONOMICAL\", \"CONSERVATIVE\"}],\n+        [\"sighashtype\", {\"ALL\", \"NONE\", \"SINGLE\", \"ALL|ANYONECANPAY\",\n+                         \"NONE|ANYONECANPAY\", \"SINGLE|ANYONECANPAY\"}]\n+]\n+\n+\n+class PossibleArgs():\n+    \"\"\" Helper class to store options associated to a command. \"\"\"\n+    def __init__(self, command):\n+        self.command = command\n+        self.arguments = {}\n+\n+    def set_args(self, position, values):\n+        \"\"\" Set the position-th positional argument as having values as possible values. \"\"\"\n+        if position in self.arguments:\n+            raise AssertionError(f\"The positional parameter at position {position} is already defined for command '{self.command}'\")\n+\n+        self.arguments[position] = values\n+        return self\n+\n+    def set_bool_args(self, position):\n+        return self.set_args(position, {\"true\", \"false\"})\n+\n+    def set_file_args(self, position):\n+        # We consider an empty string as a file value for the sake of simplicity (don't\n+        # have to create an extra level of indirection).\n+        return self.set_args(position, {\"\"})\n+\n+    def set_unknown_args(self, position):\n+        return self.set_args(position, {})\n+\n+    def set_typed_option(self, position, arg_name):\n+        \"\"\" Checks if arg_name is a typed option; if it is, sets it and return True. \"\"\"\n+        for option_type in TYPED_OPTIONS:\n+            if arg_name == option_type[0]:\n+                self.set_args(position, option_type[1])\n+                return True\n+        return False\n+\n+    def has_option(self, position):\n+        return position in self.arguments and len(self.arguments[position]) > 0\n+\n+    def get_num_args(self):\n+        \"\"\" Return the max number of positional argument the option accepts. \"\"\"\n+        pos = list(self.arguments.keys())\n+        if len(pos) == 0:\n+            return 0\n+\n+        return max(pos)\n+\n+    def generate_autocomplete(self, pos):\n+        \"\"\" Generate the autocomplete file line relevent to the given position pos. \"\"\"\n+        if len(self.arguments[pos]) == 0:\n+            raise AssertionError(f\"generating undefined arg id {pos} ({self.arguments})\")\n+\n+        # handle special file case\n+        if len(self.arguments[pos]) == 1 and len(next(iter(self.arguments[pos]))) == 0:\n+            return \"_filedir\"\n+\n+        # a set order is undefined, so we order args alphabetically\n+        args = list(self.arguments[pos])\n+        args.sort()\n+\n+        return \"COMPREPLY=( $( compgen -W \\\"\" + ' '.join(args) + \"\\\" -- \\\"$cur\\\" ) )\"\n+\n+# commands where the option type can only be difficultly derived from the help message\n+SPECIAL_OPTIONS = [\n+        PossibleArgs(\"addnode\").set_args(2, {\"add\", \"remove\", \"onetry\"}),\n+        PossibleArgs(\"setban\").set_args(2, {\"add\", \"remove\"}),\n+]\n+\n+\n+def generate_start_complete(cword):\n+    \"\"\" Generate the start of an autocomplete block (beware of indentation). \"\"\"\n+    if cword > 1:\n+        return f\"\"\"    if ((cword > {cword})); then\n+        case ${{words[cword-{cword}]}} in\"\"\"\n+\n+    return \"    case \\\"$prev\\\" in\"\n+\n+\n+def generate_end_complete(cword):\n+    \"\"\" Generate the end of an autocomplete block. \"\"\"\n+    if cword > 1:\n+        return f\"\\n{' ' * 8}esac\\n{' ' * 4}fi\\n\\n\"\n+\n+    return f\"\\n{' ' * 4}esac\\n\"\n+\n+\n+class CliCompletionTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+        # self.skip_if_no_wallet()\n+        self.skip_if_no_bitcoind_zmq()\n+\n+    def add_options(self, parser):\n+        parser.add_argument(\n+                '--header',\n+                help='Static header part of the bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--footer',\n+                help='Static footer part of the bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--completion',\n+                help='Location of the current bash completion file',\n+        )\n+\n+        parser.add_argument(\n+                '--overwrite',\n+                default=False,\n+                action='store_true',\n+                help='Force the test to overwrite the file pointer to by the --completion'\n+                    'to the newly generated completion file',\n+        )\n+    def parse_single_helper(self, option):\n+        \"\"\" Complete the arguments of option via the RPC format command. \"\"\"\n+\n+        res = self.nodes[0].format(command=option.command, output='args_cli')\n+        if len(res) == 0:\n+            return option\n+\n+        if res.count('\\n') > 1:\n+            raise AssertionError(\n+                f\"command {option.command} doesn't support format RPC. Should it be a hidden command? \"\n+                f\"Please call RPCHelpMan::Check when adding a new non-hidden command. Returned: {res}\"\n+            )\n+\n+        for idx, argument in enumerate(res.split(\",\")):\n+            elems = argument.split(\":\")\n+\n+            if option.set_typed_option(idx+1, elems[0]):\n+                continue\n+\n+            if elems[1] == \"boolean\":\n+                option.set_bool_args(idx+1)\n+                continue\n+\n+            if elems[1] == \"file\":\n+                option.set_file_args(idx+1)\n+                continue\n+\n+            if not option.has_option(idx+1):\n+                option.set_unknown_args(idx+1)\n+\n+        return option\n+\n+    def get_command_options(self, command):\n+        \"\"\" Returns the corresponding PossibleArgs for the command. \"\"\"\n+\n+        # verify it's not a special option first\n+        for soption in SPECIAL_OPTIONS:\n+            if command == soption.command:\n+                return self.parse_single_helper(soption)\n+\n+        return self.parse_single_helper(PossibleArgs(command))\n+\n+    def generate_completion_block(self, options):\n+        commands = [o.command for o in options]\n+        self.log.info(f\"Generating part of the completion file for options {commands}\")\n+\n+        if len(options) == 0:\n+            return \"\"\n+\n+        generated = \"\"\n+        max_pos_options = max(options, key=lambda o: o.get_num_args()).get_num_args()\n+        for cword in range(max_pos_options, 0, -1):\n+            this_options = [option for option in options if option.has_option(cword)]\n+            if len(this_options) == 0:\n+                continue\n+\n+            # group options by their arguments value\n+            grouped_options = defaultdict(list)\n+            for option in this_options:\n+                arg = option.generate_autocomplete(cword)\n+                grouped_options[arg].append(option)\n+\n+            # generate the cword block\n+            indent = 12 if cword > 1 else 8\n+            generated += generate_start_complete(cword)\n+            for line, opt_gr in grouped_options.items():\n+                opt_gr.sort(key=lambda o: o.command)  # show options alphabetically for clarity\n+                args = '|'.join([o.command for o in opt_gr])\n+                generated += f\"\\n{' '*indent}{args})\\n\"\n+                generated += f\"{' ' * (indent + 4)}{line}\\n{' ' * (indent + 4)}return 0\\n{' ' * (indent + 4)};;\"\n+            generated += generate_end_complete(cword)\n+\n+        return generated\n+\n+    def generate_completion_file(self, commands):\n+        try:\n+            with open(self.options.header, 'r', encoding='utf-8') as header_file:\n+                header = header_file.read()\n+\n+            with open(self.options.footer, 'r', encoding='utf-8') as footer_file:\n+                footer = footer_file.read()\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not read header/footer ({self.options.header} and {self.options.footer}) files. \"\n+                        f\"Tell the test where to find them using the --header/--footer parameters ({e}).\"\n+            )\n+        return COMPLETION_HEADER + header + commands + footer\n+\n+    def write_completion_file(self, new_file):\n+        try:\n+            with open(self.options.completion, 'w', encoding='utf-8') as completion_file:\n+                completion_file.write(new_file)\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not write the autocomplete file to {self.options.completion}. \"\n+                        f\"Tell the test where to find it using the --completion parameters ({e}).\"\n+            )\n+\n+    def read_completion_file(self):\n+        try:\n+            with open(self.options.completion, 'r', encoding='utf-8') as completion_file:\n+                return completion_file.read()\n+        except Exception as e:\n+            raise AssertionError(\n+                        f\"Could not read the autocomplete file ({self.options.completion}) file. \"\n+                        f\"Tell the test where to find it using the --completion parameters ({e}).\"\n+            )\n+\n+\n+    def run_test(self):\n+        # self.config is not available in self.add_options, so complete filepaths here\n+        src_dir = self.config[\"environment\"][\"SRCDIR\"]\n+        test_data_dir = path.join(src_dir, 'test', 'functional', 'data', 'completion')\n+        if self.options.header is None or len(self.options.header) == 0:\n+            self.options.header = path.join(test_data_dir, 'bitcoin-cli.header.bash-completion')\n+\n+        if self.options.footer is None or len(self.options.footer) == 0:\n+            self.options.footer = path.join(test_data_dir, 'bitcoin-cli.footer.bash-completion')\n+\n+        if self.options.completion is None or len(self.option.completion) == 0:",
      "path": "test/functional/tool_cli_bash_completion.py",
      "position": null,
      "original_position": 261,
      "commit_id": "abf6ad42bdb2c8f3f01b11df1658268d984bc574",
      "original_commit_id": "7c8b021fee3b528ff28b85ec2e8933ebc5b2b488",
      "in_reply_to_id": 1844079617,
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2024-12-18T07:28:42Z",
      "updated_at": "2024-12-18T07:28:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30860#discussion_r1889745910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889745910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30860"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    }
  ]
}