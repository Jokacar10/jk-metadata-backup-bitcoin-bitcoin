{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
    "id": 1483724058,
    "node_id": "PR_kwDOABII585Yb9Ua",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28307",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28307.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28307.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
    "number": 28307,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc, wallet: fix incorrect segwit redeem script size limit",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Fixing https://github.com/bitcoin/bitcoin/issues/28250#issuecomment-1674830104 and more.\r\n\r\nCurrently, redeem scripts longer than 520 bytes, which are technically valid under segwit rules, have flaws in the following processes:\r\n1) The multisig creation process fails to deduce the output descriptor, resulting in the generation of an incorrect descriptor. Additionally, the accompanying user warning is also inaccurate.\r\n2) The `signrawtransactionwithkey` RPC command fail to sign them.\r\n3) The legacy wallet `addmultisigaddress` wrongly discards them.\r\n\r\nThe issue arises because most of these flows are utilizing the legacy spkm keystore, which imposes\r\nthe [p2sh max redeem script size rule](https://github.com/bitcoin/bitcoin/blob/ded687334031f4790ef6a36b999fb30a79dcf7b3/src/script/signingprovider.cpp#L160) on all scripts. Which blocks segwit redeem scripts longer than\r\nthe max element size in all the previously mentioned processes (`createmultisig`, `addmultisigaddress`, and\r\n`signrawtransactionwithkey`).\r\n\r\nThis PR fixes the problem, enabling the creation of multisig output descriptors involving more than 15 keys and\r\nallowing the signing of these scripts, along with other post-segwit redeem scripts that surpass the 520-byte\r\np2sh limit.\r\n\r\nImportant note:\r\nInstead of adding support for these longer redeem scripts in the legacy wallet, an \"unsupported operation\"\r\nerror has been added. The reasons behind this decision are:\r\n\r\n1) The introduction of this feature brings about a compatibility-breaking change that requires downgrade\r\n    protection; older wallets would be unable to interact with these \"new\" legacy wallets.\r\n\r\n2) Considering the ongoing deprecation of the legacy spkm, this issue provides another compelling\r\n    reason to transition towards descriptors.\r\n\r\nTesting notes:\r\nTo easily verify each of the fixes, I decoupled the tests into standalone commits. So they can be\r\ncherry-picked on top of master. Where `rpc_createmultisig.py` (with and without the `--legacy-wallet`\r\narg) will fail without the bugs fixes commits.\r\n\r\nExtra note:\r\nThe initial commits improves the `rpc_createmultisig.py` test in many ways. I found this test very\r\nantiquated, screaming for an update and cleanup.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2023-08-21T23:18:02Z",
    "updated_at": "2025-06-05T06:13:55Z",
    "closed_at": "2024-06-05T01:40:09Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-06-05T01:40:09Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "76a33be21d4243f9e8f18c164f776adf7c99a56c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "furszy:2023_invalid_segwit_redeem_script_limit",
      "ref": "2023_invalid_segwit_redeem_script_limit",
      "sha": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 6,
        "watchers_count": 6,
        "size": 427115,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-02T21:17:49Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2025-05-21T08:37:58Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f5b6f621fff7540ca97974b26a66ca1cc6db018c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37314,
        "stargazers_count": 83974,
        "watchers_count": 83974,
        "size": 283306,
        "default_branch": "master",
        "open_issues_count": 741,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-04T22:09:15Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-05T05:21:59Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 167,
    "deletions": 140,
    "changed_files": 11,
    "commits": 10,
    "review_comments": 25,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 1687186422,
      "node_id": "IC_kwDOABII585kkGv2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687186422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-21T23:18:05Z",
      "updated_at": "2024-06-05T01:12:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2041087253), [theStack](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2063616475), [achow101](https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2097634633) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30019](https://github.com/bitcoin/bitcoin/pull/30019) (test: use assert_greater_than util by kevkevinpal)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1687186422",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "labeled",
      "id": 10151905950,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJdGcqe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10151905950",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T00:56:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10151941308,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJdGlS8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10151941308",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "created_at": "2023-08-22T01:04:58Z"
    },
    {
      "event": "unlabeled",
      "id": 10152299193,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAJdH8q5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10152299193",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T02:27:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10255000869,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJjPuUl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10255000869",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-01T09:06:26Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 10267589042,
      "node_id": "LE_lADOABII585u4fvyzwAAAAJj_vmy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10267589042",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T22:40:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10283637149,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAJk89md",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10283637149",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T13:19:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1708716996,
      "node_id": "IC_kwDOABII585l2PPE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1708716996",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T16:29:01Z",
      "updated_at": "2023-09-06T16:29:01Z",
      "author_association": "MEMBER",
      "body": "concept ACK db38b584e6\r\n\r\nConfirmed this branch fixes the issue mentioned in #28250 \r\n\r\nCode review to follow...\r\n\r\n```\r\n{\r\n  \"address\": \"3JDRACdkEs41yxtYLi6kiqQJdQHLPDxehc\",\r\n  \"redeemScript\": \"602102f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b2103d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad9367221021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed2103a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc92102a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db21032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a210370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea12103878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf210248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec8942103f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac421023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e73722102e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d0159621020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae2103725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce9447421031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41210235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc652102ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c210282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e210279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03210293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d0114ae\",\r\n  \"descriptor\": \"sh(wsh(multi(16,02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b,03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672,021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed,03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9,02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db,032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a,0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1,03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf,0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894,03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4,023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372,02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596,020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae,03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474,031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41,0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65,02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c,0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e,0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03,0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d)))#xfjxuvgn\"\r\n}\r\n```",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-1708716996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "reviewed",
      "id": 1613931820,
      "node_id": "PRR_kwDOABII585gMqUs",
      "url": null,
      "actor": null,
      "commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1613931820",
      "submitted_at": "2023-09-06T18:10:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10300538105,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJl9bz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10300538105",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cc056d3ea312352fcb9a61141eb67d6a6171d30e",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/cc056d3ea312352fcb9a61141eb67d6a6171d30e",
      "created_at": "2023-09-06T20:59:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10300543759,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAJl9dMP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10300543759",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at": "2023-09-06T21:00:27Z"
    },
    {
      "event": "reviewed",
      "id": 1614210961,
      "node_id": "PRR_kwDOABII585gNueR",
      "url": null,
      "actor": null,
      "commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks @pinheadmz. [Small diff ](https://github.com/bitcoin/bitcoin/compare/db38b584e62b76218ad4e74e18e10bca62fc3b7f..cc056d3ea312352fcb9a61141eb67d6a6171d30e).\r\n\r\nAdded coverage for `createmultisig` +20 keys error.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1614210961",
      "submitted_at": "2023-09-06T21:02:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "labeled",
      "id": 11470360988,
      "node_id": "LE_lADOABII585u4fvyzwAAAAKrr9Gc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11470360988",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T15:05:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1845552797,
      "node_id": "PRR_kwDOABII585uAOad",
      "url": null,
      "actor": null,
      "commit_id": "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845552797",
      "submitted_at": "2024-01-26T13:29:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11609210857,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAKz9n_p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609210857",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at": "2024-01-26T13:56:24Z"
    },
    {
      "event": "reviewed",
      "id": 1845803551,
      "node_id": "PRR_kwDOABII585uBLof",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks theStack.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1845803551",
      "submitted_at": "2024-01-26T13:57:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "unlabeled",
      "id": 11609928305,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAK0AXJx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609928305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T15:06:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1970177563,
      "node_id": "PRR_kwDOABII5851boYb",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Ack [a0ebb92](https://github.com/bitcoin/bitcoin/pull/28307/commits/a0ebb929e865903ca1cc2674e74906a806e73109)\r\n\r\nTesting Methodology:\r\n1. Make, successful\r\n2. All functional tests, successful\r\n3. Executed `createmultisig` command with the following output - don't see `Unable to make chosen address type, please ensure no uncompressed public keys are present.` warning anymore, nor do I see `ERROR: FillableSigningProvider::AddCScript(): redeemScripts > 520 bytes are invalid` message in the logs.\r\n\r\n```\r\nbcli createmultisig 16 \"[\\\"02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b\\\",\\\"03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672\\\",\\\"021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed\\\",\\\"03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9\\\",\\\"02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db\\\",\\\"032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a\\\",\\\"0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1\\\",\\\"03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf\\\",\\\"0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894\\\",\\\"03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4\\\",\\\"023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372\\\",\\\"02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596\\\",\\\"020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae\\\",\\\"03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474\\\",\\\"031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41\\\",\\\"0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65\\\",\\\"02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c\\\",\\\"0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e\\\",\\\"0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03\\\",\\\"0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d\\\"]\" \"p2sh-segwit\"\r\n{\r\n  \"address\": \"2N9mdDwZmrKZNBkX61qidLnPZqkVW8gx3KR\",\r\n  \"redeemScript\": \"602102f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b2103d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad9367221021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed2103a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc92102a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db21032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a210370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea12103878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf210248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec8942103f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac421023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e73722102e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d0159621020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae2103725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce9447421031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41210235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc652102ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c210282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e210279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03210293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d0114ae\",\r\n  \"descriptor\": \"sh(wsh(multi(16,02f293c4d026a536a082453f8327f305ae0a0c59350b396205e15fbec2af67390b,03d7b6a7e972f6e1a532f9f49a7cc35055a0ffd7cec5f81728f6a3fdf4dad93672,021f360d51b8eb43422fe942c837ad16e36bab87c5f7567609de9a38e205fb51ed,03a778eaee9cc18a4e5e02a78f403082d4e6f3a9c0d9edaea20b9ad86089de7fc9,02a3c95e41e8272c6842df8c9da492ef5e03bbc4ca17c22ce1f88570e716e187db,032e1d465bc5cdea674337934fb861d097dd7ab20289e4d41de14a6cafcd61d30a,0370fd35da88778a805ce9acc88c0020e3b14cacaa30f99d829207e1896d782ea1,03878a4b831af4fee069964448ccca999071633fcc751d296e8c5325167274febf,0248f8621596029568070dda40bc1e3ace78df320b5ebf0d6a431536e9af3ec894,03f757260835b7e439b244a9b10f5645966d7dcff9d2648c400a0d6827f4a64ac4,023b3972554e123985b6c3d8575e6fd3384f59a58ef91e0d39ba5905dad49e7372,02e32652928f21764e02822d39ffd1075c428e372a06fe7247023d5b60f1d01596,020e002818c48b1d1766f6196e09db90f51e155bbd49be0ad743d1fa6b7e8efcae,03725d482f0c77f4feb1ecbea28f036b30889f462222002e88aa8f8346dce94474,031fa2798d9f40bc2746f91f300460be9091e10f1b4baa37843cd41c965b0f9b41,0235b7b545398ce9692f319e6eefe114eae50f008f46d33baf19418e0f17e3bc65,02ff72a2b54370c0b1501228b6a210bc36a16535cc358bf7839c85a6ae2c41725c,0282ce44556f5a81c7a698dc8fdba12089740df420af93002e80a752020e5d939e,0279f5b244862e27f69284befb0299909139b899d2702b3e74b4317ed5b2947e03,0293d0b090906afdee07dabedf34798293246ce06ade2e3887302f289008f25f4d)))#xfjxuvgn\"\r\n}\r\n```",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-1970177563",
      "submitted_at": "2024-03-31T11:40:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "reviewed",
      "id": 2038429816,
      "node_id": "PRR_kwDOABII5855f_h4",
      "url": null,
      "actor": null,
      "commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK a0ebb929e865903ca1cc2674e74906a806e73109\r\n\r\nDiff since last ACK is minimal, just nits in tests. Since it's been a while, I re-reviewed the whole PR anyway. Most of the changes are cleanup refactors in the relevant tests which I agree are worthwhile. The main bugfix is switching from `FillableSigningProvider` to `FlatSigningProvider` when adding a CScript in`AddAndGetDestinationForScript()`, because the latter does not require that `redeemScript.size() <= MAX_SCRIPT_ELEMENT_SIZE`\r\n\r\nThe script element size check is preserved (appropriately only for LEGACY output types) in the calling function `AddAndGetMultisigDestination()`\r\n\r\nConfirmed the test fails on master with `redeemScripts > 520 bytes are invalid` (had to manually revert a few refactors to run it on master) and passes on the branch.\r\n\r\nAlso ran the `createmultisig` RPC on PR branch and master to ensure the bug is fixed: https://gist.github.com/pinheadmz/856f94c1c483343f63e6f144638ac96f\r\n\r\nI do have one concern which is that RPC `signrawtransactionwithkey` is modified but I do not think it is tested directly with a legacy multisig with > 15 keys. Such a template would have to be constructed manually because our own RPC `createmultisig` will not do it. Just looking at the code I think it would be possible for a user to sign an invalid legacy transaction, if they could find a way to construct one. I may try to write this test later today and will report back!\r\n\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK a0ebb929e865903ca1cc2674e74906a806e73109\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmY0/dIACgkQ5+KYS2KJ\r\nyTrKJg/+PuYRj9moqfODqMb2nXQwhsS6qMp8iLA77aNLiXGTZzOl1b3T3JqP0/6l\r\n1sgdfrqHNMnqJ9HCkazLUcx5a5ZyK/3QjmxhgrxybmQ+m1QFr+GfHqZjehekgWP+\r\nkgpJ9YSFL3i/lNCQZBNCnZfFynK6zb+jD/5NSPWEWIDM/C8VMGWNr6ZvOyOJZvH7\r\nYvV4gJx3CGYT8n0KGIyDDU6PdxHqspa6pHjhmVgN0Uy/ghaiofC7IuNSznJ7R6xH\r\nPLPRArXh9u3kO8gzPU1NJjnzrclQZnfHHbIqP5gk5uXBFXU2IcMaWt0hfYeWtOr+\r\nJw0nVQj5yd2RH+TpsJbrEy+hfhjQL0ZtoXcZp21/psD/GhEP/ke0kcVDza6t+WJX\r\nqmvw6HZ0Shxi0wiGqtRTpKTfDxA5PXBcdARQljVE0eIgw+dg8neKW1vYFLZQ1bdG\r\n9f9qsusf1QoMDzP2fomYYBYgtpCdb6q+IBigNVJ0+pmEzvrhs6L8BKau5Yvf7AEo\r\n79BkSmT11l+1X+E+xl2rxB8j4GIMItto6DG57sGt5VlTzkxqmxvY7fPEpwsYBEOQ\r\nuOjVcIgdyNsdvR5h5rKfu6KMCTtLurC/ny56H3dqhbAH/uuRYAESP/g1JNZ+2n2n\r\npk8cmwdSpRHFnlm0B5YWDOHhWFK+HAq/wTbsPvho2rWhsY88cYU=\r\n=Aora\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2038429816",
      "submitted_at": "2024-05-03T15:37:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "review_requested",
      "id": 12698063490,
      "node_id": "RRE_lADOABII585u4fvyzwAAAAL03RKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698063490",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T15:37:29Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 12698835878,
      "node_id": "LE_lADOABII585u4fvyzwAAAAL06Num",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12698835878",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T16:55:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM2MzVkNDMyNjgxODQ3MzEzYzA5OGY5ODI3NDgzMzcyYTg0MGU3MGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3635d432681847313c098f9827483372a840e70f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3635d432681847313c098f9827483372a840e70f",
      "tree": {
        "sha": "534c6f13b0deeca2a40f443e045612a297d6b74a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/534c6f13b0deeca2a40f443e045612a297d6b74a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 534c6f13b0deeca2a40f443e045612a297d6b74a\nparent f5b6f621fff7540ca97974b26a66ca1cc6db018c\nauthor furszy <matiasfurszyfer@protonmail.com> 1692449670 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756794 -0300\n\ntest: rpc_createmultisig, remove manual wallet initialization\n\nThere is no need to manually initialize the wallets within the test\ncase. The test framework already initializes them when `_requires_wallet`\nis true.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HLoACgkQXdI8zGhq\npiOeAQ//To+Z0wLrifR2SJq7UiHFB+vgC/ITFEDH0qso8qQlpAiHc4ElpdmBWWwj\nl15jDyfUMCTEoskKfeupavcLbqICFZsoRcnemo5/KObc4bHL0q+2hkiwh5ElovcA\nZHHcZoMHYYW4TpvpBIhUgjM9/n/vgoRL1arD8Thhpzu5Y907I39HzGB1fgOY5+dY\n6JFhiZ7hhc+HUl0F1pLgL4f98FQ9gJefhC0C0BVID/u0mzfdtmElUTTMOpEybxx/\nr4DpFWo89p87tpZVSWcUWs18MDj5u62e9zKpUp2UxzsphMRozoHi1K0+TpqRUE4S\n3FXsm2w8rA0z1RmHG4JCMpdacd6dV7HwV3MTy/onbTxQ/3ivhbECAMstOJfquOyK\n/7eIu+BOcM5BtZgFh6gNl9Yueb5piTVODmxgKDB+cF8QOykobquFVApbYfYzlkFO\nCQgwk+yGmAyTawApVWqmhxNY9Et5PRuMCuHDfP+REn5Nt/zqgJtJ6Qe9QH8JIfdw\niYw8MsiAFQZhwGPsHdthmoWo7EHwDqX5TygxK2UxvcBGzHDI48JjbTMgSqD7XeUO\nsCI4flzBtFHoygnCKGJd58e1flnQh0vDWXpwErnb1AYAK3aaedO38sKrBS8gyp9k\n+WATWmxWbF2YQ79TDWPgyejcVDla+eV9KrjJSsESJOdGg2KILNU=\n=yY1V\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5b6f621fff7540ca97974b26a66ca1cc6db018c",
          "sha": "f5b6f621fff7540ca97974b26a66ca1cc6db018c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f5b6f621fff7540ca97974b26a66ca1cc6db018c"
        }
      ],
      "message": "test: rpc_createmultisig, remove manual wallet initialization\n\nThere is no need to manually initialize the wallets within the test\ncase. The test framework already initializes them when `_requires_wallet`\nis true.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:19:54Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T12:54:30Z"
      },
      "sha": "3635d432681847313c098f9827483372a840e70f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1YTMyODk0MzM2MmNmYWM2ZTkwZmQ0ZTFiMTY3YzM1N2Q1M2I3ZDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5a328943362cfac6e90fd4e1b167c357d53b7d4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5a328943362cfac6e90fd4e1b167c357d53b7d4",
      "tree": {
        "sha": "036a89cca880d428e1b53a98c5e889468df43414",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/036a89cca880d428e1b53a98c5e889468df43414"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 036a89cca880d428e1b53a98c5e889468df43414\nparent 3635d432681847313c098f9827483372a840e70f\nauthor furszy <matiasfurszyfer@protonmail.com> 1692474474 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756794 -0300\n\ntest: refactor, multiple cleanups in rpc_createmultisig.py\n\nCleaning up the test in the following ways:\n\n* Generate priv-pub key pairs used for testing only once (instead of doing it 4 times).\n* Simplifies 'wmulti' wallet creation, load and unload process.\n* Removes confusing class members initialized and updated inside a nested for-loop.\n* Simplifies do_multisig() outpoint detection:\n  The outpoint index information is already contained in MiniWallet's\n  `send_to` return value dictionary as \"sent_vout\".\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HLoACgkQXdI8zGhq\npiMwjg//b17gPUM8qHQeZsVKeZkdyJgxmsZHQ/zQzVGAyIUM0BjAv9skc2/1OEtK\nK7msiUNwz0vaa5Foc7R9q5QnuN29u06c0VTj0YXX1HskWg5iye//vZe/P7bhXQ7o\n20ENLHzuRYvMDd4CNVWXDqcF/+7Ca8x5Y2zxtTq/4CG5glI0XL0BcncIZPHN2tli\nnVy8mTmsG9HJj3IONWjNDFcyIuXf+ZV6pnGKsAblb3I/ERoxq5PdR8EdP0LpdjA9\nFRas/uqW7cgR4C6AGVoZeXG4ObzoHLb50axojFdZh6QtbLE56BTTJ5BvYh5S1I3n\nL171frgH/DUHBBcn6vjOKhjgxODyUq7vAMB/cCMojwQDEnCk8gL3NbGUXwa4oXYG\n2E/irof5aspXL04sGTLI6YfXnpZeOGyX4GtWa2fQ/9gjuguYp73LuWrjkXtSj6ls\n/vlICxK94NBZR0UKqHTi0Iv48BoCiY2ef0zThbyn3HnPs4EeQ7zsGgDAd7YQUXEA\ngihUAS/rOS0uvD2vBgNMegBPC0s/4kOrtAiG7/Um0+LGO5fmdpytT7/AjdC3zpPm\ntP5LMTZycYP9kapD+8TOnrVjBEjJ5MOFiiaybLyWoFE7+rNrkRrSEokUcNo5Ktpo\nl/jsswFuNdGAT+eFpix+JEcxbtYzPw6ND+VYzpUPJzUxSehRugE=\n=SORm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3635d432681847313c098f9827483372a840e70f",
          "sha": "3635d432681847313c098f9827483372a840e70f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3635d432681847313c098f9827483372a840e70f"
        }
      ],
      "message": "test: refactor, multiple cleanups in rpc_createmultisig.py\n\nCleaning up the test in the following ways:\n\n* Generate priv-pub key pairs used for testing only once (instead of doing it 4 times).\n* Simplifies 'wmulti' wallet creation, load and unload process.\n* Removes confusing class members initialized and updated inside a nested for-loop.\n* Simplifies do_multisig() outpoint detection:\n  The outpoint index information is already contained in MiniWallet's\n  `send_to` return value dictionary as \"sent_vout\".\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:19:54Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T19:47:54Z"
      },
      "sha": "b5a328943362cfac6e90fd4e1b167c357d53b7d4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI1YTgxNzA1ZDM3NmU4Yzk2ZGFkNDU0MzZhZTNmY2E5NzViM2RhZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25a81705d376e8c96dad45436ae3fca975b3daf5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/25a81705d376e8c96dad45436ae3fca975b3daf5",
      "tree": {
        "sha": "9ef98f1c5c4a1fe557ef9517be3d46049e788fd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ef98f1c5c4a1fe557ef9517be3d46049e788fd7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9ef98f1c5c4a1fe557ef9517be3d46049e788fd7\nparent b5a328943362cfac6e90fd4e1b167c357d53b7d4\nauthor furszy <matiasfurszyfer@protonmail.com> 1692481866 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756795 -0300\n\ntest: rpc_createmultisig, remove unnecessary checkbalances()\n\nThe function exists merely to check that the node2's wallet\nreceived the transactions created during all the 'do_multisig()'\ncalls.\nIt was created as a standalone function because 'getbalance()'\nonly returns something when transactions are confirmed. So,\nthe rationale on that time was to have a method mining blocks\nto confirm the recently created transactions to be able to\ncheck the incoming balance.\nThis is why we have the \"moved\" class field.\n\nThis change removes all the hardcoded amounts and verifies\nnode2 balance reception directly inside 'do_multisig()'.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HLsACgkQXdI8zGhq\npiM6nw/+NJ31ybEfgPxtQy8kIOaMV6PQxCWAaINpMwb98tOOkYxCO6GnbW5mE7Xo\nOpBBg0jEDMwPTHsvvRjIVFixfcGzn/S9IiFG1majQd+/3M9I+pTbbO+vh7TLSv5a\n+knv3SbGUcWcJKGP4Tb6ZznYHXvZdMaD9mHWJ/fIbmeMu7lnaFcdl/4fsJaV12X1\nuP50SxPgU6D3LljueDzaI22eG/+MBWhTKOLLhtbr+q+iYwcrvHLwfJMlQSjcOxq1\npX59DlcGQlgFEileYnZRkpeQveLJ0kMVYc+Pb7MpdWHCI6OsGbpkKy0xbOorCXDh\npCbFFtnL79CJgjsutLzy+mYdvxsEtAgqn8Hvn46/lCOD1OffQ9CeTFuMNjECsEVv\n4QrnKbrT/VSDGZP8eOSaAIm1QgwBeUqkWnxE+3jTojkzmQ6VH0rgnHswQSegCSuh\nLNDXSz6p7YHdPrLZ50pLUSuN3slAnEO9N7fonwznEV9doKi6atrTFWswiv2XbR3X\nbyIP5b8o0bOR6TuonwVie1lxDX7Z7/mFEfjqdGun5Us77sQrS8K61hZtAwz3bSS+\neKAOvytvxiJOrw9NwM5wp26ABe+dCF22DM2e+q0JaVw8w5eeqp0zCE2+vf8oebKq\nM9UAKDCcp4S+uC2F14Tv1Zp/2BWRg62sE9zq+an0mBhO2+wHxp4=\n=4vdg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5a328943362cfac6e90fd4e1b167c357d53b7d4",
          "sha": "b5a328943362cfac6e90fd4e1b167c357d53b7d4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5a328943362cfac6e90fd4e1b167c357d53b7d4"
        }
      ],
      "message": "test: rpc_createmultisig, remove unnecessary checkbalances()\n\nThe function exists merely to check that the node2's wallet\nreceived the transactions created during all the 'do_multisig()'\ncalls.\nIt was created as a standalone function because 'getbalance()'\nonly returns something when transactions are confirmed. So,\nthe rationale on that time was to have a method mining blocks\nto confirm the recently created transactions to be able to\ncheck the incoming balance.\nThis is why we have the \"moved\" class field.\n\nThis change removes all the hardcoded amounts and verifies\nnode2 balance reception directly inside 'do_multisig()'.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:19:55Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T21:51:06Z"
      },
      "sha": "25a81705d376e8c96dad45436ae3fca975b3daf5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRmMzNkYmQ4ZjhjMGUyOWYzN2IwNGU2YWY2ZDJjNzkwNWVjY2VhZjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6",
      "tree": {
        "sha": "a56a11efbe5071e88f7ae61d7ceacf78ea201ce8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a56a11efbe5071e88f7ae61d7ceacf78ea201ce8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a56a11efbe5071e88f7ae61d7ceacf78ea201ce8\nparent 25a81705d376e8c96dad45436ae3fca975b3daf5\nauthor furszy <matiasfurszyfer@protonmail.com> 1692483480 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756795 -0300\n\ntest: rpc_createmultisig, decouple 'test_mixing_uncompressed_and_compressed_keys'\n\nAnd also, simplified the test a bit by re-using the already existing 'wallet_multi'\n(instead of creating a new one). Plus, removed the 'is_bdb_compiled()' calls\nwhich were there basically to check if the test has the wallet compiled or not.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HLsACgkQXdI8zGhq\npiM2mQ/+PPsxbe8ZYX1pUpGhub1UdQaSVdcQ2hCQKs977AKPaBhkM/E9qAVXFXZE\n+eKV97GybzAH3+QN0VgWd7X4ZHeXHSGNfT4UCopNxx+hmFWXndF+FIFvPmOoaGSv\n+3k+movhpWz3/p7XxQOesx5j1sIHvjmD1lJVVUoho+e5/EKMCU/+7UkE7gNGUaX+\nHI15K4I/pYMl16HDAiOO4eU6uCzZ/j1FeApHg81cib0AWwDkn9qM5iluAQhKwwUO\nbEVEcRAk5nwqDsl3kwIdRmbEcNRk4Zt3boMS2C22ely+8RooXBS6CRm83YGmDV8I\nveuIX/WQ/tDPB2AGJtYdWyKRR8KSawXeKv/idAhHQH4mD7e5nQivFKzFjGObIVLK\ntKU+Pfu443CluQbyQkitGb9GswBYoxmJ8GQBk5ZFKXn1ceO/rP2ZzmGXPQ7ZPFDO\nu478YWLjp4DdcS/T7uDpF7YB7zfST2NYsedOGvOEh9ciPTxqAahSC5uWLNJLs5L2\n1K62cNAlxHe+rGMtCzP/q2/tcgWLqfzdCbltvk4v56ibMzB7ti0rx56O7lngHNhc\na2rFM/JUhNVL/rDa/EV9NQOsmk019hT6suwtKkv/pjtkx8gzA58M6jntawStQtgA\n7gb1flQ7ZxrIYlzK+WXELCAmXG7MhJwK7ZwXjRmW/+4dLwmpw8E=\n=z5IE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25a81705d376e8c96dad45436ae3fca975b3daf5",
          "sha": "25a81705d376e8c96dad45436ae3fca975b3daf5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/25a81705d376e8c96dad45436ae3fca975b3daf5"
        }
      ],
      "message": "test: rpc_createmultisig, decouple 'test_mixing_uncompressed_and_compressed_keys'\n\nAnd also, simplified the test a bit by re-using the already existing 'wallet_multi'\n(instead of creating a new one). Plus, removed the 'is_bdb_compiled()' calls\nwhich were there basically to check if the test has the wallet compiled or not.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:19:55Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T22:18:00Z"
      },
      "sha": "4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3YTE3M2I1Nzg1Y2RhNDYwNDcwZGY5YTc0YTBlMGY5NGQ3ZjlhMTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7a173b5785cda460470df9a74a0e0f94d7f9a18",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f7a173b5785cda460470df9a74a0e0f94d7f9a18",
      "tree": {
        "sha": "9b22017e51ab885372faf9aafb76532075bf9375",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b22017e51ab885372faf9aafb76532075bf9375"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9b22017e51ab885372faf9aafb76532075bf9375\nparent 4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6\nauthor furszy <matiasfurszyfer@protonmail.com> 1692483604 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756795 -0300\n\ntest: rpc_createmultisig, decouple 'test_sortedmulti_descriptors_bip67'\n\nMove-only commit. No behavior change.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HLsACgkQXdI8zGhq\npiPu4Q/+LzIj4egyB7686AGTL9h41mdnoZ0mBXr4I38LSO/v2WLakJKEn68QigJ0\nAp9DS2jf5T7JhQrTyb3BQzv03i0jX2bOD0txRLfNcrKdZiC2qgj4Wl5/x+GSuD1S\nOEQQrZyb2B9H/n6wRrKVAOJhz1+BmseX9qi7MKX8c1SG1GThidj3YG7hCPo2Izky\nbZIF9Hj7jPExF40u34M3p817ASuFfBZv9VzqSseNZLSZ9Z3/zRvfNj2+1lfi94Kp\n50yZZ3u8CC85GmqkdRTnZDw00ZQF+deJJmViGnGD5Z2BZUOXUNgnEmCYe6k3bpO4\n06FNlY3s3JDoyAFP5hLZWCLT/4ObPTFG+boifM6c8UIaI/J3mptIyUnIFgPKYxzR\nAsSyIFQImTJ6M4kDmNn1h4fPeb1b8Pc3FRv0q2eMMM77/2kopgOCgTDGIXSh1buf\nFr5t8lkXGhj3qawSbusW51rI8Ye6KeYlXzxSoi5Q3ECwuVfLeHUJN9CEsE+gL5yf\nahZ3a9c+2WqwZoa895bdNHEr4Cdh9W4PXMjNHuiHhIItz7zFnAI5elkGG8AcICOz\npKVjVyBNSmo84ZANfvyQmE/0UDVi8ENsXzAOy1UBAtrJPbGfbBNhnNKtQy1p4U76\nzx3QEo0y4wrwpkYifcAtQZE/DWhST2pun5HKFQZLr5xrtbVSKpY=\n=o6XX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6",
          "sha": "4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4f33dbd8f8c0e29f37b04e6af6d2c7905ecceaf6"
        }
      ],
      "message": "test: rpc_createmultisig, decouple 'test_sortedmulti_descriptors_bip67'\n\nMove-only commit. No behavior change.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:19:55Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-19T22:20:04Z"
      },
      "sha": "f7a173b5785cda460470df9a74a0e0f94d7f9a18"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjOWZlZGZjNDVmYTdjYmQ2ODAxY2E1ZmQ3NTY4NjNlYzlhNjkxMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c",
      "tree": {
        "sha": "c8a98525a63c0cbfcdab8a30c7d8aa7d6cc4328e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8a98525a63c0cbfcdab8a30c7d8aa7d6cc4328e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c8a98525a63c0cbfcdab8a30c7d8aa7d6cc4328e\nparent f7a173b5785cda460470df9a74a0e0f94d7f9a18\nauthor furszy <matiasfurszyfer@protonmail.com> 1692650734 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756844 -0300\n\nfix incorrect multisig redeem script size limit for segwit\n\nThe multisig script generation process currently fails when\nthe user exceeds 15 keys, even when it shouldn't. The maximum\nnumber of keys allowed for segwit redeem scripts (p2sh-segwit\nand bech32) is 20 keys.\nThis is because the redeem script placed in the witness is not\nrestricted by the item size limit.\n\nThe reason behind this issue is the utilization of the legacy\np2sh redeem script restrictions on segwit ones. Redeem scripts\nlonger than 520 bytes are blocked from being inserted into the\nkeystore, which causes the signing process and the descriptor\ninference process to fail.\n\nThis occurs because the multisig generation flow uses the same\nkeystore as the legacy spkm (FillableSigningProvider), which\ncontains the 520-byte limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HO0ACgkQXdI8zGhq\npiPtKg//fJSwJI8m/xqHSEKWd3DhupOOjkpxQ3eYHtNflTjB6IgCt1utUPYeAZo3\nC9PSk1AlTqErGLM1NqdmDmTEvbWYN9YfA/4uq/RkZYDE7tWo12xB8v+Presbud0Q\ncGiiw2V1UJjfQuIpKNLWyrWQyUKxgEJlesRI63NjV1dAuZ/fEto0Lb/ccs8kinL2\nmtaAc5/0BHTDCKvzrcOGN1MXyEgQcanNDikMRVoFjQfdyjyPZtVPWOl2seW7SYZF\n6TcoD/WdOL1xLZQe2qlit1vvsJnF3MOZSCuF0uMfloKh6m2D8YL/A4bdtb/akrZ5\nvLO1r8OUDwxRVskxwqpKAvm9ovjvJhUJ0drFKWVFn5HQFfqX1zAmWvdNl3FicuVM\nyK7ZOP/tBRzoGhQ42vYeHduq2kbsVRagtSzCJmhs8wdBGOLRNtRBxBSz8Gc+u9Az\nOMvrxAIn+gIUkSPPC9fFkDPk/+R8L9RCvqbKo8PrzwdWoEmQge5ydMeiwsDbnUvx\nGiVeW0ycnxO/E+ltAOI9EFGVNEY7D/OK1gj9NUq93aC5NCPUi67UlQcYx100hdAo\nobjbpDYQHSgnxc46CyqtGA5duMm6oh2TxIZQ2F3JHRrcNb4pVB/ul159+GsxYhpe\nfkXQx39nF8GGdR4bPv73+r6ABbzYOkrU1toaTFMfR4f+JfSc0jA=\n=iSlP\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7a173b5785cda460470df9a74a0e0f94d7f9a18",
          "sha": "f7a173b5785cda460470df9a74a0e0f94d7f9a18",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f7a173b5785cda460470df9a74a0e0f94d7f9a18"
        }
      ],
      "message": "fix incorrect multisig redeem script size limit for segwit\n\nThe multisig script generation process currently fails when\nthe user exceeds 15 keys, even when it shouldn't. The maximum\nnumber of keys allowed for segwit redeem scripts (p2sh-segwit\nand bech32) is 20 keys.\nThis is because the redeem script placed in the witness is not\nrestricted by the item size limit.\n\nThe reason behind this issue is the utilization of the legacy\np2sh redeem script restrictions on segwit ones. Redeem scripts\nlonger than 520 bytes are blocked from being inserted into the\nkeystore, which causes the signing process and the descriptor\ninference process to fail.\n\nThis occurs because the multisig generation flow uses the same\nkeystore as the legacy spkm (FillableSigningProvider), which\ncontains the 520-byte limit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:20:44Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:45:34Z"
      },
      "sha": "0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkOWE5MWM0ZWE2YjNiYjMyZWY0MTMxYmNhODZmMWQ2NjgzZmM5MDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901",
      "tree": {
        "sha": "7b2e9342ff9a9ba09b29149354612a1cd4588160",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b2e9342ff9a9ba09b29149354612a1cd4588160"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7b2e9342ff9a9ba09b29149354612a1cd4588160\nparent 0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c\nauthor furszy <matiasfurszyfer@protonmail.com> 1692651009 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756845 -0300\n\nrpc: bugfix, incorrect segwit redeem script size used in signrawtransactionwithkey\n\nThe process currently fails to sign redeem scripts that are longer than\n520 bytes. Even when it shouldn't. The 520 bytes redeem scripts limit\nis a legacy p2sh rule, and not a segwit limitation.\n\nSegwit redeem scripts are not restricted by the script item size limit.\n\nThe reason why this occurs, is the usage of the same keystore used by\nthe legacy spkm. Which contains blockage for any redeem scripts longer\nthan the script item size limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HO0ACgkQXdI8zGhq\npiNKPA/+J6oue91pv6rjRKH+/8WYcdPvSbvhCXnukmTK3aWWefo4rYU4x4V0Vcax\np5Gaz3TRsL2JRBo4z0w9BMstVTa0GVf5gIeAVtnUM3z5Y0Y22pwSnGD2euAiLRyp\n5L9LWLF/Ub33sX8GI1m88obrFalSUjH1qhb45h0KfB69OW03YjV1ktpLghXyZfQS\nhVg72MJ5wcQlM4i1YG+W1UEkIN4Uq1w+B/X356RyDGhJmxlr9SFciknVuL4fowU7\nslj8YZLI2WgWy1bTdKy3s3rO6T2ewCU3+WNmjCvAJXJ+BRjIG9TfVS/qmliisn8b\nf7VD4YrPQo9I2ePmYN3woAr6taMxteDxG2my20CyF/liazwaPjmf7BanVmUblU0T\nzsX6C+wfywi4lZXLnDsoCvgfd5inx7ixl2EJDSBbDJp1Tun3HdAwejxx4weZb2uZ\nHbdOGGqCLoBK08tpYBSzPPB/36rhY8idXhXfZrrvoUmzKuLgO4qktLbb2xW7vohr\n4a+LDfvMRX/+bMQX6mTIGSFIP7S1D3D5IpepaoiZ/Rwnu+riUNynxH0Ee+Wm9cAF\nGoFq1j//yVyjZyULTBtgnHK21QyGTPKG+8jxBOkiuO6nfCRna4+lw1xAwwT9qyIE\nbwNiXXaXL2toi7UKX8iRy/seb1LhdWW+N1A+JDTi58RxSMOEvSQ=\n=rDEl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c",
          "sha": "0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c9fedfc45fa7cbd6801ca5fd756863ec9a6911c"
        }
      ],
      "message": "rpc: bugfix, incorrect segwit redeem script size used in signrawtransactionwithkey\n\nThe process currently fails to sign redeem scripts that are longer than\n520 bytes. Even when it shouldn't. The 520 bytes redeem scripts limit\nis a legacy p2sh rule, and not a segwit limitation.\n\nSegwit redeem scripts are not restricted by the script item size limit.\n\nThe reason why this occurs, is the usage of the same keystore used by\nthe legacy spkm. Which contains blockage for any redeem scripts longer\nthan the script item size limit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:20:45Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:50:09Z"
      },
      "sha": "9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliZTYwNjVjYzAzZjI0MDhmMjkwYTMzMmIyMDNlZWY5YzljZWJmMjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9be6065cc03f2408f290a332b203eef9c9cebf24",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9be6065cc03f2408f290a332b203eef9c9cebf24",
      "tree": {
        "sha": "08c39b7ec4ff405c9fb3eb1b7b2b382ee3dce00a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08c39b7ec4ff405c9fb3eb1b7b2b382ee3dce00a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 08c39b7ec4ff405c9fb3eb1b7b2b382ee3dce00a\nparent 9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901\nauthor furszy <matiasfurszyfer@protonmail.com> 1692651526 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756845 -0300\n\ntest: coverage for 16-20 segwit multisig scripts\n\nThis exercises the bug fixed by previous commits, where\nwe were unable to generate and sign for segwit redeem scripts\n(in this case multisig redeem scripts) longer than 520 bytes.\n\nand also, this adds coverage for legacy 15-15 multisig script\ngeneration and signing.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HO0ACgkQXdI8zGhq\npiPoAA//cT2zC8Xgz++GFjhsTrxHOwAf0loZBAfS3rCwhlxpl+R3RB3sWm7HPaEo\nIrOVALPyyBgmzfOI13Dpg9Yd/VpS2N1/ODS73nMJM9O7Qlw6/s1S72Epx6tmfCnF\nv+F+ZQS4iFsdSIslPL4QKTPSqDqQ55qeNkazL91pOM/ZAXmH4IbR9do9UmKuh24y\nxQ4i98GY9AwiLKHx81RB6y7iwFXrlUEeoXmarZDzlYGuoQrjqCxwWYAWeOQCz59p\nBM86NUIKz0+5xGTtIBr2RKSnHIEbFmu2MFdreAZikaspQZxqoJkQJxJaIvtYYlJm\nCFgiSDLzjrJhUYvsU1Rl3FY0W/Uhj+AaShNislYDjNpeKjTVmXc01JNyzWVBNBsK\nglE4tqRC4MWGTZuS9U2tpaoEPMlPsyBm3/8vyv65kVSPO4+bQCXO5OFZoCBdoJ6z\nl8m87LyAM6pXQlm8Sa1zVljB7HT4nspUJWKp0genWN5ONJddITFYwV6Giz41sGSz\nnyC/2muBUAqE8ZhEk0rvlQ/5BJjmaY2vYivC3s0mu2M0hD3oqlFGFu4TMbBh64IK\nqW4l3H/XBkxuxepEb8a+PSLd0z8fvxj5ZstVXEQ2646L1IoUPK9D1xIz5qrsnWUD\npxXVsEdKV0Mm5JcSs5F2OqQw+Uk0xzRHgaSAvIe7ztXF5taTRZY=\n=Idp5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901",
          "sha": "9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d9a91c4ea6b3bb32ef4131bca86f1d6683fc901"
        }
      ],
      "message": "test: coverage for 16-20 segwit multisig scripts\n\nThis exercises the bug fixed by previous commits, where\nwe were unable to generate and sign for segwit redeem scripts\n(in this case multisig redeem scripts) longer than 520 bytes.\n\nand also, this adds coverage for legacy 15-15 multisig script\ngeneration and signing.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:20:45Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T20:58:46Z"
      },
      "sha": "9be6065cc03f2408f290a332b203eef9c9cebf24"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzMzAyYTA5ODE3ZTViNzk5ZDM0NWRmZWE0MzI1NDZhNTVhOWQ3Mjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53302a09817e5b799d345dfea432546a55a9d727",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/53302a09817e5b799d345dfea432546a55a9d727",
      "tree": {
        "sha": "1bf8a9a3794e2cd479b1deb9d97181afc0b8aac5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bf8a9a3794e2cd479b1deb9d97181afc0b8aac5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1bf8a9a3794e2cd479b1deb9d97181afc0b8aac5\nparent 9be6065cc03f2408f290a332b203eef9c9cebf24\nauthor furszy <matiasfurszyfer@protonmail.com> 1692652601 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756845 -0300\n\nbugfix: addmultisigaddress, add unsupported operation for redeem scripts over 520 bytes\n\nDue to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed\non 'p2sh-segwit' and 'bech32' redeem scripts.\nAlthough redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are technically valid for\nsegwit output types, we don't want to enable this feature in legacy wallets for the\nfollowing reasons:\n\n1) It introduces a compatibility-breaking change requiring downgrade protection; older\n   wallets would be unable to interact with these \"new\" legacy wallets.\n\n2) Considering the ongoing deprecation of the legacy spkm, this issue adds another\n   good reason to transition towards descriptors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HO0ACgkQXdI8zGhq\npiOxDhAAqD5dFS2WkcEiRgO2S9guGGYmMrIXGN6cQqYLLDNdMIuxeahWrDv5rGee\n54XCy3S6rNmWJu5UGkbgxTCzT7vrWSiLaL5BsmFdk2QRIio4zjRPbAsYBFF2cCl0\n4IRsoYszNl4NMgkxZVLKgloyx6fZiKdmuo4wLZ0CSs4jLrtJDwGU4ytR1DlK5TPY\nDJdz8DXZ0TDPR/XLz+gHzbnffUui0kDXAyd75926R7131u1CRIuHmWszcBytIWIE\nobxkCVlp+VS5NvgV9C2kzLEeR0qC7jVVbrSLMvvNUfusKqLxR1Ezl5DM1Td55494\nZWsw+LjdWiWJRPvPLImQjwSS+qvQGna5NhG+UvwGkB8biQcrJnwkgWH6s4Pm3nDv\n/gr5NIYUbW6U6DN3ZDQXoVYoMYloX+JyVFGtp96IT/DSdvOr2FTRKzBT1bD84nvt\n55x8Q0sMvoIyWlYIGqpchy5ufB0p6MrYov3riqF4cq4eYzbf7PizgKu9XJ0PrjKE\nUWhbi6hBaR2IHBwjXJE7WBloStnSnjuSASyP6HJKYspYvpAGpaZMhS192YtW9ScU\no2L4EaN/6G30bPzhC7LYCpYzGkvdvfuKfqlxCOdQxkAx6NkwnlJhsjzFytuvOYAB\nTz5yfWurlrtJucrNZbT3Ah67zjBo2EvlIv1crCeUBaKlIAI5PkY=\n=ppkh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9be6065cc03f2408f290a332b203eef9c9cebf24",
          "sha": "9be6065cc03f2408f290a332b203eef9c9cebf24",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9be6065cc03f2408f290a332b203eef9c9cebf24"
        }
      ],
      "message": "bugfix: addmultisigaddress, add unsupported operation for redeem scripts over 520 bytes\n\nDue to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed\non 'p2sh-segwit' and 'bech32' redeem scripts.\nAlthough redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are technically valid for\nsegwit output types, we don't want to enable this feature in legacy wallets for the\nfollowing reasons:\n\n1) It introduces a compatibility-breaking change requiring downgrade protection; older\n   wallets would be unable to interact with these \"new\" legacy wallets.\n\n2) Considering the ongoing deprecation of the legacy spkm, this issue adds another\n   good reason to transition towards descriptors.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:20:45Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T21:16:41Z"
      },
      "sha": "53302a09817e5b799d345dfea432546a55a9d727"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0NTFhMjE3ZGQyYzIxYjZkMmYyYjI2OTljZWRkZDBiZjkwNzMwMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "tree": {
        "sha": "20beac67ae8bf8ff277fd0290c7805c4fccf45ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20beac67ae8bf8ff277fd0290c7805c4fccf45ac"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 20beac67ae8bf8ff277fd0290c7805c4fccf45ac\nparent 53302a09817e5b799d345dfea432546a55a9d727\nauthor furszy <matiasfurszyfer@protonmail.com> 1692652680 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1714756845 -0300\n\ntest: addmultisigaddress, coverage for script size limits\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmY1HO0ACgkQXdI8zGhq\npiPQIg//ZJiAvaZKSkn2ZVZ/zSB1st5DJuKkZfEfZ6NQz9zo6/IBxnTxtKj/Zmyy\ny4f3kLTtX0JaPIw9QtB6TqYLD1jb7xSr2L61rQBCDwq3faLvu9glcDh5cd5X674t\nl+Z/Oh0A4g43KtNGX1FKhNlJalZ4cEc15cW7qGN+MFgLnzj88trkBj3E8bQTdNJD\nWLd9+dpe/3r3guO3TYlbiv1jx+c6FYsPnOxPTnjtNzKeqQuyMcX7McTCkvLcldwF\nfrQp1fH7ppFspBzbqjMcNgO7PL9MQkk2iIcqwClZ4y7FGRXrpZJZz549zCDZcUSw\nNGF2apdyZzSyqbk1nSMpPD6zk/Ax2BPcn8Uh65Ncx+C/+ogUVJ1Yt5tK6jB3GGO7\nWZH4cp7WczwuUPf/Vgk2T1AvgjSRBSAIWqxCeuzE9yDtfzwL7XKpRVUv8JFF8g+6\n6jmTm2V5gXKIkkDVdkOscCyZk71w2ooXw5T8iuw2faoNfhq+XS2Sgj5WK3Adljxb\nCrIOYAmplfcsrQmk0a8tMHf2prG7XlBUcm5kWo5/NGf0NbGwU1rc56leUDgKwZh2\nvyyu272HXfBej4313euSZfER9oCm3iyaznLu5OHcUsU0Tu2CuQglpgdBDdeRjK3l\nUGurTmK0LXS8eDgdZedYFYPkK22QvxwkBfpH3KEx9bfYNDvdPtI=\n=gipe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53302a09817e5b799d345dfea432546a55a9d727",
          "sha": "53302a09817e5b799d345dfea432546a55a9d727",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/53302a09817e5b799d345dfea432546a55a9d727"
        }
      ],
      "message": "test: addmultisigaddress, coverage for script size limits",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-05-03T17:20:45Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-08-21T21:18:00Z"
      },
      "sha": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12699136665,
      "node_id": "HRFPE_lADOABII585u4fvyzwAAAAL07XKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12699136665",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "created_at": "2024-05-03T17:24:46Z"
    },
    {
      "event": "reviewed",
      "id": 2038687143,
      "node_id": "PRR_kwDOABII5855g-Wn",
      "url": null,
      "actor": null,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "sad rebase after #30024 merge.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2038687143",
      "submitted_at": "2024-05-03T17:25:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "commented",
      "id": 2093475353,
      "node_id": "IC_kwDOABII5858x-YZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2093475353",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T17:36:01Z",
      "updated_at": "2024-05-03T17:36:01Z",
      "author_association": "MEMBER",
      "body": "I wrote a test for RPC `signrawtransactionwithkey` that covers legacy P2SH with 15 and 16 public keys. Both calls succeed even though the latter produces a scriptSig that exceeds `MAX_STANDARD_SCRIPTSIG_SIZE` and if it ever made it into a block, would exceed `MAX_SCRIPT_ELEMENT_SIZE`\r\n\r\nThis test behaves the same on master! So, that is potentially a footgun although not an easy one for a user to pull off and also would not result in any loss of funds.\r\n\r\nhttps://gist.github.com/pinheadmz/ca8ed75913902bd1ddf88bdd921712ee",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2093475353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "unlabeled",
      "id": 12700063731,
      "node_id": "UNLE_lADOABII585u4fvyzwAAAAL0-5fz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12700063731",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T19:04:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2039716714,
      "node_id": "PRR_kwDOABII5855k5tq",
      "url": null,
      "actor": null,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> I wrote a test for RPC signrawtransactionwithkey that covers legacy P2SH with 15 and 16 public keys. Both calls succeed even though the latter produces a scriptSig that exceeds MAX_STANDARD_SCRIPTSIG_SIZE and if it ever made it into a block, would exceed MAX_SCRIPT_ELEMENT_SIZE\r\n\r\nThe second call, the one with 16 pubkeys, doesn't entirely succeed. The test isn't checking the error field in the `signrawtransactionwithkey` response, which returns an `'error': 'Push value size limit exceeded'`.\r\n\r\nThe confusing point about this command is that it returns the post-processed tx hex regardless of what it was able to do internally or if the script passes the verification step. This is because, in a multisig scenario, the process could have appended only one of the signatures, which would obviously fail during the script verification. Thus, the process needs to update the transaction and notify the user that there are still missing signatures so it can relay it to the next party.\r\n\r\nI think we could improve the signing process so it does not update the returned transaction when the verification step finds an error that will persist regardless of any following-up processing step.\r\n\r\nThat being said, I would encourage people to use PSBT instead of `signrawtransactionwithkey`.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2039716714",
      "submitted_at": "2024-05-05T14:57:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "commented",
      "id": 2096308420,
      "node_id": "IC_kwDOABII58588yDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2096308420",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T15:31:26Z",
      "updated_at": "2024-05-06T15:31:26Z",
      "author_association": "MEMBER",
      "body": "> The confusing point about this command is that it returns the post-processed tx hex regardless of what it was able to do internally or if the script passes the verification step. This is because, in a multisig scenario, the process could have appended only one of the signatures, which would obviously fail during the script verification. Thus, the process needs to update the transaction and notify the user that there are still missing signatures so it can relay it to the next party.\r\n\r\nAh thanks, TIL! Now I see how this PR affects that specific RPC\r\n\r\n## master\r\n\r\n* Does not sign, tx remains invalid *\r\n> {'hex': '0200000001da5a0d84190834f2e417ac124a7fb0cf386f73fdc3f0dec5320e332b1acc2df90000000000fdffffff01c0e4022a01000000225120d8f28c020ca2c2d17f27eff0ccb1131382e061d5f6f4c2bad4608f96ca7c68a700000000', 'complete': False, 'errors': [{'txid': 'f92dcc1a2b330e32c5def0c3fd736f38cfb07f4a12ac17e4f2340819840d5ada', 'vout': 0, 'witness': [], 'scriptSig': '', 'sequence': 4294967293, 'error': 'Unable to sign input, invalid stack size (possibly missing key)'}]}\r\n\r\n## PR 28307\r\n\r\n* Signs, creating tx that is invalid for a different reason *\r\n> {'hex': '0200000001748d3c4f36e30d8d490e87c7f736e2fd818f18505f2e7b670d24aa8d52b61d7800000000fd6f020047304402205573e3358c93b899f5c91ed048363e388bee1d2dc79b65db9a907b71736a2ac9022021878bbee92ef3cd86d1d13a622948f8295b4de3ee0d27ddce67266351cd0e93014d23025121022ad2cbe6eb900100e0687f3d5c24d5af05a3f51cb304653833852d4b786219c42102b907c238e932585f89620f9d22e43e3c79814e20b1f19943bb16fc9ec9fa5b7b2102133d3548c34804b57127308980070929b29c2c273a995c7b19370776528c482f21034a218ed831df40b0d51acde6f60f3eb4fb1fd774528df5d8225d64c817e2eafc2103d91c55070d379c358e7a5ec216c75d512b864872f0722c5cc41e261de60ab36f2103f687e273c93aad1cb3c0e6837a95cb3532b2745e7315342c8a80e2683cbf07852102a5a4a70e4ef942a69c3e2e246256f41da149a7ab2f69a2b5c8fba09247cbea34210354a67b554c251e238faf2ec91532ae0e9783f89451cd5ac8df483da8cf4ba42f21022b702b20654cd110f77f7dbbe4f89a5629baca8f83c4bd3580332534381036b321028ad603a203645db07e76dc2ff73a0c1a628d215df67cc9f57923e5bfedc09a33210289de87715d75d12c931791e91091e33a292dbac7be19f7998e62eafe961b0b87210339175fa8aeee2d525e6414bff501a09b8ab2fac58948f3cf99bd285489467804210355cdc7bb582a8434d8c2b71e3ff8a6029cf26ae54f5058cd96025f1ac12bba9721026c4da02cfe442ea4e58c48bdb8867612ba62a06821f018c2357d4424c5e5ceaa21039db5509208500013366ad60684f7e4f63a768b48b6b06cb83ce549383c6307542103049efb80896116bd2ee7de7255e018fef52cf982d5fbd60f4b1fb777ed9efa3a60aefdffffff01c0e4022a01000000225120d61857a69972ddac6af7e01798f2eea20a66c8368f51871016f1f706778bf4fc00000000', 'complete': False, 'errors': [{'txid': '781db6528daa240d677b2e5f50188f81fde236f7c7870e498d0de3364f3c8d74', 'vout': 0, 'witness': [], 'scriptSig': '0047304402205573e3358c93b899f5c91ed048363e388bee1d2dc79b65db9a907b71736a2ac9022021878bbee92ef3cd86d1d13a622948f8295b4de3ee0d27ddce67266351cd0e93014d23025121022ad2cbe6eb900100e0687f3d5c24d5af05a3f51cb304653833852d4b786219c42102b907c238e932585f89620f9d22e43e3c79814e20b1f19943bb16fc9ec9fa5b7b2102133d3548c34804b57127308980070929b29c2c273a995c7b19370776528c482f21034a218ed831df40b0d51acde6f60f3eb4fb1fd774528df5d8225d64c817e2eafc2103d91c55070d379c358e7a5ec216c75d512b864872f0722c5cc41e261de60ab36f2103f687e273c93aad1cb3c0e6837a95cb3532b2745e7315342c8a80e2683cbf07852102a5a4a70e4ef942a69c3e2e246256f41da149a7ab2f69a2b5c8fba09247cbea34210354a67b554c251e238faf2ec91532ae0e9783f89451cd5ac8df483da8cf4ba42f21022b702b20654cd110f77f7dbbe4f89a5629baca8f83c4bd3580332534381036b321028ad603a203645db07e76dc2ff73a0c1a628d215df67cc9f57923e5bfedc09a33210289de87715d75d12c931791e91091e33a292dbac7be19f7998e62eafe961b0b87210339175fa8aeee2d525e6414bff501a09b8ab2fac58948f3cf99bd285489467804210355cdc7bb582a8434d8c2b71e3ff8a6029cf26ae54f5058cd96025f1ac12bba9721026c4da02cfe442ea4e58c48bdb8867612ba62a06821f018c2357d4424c5e5ceaa21039db5509208500013366ad60684f7e4f63a768b48b6b06cb83ce549383c6307542103049efb80896116bd2ee7de7255e018fef52cf982d5fbd60f4b1fb777ed9efa3a60ae', 'sequence': 4294967293, 'error': 'Push value size limit exceeded'}]}\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#issuecomment-2096308420",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28307"
    },
    {
      "event": "reviewed",
      "id": 2041087253,
      "node_id": "PRR_kwDOABII5855qIUV",
      "url": null,
      "actor": null,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 2451a217dd2c21b6d2f2b2699ceddd0bf9073019\r\n\r\nMinimal diff since last ACK, just rebase on master and replace a\"520\" with a \"MAX_SCRIPT_ELEMENT_SIZE\"\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 2451a217dd2c21b6d2f2b2699ceddd0bf9073019\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmY4+ZIACgkQ5+KYS2KJ\r\nyTqhnhAApaBq0dhQVXvLaTSBjV8Q8CXJTXapgme6uII649DlRjCQujM4ufmnPfdR\r\nBuQWzAC5FbgA1sCkRk3+D/CyO0H9k5PPmU7Mle6tQl7sHszkXNqzCXmIceQBPvQk\r\nQk95jzcrh88nJif565D3o88+RGaREku8mGWG5HCkcSyyfTMwaXdxVkvfPB88+g8l\r\nfTDcsP+P7At/fKOIBEN8UHX4hkKhWAv4WYXVI3qUXBWix6wSNqYrQNGwj9BPSHtQ\r\n6pA9p0kZ15SP8cJo0Fe/Hfb2Zk9vtXbuIUGxHMSu08ka+9C8+OlOqJ6NFB/dnTAh\r\nGX60UiC6QXPOvIUZrtC4JWHkdNRJ3fNV+E3xQ8eBlPMMT8ZsznY+SG4lrVYb1ZKG\r\nD0Ho/ASiGYaN4kOTZOVDtuZdspDFBy2z2epmXpBn7h+P1OXgyz1KlGO4gIydrdkO\r\nITVORmyR2/c1poUyJhHWMaf2pdEYfX0T+UWNvkL+Do0iIDL5JgJCPULfA2T8/FjI\r\n5TjZAVVH1it+BKBtY4owk0LLSiVJfvBGkbPpJaghUYKIrZHiREj8nMq/5+JTHPai\r\ng6JP3lUNEDVi9EPStYWScbIAeoeiy/gFp8fGhST0ovPwN44Cj0/LQdjnvUb1hjS8\r\nO0Y7JGtVBf62UwHItdGTP9rIiuD+oePf5iC7PIBJff1RwjF6ADc=\r\n=IlyD\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2041087253",
      "submitted_at": "2024-05-06T15:39:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "reviewed",
      "id": 2063616475,
      "node_id": "PRR_kwDOABII5857AEnb",
      "url": null,
      "actor": null,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code-review ACK 2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2063616475",
      "submitted_at": "2024-05-17T15:53:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "reviewed",
      "id": 2097634633,
      "node_id": "PRR_kwDOABII5859B11J",
      "url": null,
      "actor": null,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#pullrequestreview-2097634633",
      "submitted_at": "2024-06-05T01:12:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
    },
    {
      "event": "merged",
      "id": 13043932870,
      "node_id": "ME_lADOABII585u4fvyzwAAAAMJep7G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13043932870",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "76a33be21d4243f9e8f18c164f776adf7c99a56c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76a33be21d4243f9e8f18c164f776adf7c99a56c",
      "created_at": "2024-06-05T01:40:09Z"
    },
    {
      "event": "closed",
      "id": 13043932885,
      "node_id": "CE_lADOABII585u4fvyzwAAAAMJep7V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13043932885",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T01:40:09Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 13043935911,
      "node_id": "HRDE_lADOABII585u4fvyzwAAAAMJeqqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13043935911",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T01:40:33Z"
    },
    {
      "event": "referenced",
      "id": 13190582617,
      "node_id": "REFE_lADOABII585u4fvyzwAAAAMSOFFZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13190582617",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4bcef32a937a57280afe5e601bb90121725aca72",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bcef32a937a57280afe5e601bb90121725aca72",
      "created_at": "2024-06-17T19:18:15Z"
    },
    {
      "event": "locked",
      "id": 17993983130,
      "node_id": "LOE_lADOABII585u4fvyzwAAAAQwhmSa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17993983130",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T06:13:55Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724",
      "pull_request_review_id": 1613931820,
      "id": 1317649724,
      "node_id": "PRRC_kwDOABII585Oib08",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just curious, why doesn't `FlatSigningProvider` have a `AddCScript()` method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.",
      "created_at": "2023-09-06T18:02:30Z",
      "updated_at": "2023-09-06T18:10:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675",
      "pull_request_review_id": 1613931820,
      "id": 1317654675,
      "node_id": "PRRC_kwDOABII585OidCT",
      "diff_hunk": "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 144,
      "original_position": 145,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we need to cover m=21 here to catch the error in segwit multisig?",
      "created_at": "2023-09-06T18:07:48Z",
      "updated_at": "2023-09-06T18:10:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254",
      "pull_request_review_id": 1614119645,
      "id": 1317766254,
      "node_id": "PRRC_kwDOABII585Oi4Ru",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Just curious, why doesn't FlatSigningProvider have a AddCScript() method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.\r\n\r\n`FillableSigningProvider` is the legacy counterpart. All other `SigningProvider` subclasses were introduced with the output descriptors implementation.\r\n\r\nIf you look at the new providers, all of them are loaded in place and stay constant over time. They are only accessed through the `SigningProvider` interface methods and not directly (this interface only present getters). In contraposition, the legacy provider fulfills both roles. It implements the `SigningProvider` methods and, at the same time, allows new scripts and keys to be added over time.\r\nThis reflects the legacy vs descriptors difference: each new import in the descriptors wallet refers to a new spkm, while in the legacy wallet, it  refers to a new script/key added into the single legacy spkm.",
      "created_at": "2023-09-06T20:01:02Z",
      "updated_at": "2023-09-06T20:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411",
      "pull_request_review_id": 1614121997,
      "id": 1317768411,
      "node_id": "PRRC_kwDOABII585Oi4zb",
      "diff_hunk": "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 144,
      "original_position": 145,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317654675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, good idea. Will add it.",
      "created_at": "2023-09-06T20:02:43Z",
      "updated_at": "2023-09-06T20:02:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862",
      "pull_request_review_id": 1614133652,
      "id": 1317778862,
      "node_id": "PRRC_kwDOABII585Oi7Wu",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?",
      "created_at": "2023-09-06T20:11:06Z",
      "updated_at": "2023-09-06T20:11:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935",
      "pull_request_review_id": 1614163358,
      "id": 1317798935,
      "node_id": "PRRC_kwDOABII585OjAQX",
      "diff_hunk": "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "path": "src/outputtype.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "in_reply_to_id": 1317649724,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?\r\n\r\nAs uses to be in software development, the answer is \"it depends\".\r\nAs far as I can tell, the idea was to hide the `SigningProvider` implementation. Which is sound.\r\n\r\nI haven't looked at all the places where the `FlatSigningProvider` is used but most of them should be inside the `descriptor.cpp` and similar related processes where the parent process invokes a function to load the provider with some keys/scripts, to then use them and discard the provider.\r\n\r\nWhen I said \"allows new scripts and keys to be added over time\" was referring to keep it in-memory. And continually add new elements to it. Which should not be happening with `FlatSigningProvider` anywhere.",
      "created_at": "2023-09-06T20:29:21Z",
      "updated_at": "2023-09-06T20:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980",
      "pull_request_review_id": 1845552797,
      "id": 1467521980,
      "node_id": "PRRC_kwDOABII585XeJu8",
      "diff_hunk": "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 6,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "IIUC, the right part of this expression seems redundant?\r\n```suggestion\r\n        self._requires_wallet = self.is_wallet_compiled()\r\n```\r\nIf a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nConsequently, the `self.has_wallet` member is not needed anymore, and can simply be replaced by `self.is_wallet_compiled()` calls?",
      "created_at": "2024-01-26T11:04:50Z",
      "updated_at": "2024-01-26T13:29:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522",
      "pull_request_review_id": 1845798508,
      "id": 1467681522,
      "node_id": "PRRC_kwDOABII585Xewry",
      "diff_hunk": "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 6,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "in_reply_to_id": 1467521980,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nYeah sure. Removed the right part of the statement.\r\n\r\n> Consequently, the self.has_wallet member is not needed anymore, and can simply be replaced by self.is_wallet_compiled() calls?\r\n\r\nSure. Done.",
      "created_at": "2024-01-26T13:54:44Z",
      "updated_at": "2024-01-26T13:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304",
      "pull_request_review_id": 1970177563,
      "id": 1545613304,
      "node_id": "PRRC_kwDOABII585cIC_4",
      "diff_hunk": "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 17,
      "original_position": 9,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?",
      "created_at": "2024-03-31T11:01:17Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545613304",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545613304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823",
      "pull_request_review_id": 1970177563,
      "id": 1545616823,
      "node_id": "PRRC_kwDOABII585cID23",
      "diff_hunk": "@@ -139,22 +131,6 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n-\n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n-\n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n-",
      "path": "test/functional/rpc_createmultisig.py",
      "position": null,
      "original_position": 63,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "6df7d2ce5a4c0b31f3a254a7607ae8812606b840",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1 on removing these hard-coded values!",
      "created_at": "2024-03-31T11:06:05Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545616823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545616823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": 142,
      "start_side": "LEFT",
      "line": null,
      "original_line": 151,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378",
      "pull_request_review_id": 1970177563,
      "id": 1545617378,
      "node_id": "PRRC_kwDOABII585cID_i",
      "diff_hunk": "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 312,
      "original_position": 73,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: `err_msg_list`",
      "created_at": "2024-03-31T11:08:41Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723",
      "pull_request_review_id": 1970177563,
      "id": 1545617723,
      "node_id": "PRRC_kwDOABII585cIEE7",
      "diff_hunk": "@@ -56,12 +56,13 @@ def run_test(self):\n         self.generate(self.wallet, 149)\n \n         wallet_multi = self.create_wallet(node1, 'wmulti') if self._requires_wallet else None\n-        self.create_keys(5)\n-        for nkeys in [3, 5]:\n-            for nsigs in [2, 3]:\n-                for output_type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\n-                    self.do_multisig(nkeys, nsigs, output_type, wallet_multi)\n+        self.create_keys(21)  # max number of allowed keys + 1\n+        m_of_n = [(2, 3), (3, 3), (2, 5), (3, 5), (10, 15), (15, 15)]\n+        for (sigs, keys) in m_of_n:",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 74,
      "original_position": 11,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1 on creating a list of (sigs, keys) instead!",
      "created_at": "2024-03-31T11:10:12Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545617723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545617723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 60,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": 61,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073",
      "pull_request_review_id": 1970177563,
      "id": 1545618073,
      "node_id": "PRRC_kwDOABII585cIEKZ",
      "diff_hunk": "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 150,
      "original_position": 36,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, addr_type)\r\n```",
      "created_at": "2024-03-31T11:12:11Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545618073",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545618073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 99,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069",
      "pull_request_review_id": 1970177563,
      "id": 1545619069,
      "node_id": "PRRC_kwDOABII585cIEZ9",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 172,
      "original_position": 172,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\nfor addr_type in ['p2sh-segwit', 'bech32']:\r\n assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', addr_type)\r\n```",
      "created_at": "2024-03-31T11:14:56Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545619069",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545619069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 110,
      "original_start_line": 110,
      "start_side": "RIGHT",
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376",
      "pull_request_review_id": 1970177563,
      "id": 1545621376,
      "node_id": "PRRC_kwDOABII585cIE-A",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.",
      "created_at": "2024-03-31T11:22:49Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668",
      "pull_request_review_id": 1970177563,
      "id": 1545621668,
      "node_id": "PRRC_kwDOABII585cIFCk",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 239,
      "original_position": 239,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.",
      "created_at": "2024-03-31T11:24:03Z",
      "updated_at": "2024-03-31T11:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1545621668",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1545621668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129",
      "pull_request_review_id": 1971399064,
      "id": 1546405129,
      "node_id": "PRRC_kwDOABII585cLEUJ",
      "diff_hunk": "@@ -290,7 +290,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 17,
      "original_position": 9,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "3997791eba1c10bb4d12ddf1fd25df596864c4ea",
      "in_reply_to_id": 1545613304,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is it correct to assume that in the future releases by getting rid of the legacy spkm, we will get rid of `FillableSigningProvider` as well?\r\n\r\nYes.",
      "created_at": "2024-04-01T14:45:54Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546405129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546405129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 303,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622",
      "pull_request_review_id": 1971399064,
      "id": 1546414622,
      "node_id": "PRRC_kwDOABII585cLGoe",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 174,
      "original_position": 174,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": 1545621376,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Although it's older code, but would it be possible to rename this function and/or break this function down into smaller pieces since this PR is anyway refactoring this test? I see it's an 85 line function wherein a lot many things are happening including building/sending transactions, mining blocks, and numerous assertions that are hard to keep track of.\r\n\r\nThe goal of the function is to test the complete multisig workflow. You will probably end up duplicating code if you decouple it in smaller functions. But feel free to try it locally and push a follow-up PR if you get a better structure.",
      "created_at": "2024-04-01T14:56:12Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546414622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546414622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037",
      "pull_request_review_id": 1971399064,
      "id": 1546416037,
      "node_id": "PRRC_kwDOABII585cLG-l",
      "diff_hunk": "@@ -133,117 +84,165 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n \n-    def do_multisig(self):\n-        node0, node1, node2 = self.nodes\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')\n \n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        # Check legacy wallet related command\n+        self.log.info('Test legacy redeem script max size limit (with wallet)')\n+        if wallet_multi is not None and not self.options.descriptors:\n+            assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'legacy')\n+\n+            self.log.info('Test legacy wallet unsupported operation. 16-20 multisig p2sh-legacy and bech32 generation')\n+            # Due an internal limitation on legacy wallets, the redeem script limit also applies to p2sh-segwit and bech32 (even when the scripts are valid)\n+            # We take this as a \"good thing\" to tell users to upgrade to descriptors.\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'p2sh-segwit')\n+            assert_raises_rpc_error(-4, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\", wallet_multi.addmultisigaddress, 16, pubkeys, '', 'bech32')\n+\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n+        node0, node1, node2 = self.nodes\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:\n             # compare against addmultisigaddress\n-            msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n+            msigw = wallet_multi.addmultisigaddress(nsigs, pub_keys, None, output_type)\n             maddw = msigw[\"address\"]\n             mredeemw = msigw[\"redeemScript\"]\n             assert_equal(desc, drop_origins(msigw['descriptor']))\n             # addmultisigiaddress and createmultisig work the same\n             assert maddw == madd\n             assert mredeemw == mredeem\n-            wmulti.unloadwallet()\n \n         spk = address_to_scriptpubkey(madd)\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=1300)[\"txid\"]\n-        tx = node0.getrawtransaction(txid, True)\n-        vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n-        vout = vout[0]\n-        scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n-        value = tx[\"vout\"][vout][\"value\"]\n-        prevtxs = [{\"txid\": txid, \"vout\": vout, \"scriptPubKey\": scriptPubKey, \"redeemScript\": mredeem, \"amount\": value}]\n+        value = decimal.Decimal(\"0.00004000\")\n+        tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n+        prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n-        rawtx = node2.createrawtransaction([{\"txid\": txid, \"vout\": vout}], [{self.final: outval}])\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)\n+        # send coins to node2 when wallet is enabled\n+        node2_balance = node2.getbalances()['mine']['trusted'] if self.is_wallet_compiled() else 0\n+        out_addr = node2.getnewaddress() if self.is_wallet_compiled() else getnewdestination('bech32')[2]\n+        rawtx = node2.createrawtransaction([{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"]}], [{out_addr: outval}])\n \n         prevtx_err = dict(prevtxs[0])",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 239,
      "original_position": 239,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "a0ebb929e865903ca1cc2674e74906a806e73109",
      "in_reply_to_id": 1545621668,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Again older code, but `prevtx_err` leads to an impression that it's an error related to a previous transaction but the usage of this variable doesn't show that it's an error, but a transaction itself.\r\n\r\nSure. Will leave it as is to not continue expanding the diff. Feel free to tackle it on a follow-up.",
      "created_at": "2024-04-01T14:57:39Z",
      "updated_at": "2024-04-01T14:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1546416037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1546416037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289",
      "pull_request_review_id": 2026656842,
      "id": 1581838289,
      "node_id": "PRRC_kwDOABII585eSO_R",
      "diff_hunk": "@@ -217,6 +180,41 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         txinfo = node0.getrawtransaction(tx, True, blk)\n         self.log.info(\"n/m=%d/%d %s size=%d vsize=%d weight=%d\" % (nsigs, nkeys, output_type, txinfo[\"size\"], txinfo[\"vsize\"], txinfo[\"weight\"]))\n \n+    def test_mixing_uncompressed_and_compressed_keys(self, node, wallet_multi):\n+        self.log.info('Mixed compressed and uncompressed multisigs are not allowed')\n+        pk0, pk1, pk2 = [getnewdestination('bech32')[0].hex() for _ in range(3)]\n+\n+        # decompress pk2\n+        pk_obj = ECPubKey()\n+        pk_obj.set(bytes.fromhex(pk2))\n+        pk_obj.compressed = False\n+        pk2 = pk_obj.get_bytes().hex()\n+\n+        # Check all permutations of keys because order matters apparently\n+        for keys in itertools.permutations([pk0, pk1, pk2]):\n+            # Results should be the same as this legacy one\n+            legacy_addr = node.createmultisig(2, keys, 'legacy')['address']\n+\n+            if wallet_multi is not None:\n+                # 'addmultisigaddress' should return the same address\n+                result = wallet_multi.addmultisigaddress(2, keys, '', 'legacy')\n+                assert_equal(legacy_addr, result['address'])\n+                assert 'warnings' not in result\n+\n+            # Generate addresses with the segwit types. These should all make legacy addresses\n+            err_msg = [\"Unable to make chosen address type, please ensure no uncompressed public keys are present.\"]",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 312,
      "original_position": 73,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "fffa9bb9a02e06dc57a61f301f8eff3d3cd7142a",
      "in_reply_to_id": 1545617378,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure, will change it if I have to retouch the code.",
      "created_at": "2024-04-27T14:22:17Z",
      "updated_at": "2024-04-27T14:22:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453",
      "pull_request_review_id": 2026656977,
      "id": 1581838453,
      "node_id": "PRRC_kwDOABII585eSPB1",
      "diff_hunk": "@@ -83,6 +84,21 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n+    def test_multisig_script_limit(self):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub[0:20]\n+\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n+\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)\n+\n+        self.log.info('Test invalid 16-21 multisig p2sh-legacy and bech32 (no wallet)')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'p2sh-segwit')\n+        assert_raises_rpc_error(-8, \"Number of keys involved in the multisignature address creation > 20\", node1.createmultisig, 16, self.pub, 'bech32')",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 150,
      "original_position": 36,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "29e7bb80cbc35dccb40681d7fb97628206a4ec8b",
      "in_reply_to_id": 1545618073,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure, will change it if I have to retouch this code.",
      "created_at": "2024-04-27T14:23:20Z",
      "updated_at": "2024-04-27T14:23:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1581838453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581838453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 99,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605118054",
      "pull_request_review_id": 2063616475,
      "id": 1605118054,
      "node_id": "PRRC_kwDOABII585frChm",
      "diff_hunk": "@@ -296,7 +296,20 @@ RPCHelpMan addmultisigaddress()\n \n     // Import scripts into the wallet\n     for (const auto& [id, script] : provider.scripts) {\n-        spk_man.AddCScript(script);\n+        // Due to a bug in the legacy wallet, the p2sh maximum script size limit is also imposed on 'p2sh-segwit' and 'bech32' redeem scripts.\n+        // Even when redeem scripts over MAX_SCRIPT_ELEMENT_SIZE bytes are valid for segwit output types, we don't want to\n+        // enable it because:\n+        // 1) It introduces a compatibility-breaking change requiring downgrade protection; older wallets would be unable to interact with these \"new\" legacy wallets.\n+        // 2) Considering the ongoing deprecation of the legacy spkm, this issue adds another good reason to transition towards descriptors.\n+        if (script.size() > MAX_SCRIPT_ELEMENT_SIZE) throw JSONRPCError(RPC_WALLET_ERROR, \"Unsupported multisig script size for legacy wallet. Upgrade to descriptors to overcome this limitation for p2sh-segwit or bech32 scripts\");\n+\n+        if (!spk_man.AddCScript(script)) {\n+            if (CScript inner_script; spk_man.GetCScript(CScriptID(script), inner_script)) {\n+                CHECK_NONFATAL(inner_script == script); // Nothing to add, script already contained by the wallet\n+                continue;\n+            }",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 24,
      "original_position": 16,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "53302a09817e5b799d345dfea432546a55a9d727",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It took me a while to grok what's going on here: if the CScript was already contained in the wallet, the `AddCScript` call one line above would fail in the course of writing to the DB (looking at the call flow `LegacyScriptPubKeyMan::AddCScript` -> `LegacyScriptPubKeyMan::AddCScriptWithDB` -> `batch.WriteCScript(...)` -> `WriteIC(..., ..., false)`, where the last `false` parameter indicates that overwrites are not allowed; the `FillableSigningProvider::AddCScript` call earlier doesn't care if an entry is overwritten and still returns `true`).\r\n\r\nI think the same behaviour could be achieved by simply ignoring the return value of `AddCScript`, but I assume the intention here is to be more robust and error if -- for whatever reason -- the CScript write to the database failed, even if the entry isn't there yet.",
      "created_at": "2024-05-17T14:37:17Z",
      "updated_at": "2024-05-17T15:53:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1605118054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605118054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": 307,
      "original_start_line": 307,
      "start_side": "RIGHT",
      "line": 310,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605226835",
      "pull_request_review_id": 2063616475,
      "id": 1605226835,
      "node_id": "PRRC_kwDOABII585frdFT",
      "diff_hunk": "@@ -56,12 +56,13 @@ def run_test(self):\n         self.generate(self.wallet, 149)\n \n         wallet_multi = self.create_wallet(node1, 'wmulti') if self._requires_wallet else None\n-        self.create_keys(5)\n-        for nkeys in [3, 5]:\n-            for nsigs in [2, 3]:\n-                for output_type in [\"bech32\", \"p2sh-segwit\", \"legacy\"]:\n-                    self.do_multisig(nkeys, nsigs, output_type, wallet_multi)\n+        self.create_keys(21)  # max number of allowed keys + 1\n+        m_of_n = [(2, 3), (3, 3), (2, 5), (3, 5), (10, 15), (15, 15)]\n+        for (sigs, keys) in m_of_n:",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 74,
      "original_position": 11,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "9be6065cc03f2408f290a332b203eef9c9cebf24",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit (feel free to ignore): imho keeping the `nsigs`/`nkeys` naming here makes sense, to make it clearer that these are counts, not actual signatures and keys",
      "created_at": "2024-05-17T15:51:39Z",
      "updated_at": "2024-05-17T15:53:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1605226835",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1605226835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 61,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626782997",
      "pull_request_review_id": 2097634633,
      "id": 1626782997,
      "node_id": "PRRC_kwDOABII585g9r0V",
      "diff_hunk": "@@ -149,101 +155,85 @@ def checkbalances(self):\n         assert bal2 == self.moved\n         assert_equal(bal0 + bal1 + bal2 + balw, total)\n \n-    def do_multisig(self):\n+    def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n         node0, node1, node2 = self.nodes\n-\n-        if self.is_bdb_compiled():\n-            if 'wmulti' not in node1.listwallets():\n-                try:\n-                    node1.loadwallet('wmulti')\n-                except JSONRPCException as e:\n-                    path = self.nodes[1].wallets_path / \"wmulti\"\n-                    if e.error['code'] == -18 and \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path) in e.error['message']:\n-                        node1.createwallet(wallet_name='wmulti', disable_private_keys=True)\n-                    else:\n-                        raise\n-            wmulti = node1.get_wallet_rpc('wmulti')\n+        pub_keys = self.pub[0: nkeys]\n+        priv_keys = self.priv[0: nkeys]\n \n         # Construct the expected descriptor\n-        desc = 'multi({},{})'.format(self.nsigs, ','.join(self.pub))\n-        if self.output_type == 'legacy':\n+        desc = 'multi({},{})'.format(nsigs, ','.join(pub_keys))\n+        if output_type == 'legacy':\n             desc = 'sh({})'.format(desc)\n-        elif self.output_type == 'p2sh-segwit':\n+        elif output_type == 'p2sh-segwit':\n             desc = 'sh(wsh({}))'.format(desc)\n-        elif self.output_type == 'bech32':\n+        elif output_type == 'bech32':\n             desc = 'wsh({})'.format(desc)\n         desc = descsum_create(desc)\n \n-        msig = node2.createmultisig(self.nsigs, self.pub, self.output_type)\n+        msig = node2.createmultisig(nsigs, pub_keys, output_type)\n         assert 'warnings' not in msig\n         madd = msig[\"address\"]\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n-        if self.output_type == 'bech32':\n+        if output_type == 'bech32':\n             assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n \n-        if self.is_bdb_compiled():\n+        if wallet_multi is not None:",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 204,
      "original_position": 106,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "b5a328943362cfac6e90fd4e1b167c357d53b7d4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In b5a328943362cfac6e90fd4e1b167c357d53b7d4 \"test: refactor, multiple cleanups in rpc_createmultisig.py\"\r\n\r\nStrictly speaking, this should also check for whether we have legacy wallets since the test is specifically for whether `addmultisigaddress` (a legacy wallet only rpc) matches `createmultisig`.\r\n\r\n```suggestion\r\n        if wallet_multi is not None and not self.options.descriptors:\r\n```",
      "created_at": "2024-06-05T00:46:58Z",
      "updated_at": "2024-06-05T01:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1626782997",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626782997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 136,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626792838",
      "pull_request_review_id": 2097634633,
      "id": 1626792838,
      "node_id": "PRRC_kwDOABII585g9uOG",
      "diff_hunk": "@@ -117,13 +133,13 @@ def do_multisig(self, nkeys, nsigs, output_type, wallet_multi):\n             assert mredeemw == mredeem\n \n         spk = address_to_scriptpubkey(madd)\n-        value = decimal.Decimal(\"0.00001300\")\n+        value = decimal.Decimal(\"0.00004000\")\n         tx = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=spk, amount=int(value * COIN))\n         prevtxs = [{\"txid\": tx[\"txid\"], \"vout\": tx[\"sent_vout\"], \"scriptPubKey\": spk.hex(), \"redeemScript\": mredeem, \"amount\": value}]\n \n         self.generate(node0, 1)\n \n-        outval = value - decimal.Decimal(\"0.00001000\")\n+        outval = value - decimal.Decimal(\"0.00002000\")  # deduce fee (must be higher than the min relay fee)",
      "path": "test/functional/rpc_createmultisig.py",
      "position": 233,
      "original_position": 53,
      "commit_id": "2451a217dd2c21b6d2f2b2699ceddd0bf9073019",
      "original_commit_id": "9be6065cc03f2408f290a332b203eef9c9cebf24",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9be6065cc03f2408f290a332b203eef9c9cebf24 \"test: coverage for 16-20 segwit multisig scripts\"\r\n\r\nnit: s/deduce/deduct",
      "created_at": "2024-06-05T01:02:59Z",
      "updated_at": "2024-06-05T01:12:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1626792838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1626792838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 153,
      "original_line": 142,
      "side": "RIGHT"
    }
  ]
}