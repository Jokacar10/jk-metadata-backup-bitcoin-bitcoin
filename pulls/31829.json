{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829",
    "id": 2324761179,
    "node_id": "PR_kwDOABII586KkQpb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31829",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31829.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31829.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c89b37b94574bbf4b97f86430ebac33c5d8f7319",
    "number": 31829,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "p2p: improve TxOrphanage denial of service bounds and increase -maxorphantxs",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is part of the orphan resolution project, see #27463.\r\n\r\nThis design came from collaboration with sipa - thanks.\r\n\r\nWe want to limit the CPU work and memory used by `TxOrphanage` to avoid denial of service attacks. On master, this is achieved by limiting the number of transactions in this data structure to 100, and the weight of each transaction to 400KWu (the largest standard tx) [0]. We always allow new orphans, but if the addition causes us to exceed 100, we evict one randomly. This is dead simple, but has problems:\r\n- It makes the orphanage trivially churnable: any one peer can render it useless by spamming us with lots of orphans. It's possible this is happening: \"Looking at data from node alice on 2024-09-14 shows that we’re sometimes removing more than 100k orphans per minute. This feels like someone flooding us with orphans.\" [1]\r\n- Effectively, opportunistic 1p1c is useless in the presence of adversaries: it is *opportunistic* and pairs a low feerate tx with a child that happens to be in the orphanage. So if nothing is able to stay in orphanages, we can't expect 1p1cs to propagate.\r\n- This number is also often insufficient for the volume of orphans we handle: historical data show that overflows are pretty common, and there are times where \"it seems like [the node] forgot about the orphans and re-requested them multiple times.\" [1] \r\n \r\nJust jacking up the `-maxorphantxs` number is not a good enough solution, because it doesn't solve the churnability problem, and the effective resource bounds scale poorly.\r\n\r\nThis PR introduces numbers for {global, per-peer} {memory usage, announcements}, representing resource limits:\r\n- The (constant) **global announcement limit** is the number of unique (wtxid, peer) pairs in the orphanage [2]. This represents a cap on CPU, and does not change with the number of peers we have. Evictions must happen whenever this limit is reached.\r\n- The (variable) **per-peer announcement limit** is the global announcement limit divided by the number of peers. Peers are allowed to exceed this limit provided the global announcement limit has not been reached. The per-peer announcement limit decreases with more peers.\r\n- The (constant) **per-peer memory usage reservation** is the amount of orphan weight [3] reserved per peer [4]. Reservation means that peers are effectively guaranteed this amount of space. It is not a limit; peers are allowed to exceed this limit provided the global usage limit is not reached.\r\n- The (variable) **global memory usage limit** is the number of peers multiplied by the per-peer reservation [5]. As such, the global memory usage limit scales up with the number of peers we have. Evictions must happen whenever this limit is reached.\r\n- We introduce a \"Peer DoS Score\" which is the maximum between its \"CPU Score\" and \"Memory Score.\" The CPU score is the ratio between the number of orphans announced by this peer / peer announcement limit. The memory score is the total usage of all orphans announced by this peer / peer usage reservation.\r\n\r\nEviction changes in a few ways:\r\n- It is triggered if the global announcement limit or global memory usage limit is exceeded.\r\n- On each iteration of the loop, instead of selecting a random orphan, we select a peer and delete 1 of its announcements. Specifically, we select the peer with the highest DoS score, which is the maximum between its CPU DoS score (based on announcements) and Memory DoS score (based on tx weight). After the peer has been selected, we evict the oldest orphan (non-reconsiderable sorted before reconsiderable).\r\n- Instead of evicting orphans, we evict announcements. An orphan is still in the orphanage as long as there is 1 peer announcer. Of course, over the course of several iteration loops, we may erase all announcers, thus erasing the orphan itself. The purpose of this change is to prevent a peer from being able to trigger eviction of another peer's orphans.\r\n\r\nThis PR also:\r\n- Reimplements `TxOrphanage` as single multi-index container.\r\n- Effectively bounds the number of transactions that can be in a peer's work set by ensuring it is a subset of the peer's announcements.\r\n- Removes the `-maxorphantxs` config option, as the orphanage no longer limits by unique orphans.\r\n\r\nThis means we can receive 1p1c packages in the presence of spammy peers. It also makes the orphanage more useful and increases our download capacity without drastically increasing orphanage resource usage.\r\n\r\n[0]: This means the effective memory limit in orphan weight is 100 * 400KWu = 40MWu\r\n[1]: https://delvingbitcoin.org/t/stats-on-orphanage-overflows/1421\r\n[2]: Limit is 3000, which is equivalent to one max size ancestor package (24 transactions can be missing inputs) for each peer (default max connections is 125).\r\n[3]: Orphan weight is used in place of actual memory usage because something like \"one maximally sized standard tx\" is easier to reason about than \"considering the bytes allocated for vin and vout vectors, it needs to be within N bytes...\" etc. We can also consider a different formula to encapsulate more the memory overhead but still have an interface that is easy to reason about.\r\n[4]: The limit is 404KWu, which is the maximum size of an ancestor package.\r\n[5]: With 125 peers, this is 50.5MWu, which is a small increase from the existing limit of 40MWu. While the actual memory usage limit is higher (this number does not include the other memory used by `TxOrphanage` to store the outpoints map, etc.), this is within the same ballpark as the old limit.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/72",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72/labels",
      "id": 12172984,
      "node_id": "MI_kwDOABII584Aub64",
      "number": 72,
      "state": "open",
      "title": "30.0",
      "description": "",
      "creator": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "open_issues": 9,
      "closed_issues": 24,
      "created_at": "2025-01-15T19:21:36Z",
      "updated_at": "2025-05-21T11:11:53Z"
    },
    "created_at": "2025-02-09T21:14:45Z",
    "updated_at": "2025-05-21T22:36:31Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "8f9c4d42479dbdce35e994f7b0ace0b4a9851600",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2025-01-orphanage-peer-dos",
      "ref": "2025-01-orphanage-peer-dos",
      "sha": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 14,
        "watchers_count": 14,
        "size": 272609,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-20T11:50:51Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2025-05-19T09:02:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0f9baba0fb6e55612f0b4b8d36f6deebe35b8a5f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37246,
        "stargazers_count": 83719,
        "watchers_count": 83719,
        "size": 282357,
        "default_branch": "master",
        "open_issues_count": 728,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-21T13:24:43Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-05-21T18:49:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 1627,
    "deletions": 706,
    "changed_files": 23,
    "commits": 18,
    "review_comments": 114,
    "comments": 15
  },
  "events": [
    {
      "event": "labeled",
      "id": 16239377177,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPH8TsZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239377177",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:14:45Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2646604015,
      "node_id": "IC_kwDOABII586dv_jv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2646604015",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:14:49Z",
      "updated_at": "2025-05-21T22:36:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31829.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Approach ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2612094405) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- orphange -> orphanage [typo]\n- TotalOrphanBytes() -> TotalOrphanUsage() [inconsistent term in comment, should match method name]\n- announcements ones -> announcements (ones [awkward phrasing in comment]\n- orphange -> orphanage [typo]\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2646604015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16239389279,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPH8Wpf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239389279",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "765fcdf42418581061f9d01d24594d915be6f1a6",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/765fcdf42418581061f9d01d24594d915be6f1a6",
      "created_at": "2025-02-09T21:20:42Z"
    },
    {
      "event": "labeled",
      "id": 16239389767,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPH8WxH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239389767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:20:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2646606231,
      "node_id": "IC_kwDOABII586dwAGX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2646606231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:20:53Z",
      "updated_at": "2025-02-09T21:20:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36925040096</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2646606231",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16239406371,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPH8a0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239406371",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d302324edcff648574c5df467435abee05e62a2e",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/d302324edcff648574c5df467435abee05e62a2e",
      "created_at": "2025-02-09T21:28:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16247362012,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPIaxHc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16247362012",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0ccf21e7dff269450a9dc844250a919add997db9",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/0ccf21e7dff269450a9dc844250a919add997db9",
      "created_at": "2025-02-10T13:12:37Z"
    },
    {
      "event": "commented",
      "id": 2647951114,
      "node_id": "IC_kwDOABII586d1IcK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2647951114",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T13:13:07Z",
      "updated_at": "2025-02-10T13:13:07Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2647951114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "ready_for_review",
      "id": 16247573394,
      "node_id": "RFRE_lADOABII586pVaFFzwAAAAPIbkuS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16247573394",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T13:27:13Z"
    },
    {
      "event": "unlabeled",
      "id": 16250124243,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAPIlTfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16250124243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T15:45:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2606517127,
      "node_id": "PRR_kwDOABII586bXEuH",
      "url": null,
      "actor": null,
      "commit_id": "0ccf21e7dff269450a9dc844250a919add997db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "The resource bounds additions seem to make sense, still working through the workset change implications.\r\n\r\nI've got a minimal fuzz harness checking that the \"honest\" peer cannot be evicted, please feel free to take it: https://github.com/instagibbs/bitcoin/tree/2025-01-orphanage-peer-dos_greg_2",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2606517127",
      "submitted_at": "2025-02-10T21:27:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268223946,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJqWXK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268223946",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7aaf390a5a24857f7ced443a2739e43b4f4ade95",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/7aaf390a5a24857f7ced443a2739e43b4f4ade95",
      "created_at": "2025-02-11T17:03:24Z"
    },
    {
      "event": "commented",
      "id": 2651478837,
      "node_id": "IC_kwDOABII586eCls1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2651478837",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:51Z",
      "updated_at": "2025-02-11T17:04:51Z",
      "author_association": "MEMBER",
      "body": "Thanks @instagibbs for the testing and review, added your fuzz commits and took comments. Still need to write the p2p_orphan_handling test.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2651478837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "mentioned",
      "id": 16268244528,
      "node_id": "MEE_lADOABII586pVaFFzwAAAAPJqbYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268244528",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:52Z"
    },
    {
      "event": "subscribed",
      "id": 16268244548,
      "node_id": "SE_lADOABII586pVaFFzwAAAAPJqbZE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268244548",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268286279,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJqllH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268286279",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "61b40f0c97bde7b4f8b96a8520869e12f5abe01e",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/61b40f0c97bde7b4f8b96a8520869e12f5abe01e",
      "created_at": "2025-02-11T17:08:01Z"
    },
    {
      "event": "labeled",
      "id": 16268288502,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPJqmH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268288502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:08:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2651487529,
      "node_id": "IC_kwDOABII586eCn0p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2651487529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:08:13Z",
      "updated_at": "2025-02-11T17:08:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/37041607307</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2651487529",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268530016,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJrhFg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268530016",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "created_at": "2025-02-11T17:25:15Z"
    },
    {
      "event": "reviewed",
      "id": 2607117435,
      "node_id": "PRR_kwDOABII586bZXR7",
      "url": null,
      "actor": null,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Halfway through, some minor points below - my main conceptual question is why `m_total_announcements` is a meaningful metric in limiting the orphanage.\r\n\r\nMy understanding is that  `m_total_orphan_usage` exists to limit memory usage, and `m_total_announcements` to limit CPU usage - but why the number of announcements instead of number of orphans?\r\nWhy would it make the situation any less DoSy if we remove an announcer but keep the orphan? Since we only assign the tx to one peer's workset after 7426afbe62414fa575f91b4f8d3ea63bcc653e8b, more announcers for the same number of orphans doesn't really mean any additional work.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2607117435",
      "submitted_at": "2025-02-11T19:33:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "commented",
      "id": 2652236274,
      "node_id": "IC_kwDOABII586eFeny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2652236274",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T22:49:32Z",
      "updated_at": "2025-02-11T22:49:32Z",
      "author_association": "MEMBER",
      "body": "> My understanding is that m_total_orphan_usage exists to limit memory usage, and m_total_announcements to limit CPU usage - but why the number of announcements instead of number of orphans?\r\n\r\nYep, to limit CPU usage. The complexity of eviction for example is bounded by the total number of announcements: in the worst case, each orphan has many announcers and the `MaybeTrimOrphans` loop first removes announcements until each orphan just has 1 left, and then finally can remove transactions. See comment above declaration, \"The loop can run a maximum of m_max_global_announcement times\"\r\n\r\n> Why would it make the situation any less DoSy if we remove an announcer but keep the orphan?\r\n\r\nPerhaps I should have stated this in the OP more explicitly, but a major motivation for this eviction strategy is to prevent any peer from being to evict any announcements of another peer, hence the per-peer limits. If we changed the eviction code to remove orphans wholesale instead of just announcements, we'd have a similar situation to today's: an attacker can cause churn of an honest orphan by announcing it along with a lot of other orphans.\r\n\r\nSo evicting announcements instead of orphans isn't less DoSy, but it does make the orphanage less churnable.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2652236274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16274745383,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPKDOgn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16274745383",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "19194f243d9f67c3f0a7b1cd729a7a35feb14ae7",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/19194f243d9f67c3f0a7b1cd729a7a35feb14ae7",
      "created_at": "2025-02-12T04:25:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16274826885,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPKDiaF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16274826885",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3903310e059c80be671ae6f94e51b8a1afef7b2f",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/3903310e059c80be671ae6f94e51b8a1afef7b2f",
      "created_at": "2025-02-12T04:37:14Z"
    },
    {
      "event": "reviewed",
      "id": 2612094405,
      "node_id": "PRR_kwDOABII586bsWXF",
      "url": null,
      "actor": null,
      "commit_id": "3903310e059c80be671ae6f94e51b8a1afef7b2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2612094405",
      "submitted_at": "2025-02-12T14:35:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "reviewed",
      "id": 2612036122,
      "node_id": "PRR_kwDOABII586bsIIa",
      "url": null,
      "actor": null,
      "commit_id": "3903310e059c80be671ae6f94e51b8a1afef7b2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "combing through tests a bit, think I spotted the CI failure cause",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2612036122",
      "submitted_at": "2025-02-12T15:34:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "milestoned",
      "id": 16283646539,
      "node_id": "MIE_lADOABII586pVaFFzwAAAAPKlLpL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16283646539",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-12T16:14:01Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "review_requested",
      "id": 16299895751,
      "node_id": "RRE_lADOABII586pVaFFzwAAAAPLjKvH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16299895751",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T16:59:40Z",
      "requested_reviewer": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 16299895803,
      "node_id": "RRE_lADOABII586pVaFFzwAAAAPLjKv7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16299895803",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T16:59:40Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16311325654,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPMOxPW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16311325654",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cbdabb2c2a74312f4e843af71851adf4aa052f85",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/cbdabb2c2a74312f4e843af71851adf4aa052f85",
      "created_at": "2025-02-14T12:52:35Z"
    },
    {
      "event": "unlabeled",
      "id": 16312587947,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAPMTlar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16312587947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-14T14:24:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16316092200,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPMg88o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16316092200",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fea6057abb77e6a411eded64fe6c65b0c95f809c",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/fea6057abb77e6a411eded64fe6c65b0c95f809c",
      "created_at": "2025-02-14T18:37:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16316310011,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPMhyH7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16316310011",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/a704b8a9596c83968a732e26e44061c7347cecef",
      "created_at": "2025-02-14T18:59:22Z"
    },
    {
      "event": "labeled",
      "id": 16316310589,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPMhyQ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16316310589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-14T18:59:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2618600336,
      "node_id": "PRR_kwDOABII586cFKuQ",
      "url": null,
      "actor": null,
      "commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2618600336",
      "submitted_at": "2025-02-14T19:05:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16316554612,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPMit10",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16316554612",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2404ae2a7f2a816292d9be8adc32c82a68d2ae03",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/2404ae2a7f2a816292d9be8adc32c82a68d2ae03",
      "created_at": "2025-02-14T19:23:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16317236203,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPMlUPr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16317236203",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "created_at": "2025-02-14T20:43:32Z"
    },
    {
      "event": "reviewed",
      "id": 2618794047,
      "node_id": "PRR_kwDOABII586cF6A_",
      "url": null,
      "actor": null,
      "commit_id": "212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2618794047",
      "submitted_at": "2025-02-14T22:07:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "unlabeled",
      "id": 16318318396,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAPMpcc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16318318396",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-14T23:13:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2619421638,
      "node_id": "PRR_kwDOABII586cITPG",
      "url": null,
      "actor": null,
      "commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2619421638",
      "submitted_at": "2025-02-15T14:32:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "reviewed",
      "id": 2619531521,
      "node_id": "PRR_kwDOABII586cIuEB",
      "url": null,
      "actor": null,
      "commit_id": "212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2619531521",
      "submitted_at": "2025-02-16T03:25:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16341227248,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPOA1bw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16341227248",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "108fade768c37643e846489da76e1b46dfe61f89",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/108fade768c37643e846489da76e1b46dfe61f89",
      "created_at": "2025-02-18T02:55:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16348504061,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPOcl_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16348504061",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6862a4993a32d2e3cf39db1cb0d2901cae19a2f1",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/6862a4993a32d2e3cf39db1cb0d2901cae19a2f1",
      "created_at": "2025-02-18T13:36:20Z"
    },
    {
      "event": "reviewed",
      "id": 2623681622,
      "node_id": "PRR_kwDOABII586cYjRW",
      "url": null,
      "actor": null,
      "commit_id": "6862a4993a32d2e3cf39db1cb0d2901cae19a2f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2623681622",
      "submitted_at": "2025-02-18T15:24:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "labeled",
      "id": 16351016474,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPOmLYa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16351016474",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T16:03:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16355496092,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPO3RCc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16355496092",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8e3b80924e17bfe079f25d6d6db080a0112ea6d0",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/8e3b80924e17bfe079f25d6d6db080a0112ea6d0",
      "created_at": "2025-02-18T20:56:45Z"
    },
    {
      "event": "unlabeled",
      "id": 16356760604,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAPO8Fwc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16356760604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T23:13:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2625405683,
      "node_id": "PRR_kwDOABII586cfILz",
      "url": null,
      "actor": null,
      "commit_id": "8e3b80924e17bfe079f25d6d6db080a0112ea6d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2625405683",
      "submitted_at": "2025-02-19T04:27:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "commented",
      "id": 2668766678,
      "node_id": "IC_kwDOABII586fEiXW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668766678",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:09:11Z",
      "updated_at": "2025-02-19T14:09:11Z",
      "author_association": "MEMBER",
      "body": "The changes here have surprisingly little effect on the included benchmarks:\r\n\r\n* [bench] TxOrphanage::LimitOrphans\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       68,742,718.06 |               14.55 |    0.2% |     10.59 | `OrphanageEraseForBlockSinglePeer`\r\n|            8,857.40 |          112,899.93 |    0.3% |     10.86 | `OrphanageEvictionManyPeers`\r\n|        1,544,919.67 |              647.28 |    0.2% |     10.97 | `OrphanageWorksetManyPeers`\r\n|       11,444,367.17 |               87.38 |    0.1% |     11.00 | `OrphanageWorksetSinglePeer`\r\n\r\n* [txorphanage] when full, evict from the DoSiest peers first\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       65,643,925.00 |               15.23 |    1.7% |     10.32 | `OrphanageEraseForBlockSinglePeer`\r\n|            8,657.19 |          115,510.91 |    0.1% |     10.83 | `OrphanageEvictionManyPeers`\r\n|        1,472,007.25 |              679.34 |    0.6% |     10.96 | `OrphanageWorksetManyPeers`\r\n|       10,034,423.77 |               99.66 |    0.3% |     11.05 | `OrphanageWorksetSinglePeer`\r\n\r\n* [txorphanage] limit EraseForBlock iterations and use set instead of vec\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       59,924,050.19 |               16.69 |    1.1% |     10.98 | `OrphanageEraseForBlockSinglePeer`\r\n|            8,684.76 |          115,144.26 |    0.3% |     10.80 | `OrphanageEvictionManyPeers`\r\n|        1,500,899.95 |              666.27 |    0.2% |     11.10 | `OrphanageWorksetManyPeers`\r\n|       10,619,315.89 |               94.17 |    0.3% |     10.99 | `OrphanageWorksetSinglePeer`\r\n\r\n* [txorphanage] when orphans are erased, delete them from worksets\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       59,404,692.72 |               16.83 |    1.6% |     10.70 | `OrphanageEraseForBlockSinglePeer`\r\n|            8,824.15 |          113,325.33 |    0.1% |     10.82 | `OrphanageEvictionManyPeers`\r\n|        1,481,787.75 |              674.86 |    0.2% |     10.96 | `OrphanageWorksetManyPeers`\r\n|       10,452,273.40 |               95.67 |    0.5% |     11.10 | `OrphanageWorksetSinglePeer`\r\n\r\n* Increase default -maxorphantx to 3000\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       59,868,390.44 |               16.70 |    1.8% |     11.29 | `OrphanageEraseForBlockSinglePeer`\r\n|            9,275.98 |          107,805.36 |    0.3% |     10.97 | `OrphanageEvictionManyPeers`\r\n|        1,538,763.63 |              649.87 |    0.2% |     11.01 | `OrphanageWorksetManyPeers`\r\n|       10,657,836.93 |               93.83 |    0.4% |     11.03 | `OrphanageWorksetSinglePeer`\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2668766678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "commented",
      "id": 2668811890,
      "node_id": "IC_kwDOABII586fEtZy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668811890",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:25:47Z",
      "updated_at": "2025-02-19T14:25:47Z",
      "author_association": "MEMBER",
      "body": "> The changes here have surprisingly little effect on the included benchmarks:\r\n\r\nMy expectation was that the time would go up with these changes, but hopefully not by too much.\r\n\r\nI am pretty surprised that \"[txorphanage] when full, evict from the DoSiest peers first\" doesn't make `OrphanageEvictionManyPeers` slower, but I guess it's because there are only 24 transactions.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2668811890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "commented",
      "id": 2669192468,
      "node_id": "IC_kwDOABII586fGKUU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2669192468",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T16:43:55Z",
      "updated_at": "2025-02-19T16:43:55Z",
      "author_association": "MEMBER",
      "body": "Will add something like this as comments as well but here's the thinking around these benches:\r\n\r\n- The `EraseForBlock` bench exists to test the worst case `EraseForBlock` time, which is every orphan conflicting the maximum amount with the block. That's (very roughly) ~2000 inputs per tx (within 400KWu), times the max number of orphans.\r\n  - We're kind of cheating in \"limit EraseForBlock iterations and use set instead of vec\" which forces it to stop at 100 orphans, even if the max number of orphans is increased.\r\n  - There is also memory, which what changing to a `set` helps with. Due to the way the loops work, we would have 2000 * max number of orphans iterators in the vector.\r\n- The workset benches exist to test the worst case `AddChildrenToWorkSet` time. Similarly, worst case is when all orphans spend an output of the transaction. The complexity can also increase when there are multiple announcers for the orphans. \r\n- The eviction bench exists to test the worst case `LimitOrphans` time. Note it artificially uses `max_orphans=0` even though that doesn't happen in real life. The worst case is when every orphan has been announced by every peer, and we need to remove all announcers one by one before we actually erase anything. This would have been pretty bad before we set a global announcement limit.\r\n\r\nSo for all of these benches, we primarily want them to not blow up when we increase the `DEFAULT_MAX_ORPHAN_TRANSACTIONS`.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2669192468",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "demilestoned",
      "id": 16384547570,
      "node_id": "DEME_lADOABII586pVaFFzwAAAAPQmFry",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16384547570",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-20T15:31:50Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "milestoned",
      "id": 16384548760,
      "node_id": "MIE_lADOABII586pVaFFzwAAAAPQmF-Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16384548760",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-20T15:31:54Z",
      "milestone": {
        "title": "30.0"
      }
    },
    {
      "event": "commented",
      "id": 2671888414,
      "node_id": "IC_kwDOABII586fQcge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2671888414",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-20T15:44:14Z",
      "updated_at": "2025-02-20T15:44:14Z",
      "author_association": "MEMBER",
      "body": "Sad to see this slip, but given the amount of changes and discoveries that necessitated them even in just the last week, it's probably the right decision.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2671888414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "commented",
      "id": 2671912617,
      "node_id": "IC_kwDOABII586fQiap",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2671912617",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-20T15:52:47Z",
      "updated_at": "2025-02-20T15:52:47Z",
      "author_association": "MEMBER",
      "body": "I'm sad too! Seeing the stats from https://delvingbitcoin.org/t/stats-on-orphanage-overflows/1421 made this more pressing in my opinion, but it's not a regression. I think we can still try to consider small, obviously safe changes for v29, but this feels too big. I don't want to risk creating new DoS problems.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2671912617",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "reviewed",
      "id": 2630943858,
      "node_id": "PRR_kwDOABII586c0QRy",
      "url": null,
      "actor": null,
      "commit_id": "8e3b80924e17bfe079f25d6d6db080a0112ea6d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2630943858",
      "submitted_at": "2025-02-20T21:27:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "reviewed",
      "id": 2630852607,
      "node_id": "PRR_kwDOABII586cz5__",
      "url": null,
      "actor": null,
      "commit_id": "8e3b80924e17bfe079f25d6d6db080a0112ea6d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2630852607",
      "submitted_at": "2025-02-20T22:48:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "commented",
      "id": 2698920711,
      "node_id": "IC_kwDOABII586g3kMH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2698920711",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T21:13:17Z",
      "updated_at": "2025-03-04T21:13:17Z",
      "author_association": "MEMBER",
      "body": "Following coredev discussions, I'm working on a few things:\r\n- given selected peer, evict by entry/announcement time instead of randomly\r\n- shorten expiry time (and GETDATA interval)\r\n- rewrite as boost multi-index\r\n- clarify benches",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2698920711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "commented",
      "id": 2698974332,
      "node_id": "IC_kwDOABII586g3xR8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2698974332",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T21:29:58Z",
      "updated_at": "2025-03-04T21:29:58Z",
      "author_association": "MEMBER",
      "body": "> shorten expiry time (and GETDATA interval)\r\n\r\nIs this worth splitting out as its own PR?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2698974332",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "commented",
      "id": 2699010480,
      "node_id": "IC_kwDOABII586g36Gw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2699010480",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T21:45:33Z",
      "updated_at": "2025-03-04T21:45:33Z",
      "author_association": "MEMBER",
      "body": "Yes! I think multi index could also be its own PR. But wanted to give a\nstatus update here.\n",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2699010480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "convert_to_draft",
      "id": 16645165383,
      "node_id": "CTDE_lADOABII586pVaFFzwAAAAPgIRFH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16645165383",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-09T15:03:44Z"
    },
    {
      "event": "labeled",
      "id": 16790307775,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPox8O_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16790307775",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-16T09:47:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlZDUxZmU3ZDVjYmNjNDNlYmEyYmUzY2Q1YWY2NjZmZTFkOTVkZDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7",
      "tree": {
        "sha": "6d4899157183e1fc04a55c169c6bac85ff7e0081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d4899157183e1fc04a55c169c6bac85ff7e0081"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7710a31f0cb69a04529f39840196826d0b9770ab",
          "sha": "7710a31f0cb69a04529f39840196826d0b9770ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7710a31f0cb69a04529f39840196826d0b9770ab"
        }
      ],
      "message": "[txorphanage] change type of usage to int64_t",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T10:47:37Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-08T16:52:35Z"
      },
      "sha": "aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17716880679,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAQgAiUn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17716880679",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "49c4b32a3f0abfb3a07ba29b11873f8ee8564429",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/49c4b32a3f0abfb3a07ba29b11873f8ee8564429",
      "created_at": "2025-05-19T14:57:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17717426278,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAQgCnhm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17717426278",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6a5720116a08a4bdad72bfdb933358186eebf53",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/e6a5720116a08a4bdad72bfdb933358186eebf53",
      "created_at": "2025-05-19T15:25:04Z"
    },
    {
      "event": "labeled",
      "id": 17717474696,
      "node_id": "LE_lADOABII586pVaFFzwAAAAQgCzWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17717474696",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T15:27:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2891445881,
      "node_id": "IC_kwDOABII586sV_Z5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2891445881",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T15:27:31Z",
      "updated_at": "2025-05-19T15:27:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/42487913320</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to multiple linting errors, including circular dependencies, missing include guards, and spelling mistakes.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2891445881",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxOTBkYzk2ZGU4NjQyM2JlNjI0ZDliZGU5NGY3NmNhZjBkYjA0ZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8190dc96de86423be624d9bde94f76caf0db04fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8190dc96de86423be624d9bde94f76caf0db04fa",
      "tree": {
        "sha": "737ee2ae739ccc980e664d37bd109af5369f9e5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/737ee2ae739ccc980e664d37bd109af5369f9e5b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7",
          "sha": "aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aed51fe7d5cbcc43eba2be3cd5af666fe1d95dd7"
        }
      ],
      "message": "[prep/refactor] move txorphanage to node namespace and directory\n\nThis is move-only.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:35:49Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T14:09:10Z"
      },
      "sha": "8190dc96de86423be624d9bde94f76caf0db04fa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczN2M1MTI3ZGY4NDFlOWM4MDM3YjE4ODUyODRmODBiMGFiYTE3ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/737c5127df841e9c8037b1885284f80b0aba17dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/737c5127df841e9c8037b1885284f80b0aba17dd",
      "tree": {
        "sha": "a098c5584fce46669079c2be27032f97f8b721d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a098c5584fce46669079c2be27032f97f8b721d7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8190dc96de86423be624d9bde94f76caf0db04fa",
          "sha": "8190dc96de86423be624d9bde94f76caf0db04fa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8190dc96de86423be624d9bde94f76caf0db04fa"
        }
      ],
      "message": "[prep/rpc] remove entry and expiry time from getorphantxs\n\nExpiry is going away in a later commit.\nThis is only an RPC change. Behavior of the orphanage does not change.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:36:02Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T13:59:23Z"
      },
      "sha": "737c5127df841e9c8037b1885284f80b0aba17dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1ZmU0MzgzYWRhOGExNjA3NmE5NjY1ZTllZTk1NTdkOTNmZDY1OWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5fe4383ada8a16076a9665e9ee9557d93fd659f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5fe4383ada8a16076a9665e9ee9557d93fd659f",
      "tree": {
        "sha": "a20387d0cd54e337f713f1dedf139a7c0fd395af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a20387d0cd54e337f713f1dedf139a7c0fd395af"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/737c5127df841e9c8037b1885284f80b0aba17dd",
          "sha": "737c5127df841e9c8037b1885284f80b0aba17dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/737c5127df841e9c8037b1885284f80b0aba17dd"
        }
      ],
      "message": "[prep/test] modify test to not access TxOrphanage internals\n\nThese internals should and will be private.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:36:02Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T15:05:39Z"
      },
      "sha": "b5fe4383ada8a16076a9665e9ee9557d93fd659f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyMjYzMzU0NTI3ZjQ1MDlmNTU3Mjc5YTJjODVhM2Q2YjdiNzhmNzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52263354527f4509f557279a2c85a3d6b7b78f75",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/52263354527f4509f557279a2c85a3d6b7b78f75",
      "tree": {
        "sha": "6bd082535a6d87c233e36a8266590dcec9f3ce9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bd082535a6d87c233e36a8266590dcec9f3ce9f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5fe4383ada8a16076a9665e9ee9557d93fd659f",
          "sha": "b5fe4383ada8a16076a9665e9ee9557d93fd659f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5fe4383ada8a16076a9665e9ee9557d93fd659f"
        }
      ],
      "message": "[prep/config] remove -maxorphantx\n\nThe orphanage will no longer have a maximum number of unique orphans.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:36:02Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T15:36:37Z"
      },
      "sha": "52263354527f4509f557279a2c85a3d6b7b78f75"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyMWQwNTUxNTlmNDY1YjdhMmQwOGFkMDhkNDhiNDNlZWVlNjY1ZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f21d055159f465b7a2d08ad08d48b43eeee665da",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f21d055159f465b7a2d08ad08d48b43eeee665da",
      "tree": {
        "sha": "883fda4196094ca304136401782a4dbebd26e072",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/883fda4196094ca304136401782a4dbebd26e072"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52263354527f4509f557279a2c85a3d6b7b78f75",
          "sha": "52263354527f4509f557279a2c85a3d6b7b78f75",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/52263354527f4509f557279a2c85a3d6b7b78f75"
        }
      ],
      "message": "[prep/refactor] move DEFAULT_MAX_ORPHAN_TRANSACTIONS to txorphanage.h\n\nThis is move only.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:36:02Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-16T14:27:35Z"
      },
      "sha": "f21d055159f465b7a2d08ad08d48b43eeee665da"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlY2JjNzYwNjJkNjQxN2ZhYmI4NzJmYjVhMTI2MjUyMDcyOWFlZjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eecbc76062d6417fabb872fb5a1262520729aef8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eecbc76062d6417fabb872fb5a1262520729aef8",
      "tree": {
        "sha": "138f91af3eb6c545b2b1b42bb1a7efa1745515ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/138f91af3eb6c545b2b1b42bb1a7efa1745515ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f21d055159f465b7a2d08ad08d48b43eeee665da",
          "sha": "f21d055159f465b7a2d08ad08d48b43eeee665da",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f21d055159f465b7a2d08ad08d48b43eeee665da"
        }
      ],
      "message": "[prep/test] make LimitOrphans non-configurable\n\nLimiting by number of unique orphans will be removed in a later commit.\nAlso, move towards a model where TxOrphanage is initialized with limits\nthat it remembers throughout its lifetime.\nNow that -maxorphantx is gone, this does not change the node behavior.\nThe parameter is only used in tests.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:36:02Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-16T14:36:05Z"
      },
      "sha": "eecbc76062d6417fabb872fb5a1262520729aef8"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17717695408,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAQgDpOw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17717695408",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c0d7b4f60fbb19b8cc3ef2ee383cff313f58153f",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/c0d7b4f60fbb19b8cc3ef2ee383cff313f58153f",
      "created_at": "2025-05-19T15:37:30Z"
    },
    {
      "event": "unlabeled",
      "id": 17718458882,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAQgGjoC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17718458882",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-19T16:22:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3YzU4NzdmN2YyZGMxOTNlYmJmZWRlMzg0Njc0ZTIwOWJmNmFjYWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7c5877f7f2dc193ebbfede384674e209bf6acaa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d7c5877f7f2dc193ebbfede384674e209bf6acaa",
      "tree": {
        "sha": "477851fbf7e9197785156657486ac7f23e398702",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/477851fbf7e9197785156657486ac7f23e398702"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eecbc76062d6417fabb872fb5a1262520729aef8",
          "sha": "eecbc76062d6417fabb872fb5a1262520729aef8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eecbc76062d6417fabb872fb5a1262520729aef8"
        }
      ],
      "message": "feature: Add TxOrphanageImpl\n\nNo behavior changes in this commit; TxOrphanage is not yet using this\nimplementation.\n\nThis is largely a reimplementation using boost::multi_index_container.\nAll the same public methods are available. It has an index by outpoint,\nper-peer tracking, peer worksets, etc.\n\nA few differences:\n- Limits have changed: instead of a global limit of 100 unique orphans,\n  we have a maximum number of announcements (which can include duplicate\norphans) and a global memory limit which scales with the number of\npeers.\n- The maximum announcements limit is 100 to match the original limit,\n  but this is actually a stricter limit because the announcement count\nis not de-duplicated.\n- Eviction strategy: when global limits are reached, a per-peer limit\n  comes into play. While limits are exceeded, we choose the peer whose\n“DoS score” (max usage / limit ratio for announcements and memory\nlimits) is highest and evict its non-workset announcements on FIFO.\n- This means no peer can influence the eviction of another peer’s\n  orphans.\n- Orphans no longer expire, since older announcements are generally\n  removed before newer ones.\n- GetChildrenFromSamePeer returns the transactions from newest to\n  oldest.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-04-02T21:29:38Z"
      },
      "sha": "d7c5877f7f2dc193ebbfede384674e209bf6acaa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhMGFjNjhlODhiNjQxOTg5M2YzZThjYTU2ODE3NTcyZjUzYWI2MWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea0ac68e88b6419893f3e8ca56817572f53ab61e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea0ac68e88b6419893f3e8ca56817572f53ab61e",
      "tree": {
        "sha": "6ca982b019cda7b3d3dc6888047d2991487b9131",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ca982b019cda7b3d3dc6888047d2991487b9131"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7c5877f7f2dc193ebbfede384674e209bf6acaa",
          "sha": "d7c5877f7f2dc193ebbfede384674e209bf6acaa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d7c5877f7f2dc193ebbfede384674e209bf6acaa"
        }
      ],
      "message": "[unit test] basic TxOrphanageImpl eviction and protection",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-13T19:27:02Z"
      },
      "sha": "ea0ac68e88b6419893f3e8ca56817572f53ab61e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NGUxMTJiN2IxYzg2YzExZDk1NDg0ZTg0ZmI5NjRlMWE1NWY3NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/444e112b7b1c86c11d95484e84fb964e1a55f742",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/444e112b7b1c86c11d95484e84fb964e1a55f742",
      "tree": {
        "sha": "8716dbb6702faea7837974ab19982907bbae28d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8716dbb6702faea7837974ab19982907bbae28d9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea0ac68e88b6419893f3e8ca56817572f53ab61e",
          "sha": "ea0ac68e88b6419893f3e8ca56817572f53ab61e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea0ac68e88b6419893f3e8ca56817572f53ab61e"
        }
      ],
      "message": "[fuzz] txorphanage_impl protection harness\n\nThis fuzzer specifically tests protection of an honest peer's orphans.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-19T15:13:51Z"
      },
      "sha": "444e112b7b1c86c11d95484e84fb964e1a55f742"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwNTc2N2Q0NDhmZTQzNjllMmJiYjgwOTM3OTBiMTI0NDkzN2EyNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/405767d448fe4369e2bbb8093790b1244937a25b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/405767d448fe4369e2bbb8093790b1244937a25b",
      "tree": {
        "sha": "3d3d7a3e4e19f73308103c96c8b222ef6bc94117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d3d7a3e4e19f73308103c96c8b222ef6bc94117"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/444e112b7b1c86c11d95484e84fb964e1a55f742",
          "sha": "444e112b7b1c86c11d95484e84fb964e1a55f742",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/444e112b7b1c86c11d95484e84fb964e1a55f742"
        }
      ],
      "message": "[p2p] swap TxOrphanage backend for TxOrphanageImpl\n\nThis commit is where behavior changes go into effect.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T15:06:08Z"
      },
      "sha": "405767d448fe4369e2bbb8093790b1244937a25b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1ZmU1MDM4YmEyZGNkNTQ0ZDhiOTdkYmMxZWNjMjExZTNlNTc1MWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b",
      "tree": {
        "sha": "7ded87c2d3fffbed3ecc4685a287761aa863276d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ded87c2d3fffbed3ecc4685a287761aa863276d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/405767d448fe4369e2bbb8093790b1244937a25b",
          "sha": "405767d448fe4369e2bbb8093790b1244937a25b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/405767d448fe4369e2bbb8093790b1244937a25b"
        }
      ],
      "message": "[cleanup] remove unused rng param from LimitOrphans",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-16T19:16:47Z"
      },
      "sha": "75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNmI5NTcyMGYzNDNjYTkwZDM0ZWUwYzA0MTZhMjM2MDU0ZTUxN2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f16b95720f343ca90d34ee0c0416a236054e517d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f16b95720f343ca90d34ee0c0416a236054e517d",
      "tree": {
        "sha": "0ba4f6d250d34b6bdece504d9652d88a2fa8f3d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ba4f6d250d34b6bdece504d9652d88a2fa8f3d8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b",
          "sha": "75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/75fe5038ba2dcd544d8b97dbc1ecc211e3e5751b"
        }
      ],
      "message": "[p2p] bump DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS to 3000\n\nFor the default number of peers (125), allows each to relay a default\ndescendant package of transactions (up to 25-1=24 can be missing inputs)\nout of order.\n\nFunctional tests are removed instead of modified because it takes a\nvery long time to relay 3000 orphans.\n\nAlso deletes the now-unused DEFAULT_MAX_ORPHAN_TRANSACTIONS.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-16T15:16:04Z"
      },
      "sha": "f16b95720f343ca90d34ee0c0416a236054e517d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3MDM1ZmQ3OGVlNDZlODQ0YzJiYzE5ZGNkNzk1OGU2NmVkZTNhZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7035fd78ee46e844c2bc19dcd7958e66ede3ae6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d7035fd78ee46e844c2bc19dcd7958e66ede3ae6",
      "tree": {
        "sha": "3dd9ec94ec2927d03df98f96f54c7a6446d0873b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3dd9ec94ec2927d03df98f96f54c7a6446d0873b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f16b95720f343ca90d34ee0c0416a236054e517d",
          "sha": "f16b95720f343ca90d34ee0c0416a236054e517d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f16b95720f343ca90d34ee0c0416a236054e517d"
        }
      ],
      "message": "[doc] cleanups",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-16T19:20:35Z"
      },
      "sha": "d7035fd78ee46e844c2bc19dcd7958e66ede3ae6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmNzM5MmQ1NWE1ODgwMmNmMDExNjEwYzAxZDE4OTEyNThlYjM4YjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f7392d55a58802cf011610c01d1891258eb38b1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f7392d55a58802cf011610c01d1891258eb38b1",
      "tree": {
        "sha": "b675ed03eab4d0ee31351c5867392ea8adb180b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b675ed03eab4d0ee31351c5867392ea8adb180b4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7035fd78ee46e844c2bc19dcd7958e66ede3ae6",
          "sha": "d7035fd78ee46e844c2bc19dcd7958e66ede3ae6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d7035fd78ee46e844c2bc19dcd7958e66ede3ae6"
        }
      ],
      "message": "[unit test] strengthen GetChildrenFromSamePeer tests: results are in recency order",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-15T14:30:12Z"
      },
      "sha": "1f7392d55a58802cf011610c01d1891258eb38b1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjMmY4ZWZkNmQ3MDc3YjgyMjIzNDI0ODU0NmE1ZWE4NDk5NjcwMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc2f8efd6d7077b822234248546a5ea849967019",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc2f8efd6d7077b822234248546a5ea849967019",
      "tree": {
        "sha": "ef8a0f07a3c3bb85619735faf126183192655591",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef8a0f07a3c3bb85619735faf126183192655591"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f7392d55a58802cf011610c01d1891258eb38b1",
          "sha": "1f7392d55a58802cf011610c01d1891258eb38b1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f7392d55a58802cf011610c01d1891258eb38b1"
        }
      ],
      "message": "[functional test] 1p1c is accepted in the presence of orphanage DoSers\n\nCo-authored-by: Greg Sanders <gsanders87@gmail.com>",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-29T13:26:23Z"
      },
      "sha": "cc2f8efd6d7077b822234248546a5ea849967019"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlOGEzMjNiZTdmNTkzNzhhODczMDU2ODAzMTIwYzAxZGU5ODEyM2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e8a323be7f59378a873056803120c01de98123f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e8a323be7f59378a873056803120c01de98123f",
      "tree": {
        "sha": "284a8f9d656c93c60bc27dd8d6153ad91ad71254",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/284a8f9d656c93c60bc27dd8d6153ad91ad71254"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc2f8efd6d7077b822234248546a5ea849967019",
          "sha": "cc2f8efd6d7077b822234248546a5ea849967019",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cc2f8efd6d7077b822234248546a5ea849967019"
        }
      ],
      "message": "[prep/test] restart instead of bumpmocktime between p2p_orphan_handling subtests\n\nIf we want to restart at all during the tests, we can't have future timestamps.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-28T13:28:23Z"
      },
      "sha": "4e8a323be7f59378a873056803120c01de98123f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4OWIzN2I5NDU3NGJiZjRiOTdmODY0MzBlYmFjMzNjNWQ4ZjczMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "tree": {
        "sha": "cee5edbdfd97c10dfb5bb54ad336cc84fa890a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cee5edbdfd97c10dfb5bb54ad336cc84fa890a71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e8a323be7f59378a873056803120c01de98123f",
          "sha": "4e8a323be7f59378a873056803120c01de98123f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e8a323be7f59378a873056803120c01de98123f"
        }
      ],
      "message": "[functional test] each peer can relay 1 ancestor package",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-05-20T11:50:38Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2025-02-11T21:03:48Z"
      },
      "sha": "c89b37b94574bbf4b97f86430ebac33c5d8f7319"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17732731896,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAQg9AP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17732731896",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "created_at": "2025-05-20T11:50:53Z"
    },
    {
      "event": "unlabeled",
      "id": 17737704010,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAQhP-JK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17737704010",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T16:08:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949498021",
      "pull_request_review_id": 2606517127,
      "id": 1949498021,
      "node_id": "PRRC_kwDOABII5850Mvql",
      "diff_hunk": "@@ -36,9 +36,10 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n ",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212\r\n\r\n`MAX_GLOBAL_ORPHAN_ANNOUNCEMENTS` doesn't occur in the PR, should be `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS`?",
      "created_at": "2025-02-10T16:43:36Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949498021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949498021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514690",
      "pull_request_review_id": 2606517127,
      "id": 1949514690,
      "node_id": "PRRC_kwDOABII5850MzvC",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 40,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "s/may provide/may provide without risking eviction/?",
      "created_at": "2025-02-10T16:50:22Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949514690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514831",
      "pull_request_review_id": 2606517127,
      "id": 1949514831,
      "node_id": "PRRC_kwDOABII5850MzxP",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As\n+     * more peers are added, each peer's allocation is reduced. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 41,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "s/allocation/protected allocation/?\r\n\r\n",
      "created_at": "2025-02-10T16:50:24Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949514831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949519057",
      "pull_request_review_id": 2606517127,
      "id": 1949519057,
      "node_id": "PRRC_kwDOABII5850M0zR",
      "diff_hunk": "@@ -111,7 +137,6 @@ class TxOrphanage {\n \n protected:\n     struct OrphanTx : public OrphanTxBase {",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 56,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we think we'll end up using the derived class in a meaningful way later?",
      "created_at": "2025-02-10T16:51:18Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949519057",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949519057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949538646",
      "pull_request_review_id": 2606517127,
      "id": 1949538646,
      "node_id": "PRRC_kwDOABII5850M5lW",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);\n+    }\n+\n+    unsigned int GetPerPeerMaxAnnouncements() const {",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 138,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note: this is use to \"normalize\" the one DoS score metric against the other only. If this wasn't used, trimming would heavily favor announcement trimming scores first.",
      "created_at": "2025-02-10T17:02:50Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949538646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949538646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949554535",
      "pull_request_review_id": 2606517127,
      "id": 1949554535,
      "node_id": "PRRC_kwDOABII5850M9dn",
      "diff_hunk": "@@ -138,10 +165,28 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** There are 2 DoS scores:\n+         * - CPU score (ratio of num announcements / max allowed announcements)\n+         * - Memory score (ratio of total usage / max allowed usage).\n+         *\n+         * If the peer is using more than the allowed for either resource, its DoS score is > 1.\n+         * A peer having a DoS score > 1 does not necessarily mean that something is wrong, since we\n+         * do not trim unless the orphanage exceeds global limits, but it means that this peer will\n+         * be selected for trimming sooner. If the orphanage NeedsTrim(), it must be that at least\n+         * one peer has a DoS score > 1. */\n+        FeeFrac GetDoSScore(unsigned int peer_max_ann, unsigned int peer_max_mem) {\n+            FeeFrac cpu_score(m_iter_list.size(), peer_max_ann);\n+            FeeFrac mem_score(m_total_usage, peer_max_mem);\n+            return std::max<FeeFrac>(cpu_score, mem_score);\n+        }\n     };\n     std::map<NodeId, PeerOrphanInfo> m_peer_orphanage_info;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 93,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re:global memory limits, they won't be increased until each connected peer offers up their own orphan or announcement (which makes sense)\r\n\r\nwould be good to have test/fuzz coverage that there isn't some bug where this continuously grows, raising the global limits to unsafe levels? Arg in `SanityCheck`?",
      "created_at": "2025-02-10T17:11:47Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949554535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949554535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949568939",
      "pull_request_review_id": 2606517127,
      "id": 1949568939,
      "node_id": "PRRC_kwDOABII5850NA-r",
      "diff_hunk": "@@ -87,29 +89,32 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n         }\n-    }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(m_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != m_orphan_list.size()) {\n-        // Unless we're deleting the last entry in m_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = m_orphan_list.back();\n-        m_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n+        // Find this orphan iter's position in the list, and delete it.\n+        auto& orphan_list = peer_it->second.m_iter_list;\n+        size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));\n+\n+        if (!Assume(old_pos < orphan_list.size())) continue;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe a bit too paranoid since it was just computed explicitly from the underlying list?",
      "created_at": "2025-02-10T17:21:10Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949568939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949568939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949583127",
      "pull_request_review_id": 2606517127,
      "id": 1949583127,
      "node_id": "PRRC_kwDOABII5850NEcX",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim() || m_orphans.size() > max_orphans)\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the allowance. This metric causes us to naturally select peers who have exceeded\n+        // their limits (i.e. a DoS score > 1) before peers who haven't. We may choose the same peer\n+        // change since the last iteration of this loop.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "wording confusion: same peer change?",
      "created_at": "2025-02-10T17:29:13Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949583127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949583127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949610086",
      "pull_request_review_id": 2606517127,
      "id": 1949610086,
      "node_id": "PRRC_kwDOABII5850NLBm",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> happened yet at this point\r\n\r\nDo you mean prior to LimitOrphans? ",
      "created_at": "2025-02-10T17:44:54Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949610086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949610086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949612609",
      "pull_request_review_id": 2606517127,
      "id": 1949612609,
      "node_id": "PRRC_kwDOABII5850NLpB",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may\n+    // evict more than 1 transaction. All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);\n+\n+    // The DoS peer's orphans have been evicted, nobody else's have.\n+    for (NodeId peer{0}; peer <= dos_peer; ++peer) {\n+        BOOST_CHECK_EQUAL(peer == dos_peer, peer_usages.at(peer) != orphanage.UsageByPeer(peer));",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would rather we check that we evicted the dos'y peer and somehow didn't *add* more resources allocated to him",
      "created_at": "2025-02-10T17:46:45Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949612609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949612609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949641427",
      "pull_request_review_id": 2606517127,
      "id": 1949641427,
      "node_id": "PRRC_kwDOABII5850NSrT",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 128,
      "original_position": 124,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could do this for both cases\r\n```Suggestion  \r\n       # Something was evicted\r\n        assert_greater_than(len(large_orphans), len(node.getorphantxs()))\r\n```",
      "created_at": "2025-02-10T18:04:45Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949641427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949641427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 476,
      "original_line": 476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949655371",
      "pull_request_review_id": 2606517127,
      "id": 1949655371,
      "node_id": "PRRC_kwDOABII5850NWFL",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "seems wrong, you're sending 3000/125=24 transactions *total*?",
      "created_at": "2025-02-10T18:15:47Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949655371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949655371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949834394",
      "pull_request_review_id": 2606517127,
      "id": 1949834394,
      "node_id": "PRRC_kwDOABII5850OBya",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is backwards. See added unit test:\r\n```\r\ndiff --git a/src/test/orphanage_tests.cpp b/src/test/orphanage_tests.cpp\r\nindex fe0f81fdb4..dde42d9d4a 100644\r\n--- a/src/test/orphanage_tests.cpp\r\n+++ b/src/test/orphanage_tests.cpp\r\n@@ -77,0 +78,24 @@ static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& out\r\n+// 101 output transaction\r\n+static CTransactionRef MakeHugeTransactionSpending(const std::vector<COutPoint>& outpoints, FastRandomContext& det_rand)\r\n+{\r\n+    CKey key;\r\n+    MakeNewKeyWithFastRandomContext(key, det_rand);\r\n+    CMutableTransaction tx;\r\n+    // If no outpoints are given, create a random one.\r\n+    if (outpoints.empty()) {\r\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\r\n+    } else {\r\n+        for (const auto& outpoint : outpoints) {\r\n+            tx.vin.emplace_back(outpoint);\r\n+        }\r\n+    }\r\n+    // Ensure txid != wtxid\r\n+    tx.vin[0].scriptWitness.stack.push_back({1});\r\n+    tx.vout.resize(101);\r\n+    tx.vout[0].nValue = CENT;\r\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\r\n+    tx.vout[1].nValue = 3 * CENT;\r\n+    tx.vout[1].scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(key.GetPubKey()));\r\n+    return MakeTransactionRef(tx);\r\n+}\r\n+\r\n@@ -598,0 +623,23 @@ BOOST_AUTO_TEST_CASE(peer_worksets)\r\n+\r\n+        {\r\n+            // We will fill the orphanage with a single parent and 101 children\r\n+            // from that single transaction to cause potential deletion of work set\r\n+            // from peer 0.\r\n+            auto tx_missing_parent = MakeHugeTransactionSpending({}, det_rand);\r\n+            std::vector<CTransactionRef> tx_orphans;\r\n+            for (unsigned int i{0}; i < MAX_ORPHAN_WORK_QUEUE + 1; i++) {\r\n+                auto tx_orphan = MakeTransactionSpending({COutPoint{tx_missing_parent->GetHash(), i}}, det_rand);\r\n+                BOOST_CHECK(orphanage.AddTx(tx_orphan, /*peer=*/node0));\r\n+            }\r\n+\r\n+            // 101 transactions in the orphanage (no trimming of orphanage yet), now\r\n+            // add parent to work set, which will all be allocated to peer 0.\r\n+            // work set should get trimmed exactly once down to MAX_ORPHAN_WORK_QUEUE\r\n+            orphanage.AddChildrenToWorkSet(*tx_missing_parent, det_rand);\r\n+            for (unsigned int i{0}; i < MAX_ORPHAN_WORK_QUEUE; i++) {\r\n+                BOOST_CHECK(orphanage.GetTxToReconsider(node0));\r\n+            }\r\n+\r\n+            // We should have emptied the work queue in MAX_ORPHAN_WORK_QUEUE steps\r\n+            BOOST_CHECK(!orphanage.HaveTxToReconsider(node0));\r\n+        }\r\ndiff --git a/src/txorphanage.cpp b/src/txorphanage.cpp\r\nindex 09d50a244a..2a881db669 100644\r\n--- a/src/txorphanage.cpp\r\n+++ b/src/txorphanage.cpp\r\n@@ -276 +276 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\r\n-                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\r\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return !m_orphans.contains(wtxid); });\r\n```",
      "created_at": "2025-02-10T20:28:08Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949834394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949834394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949852220",
      "pull_request_review_id": 2606517127,
      "id": 1949852220,
      "node_id": "PRRC_kwDOABII5850OGI8",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\n+                    peers_workset_trimmed.insert(announcer);\n+                }\n+\n+                // Add this tx to the work set. If the workset is full, even after trimming, don't\n+                // accept any new work items until the work queue has been flushed.\n+                if (orphan_work_set.size() < MAX_ORPHAN_WORK_QUEUE) {",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "should we debug log if we're not adding to work set? might be good to know it's happening",
      "created_at": "2025-02-10T20:40:56Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949852220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949852220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949856455",
      "pull_request_review_id": 2607117435,
      "id": 1949856455,
      "node_id": "PRRC_kwDOABII5850OHLH",
      "diff_hunk": "@@ -140,13 +140,12 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+unsigned int TxOrphanage::MaybeExpireOrphans()\n {\n-    unsigned int nEvicted = 0;\n+    int nErased = 0;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ff24c1feeb2878f7f1d31127ea220c788eb6a187",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: doesn't really matter if unsigned int (return value) or int is used, but would be nice to make it consistent, also with the %u / %d format specifiers in the logprints.",
      "created_at": "2025-02-10T20:42:26Z",
      "updated_at": "2025-02-11T19:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949856455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949856455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949899180",
      "pull_request_review_id": 2607117435,
      "id": 1949899180,
      "node_id": "PRRC_kwDOABII5850ORms",
      "diff_hunk": "@@ -160,15 +159,29 @@ void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n         }\n         // Sweep again 5 minutes after the next entry that expires in order to batch the linear scan.\n         m_next_sweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n-        if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n+    return nErased;\n+}\n+\n+unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+{\n+    unsigned int nEvicted = 0;\n     while (m_orphans.size() > max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n         EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n+    return nEvicted;\n+}\n+\n+void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ff24c1feeb2878f7f1d31127ea220c788eb6a187",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: commit msg of c929d71c0828544be509934312b6a7d11b47ea4d lacks a verb (e.g. \"split\").",
      "created_at": "2025-02-10T21:12:18Z",
      "updated_at": "2025-02-11T19:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949899180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949899180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911002",
      "pull_request_review_id": 2606517127,
      "id": 1949911002,
      "node_id": "PRRC_kwDOABII5850OUfa",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 103,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the honest orphan should be as large as possible: `target_vsize=100000`",
      "created_at": "2025-02-10T21:22:49Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949911002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911352",
      "pull_request_review_id": 2606517127,
      "id": 1949911352,
      "node_id": "PRRC_kwDOABII5850OUk4",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 152,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the honest orphan should be as large as possible: `target_vsize=100000`",
      "created_at": "2025-02-10T21:23:09Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949911352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949914892",
      "pull_request_review_id": 2606517127,
      "id": 1949914892,
      "node_id": "PRRC_kwDOABII5850OVcM",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 137,
      "original_position": 130,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can we get a functional test case that covers the \"protects fully sized ancestor package\" scenario in `p2p_orphan_handling.py`? ",
      "created_at": "2025-02-10T21:26:06Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949914892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949914892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 485,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949955925",
      "pull_request_review_id": 2607117435,
      "id": 1949955925,
      "node_id": "PRRC_kwDOABII5850OfdV",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 135,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "should this be `int64_t` instead of `int` in the spirit of the first commit?",
      "created_at": "2025-02-10T21:58:01Z",
      "updated_at": "2025-02-11T19:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949955925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949955925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949998393",
      "pull_request_review_id": 2607117435,
      "id": 1949998393,
      "node_id": "PRRC_kwDOABII5850Op05",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "should call `reserve` before pushing entries to `peer_it_heap`, not after.",
      "created_at": "2025-02-10T22:35:24Z",
      "updated_at": "2025-02-11T19:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949998393",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949998393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950002603",
      "pull_request_review_id": 2607117435,
      "id": 1950002603,
      "node_id": "PRRC_kwDOABII5850Oq2r",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could `m_orphans.size() <= max_orphans` be inside `NeedsTrim`?",
      "created_at": "2025-02-10T22:40:17Z",
      "updated_at": "2025-02-11T19:33:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950002603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950002603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722422",
      "pull_request_review_id": 2608521945,
      "id": 1950722422,
      "node_id": "PRRC_kwDOABII5850Ral2",
      "diff_hunk": "@@ -36,9 +36,10 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n ",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949498021,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, fixed",
      "created_at": "2025-02-11T12:04:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950722422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722979",
      "pull_request_review_id": 2608521945,
      "id": 1950722979,
      "node_id": "PRRC_kwDOABII5850Rauj",
      "diff_hunk": "@@ -87,29 +89,32 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n         }\n-    }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(m_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != m_orphan_list.size()) {\n-        // Unless we're deleting the last entry in m_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = m_orphan_list.back();\n-        m_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n+        // Find this orphan iter's position in the list, and delete it.\n+        auto& orphan_list = peer_it->second.m_iter_list;\n+        size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));\n+\n+        if (!Assume(old_pos < orphan_list.size())) continue;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949568939,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "removed",
      "created_at": "2025-02-11T12:04:50Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950722979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950723636",
      "pull_request_review_id": 2608521945,
      "id": 1950723636,
      "node_id": "PRRC_kwDOABII5850Ra40",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim() || m_orphans.size() > max_orphans)\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the allowance. This metric causes us to naturally select peers who have exceeded\n+        // their limits (i.e. a DoS score > 1) before peers who haven't. We may choose the same peer\n+        // change since the last iteration of this loop.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949583127,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-02-11T12:05:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950723636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950723636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950724798",
      "pull_request_review_id": 2608521945,
      "id": 1950724798,
      "node_id": "PRRC_kwDOABII5850RbK-",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 40,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949514690,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed",
      "created_at": "2025-02-11T12:06:11Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950724798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950724798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950725244",
      "pull_request_review_id": 2608521945,
      "id": 1950725244,
      "node_id": "PRRC_kwDOABII5850RbR8",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As\n+     * more peers are added, each peer's allocation is reduced. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 41,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949514831,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-02-11T12:06:30Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950725244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950725244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950732547",
      "pull_request_review_id": 2608521945,
      "id": 1950732547,
      "node_id": "PRRC_kwDOABII5850RdED",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": 1949610086,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, clarified",
      "created_at": "2025-02-11T12:12:11Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950732547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950732547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950739715",
      "pull_request_review_id": 2608521945,
      "id": 1950739715,
      "node_id": "PRRC_kwDOABII5850Re0D",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may\n+    // evict more than 1 transaction. All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);\n+\n+    // The DoS peer's orphans have been evicted, nobody else's have.\n+    for (NodeId peer{0}; peer <= dos_peer; ++peer) {\n+        BOOST_CHECK_EQUAL(peer == dos_peer, peer_usages.at(peer) != orphanage.UsageByPeer(peer));",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": 1949612609,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added",
      "created_at": "2025-02-11T12:16:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950739715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950739715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950745977",
      "pull_request_review_id": 2608521945,
      "id": 1950745977,
      "node_id": "PRRC_kwDOABII5850RgV5",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": 1949655371,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, and they are each announced by every peer. This bench is to test the maximum number of transactions where every peer has 100% overlap. We call `AddTx` `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS` times, which is the maximum before eviction would trigger. If we increase `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS`, the bench will scale too.",
      "created_at": "2025-02-11T12:18:35Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950745977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950745977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950778587",
      "pull_request_review_id": 2608521945,
      "id": 1950778587,
      "node_id": "PRRC_kwDOABII5850RoTb",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 128,
      "original_position": 124,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949641427,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-02-11T12:37:03Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950778587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950778587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 476,
      "original_line": 476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780338",
      "pull_request_review_id": 2608521945,
      "id": 1950780338,
      "node_id": "PRRC_kwDOABII5850Rouy",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 103,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949911002,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-02-11T12:38:23Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950780338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780433",
      "pull_request_review_id": 2608521945,
      "id": 1950780433,
      "node_id": "PRRC_kwDOABII5850RowR",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 152,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949911352,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-02-11T12:38:27Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950780433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950789783",
      "pull_request_review_id": 2608521945,
      "id": 1950789783,
      "node_id": "PRRC_kwDOABII5850RrCX",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949834394,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wow, very bad bit flip :facepalm: thank you",
      "created_at": "2025-02-11T12:45:06Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950789783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950789783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951246422",
      "pull_request_review_id": 2609431712,
      "id": 1951246422,
      "node_id": "PRRC_kwDOABII5850TahW",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949834394,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wrote a similar test to check that an evicted work item is the one that doesn't exist in `m_orphans` anymore.",
      "created_at": "2025-02-11T17:06:14Z",
      "updated_at": "2025-02-11T17:06:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951246422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951246422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957283",
      "pull_request_review_id": 2610780552,
      "id": 1951957283,
      "node_id": "PRRC_kwDOABII5850WIEj",
      "diff_hunk": "@@ -160,15 +159,29 @@ void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n         }\n         // Sweep again 5 minutes after the next entry that expires in order to batch the linear scan.\n         m_next_sweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n-        if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n+    return nErased;\n+}\n+\n+unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+{\n+    unsigned int nEvicted = 0;\n     while (m_orphans.size() > max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n         EraseTx(m_orphan_list[randompos]->first);\n         ++nEvicted;\n     }\n+    return nEvicted;\n+}\n+\n+void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ff24c1feeb2878f7f1d31127ea220c788eb6a187",
      "in_reply_to_id": 1949899180,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-02-12T04:25:29Z",
      "updated_at": "2025-02-12T04:25:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951957283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957432",
      "pull_request_review_id": 2610780759,
      "id": 1951957432,
      "node_id": "PRRC_kwDOABII5850WIG4",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949998393,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-02-12T04:25:44Z",
      "updated_at": "2025-02-12T04:25:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951957432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957531",
      "pull_request_review_id": 2610780943,
      "id": 1951957531,
      "node_id": "PRRC_kwDOABII5850WIIb",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1950002603,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moved into `NeedsTrim`",
      "created_at": "2025-02-12T04:25:54Z",
      "updated_at": "2025-02-12T04:25:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951957531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951957531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951962043",
      "pull_request_review_id": 2610788295,
      "id": 1951962043,
      "node_id": "PRRC_kwDOABII5850WJO7",
      "diff_hunk": "@@ -111,7 +137,6 @@ class TxOrphanage {\n \n protected:\n     struct OrphanTx : public OrphanTxBase {",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 56,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949519057,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not entirely sure... could be cleaned up",
      "created_at": "2025-02-12T04:33:12Z",
      "updated_at": "2025-02-12T04:33:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951962043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951962043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951964695",
      "pull_request_review_id": 2610793126,
      "id": 1951964695,
      "node_id": "PRRC_kwDOABII5850WJ4X",
      "diff_hunk": "@@ -140,13 +140,12 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+unsigned int TxOrphanage::MaybeExpireOrphans()\n {\n-    unsigned int nEvicted = 0;\n+    int nErased = 0;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ff24c1feeb2878f7f1d31127ea220c788eb6a187",
      "in_reply_to_id": 1949856455,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "made consistent + made both logs %u",
      "created_at": "2025-02-12T04:37:30Z",
      "updated_at": "2025-02-12T04:37:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951964695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951964695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951964799",
      "pull_request_review_id": 2610793252,
      "id": 1951964799,
      "node_id": "PRRC_kwDOABII5850WJ5_",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 135,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949955925,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-02-12T04:37:39Z",
      "updated_at": "2025-02-12T04:37:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951964799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951964799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951965002",
      "pull_request_review_id": 2610793579,
      "id": 1951965002,
      "node_id": "PRRC_kwDOABII5850WJ9K",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 137,
      "original_position": 130,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949914892,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(thanks, I took your test with just a few tweaks)",
      "created_at": "2025-02-12T04:38:01Z",
      "updated_at": "2025-02-12T04:38:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951965002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951965002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 485,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951966069",
      "pull_request_review_id": 2610795112,
      "id": 1951966069,
      "node_id": "PRRC_kwDOABII5850WKN1",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\n+                    peers_workset_trimmed.insert(announcer);\n+                }\n+\n+                // Add this tx to the work set. If the workset is full, even after trimming, don't\n+                // accept any new work items until the work queue has been flushed.\n+                if (orphan_work_set.size() < MAX_ORPHAN_WORK_QUEUE) {",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949852220,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a couple pushes ago, but gone again. After a bit of offline discussion with @mzumsande and @sipa, it seemed better to just synchronously remove wtxids from worksets when they are removed as announcements. This means that the work set is always a subset of announcement set (added this to `SanityCheck`). Also, potentially failing to add things to work set seemed to make this less useful.",
      "created_at": "2025-02-12T04:39:47Z",
      "updated_at": "2025-02-12T04:39:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951966069",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951966069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951966734",
      "pull_request_review_id": 2610796043,
      "id": 1951966734,
      "node_id": "PRRC_kwDOABII5850WKYO",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);\n+    }\n+\n+    unsigned int GetPerPeerMaxAnnouncements() const {",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 138,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949538646,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, they're both meant to be ratios :+1:",
      "created_at": "2025-02-12T04:40:42Z",
      "updated_at": "2025-02-12T04:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951966734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951966734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952580350",
      "pull_request_review_id": 2611807509,
      "id": 1952580350,
      "node_id": "PRRC_kwDOABII5850YgL-",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\n+                    peers_workset_trimmed.insert(announcer);\n+                }\n+\n+                // Add this tx to the work set. If the workset is full, even after trimming, don't\n+                // accept any new work items until the work queue has been flushed.\n+                if (orphan_work_set.size() < MAX_ORPHAN_WORK_QUEUE) {",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949852220,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok! that was my suggestion offline too. Bounding announcements means we bound the workset :+1: ",
      "created_at": "2025-02-12T12:45:34Z",
      "updated_at": "2025-02-12T12:45:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952580350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952580350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952714733",
      "pull_request_review_id": 2612036122,
      "id": 1952714733,
      "node_id": "PRRC_kwDOABII5850ZA_t",
      "diff_hunk": "@@ -666,6 +687,71 @@ def test_orphan_handling_prefer_outbound(self):\n         peer_inbound.sync_with_ping()\n         peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n \n+    @cleanup\n+    def test_maximal_package_protected(self):\n+        self.log.info(\"Test that a node only announcing a maximally sized ancestor package is protected in orphanage\")\n+        # Needed for transaction size bulking\n+        self.restart_node(0, extra_args=[\"-datacarriersize=100000\"])\n+        node = self.nodes[0]\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        large_orphans = [self.create_large_orphan() for _ in range(60)]\n+\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        # Now honest peer will send a maximally sized ancestor package of 24 orphans chaining\n+        # off of a single missing transaction, with a total vsize 404,000Wu\n+        ancestor_package = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_ANCESTOR_LIMIT - 1)\n+        sum_ancestor_package_vsize = sum([tx[\"tx\"].get_vsize() for tx in ancestor_package])\n+        final_tx = self.wallet.create_self_transfer(utxo_to_spend=ancestor_package[-1][\"new_utxo\"], target_vsize=101000 - sum_ancestor_package_vsize)\n+        ancestor_package.append(final_tx)\n+\n+        # Peer sends all but first tx to fill up orphange with their orphans\n+        for orphan in ancestor_package[1:]:\n+            peer_normal.send_and_ping(msg_tx(orphan[\"tx\"]))\n+\n+        orphan_set = node.getorphantxs()\n+        for orphan in ancestor_package[1:]:\n+            assert orphan[\"txid\"] in orphan_set\n+\n+        # Wait for ultimate parent request\n+        parent_txid_int = int(ancestor_package[0][\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+\n+        self.wait_until(lambda: \"getdata\" in peer_normal.last_message and parent_txid_int in [inv.hash for inv in peer_normal.last_message.get(\"getdata\").inv])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[num_individual_dosers:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the top ancestor. The whole package should be re-evaluated after enough time.\")\n+        peer_normal.send_and_ping(msg_tx(ancestor_package[0][\"tx\"]))\n+\n+        self.wait_until(lambda: node.getmempoolentry(ancestor_package[-1][\"txid\"])[\"ancestorcount\"] == DEFAULT_ANCESTOR_LIMIT)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 115,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "4e17767f4b42559670062ab029ec1ec53f0b0566",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "on second thought, this will probably throw an assertion if the final child isn't in the mempool yet? Probably need to prepend this clause with `ancestor_package[-1][\"txid\"] in node.getrawmempool()`",
      "created_at": "2025-02-12T14:06:29Z",
      "updated_at": "2025-02-12T15:34:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952714733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952714733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952747093",
      "pull_request_review_id": 2612036122,
      "id": 1952747093,
      "node_id": "PRRC_kwDOABII5850ZI5V",
      "diff_hunk": "@@ -45,22 +45,18 @@\n DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100\n \n def cleanup(func):\n-    # Time to fastfoward (using setmocktime) in between subtests to ensure they do not interfere with\n-    # one another, in seconds. Equal to 12 hours, which is enough to expire anything that may exist\n-    # (though nothing should since state should be cleared) in p2p data structures.\n-    LONG_TIME_SKIP = 12 * 60 * 60\n-\n     def wrapper(self):\n         try:\n             func(self)\n         finally:\n             # Clear mempool\n             self.generate(self.nodes[0], 1)\n             self.nodes[0].disconnect_p2ps()\n-            self.nodes[0].bumpmocktime(LONG_TIME_SKIP)\n             # Check that mempool and orphanage have been cleared\n             self.wait_until(lambda: len(self.nodes[0].getorphantxs()) == 0)\n             assert_equal(0, len(self.nodes[0].getrawmempool()))\n+\n+            self.restart_node(0, extra_args=[\"-persistmempool=0\"])",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 55,
      "original_position": 21,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "889afbadb417e9422c7c06fd074981fa62045568",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "889afbadb417e9422c7c06fd074981fa62045568\r\n\r\nSince we're restarting does this wipe the mocktime on the node? Doesn't seem to affect timings, but I think it's easier to think about the test this way.\r\n\r\nnote that if you set it here, you also need to setmocktime any other time you restart as well",
      "created_at": "2025-02-12T14:20:25Z",
      "updated_at": "2025-02-12T15:34:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952747093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952747093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952751403",
      "pull_request_review_id": 2612094405,
      "id": 1952751403,
      "node_id": "PRRC_kwDOABII5850ZJ8r",
      "diff_hunk": "@@ -138,10 +170,27 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 87,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "8520f1e493079a6ba124f7d35eabafe5740374af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] when full, evict from the DoSiest peers first\"\r\n\r\nI think it would be helpful to add this variable, and the testing thereof, in a separate commit from the actual eviction changes.",
      "created_at": "2025-02-12T14:21:58Z",
      "updated_at": "2025-02-12T14:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952751403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952751403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952759514",
      "pull_request_review_id": 2612094405,
      "id": 1952759514,
      "node_id": "PRRC_kwDOABII5850ZL7a",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 135,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949955925,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] when full, evict from the DoSiest peers first\"\r\n\r\nThe `int64_t` return type won't actually do anything here, because `std::max` is instantiated for `unsigned int`, and also, the `std::map::size()` may return something smaller (particularly on 32-bit systems).\r\n\r\n```c++\r\nint64_t GetGlobalMaxUsage() const {\r\n        return std::max<int64_t>(int64_t(m_peer_orphanage_info.size()) * m_reserved_weight_per_peer, 1);\r\n}\r\n```",
      "created_at": "2025-02-12T14:25:47Z",
      "updated_at": "2025-02-12T14:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952759514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952759514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952760531",
      "pull_request_review_id": 2612094405,
      "id": 1952760531,
      "node_id": "PRRC_kwDOABII5850ZMLT",
      "diff_hunk": "@@ -138,10 +170,27 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** There are 2 DoS scores:\n+         * - CPU score (ratio of num announcements / max allowed announcements)\n+         * - Memory score (ratio of total usage / max allowed usage).\n+         *\n+         * If the peer is using more than the allowed for either resource, its DoS score is > 1.\n+         * A peer having a DoS score > 1 does not necessarily mean that something is wrong, since we\n+         * do not trim unless the orphanage exceeds global limits, but it means that this peer will\n+         * be selected for trimming sooner. */\n+        FeeFrac GetDoSScore(unsigned int peer_max_ann, unsigned int peer_max_mem) {\n+            FeeFrac cpu_score(m_iter_list.size(), peer_max_ann);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 98,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "8520f1e493079a6ba124f7d35eabafe5740374af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Huh, neat, I hadn't considered using `FeeFrac` here, but it fits.",
      "created_at": "2025-02-12T14:26:22Z",
      "updated_at": "2025-02-12T14:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952760531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952760531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952769273",
      "pull_request_review_id": 2612094405,
      "id": 1952769273,
      "node_id": "PRRC_kwDOABII5850ZOT5",
      "diff_hunk": "@@ -165,13 +169,69 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim(max_orphans)) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "8520f1e493079a6ba124f7d35eabafe5740374af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] when full, evict from the DoSiest peers first\"\r\n\r\nUsing `FeeFrac::operator<` here, which tiebreaks by biggest denominator first in case the ratios are equal, means that if two peers are equally DoSsy, but one is that due to memory usage, and the other is that due to announcements, the announcements one will be targetted first. That's probably fine, but perhaps worth documenting.",
      "created_at": "2025-02-12T14:31:01Z",
      "updated_at": "2025-02-12T14:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952769273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952769273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952818760",
      "pull_request_review_id": 2612036122,
      "id": 1952818760,
      "node_id": "PRRC_kwDOABII5850ZaZI",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this will trivially pass (and not actually ensure there was an eviction) unless you let the orphans be processed with a send_and_ping.\r\n\r\nIt's also not true, because no evictions will happen with just 1000 orphans\r\n\r\nHere's a suggested patchset which has this subtest run in ~2m30s and actually causes evictions with default parameters: https://github.com/instagibbs/bitcoin/commit/fedea4a17b7fc4c442b0ad98b51b85ff93a55beb",
      "created_at": "2025-02-12T14:56:25Z",
      "updated_at": "2025-02-12T15:34:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952818760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952818760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952893131",
      "pull_request_review_id": 2612036122,
      "id": 1952893131,
      "node_id": "PRRC_kwDOABII5850ZsjL",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        shared_orphans = [self.create_small_orphan() for _ in range(batch_size)]\n+        self.log.info(f\"Send the same {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for _ in range(num_peers):\n+            peer_doser_shared = node.add_p2p_connection(P2PInterface())\n+            for orphan in shared_orphans:\n+                peer_doser_shared.send_message(msg_tx(orphan))\n+\n+        # Something was evicted; the orphanage does not contain all DoS orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers + len(shared_orphans) + 1)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 192,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is a buggy assertion because no evictions will be happening, you might just front-run validation and slip through on your local machine. see https://github.com/instagibbs/bitcoin/commit/fedea4a17b7fc4c442b0ad98b51b85ff93a55beb for what I think would be a valid assertion",
      "created_at": "2025-02-12T15:33:28Z",
      "updated_at": "2025-02-12T15:34:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1952893131",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952893131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954788703",
      "pull_request_review_id": 2615511540,
      "id": 1954788703,
      "node_id": "PRRC_kwDOABII5850g7Vf",
      "diff_hunk": "@@ -666,6 +687,71 @@ def test_orphan_handling_prefer_outbound(self):\n         peer_inbound.sync_with_ping()\n         peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n \n+    @cleanup\n+    def test_maximal_package_protected(self):\n+        self.log.info(\"Test that a node only announcing a maximally sized ancestor package is protected in orphanage\")\n+        # Needed for transaction size bulking\n+        self.restart_node(0, extra_args=[\"-datacarriersize=100000\"])\n+        node = self.nodes[0]\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        large_orphans = [self.create_large_orphan() for _ in range(60)]\n+\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        # Now honest peer will send a maximally sized ancestor package of 24 orphans chaining\n+        # off of a single missing transaction, with a total vsize 404,000Wu\n+        ancestor_package = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_ANCESTOR_LIMIT - 1)\n+        sum_ancestor_package_vsize = sum([tx[\"tx\"].get_vsize() for tx in ancestor_package])\n+        final_tx = self.wallet.create_self_transfer(utxo_to_spend=ancestor_package[-1][\"new_utxo\"], target_vsize=101000 - sum_ancestor_package_vsize)\n+        ancestor_package.append(final_tx)\n+\n+        # Peer sends all but first tx to fill up orphange with their orphans\n+        for orphan in ancestor_package[1:]:\n+            peer_normal.send_and_ping(msg_tx(orphan[\"tx\"]))\n+\n+        orphan_set = node.getorphantxs()\n+        for orphan in ancestor_package[1:]:\n+            assert orphan[\"txid\"] in orphan_set\n+\n+        # Wait for ultimate parent request\n+        parent_txid_int = int(ancestor_package[0][\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+\n+        self.wait_until(lambda: \"getdata\" in peer_normal.last_message and parent_txid_int in [inv.hash for inv in peer_normal.last_message.get(\"getdata\").inv])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[num_individual_dosers:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the top ancestor. The whole package should be re-evaluated after enough time.\")\n+        peer_normal.send_and_ping(msg_tx(ancestor_package[0][\"tx\"]))\n+\n+        self.wait_until(lambda: node.getmempoolentry(ancestor_package[-1][\"txid\"])[\"ancestorcount\"] == DEFAULT_ANCESTOR_LIMIT)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 115,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "4e17767f4b42559670062ab029ec1ec53f0b0566",
      "in_reply_to_id": 1952714733,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ah hm, maybe we don't need to wait? I guess if you send a ping, you don't get a pong until all 24 are processed.",
      "created_at": "2025-02-13T16:00:04Z",
      "updated_at": "2025-02-13T16:00:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1954788703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954788703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954895162",
      "pull_request_review_id": 2615701598,
      "id": 1954895162,
      "node_id": "PRRC_kwDOABII5850hVU6",
      "diff_hunk": "@@ -666,6 +687,71 @@ def test_orphan_handling_prefer_outbound(self):\n         peer_inbound.sync_with_ping()\n         peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n \n+    @cleanup\n+    def test_maximal_package_protected(self):\n+        self.log.info(\"Test that a node only announcing a maximally sized ancestor package is protected in orphanage\")\n+        # Needed for transaction size bulking\n+        self.restart_node(0, extra_args=[\"-datacarriersize=100000\"])\n+        node = self.nodes[0]\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        large_orphans = [self.create_large_orphan() for _ in range(60)]\n+\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        # Now honest peer will send a maximally sized ancestor package of 24 orphans chaining\n+        # off of a single missing transaction, with a total vsize 404,000Wu\n+        ancestor_package = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_ANCESTOR_LIMIT - 1)\n+        sum_ancestor_package_vsize = sum([tx[\"tx\"].get_vsize() for tx in ancestor_package])\n+        final_tx = self.wallet.create_self_transfer(utxo_to_spend=ancestor_package[-1][\"new_utxo\"], target_vsize=101000 - sum_ancestor_package_vsize)\n+        ancestor_package.append(final_tx)\n+\n+        # Peer sends all but first tx to fill up orphange with their orphans\n+        for orphan in ancestor_package[1:]:\n+            peer_normal.send_and_ping(msg_tx(orphan[\"tx\"]))\n+\n+        orphan_set = node.getorphantxs()\n+        for orphan in ancestor_package[1:]:\n+            assert orphan[\"txid\"] in orphan_set\n+\n+        # Wait for ultimate parent request\n+        parent_txid_int = int(ancestor_package[0][\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+\n+        self.wait_until(lambda: \"getdata\" in peer_normal.last_message and parent_txid_int in [inv.hash for inv in peer_normal.last_message.get(\"getdata\").inv])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[num_individual_dosers:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the top ancestor. The whole package should be re-evaluated after enough time.\")\n+        peer_normal.send_and_ping(msg_tx(ancestor_package[0][\"tx\"]))\n+\n+        self.wait_until(lambda: node.getmempoolentry(ancestor_package[-1][\"txid\"])[\"ancestorcount\"] == DEFAULT_ANCESTOR_LIMIT)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 115,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "4e17767f4b42559670062ab029ec1ec53f0b0566",
      "in_reply_to_id": 1952714733,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll defer to you, but IIUC we'll do ~1 orphan processing per message processing step, so it might take a bit more to process all 24 from orphanage? Alternatively we could query the *first* tx and wait until the descendant count hits DEFAULT_ANCESTOR_LIMIT",
      "created_at": "2025-02-13T17:04:05Z",
      "updated_at": "2025-02-13T17:04:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1954895162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954895162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956103968",
      "pull_request_review_id": 2617719827,
      "id": 1956103968,
      "node_id": "PRRC_kwDOABII5850l8cg",
      "diff_hunk": "@@ -666,6 +687,71 @@ def test_orphan_handling_prefer_outbound(self):\n         peer_inbound.sync_with_ping()\n         peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n \n+    @cleanup\n+    def test_maximal_package_protected(self):\n+        self.log.info(\"Test that a node only announcing a maximally sized ancestor package is protected in orphanage\")\n+        # Needed for transaction size bulking\n+        self.restart_node(0, extra_args=[\"-datacarriersize=100000\"])\n+        node = self.nodes[0]\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        large_orphans = [self.create_large_orphan() for _ in range(60)]\n+\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        # Now honest peer will send a maximally sized ancestor package of 24 orphans chaining\n+        # off of a single missing transaction, with a total vsize 404,000Wu\n+        ancestor_package = self.wallet.create_self_transfer_chain(chain_length=DEFAULT_ANCESTOR_LIMIT - 1)\n+        sum_ancestor_package_vsize = sum([tx[\"tx\"].get_vsize() for tx in ancestor_package])\n+        final_tx = self.wallet.create_self_transfer(utxo_to_spend=ancestor_package[-1][\"new_utxo\"], target_vsize=101000 - sum_ancestor_package_vsize)\n+        ancestor_package.append(final_tx)\n+\n+        # Peer sends all but first tx to fill up orphange with their orphans\n+        for orphan in ancestor_package[1:]:\n+            peer_normal.send_and_ping(msg_tx(orphan[\"tx\"]))\n+\n+        orphan_set = node.getorphantxs()\n+        for orphan in ancestor_package[1:]:\n+            assert orphan[\"txid\"] in orphan_set\n+\n+        # Wait for ultimate parent request\n+        parent_txid_int = int(ancestor_package[0][\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+\n+        self.wait_until(lambda: \"getdata\" in peer_normal.last_message and parent_txid_int in [inv.hash for inv in peer_normal.last_message.get(\"getdata\").inv])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[num_individual_dosers:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the top ancestor. The whole package should be re-evaluated after enough time.\")\n+        peer_normal.send_and_ping(msg_tx(ancestor_package[0][\"tx\"]))\n+\n+        self.wait_until(lambda: node.getmempoolentry(ancestor_package[-1][\"txid\"])[\"ancestorcount\"] == DEFAULT_ANCESTOR_LIMIT)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 115,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "4e17767f4b42559670062ab029ec1ec53f0b0566",
      "in_reply_to_id": 1952714733,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hold on, I don't see why it'd throw an assertion? `ancestor_package[-1]` is the last child right? Added some more comments but didn't change the code",
      "created_at": "2025-02-14T12:52:47Z",
      "updated_at": "2025-02-14T12:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956103968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956103968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956104380",
      "pull_request_review_id": 2617720527,
      "id": 1956104380,
      "node_id": "PRRC_kwDOABII5850l8i8",
      "diff_hunk": "@@ -138,10 +170,27 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 87,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "8520f1e493079a6ba124f7d35eabafe5740374af",
      "in_reply_to_id": 1952751403,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a commit before that one, just adding the list and sanity checking",
      "created_at": "2025-02-14T12:53:08Z",
      "updated_at": "2025-02-14T12:53:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956104380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956104380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956104543",
      "pull_request_review_id": 2617720788,
      "id": 1956104543,
      "node_id": "PRRC_kwDOABII5850l8lf",
      "diff_hunk": "@@ -165,13 +169,69 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim(max_orphans)) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "8520f1e493079a6ba124f7d35eabafe5740374af",
      "in_reply_to_id": 1952769273,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good point, added a comment",
      "created_at": "2025-02-14T12:53:17Z",
      "updated_at": "2025-02-14T12:53:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956104543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956104543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956105056",
      "pull_request_review_id": 2617721587,
      "id": 1956105056,
      "node_id": "PRRC_kwDOABII5850l8tg",
      "diff_hunk": "@@ -45,22 +45,18 @@\n DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100\n \n def cleanup(func):\n-    # Time to fastfoward (using setmocktime) in between subtests to ensure they do not interfere with\n-    # one another, in seconds. Equal to 12 hours, which is enough to expire anything that may exist\n-    # (though nothing should since state should be cleared) in p2p data structures.\n-    LONG_TIME_SKIP = 12 * 60 * 60\n-\n     def wrapper(self):\n         try:\n             func(self)\n         finally:\n             # Clear mempool\n             self.generate(self.nodes[0], 1)\n             self.nodes[0].disconnect_p2ps()\n-            self.nodes[0].bumpmocktime(LONG_TIME_SKIP)\n             # Check that mempool and orphanage have been cleared\n             self.wait_until(lambda: len(self.nodes[0].getorphantxs()) == 0)\n             assert_equal(0, len(self.nodes[0].getrawmempool()))\n+\n+            self.restart_node(0, extra_args=[\"-persistmempool=0\"])",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 55,
      "original_position": 21,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "889afbadb417e9422c7c06fd074981fa62045568",
      "in_reply_to_id": 1952747093,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nice, thanks - added a `setmocktime()` after all the restarts",
      "created_at": "2025-02-14T12:53:40Z",
      "updated_at": "2025-02-14T12:53:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956105056",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956105056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956106767",
      "pull_request_review_id": 2617724413,
      "id": 1956106767,
      "node_id": "PRRC_kwDOABII5850l9IP",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Added. It does take a long time but that's the only way to get evictions due to announcements in a functional test.",
      "created_at": "2025-02-14T12:54:58Z",
      "updated_at": "2025-02-14T12:54:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956106767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956106767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956106958",
      "pull_request_review_id": 2617724681,
      "id": 1956106958,
      "node_id": "PRRC_kwDOABII5850l9LO",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        shared_orphans = [self.create_small_orphan() for _ in range(batch_size)]\n+        self.log.info(f\"Send the same {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for _ in range(num_peers):\n+            peer_doser_shared = node.add_p2p_connection(P2PInterface())\n+            for orphan in shared_orphans:\n+                peer_doser_shared.send_message(msg_tx(orphan))\n+\n+        # Something was evicted; the orphanage does not contain all DoS orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers + len(shared_orphans) + 1)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 192,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952893131,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added thanks!",
      "created_at": "2025-02-14T12:55:05Z",
      "updated_at": "2025-02-14T12:55:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956106958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956106958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956109943",
      "pull_request_review_id": 2617729694,
      "id": 1956109943,
      "node_id": "PRRC_kwDOABII5850l953",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 135,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949955925,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed",
      "created_at": "2025-02-14T12:57:30Z",
      "updated_at": "2025-02-14T12:57:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956109943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956109943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956203848",
      "pull_request_review_id": 2617896035,
      "id": 1956203848,
      "node_id": "PRRC_kwDOABII5850mU1I",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm, one of the CI failures is a timeout for this (the other is a wallet thing). Perhaps it takes a bit too long? A few ideas:\r\n- Change these to batches of 200 * 10 + 101 * 10 and just do the `wait_until` once to make the test faster. \r\n- Use `-maxorphantxs` to reduce the limit.\r\n- Wait after each orphan is sent. This makes the overall test a lot longer, but makes it less likely we'll hit the timeout.\r\n- Keep a lower count of txns and settle for a test that fails on master but not on this PR.",
      "created_at": "2025-02-14T14:07:26Z",
      "updated_at": "2025-02-14T14:10:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956203848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956203848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956206594",
      "pull_request_review_id": 2617900805,
      "id": 1956206594,
      "node_id": "PRRC_kwDOABII5850mVgC",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Too bad :( \r\n\r\nedit: my guess is we'll need to lower max orphan count to make CI runs happy",
      "created_at": "2025-02-14T14:09:30Z",
      "updated_at": "2025-02-14T14:21:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956206594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956206594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956527816",
      "pull_request_review_id": 2618467599,
      "id": 1956527816,
      "node_id": "PRRC_kwDOABII5850nj7I",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm, I don't want to manually change `-maxorphantxs`. But hey, this is the idea for introducing the test prior to increasing the default to 3000. At that commit, the orphanage doesn't go past 100, so it's definitely doing evictions even with just 1010 + 101 orphans.",
      "created_at": "2025-02-14T17:54:15Z",
      "updated_at": "2025-02-14T17:54:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956527816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956527816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956579091",
      "pull_request_review_id": 2618559447,
      "id": 1956579091,
      "node_id": "PRRC_kwDOABII5850nwcT",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~Ok, I've made it 101 * 30 + 101 = 3131 total. I think the `wait_until` for the 1p1c orphan to be in orphanage kind of achieves what we want (i.e. evictions for each of the previous orphans have already been calculated) even though we don't explicitly wait for each peer.~ this is not true anymore\r\n",
      "created_at": "2025-02-14T18:41:16Z",
      "updated_at": "2025-02-19T14:05:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956579091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956579091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956602557",
      "pull_request_review_id": 2618600336,
      "id": 1956602557,
      "node_id": "PRRC_kwDOABII5850n2K9",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) 2022-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <consensus/validation.h>\n+#include <net_processing.h>\n+#include <node/eviction.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+\n+#include <cstdint>\n+#include <memory>\n+#include <set>\n+#include <utility>\n+#include <vector>\n+\n+void initialize_protected_orphanage()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext();\n+}\n+\n+FUZZ_TARGET(txorphan_protected, .init = initialize_protected_orphanage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FastRandomContext orphanage_rng{/*fDeterministic=*/true};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n+\n+    // Peer that must have orphans protected from eviction\n+    NodeId protect_peer{0};\n+\n+    // We have NUM_PEERS, of which Peer==0 is the \"honest\" one\n+    // who will never exceed their reserved weight of announcement\n+    // count, and should therefore never be evicted.\n+    const unsigned int NUM_PEERS = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 125);\n+    const unsigned int global_announcement_limit = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(NUM_PEERS, 1'000);",
      "path": "src/test/fuzz/txorphan_protected.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let's set the upper range to DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS?",
      "created_at": "2025-02-14T19:04:04Z",
      "updated_at": "2025-02-14T19:05:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956602557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956602557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956603725",
      "pull_request_review_id": 2618600336,
      "id": 1956603725,
      "node_id": "PRRC_kwDOABII5850n2dN",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) 2022-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <consensus/validation.h>\n+#include <net_processing.h>\n+#include <node/eviction.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+\n+#include <cstdint>\n+#include <memory>\n+#include <set>\n+#include <utility>\n+#include <vector>\n+\n+void initialize_protected_orphanage()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext();\n+}\n+\n+FUZZ_TARGET(txorphan_protected, .init = initialize_protected_orphanage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FastRandomContext orphanage_rng{/*fDeterministic=*/true};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n+\n+    // Peer that must have orphans protected from eviction\n+    NodeId protect_peer{0};\n+\n+    // We have NUM_PEERS, of which Peer==0 is the \"honest\" one\n+    // who will never exceed their reserved weight of announcement\n+    // count, and should therefore never be evicted.\n+    const unsigned int NUM_PEERS = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 125);\n+    const unsigned int global_announcement_limit = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(NUM_PEERS, 1'000);\n+    // This must match announcement limit (or exceed) otherwise \"honest\" peer can be evicted\n+    const unsigned int global_tx_limit = global_announcement_limit;\n+    const unsigned int per_peer_announcements = global_announcement_limit / NUM_PEERS;\n+    const unsigned int per_peer_weight_reservation = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 4'000);",
      "path": "src/test/fuzz/txorphan_protected.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "set the upper range to DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * 4000? See no reason to not cover the full range (we could also increase the num_outs range to make larger ranges hit based on a bool?",
      "created_at": "2025-02-14T19:05:24Z",
      "updated_at": "2025-02-14T19:05:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956603725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956603725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956621497",
      "pull_request_review_id": 2618633307,
      "id": 1956621497,
      "node_id": "PRRC_kwDOABII5850n6y5",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) 2022-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <consensus/validation.h>\n+#include <net_processing.h>\n+#include <node/eviction.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+\n+#include <cstdint>\n+#include <memory>\n+#include <set>\n+#include <utility>\n+#include <vector>\n+\n+void initialize_protected_orphanage()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext();\n+}\n+\n+FUZZ_TARGET(txorphan_protected, .init = initialize_protected_orphanage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FastRandomContext orphanage_rng{/*fDeterministic=*/true};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n+\n+    // Peer that must have orphans protected from eviction\n+    NodeId protect_peer{0};\n+\n+    // We have NUM_PEERS, of which Peer==0 is the \"honest\" one\n+    // who will never exceed their reserved weight of announcement\n+    // count, and should therefore never be evicted.\n+    const unsigned int NUM_PEERS = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 125);\n+    const unsigned int global_announcement_limit = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(NUM_PEERS, 1'000);",
      "path": "src/test/fuzz/txorphan_protected.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "in_reply_to_id": 1956602557,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-02-14T19:23:44Z",
      "updated_at": "2025-02-14T19:23:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956621497",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956621497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956622416",
      "pull_request_review_id": 2618634542,
      "id": 1956622416,
      "node_id": "PRRC_kwDOABII5850n7BQ",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) 2022-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <consensus/validation.h>\n+#include <net_processing.h>\n+#include <node/eviction.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <uint256.h>\n+#include <util/check.h>\n+#include <util/time.h>\n+\n+#include <cstdint>\n+#include <memory>\n+#include <set>\n+#include <utility>\n+#include <vector>\n+\n+void initialize_protected_orphanage()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext();\n+}\n+\n+FUZZ_TARGET(txorphan_protected, .init = initialize_protected_orphanage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FastRandomContext orphanage_rng{/*fDeterministic=*/true};\n+    SetMockTime(ConsumeTime(fuzzed_data_provider));\n+\n+    // Peer that must have orphans protected from eviction\n+    NodeId protect_peer{0};\n+\n+    // We have NUM_PEERS, of which Peer==0 is the \"honest\" one\n+    // who will never exceed their reserved weight of announcement\n+    // count, and should therefore never be evicted.\n+    const unsigned int NUM_PEERS = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 125);\n+    const unsigned int global_announcement_limit = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(NUM_PEERS, 1'000);\n+    // This must match announcement limit (or exceed) otherwise \"honest\" peer can be evicted\n+    const unsigned int global_tx_limit = global_announcement_limit;\n+    const unsigned int per_peer_announcements = global_announcement_limit / NUM_PEERS;\n+    const unsigned int per_peer_weight_reservation = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 4'000);",
      "path": "src/test/fuzz/txorphan_protected.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "a704b8a9596c83968a732e26e44061c7347cecef",
      "in_reply_to_id": 1956603725,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I made it `DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER * 10`",
      "created_at": "2025-02-14T19:24:11Z",
      "updated_at": "2025-02-14T19:24:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956622416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956622416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956712751",
      "pull_request_review_id": 2618794047,
      "id": 1956712751,
      "node_id": "PRRC_kwDOABII5850oREv",
      "diff_hunk": "@@ -220,6 +220,44 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId dos_peer{15};\n+    std::vector<int64_t> peer_usages;\n+    peer_usages.reserve(dos_peer + 1);\n+    for (NodeId peer{0}; peer < dos_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point (we haven't called\n+    // LimitOrphans yet) so it may be oversize and LimitOrphans may evict more than 1 transaction.\n+    // All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "064af55a0aeb8da86386b19c97dc064807b1e862",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This seems very cautious. The test first adds 150 txns, then another `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS` (so there is a 1 to 1 relation between announcements and txns).\r\nIf all txns are distinct, this should be enough to assert that `Size()` should shrink by 150 compared to prev_count, not just 1.",
      "created_at": "2025-02-14T21:01:11Z",
      "updated_at": "2025-02-14T22:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956712751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956712751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956737572",
      "pull_request_review_id": 2618794047,
      "id": 1956737572,
      "node_id": "PRRC_kwDOABII5850oXIk",
      "diff_hunk": "@@ -375,6 +390,166 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 130,
      "original_position": 130,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "793c80be58d0b5c2d14c9ba78353f3de188f46bc",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the numbers don't add up for me: the tests creates 100 large orphans, sends 20, sends 1 small tx, then sends another 40 large orphans, and finally asserts that there are less than 101 entries in the orphanage. This would also be true without any eviction.",
      "created_at": "2025-02-14T21:26:59Z",
      "updated_at": "2025-02-14T22:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1956737572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1956737572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 478,
      "original_line": 478,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957128089",
      "pull_request_review_id": 2619421638,
      "id": 1957128089,
      "node_id": "PRRC_kwDOABII5850p2eZ",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] add per-peer iterator list and announcements accounting\"\r\n\r\nThe cost of this `std::distance` may be *O(num_orphans_per_peer)*, and the `peer : it->second.announcers` loop around can run up to *O(num_announcers_per_tx)*. However, since the sum of all `orphan_list` lengths is equal to the total number of announcements, the overall cost of `EraseTx` is bounded by *O(total_announcements)*. In both `MaybeExpireOrphan` and `EraseForBlock`, the function `EraseTx` may be invoked once per orphan, so I think this may actually mean *O(total_orphans * total_announcements)*, which may be millions, which could mean a concerning amount of time. Something similar may apply to the call in `MaybeTrimOrphans`, but it's a bit more complicated to analyse. Does that sound right?\r\n\r\nOne possibility to reduce this may be to batch the removals. Replace `EraseTx` with a function that takes a `set` of wtxids to remove, and just loops over all peers' `orphan_list`s once, removing anything that's in the set. That would reduce the cost to just *O(total_announcements)*. However, it would mean *always* iterating over all announcements whenever an orphan is erased.\r\n\r\nAlternatively, the `iter_list`s could be replaced with sets for faster removal, but that would increase the cost of random evictions in it from *O(1)* to *O(n)*. That might not actually be an improvement for `MaybeTrimOrphans`.\r\n\r\nI think the proper solution is replacing the data structures that together encode the announcement sets (`announcers`, `m_iter_list`, and optionally also `m_work_set`) with a single global boost::multiindex, with hashed by-wtxid index, and a ranked by-(peer,wtxid) index (which allows for fast random access).\r\n\r\n",
      "created_at": "2025-02-15T14:32:17Z",
      "updated_at": "2025-02-15T15:01:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957128089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957128089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957132917",
      "pull_request_review_id": 2619427042,
      "id": 1957132917,
      "node_id": "PRRC_kwDOABII5850p3p1",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": 1949655371,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "are you sure it's being sent via every peer for this benchmark? Looks like there's no overlap?",
      "created_at": "2025-02-15T15:02:22Z",
      "updated_at": "2025-02-15T15:02:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957132917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957132917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957150217",
      "pull_request_review_id": 2619452709,
      "id": 1957150217,
      "node_id": "PRRC_kwDOABII5850p74J",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a few more benchmarks to get an idea of what it could look like with current PR: https://github.com/instagibbs/bitcoin/commit/ba2e3e339cafdf1b38742b2c288a18dd32c63db3\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        7,012,786.00 |              142.60 |    0.9% |      0.08 | `OrphanageEvictionBlockManyPeers`\r\n|       27,505,341.00 |               36.36 |    0.8% |      0.30 | `OrphanageEvictionBlockOnePeer`\r\n|       12,507,729.00 |               79.95 |    0.6% |      0.14 | `OrphanageEvictionManyWithManyPeers`\r\n|       26,721,356.00 |               37.42 |    0.4% |      0.29 | `OrphanageEvictionManyWithOnePeer`\r\n|        7,262,273.00 |              137.70 |    3.3% |      0.08 | `OrphanageEvictionPeerMany`\r\n|       22,306,678.00 |               44.83 |    0.7% |      0.25 | `OrphanageEvictionPeerOne`\r\n\r\n```\r\nAdded EraseForBlock, EraseForPeer(in a loop), and parameterized number of peers. Looks like the `std::distance` work is causing most of the time since things are slower with a single peer?\r\n",
      "created_at": "2025-02-15T16:21:16Z",
      "updated_at": "2025-02-15T16:21:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957150217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957150217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957152330",
      "pull_request_review_id": 2619456799,
      "id": 1957152330,
      "node_id": "PRRC_kwDOABII5850p8ZK",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@instagibbs I believe the worst case when max_orphans == max_announcements is to have exactly one peer, and then erasing the transactions in reverse order they appear in _m_list_iters.\n\nThat would cost n^2/2 steps in std::distance.\n\nWhen max_announcements is larger than max_orphans, the worst case is having max_announcements / max_orphans peers, and every transaction be announced by all, I think.",
      "created_at": "2025-02-15T16:35:09Z",
      "updated_at": "2025-02-15T16:35:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957152330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957152330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957154102",
      "pull_request_review_id": 2619458833,
      "id": 1957154102,
      "node_id": "PRRC_kwDOABII5850p802",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I believe the worst case when max_orphans == max_announcements is to have exactly one peer, and then erasing the transactions in reverse order they appear in _m_list_iters.\r\n\r\nI swapped the order of the block txns to force it to walk the whole list for the single peer, it's about 10% slower",
      "created_at": "2025-02-15T16:44:53Z",
      "updated_at": "2025-02-15T16:44:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957154102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957154102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957169813",
      "pull_request_review_id": 2619474645,
      "id": 1957169813,
      "node_id": "PRRC_kwDOABII5850qAqV",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Another solution maybe: replace `set<NodeId> announcers` in `OrphanTxBase` with a `std::map<NodeId, size_t> announcers`, where the value is the orphan's position in the `PeerOrphanInfo::m_iter_list`. Previously, we had a `list_pos`that tracked the orphan's location in `m_orphan_list`. That removes the need to do `std::distance`.\r\n\r\nOn the whole though, I agree a multiindex is probably the most natural data structure for orphanage.",
      "created_at": "2025-02-15T18:22:57Z",
      "updated_at": "2025-02-15T18:22:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957169813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957169813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957171207",
      "pull_request_review_id": 2619475938,
      "id": 1957171207,
      "node_id": "PRRC_kwDOABII5850qBAH",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@glozow That works, I believe.",
      "created_at": "2025-02-15T18:32:39Z",
      "updated_at": "2025-02-15T18:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957171207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957171207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957232376",
      "pull_request_review_id": 2619531521,
      "id": 1957232376,
      "node_id": "PRRC_kwDOABII5850qP74",
      "diff_hunk": "@@ -592,47 +611,6 @@ def test_orphan_txid_inv(self):\n         assert_equal(node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"], tx_child[\"wtxid\"])\n         self.wait_until(lambda: len(node.getorphantxs()) == 0)\n \n-    @cleanup\n-    def test_max_orphan_amount(self):\n-        self.log.info(\"Check that we never exceed our storage limits for orphans\")\n-\n-        node = self.nodes[0]\n-        self.generate(self.wallet, 1)\n-        peer_1 = node.add_p2p_connection(P2PInterface())\n-\n-        self.log.info(\"Check that orphanage is empty on start of test\")\n-        assert len(node.getorphantxs()) == 0\n-\n-        self.log.info(\"Filling up orphanage with \" + str(DEFAULT_MAX_ORPHAN_TRANSACTIONS) + \"(DEFAULT_MAX_ORPHAN_TRANSACTIONS) orphans\")\n-        orphans = []\n-        parent_orphans = []\n-        for _ in range(DEFAULT_MAX_ORPHAN_TRANSACTIONS):\n-            tx_parent_1 = self.wallet.create_self_transfer()\n-            tx_child_1 = self.wallet.create_self_transfer(utxo_to_spend=tx_parent_1[\"new_utxo\"])\n-            parent_orphans.append(tx_parent_1[\"tx\"])\n-            orphans.append(tx_child_1[\"tx\"])\n-            peer_1.send_message(msg_tx(tx_child_1[\"tx\"]))\n-\n-        peer_1.sync_with_ping()\n-        orphanage = node.getorphantxs()\n-        self.wait_until(lambda: len(node.getorphantxs()) == DEFAULT_MAX_ORPHAN_TRANSACTIONS)\n-\n-        for orphan in orphans:\n-            assert tx_in_orphanage(node, orphan)\n-\n-        self.log.info(\"Check that we do not add more than the max orphan amount\")\n-        tx_parent_1 = self.wallet.create_self_transfer()\n-        tx_child_1 = self.wallet.create_self_transfer(utxo_to_spend=tx_parent_1[\"new_utxo\"])\n-        peer_1.send_and_ping(msg_tx(tx_child_1[\"tx\"]))\n-        parent_orphans.append(tx_parent_1[\"tx\"])\n-        orphanage = node.getorphantxs()\n-        assert_equal(len(orphanage), DEFAULT_MAX_ORPHAN_TRANSACTIONS)\n-\n-        self.log.info(\"Clearing the orphanage\")\n-        for index, parent_orphan in enumerate(parent_orphans):\n-            peer_1.send_and_ping(msg_tx(parent_orphan))\n-        self.wait_until(lambda: len(node.getorphantxs()) == 0)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 118,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "instead of removing this test we can keep it if we restart the node with the previous max orphan amount\r\n\r\n```\r\nself.restart_node(0, extra_args=[\"-maxorphantx=\" + str(DEFAULT_MAX_ORPHAN_TRANSACTIONS)])\r\n```\r\n\r\nand we can probably move `DEFAULT_MAX_ORPHAN_TRANSACTIONS` into this `test_max_orphan_amount` and rename it to `max_orphan_amount` since this isnt the default max orphan amount anymore.\r\n\r\nIf we still don't want this test we can remove `DEFAULT_MAX_ORPHAN_TRANSACTIONS` since it is only used in this test",
      "created_at": "2025-02-16T03:25:07Z",
      "updated_at": "2025-02-16T03:25:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1957232376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1957232376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": 595,
      "start_side": "LEFT",
      "line": null,
      "original_line": 635,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959814286",
      "pull_request_review_id": 2623681622,
      "id": 1959814286,
      "node_id": "PRRC_kwDOABII58500GSO",
      "diff_hunk": "@@ -36,8 +36,12 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n \n-    auto ret = m_orphans.emplace(wtxid, OrphanTx{{tx, {peer}, Now<NodeSeconds>() + ORPHAN_TX_EXPIRE_TIME}, m_orphan_list.size()});\n+    auto& orphan_list = m_peer_orphanage_info.try_emplace(peer).first->second.m_iter_list;\n+    std::map<NodeId, size_t> announcer_list_pos{{peer, orphan_list.size()}};\n+    auto ret = m_orphans.emplace(wtxid, OrphanTx{{tx, announcer_list_pos, Now<NodeSeconds>() + ORPHAN_TX_EXPIRE_TIME}, m_orphan_list.size()});",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] add per-peer iterator list and announcements accounting\"\r\n\r\nUse `tx, std::move(announcer_list_pos), ...` to avoid an allocation.",
      "created_at": "2025-02-18T14:04:26Z",
      "updated_at": "2025-02-18T15:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1959814286",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959814286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959842788",
      "pull_request_review_id": 2623681622,
      "id": 1959842788,
      "node_id": "PRRC_kwDOABII58500NPk",
      "diff_hunk": "@@ -138,11 +149,29 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions announced by this peer. */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** Remove the element at list_pos in m_iter_list in O(1) time by swapping the last element\n+         * with the one at list_pos and popping the back if there are multiple elements. Returns the\n+         * swapped element, if applicable, so that the caller can update its list_pos.",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] add per-peer iterator list and announcements accounting\"\r\n\r\nWould it be possible to do the `list_pos` updating here without needing to return an iteration to push that responsibility to the caller? It would mean `RemoveIterAt` would need to know what peer it's operating in, so that means it's perhaps more appropriate to have it as ` TxOrphanage` member function rather than a `PeerOrphanInfo` member function.",
      "created_at": "2025-02-18T14:18:59Z",
      "updated_at": "2025-02-18T15:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1959842788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959842788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959859482",
      "pull_request_review_id": 2623681622,
      "id": 1959859482,
      "node_id": "PRRC_kwDOABII58500RUa",
      "diff_hunk": "@@ -104,6 +111,7 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n         m_orphan_list[old_pos] = it_last;\n         it_last->second.list_pos = old_pos;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] add per-peer iterator list and announcements accounting\"\r\n\r\nI think this line, and the 7 lines before it, can be replaced with `RemoveIterAt(it->second.list_pos)`, especially if it can be changed to do the `list_pos` updating internally?\r\n\r\nNot very important as the code disappears in the next commit, but would make it more obviously correct.",
      "created_at": "2025-02-18T14:26:48Z",
      "updated_at": "2025-02-18T15:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1959859482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959859482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959969112",
      "pull_request_review_id": 2623681622,
      "id": 1959969112,
      "node_id": "PRRC_kwDOABII58500sFY",
      "diff_hunk": "@@ -97,4 +97,105 @@ static void OrphanageEraseForBlockSinglePeer(benchmark::Bench& bench)\n     });\n }\n \n+static void OrphanageEvictionManyPeers(benchmark::Bench& bench)",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "2bffbd5c9d7459a2184a1a8a75cc1018f8094e80",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[bench] TxOrphanage::LimitOrphans\"\r\n\r\nWould it make sense to introduce this benchmark earlier (and the other ones below), so we can see what effect the previous commit has on it?",
      "created_at": "2025-02-18T15:21:32Z",
      "updated_at": "2025-02-18T15:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1959969112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959969112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960532733",
      "pull_request_review_id": 2624937463,
      "id": 1960532733,
      "node_id": "PRRC_kwDOABII585021r9",
      "diff_hunk": "@@ -592,47 +611,6 @@ def test_orphan_txid_inv(self):\n         assert_equal(node.getmempoolentry(tx_child[\"txid\"])[\"wtxid\"], tx_child[\"wtxid\"])\n         self.wait_until(lambda: len(node.getorphantxs()) == 0)\n \n-    @cleanup\n-    def test_max_orphan_amount(self):\n-        self.log.info(\"Check that we never exceed our storage limits for orphans\")\n-\n-        node = self.nodes[0]\n-        self.generate(self.wallet, 1)\n-        peer_1 = node.add_p2p_connection(P2PInterface())\n-\n-        self.log.info(\"Check that orphanage is empty on start of test\")\n-        assert len(node.getorphantxs()) == 0\n-\n-        self.log.info(\"Filling up orphanage with \" + str(DEFAULT_MAX_ORPHAN_TRANSACTIONS) + \"(DEFAULT_MAX_ORPHAN_TRANSACTIONS) orphans\")\n-        orphans = []\n-        parent_orphans = []\n-        for _ in range(DEFAULT_MAX_ORPHAN_TRANSACTIONS):\n-            tx_parent_1 = self.wallet.create_self_transfer()\n-            tx_child_1 = self.wallet.create_self_transfer(utxo_to_spend=tx_parent_1[\"new_utxo\"])\n-            parent_orphans.append(tx_parent_1[\"tx\"])\n-            orphans.append(tx_child_1[\"tx\"])\n-            peer_1.send_message(msg_tx(tx_child_1[\"tx\"]))\n-\n-        peer_1.sync_with_ping()\n-        orphanage = node.getorphantxs()\n-        self.wait_until(lambda: len(node.getorphantxs()) == DEFAULT_MAX_ORPHAN_TRANSACTIONS)\n-\n-        for orphan in orphans:\n-            assert tx_in_orphanage(node, orphan)\n-\n-        self.log.info(\"Check that we do not add more than the max orphan amount\")\n-        tx_parent_1 = self.wallet.create_self_transfer()\n-        tx_child_1 = self.wallet.create_self_transfer(utxo_to_spend=tx_parent_1[\"new_utxo\"])\n-        peer_1.send_and_ping(msg_tx(tx_child_1[\"tx\"]))\n-        parent_orphans.append(tx_parent_1[\"tx\"])\n-        orphanage = node.getorphantxs()\n-        assert_equal(len(orphanage), DEFAULT_MAX_ORPHAN_TRANSACTIONS)\n-\n-        self.log.info(\"Clearing the orphanage\")\n-        for index, parent_orphan in enumerate(parent_orphans):\n-            peer_1.send_and_ping(msg_tx(parent_orphan))\n-        self.wait_until(lambda: len(node.getorphantxs()) == 0)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 118,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "212e1ea50cc229483cbdde04ed2b22b9e7e5dfc6",
      "in_reply_to_id": 1957232376,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, removed `DEFAULT_MAX_ORPHAN_TRANSACTIONS`",
      "created_at": "2025-02-18T20:15:36Z",
      "updated_at": "2025-02-18T20:15:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960532733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960532733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": 595,
      "start_side": "LEFT",
      "line": null,
      "original_line": 635,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960532993",
      "pull_request_review_id": 2624937845,
      "id": 1960532993,
      "node_id": "PRRC_kwDOABII585021wB",
      "diff_hunk": "@@ -375,6 +390,166 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 130,
      "original_position": 130,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "793c80be58d0b5c2d14c9ba78353f3de188f46bc",
      "in_reply_to_id": 1956737572,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, fixed",
      "created_at": "2025-02-18T20:15:47Z",
      "updated_at": "2025-02-18T20:15:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960532993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960532993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 478,
      "original_line": 478,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960533250",
      "pull_request_review_id": 2624938263,
      "id": 1960533250,
      "node_id": "PRRC_kwDOABII5850210C",
      "diff_hunk": "@@ -220,6 +220,44 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId dos_peer{15};\n+    std::vector<int64_t> peer_usages;\n+    peer_usages.reserve(dos_peer + 1);\n+    for (NodeId peer{0}; peer < dos_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point (we haven't called\n+    // LimitOrphans yet) so it may be oversize and LimitOrphans may evict more than 1 transaction.\n+    // All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "064af55a0aeb8da86386b19c97dc064807b1e862",
      "in_reply_to_id": 1956712751,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed to be asserting exact counts 👍 ",
      "created_at": "2025-02-18T20:16:01Z",
      "updated_at": "2025-02-18T20:16:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960533250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960533250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960567794",
      "pull_request_review_id": 2624993182,
      "id": 1960567794,
      "node_id": "PRRC_kwDOABII58502-Py",
      "diff_hunk": "@@ -104,6 +111,7 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n         m_orphan_list[old_pos] = it_last;\n         it_last->second.list_pos = old_pos;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": 1959859482,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe I'm misunderstanding, but I don't think we can use `RemoveIterAt` (which is for updating the peer list) for this (which is the global `TxOrphanage::m_orphan_list`)?",
      "created_at": "2025-02-18T20:45:45Z",
      "updated_at": "2025-02-18T20:45:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960567794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960567794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960570915",
      "pull_request_review_id": 2624998284,
      "id": 1960570915,
      "node_id": "PRRC_kwDOABII58502_Aj",
      "diff_hunk": "@@ -104,6 +111,7 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n         m_orphan_list[old_pos] = it_last;\n         it_last->second.list_pos = old_pos;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": 1959859482,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh of course; it just looked very similar.",
      "created_at": "2025-02-18T20:48:37Z",
      "updated_at": "2025-02-18T20:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960570915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960570915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960581755",
      "pull_request_review_id": 2625015977,
      "id": 1960581755,
      "node_id": "PRRC_kwDOABII58503Bp7",
      "diff_hunk": "@@ -36,8 +36,12 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n \n-    auto ret = m_orphans.emplace(wtxid, OrphanTx{{tx, {peer}, Now<NodeSeconds>() + ORPHAN_TX_EXPIRE_TIME}, m_orphan_list.size()});\n+    auto& orphan_list = m_peer_orphanage_info.try_emplace(peer).first->second.m_iter_list;\n+    std::map<NodeId, size_t> announcer_list_pos{{peer, orphan_list.size()}};\n+    auto ret = m_orphans.emplace(wtxid, OrphanTx{{tx, announcer_list_pos, Now<NodeSeconds>() + ORPHAN_TX_EXPIRE_TIME}, m_orphan_list.size()});",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": 1959814286,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, done",
      "created_at": "2025-02-18T20:58:01Z",
      "updated_at": "2025-02-18T20:58:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960581755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960581755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960582140",
      "pull_request_review_id": 2625016585,
      "id": 1960582140,
      "node_id": "PRRC_kwDOABII58503Bv8",
      "diff_hunk": "@@ -138,11 +149,29 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions announced by this peer. */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** Remove the element at list_pos in m_iter_list in O(1) time by swapping the last element\n+         * with the one at list_pos and popping the back if there are multiple elements. Returns the\n+         * swapped element, if applicable, so that the caller can update its list_pos.",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 46,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "19c77223cd2d8dc720072d8430082e8e6cae2793",
      "in_reply_to_id": 1959842788,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good point, I've made it a `TxOrphanage` method now",
      "created_at": "2025-02-18T20:58:18Z",
      "updated_at": "2025-02-18T20:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960582140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960582140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960582312",
      "pull_request_review_id": 2625016865,
      "id": 1960582312,
      "node_id": "PRRC_kwDOABII58503Byo",
      "diff_hunk": "@@ -97,4 +97,105 @@ static void OrphanageEraseForBlockSinglePeer(benchmark::Bench& bench)\n     });\n }\n \n+static void OrphanageEvictionManyPeers(benchmark::Bench& bench)",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "2bffbd5c9d7459a2184a1a8a75cc1018f8094e80",
      "in_reply_to_id": 1959969112,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, moved it up",
      "created_at": "2025-02-18T20:58:27Z",
      "updated_at": "2025-02-18T20:58:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960582312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960582312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960668271",
      "pull_request_review_id": 2625167907,
      "id": 1960668271,
      "node_id": "PRRC_kwDOABII58503Wxv",
      "diff_hunk": "@@ -87,11 +90,21 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n+\n+            auto& orphan_list = peer_it->second.m_iter_list;\n+            size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "944f61e6d55c91aed0dd4585374c1fbeec018028",
      "in_reply_to_id": 1957128089,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> replace set<NodeId> announcers in OrphanTxBase with a std::map<NodeId, size_t> announcers, where the value is the orphan's position in the PeerOrphanInfo::m_iter_list\r\n\r\nWent ahead with this solution.",
      "created_at": "2025-02-18T22:15:37Z",
      "updated_at": "2025-02-18T22:15:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960668271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960668271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960805496",
      "pull_request_review_id": 2625405683,
      "id": 1960805496,
      "node_id": "PRRC_kwDOABII585034R4",
      "diff_hunk": "@@ -0,0 +1,100 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "032b6237532fac9685d4ac89922b1eac815687e6",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[bench] TxOrphanage::EraseForBlock\"\r\n\r\nBetter not to have years listed than outdated/wrong ones.",
      "created_at": "2025-02-19T01:12:03Z",
      "updated_at": "2025-02-19T04:27:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960805496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960805496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960809301",
      "pull_request_review_id": 2625405683,
      "id": 1960809301,
      "node_id": "PRRC_kwDOABII585035NV",
      "diff_hunk": "@@ -168,6 +180,10 @@ class TxOrphanage {\n \n     /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    /** Remove the element at list_pos in m_iter_list in O(1) time by swapping the last element",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 56,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "56f05a73d88320af45ad2eeb64eb89f159c203cc",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txorphanage] add per-peer iterator list and announcements accounting\"\r\n\r\nNit: I may have instigated this, but given the `m_peer_orphanage_info.find(peer)` call, it's *O(log n)* really (in the number of peers, not *O(1)*). ",
      "created_at": "2025-02-19T01:18:01Z",
      "updated_at": "2025-02-19T04:27:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960809301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960809301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960932480",
      "pull_request_review_id": 2625405683,
      "id": 1960932480,
      "node_id": "PRRC_kwDOABII58504XSA",
      "diff_hunk": "@@ -138,10 +165,28 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** There are 2 DoS scores:\n+         * - CPU score (ratio of num announcements / max allowed announcements)\n+         * - Memory score (ratio of total usage / max allowed usage).\n+         *\n+         * If the peer is using more than the allowed for either resource, its DoS score is > 1.\n+         * A peer having a DoS score > 1 does not necessarily mean that something is wrong, since we\n+         * do not trim unless the orphanage exceeds global limits, but it means that this peer will\n+         * be selected for trimming sooner. If the orphanage NeedsTrim(), it must be that at least\n+         * one peer has a DoS score > 1. */\n+        FeeFrac GetDoSScore(unsigned int peer_max_ann, unsigned int peer_max_mem) {\n+            FeeFrac cpu_score(m_iter_list.size(), peer_max_ann);\n+            FeeFrac mem_score(m_total_usage, peer_max_mem);\n+            return std::max<FeeFrac>(cpu_score, mem_score);\n+        }\n     };\n     std::map<NodeId, PeerOrphanInfo> m_peer_orphanage_info;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 93,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949554535,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Regarding https://github.com/bitcoin/bitcoin/pull/31829/commits/2771b69e461230feb7761b0afff41b44bd3ba34f#r1949554535\r\n\r\nWith `GetGlobalMaxUsage()` computing memory limits on-the-fly, is this comment still relevant?",
      "created_at": "2025-02-19T04:26:30Z",
      "updated_at": "2025-02-19T04:27:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1960932480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960932480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961743938",
      "pull_request_review_id": 2626915481,
      "id": 1961743938,
      "node_id": "PRRC_kwDOABII58507dZC",
      "diff_hunk": "@@ -375,6 +390,160 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(\n+            utxo_to_spend=low_fee_parent[\"new_utxo\"],\n+            fee_rate=20*FEERATE_1SAT_VB,\n+            target_vsize=100000\n+        )\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        # Something was evicted; the orphanage does not contain all large orphans + the 1p1c child\n+        self.wait_until(lambda: len(node.getorphantxs()) < len(large_orphans) + 1)\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        # Something was evicted\n+        self.wait_until(lambda: len(node.getorphantxs()) < batch_size * num_peers)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 158,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "acbe37029ecea8518ecbf1f7a4846584b42ccaea",
      "in_reply_to_id": 1952818760,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fwiw, here's what I landed on for `test_orphanage_dos_many`:\r\n(1) send 51 of the same orphan from 60 peers (51 orphans, 3060 announcements). `sync_with_ping` and wait until at least one of the orphans is in orphanage\r\n(2) send the 1p1c, which is a small orphan (not 100kvb because prior to increasing `-maxorphantxs`, this peer's memory DoS score could be higher than the other peers' CPU DoS scores and get the tx evicted. Better to compare apples to apples).\r\n(3) send 51 unique orphans from 40 peers (2040 orphans, 2040 announcements). `sync_with_ping` and wait until we have at least 1 of the orphans from each peer.\r\nThis gives us 2091 orphans, 5100 announcements total from the DoSy peers, plus 1 normal from the 1p1c.\r\n\r\nBefore we increase `-maxorphantxs`, there are evictions during (3).\r\nAfter we increase `-maxorphantxs`, there are evictions in (1) and (3). The reason I'm doing the shared orphans first is so that we get to maximum announcements more quickly, and we can expect evictions during both rounds.",
      "created_at": "2025-02-19T14:05:15Z",
      "updated_at": "2025-02-19T14:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1961743938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961743938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1963963925",
      "pull_request_review_id": 2630521880,
      "id": 1963963925,
      "node_id": "PRRC_kwDOABII5851D7YV",
      "diff_hunk": "@@ -138,10 +165,28 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** There are 2 DoS scores:\n+         * - CPU score (ratio of num announcements / max allowed announcements)\n+         * - Memory score (ratio of total usage / max allowed usage).\n+         *\n+         * If the peer is using more than the allowed for either resource, its DoS score is > 1.\n+         * A peer having a DoS score > 1 does not necessarily mean that something is wrong, since we\n+         * do not trim unless the orphanage exceeds global limits, but it means that this peer will\n+         * be selected for trimming sooner. If the orphanage NeedsTrim(), it must be that at least\n+         * one peer has a DoS score > 1. */\n+        FeeFrac GetDoSScore(unsigned int peer_max_ann, unsigned int peer_max_mem) {\n+            FeeFrac cpu_score(m_iter_list.size(), peer_max_ann);\n+            FeeFrac mem_score(m_total_usage, peer_max_mem);\n+            return std::max<FeeFrac>(cpu_score, mem_score);\n+        }\n     };\n     std::map<NodeId, PeerOrphanInfo> m_peer_orphanage_info;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 93,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949554535,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I guess my worry is that we would somehow add a regression that results in the peer set growing indefinitely in the orphanage, which would grow memory usage substantially. Here's some suggested coverage which would hopefully uncover such an issue (unless the caller plum forgets to `EraseForPeer`):\r\n\r\n```\r\ndiff --git a/src/test/fuzz/txorphan.cpp b/src/test/fuzz/txorphan.cpp\r\nindex 9133323449..df0a02d75d 100644\r\n--- a/src/test/fuzz/txorphan.cpp\r\n+++ b/src/test/fuzz/txorphan.cpp\r\n@@ -45,10 +45,15 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\r\n         outpoints.emplace_back(Txid::FromUint256(uint256{i}), 0);\r\n     }\r\n \r\n     CTransactionRef ptx_potential_parent = nullptr;\r\n \r\n+    // Peers which have offered orphans (via tx or announcement) and have not subsequently\r\n+    // \"disconnected\" aka called EraseForPeer\r\n+    std::set<NodeId> connected_peers;\r\n+\r\n+\r\n     LIMITED_WHILE(outpoints.size() < 200'000 && fuzzed_data_provider.ConsumeBool(), 10 * DEFAULT_MAX_ORPHAN_TRANSACTIONS)\r\n     {\r\n         // construct transaction\r\n         const CTransactionRef tx = [&] {\r\n             CMutableTransaction tx_mut;\r\n@@ -121,14 +126,16 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\r\n \r\n                         if (add_tx) {\r\n                             Assert(orphanage.UsageByPeer(peer_id) == tx_weight + total_peer_bytes_start);\r\n                             Assert(orphanage.TotalOrphanUsage() == tx_weight + total_bytes_start);\r\n                             Assert(tx_weight <= MAX_STANDARD_TX_WEIGHT);\r\n+                            connected_peers.insert(peer_id);\r\n                         } else {\r\n                             // Peer may have been added as an announcer.\r\n                             if (orphanage.UsageByPeer(peer_id) == tx_weight + total_peer_bytes_start) {\r\n                                 Assert(orphanage.HaveTxFromPeer(wtxid, peer_id));\r\n+                                connected_peers.insert(peer_id);\r\n                             } else {\r\n                                 // Otherwise, there must not be any change to the peer byte count.\r\n                                 Assert(orphanage.UsageByPeer(peer_id) == total_peer_bytes_start);\r\n                             }\r\n \r\n@@ -158,10 +165,11 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\r\n                         // Total bytes should not have changed. If peer was added as announcer, byte\r\n                         // accounting must have been updated.\r\n                         Assert(orphanage.TotalOrphanUsage() == total_bytes_start);\r\n                         if (added_announcer) {\r\n                             Assert(orphanage.UsageByPeer(peer_id) == tx_weight + total_peer_bytes_start);\r\n+                            connected_peers.insert(peer_id);\r\n                         } else {\r\n                             Assert(orphanage.UsageByPeer(peer_id) == total_peer_bytes_start);\r\n                         }\r\n                     }\r\n                 },\r\n@@ -190,10 +198,11 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\r\n                         Assert(!have_tx && !have_tx_and_peer && !orphanage.EraseTx(wtxid));\r\n                     }\r\n                 },\r\n                 [&] {\r\n                     orphanage.EraseForPeer(peer_id);\r\n+                    connected_peers.erase(peer_id); // \"DisconnectPeer\"\r\n                     Assert(!orphanage.HaveTxFromPeer(tx->GetWitnessHash(), peer_id));\r\n                     Assert(orphanage.UsageByPeer(peer_id) == 0);\r\n                 },\r\n                 [&] {\r\n                     // test mocktime and expiry\r\n@@ -212,7 +221,8 @@ FUZZ_TARGET(txorphan, .init = initialize_orphanage)\r\n \r\n         const bool have_tx{orphanage.HaveTx(tx->GetWitnessHash())};\r\n         const bool get_tx_nonnull{orphanage.GetTx(tx->GetWitnessHash()) != nullptr};\r\n         Assert(have_tx == get_tx_nonnull);\r\n     }\r\n-    orphanage.SanityCheck();\r\n+\r\n+    orphanage.SanityCheck(connected_peers.size());\r\n }\r\ndiff --git a/src/txorphanage.cpp b/src/txorphanage.cpp\r\nindex 40a2503af5..c6c156409d 100644\r\n--- a/src/txorphanage.cpp\r\n+++ b/src/txorphanage.cpp\r\n@@ -402,11 +402,11 @@ std::vector<TxOrphanage::OrphanTxBase> TxOrphanage::GetOrphanTransactions() cons\r\n         ret.push_back({o.second.tx, o.second.announcers, o.second.nTimeExpire});\r\n     }\r\n     return ret;\r\n }\r\n \r\n-void TxOrphanage::SanityCheck() const\r\n+void TxOrphanage::SanityCheck(int expected_num_peers) const\r\n {\r\n     // Check that cached m_total_announcements is correct. First count when iterating through m_orphans (counting number\r\n     // of announcers each), then count when iterating through peers (counting number of orphans per peer).\r\n     unsigned int counted_total_announcements{0};\r\n     // Check that m_total_orphan_usage is correct\r\n@@ -461,10 +461,16 @@ void TxOrphanage::SanityCheck() const\r\n                 return orphan_it->second.tx->GetWitnessHash() == wtxid;\r\n             }) != info.m_iter_list.end());\r\n         }\r\n     }\r\n \r\n+    // We should not be offering more global memory for orphanage than expected\r\n+    if (expected_num_peers != -1) {\r\n+        Assert((size_t) expected_num_peers == m_peer_orphanage_info.size());\r\n+        Assert(GetGlobalMaxUsage() == std::max<int64_t>(expected_num_peers * GetPerPeerMaxUsage(), 1));\r\n+    }\r\n+\r\n     Assert(wtxids_in_peer_map.size() == m_orphans.size());\r\n     Assert(counted_total_announcements == 0);\r\n }\r\n \r\n bool TxOrphanage::NeedsTrim(unsigned int max_orphans) const\r\ndiff --git a/src/txorphanage.h b/src/txorphanage.h\r\nindex a5a6a94bec..562e9a3321 100644\r\n--- a/src/txorphanage.h\r\n+++ b/src/txorphanage.h\r\n@@ -140,11 +140,11 @@ public:\r\n         return peer_it == m_peer_orphanage_info.end() ? 0 : peer_it->second.m_iter_list.size();\r\n     }\r\n \r\n     /** Check consistency between PeerOrphanInfo and m_orphans. Recalculate counters and ensure they\r\n      * match what is cached. */\r\n-    void SanityCheck() const;\r\n+    void SanityCheck(int expected_num_peers = -1) const;\r\n \r\n protected:\r\n     struct OrphanTx : public OrphanTxBase {\r\n     };\r\n ```",
      "created_at": "2025-02-20T16:40:35Z",
      "updated_at": "2025-02-20T16:41:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1963963925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1963963925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1963975702",
      "pull_request_review_id": 2630538241,
      "id": 1963975702,
      "node_id": "PRRC_kwDOABII5851D-QW",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": 1949655371,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You are right. That explains why it doesn't get slower haha",
      "created_at": "2025-02-20T16:44:11Z",
      "updated_at": "2025-02-20T16:44:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1963975702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1963975702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964166748",
      "pull_request_review_id": 2630852607,
      "id": 1964166748,
      "node_id": "PRRC_kwDOABII5851Es5c",
      "diff_hunk": "@@ -332,16 +333,19 @@ void TxOrphanage::EraseForBlock(const CBlock& block)\n             if (itByPrev == m_outpoint_to_orphan_it.end()) continue;\n             for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n                 const CTransaction& orphanTx = *(*mi)->second.tx;\n-                vOrphanErase.push_back(orphanTx.GetWitnessHash());\n+                wtxids_to_erase.insert(orphanTx.GetWitnessHash());\n+                // Stop to avoid doing too much work. If there are more orphans to erase, rely on\n+                // expiration and evictions to clean up everything eventually.\n+                if (wtxids_to_erase.size() >= 100) break;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "021fc20f9cbac4803c4e91269811904fb0384e4c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "seems like we're leaving only one of 3 loops? is this intended?",
      "created_at": "2025-02-20T18:47:32Z",
      "updated_at": "2025-02-20T22:48:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964166748",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964166748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964220595",
      "pull_request_review_id": 2630943858,
      "id": 1964220595,
      "node_id": "PRRC_kwDOABII5851E6Cz",
      "diff_hunk": "@@ -188,13 +175,65 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim(max_orphans)) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim(max_orphans))\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the respective allowances. This metric causes us to naturally select peers who have\n+        // exceeded their limits (i.e. a DoS score > 1) before peers who haven't. However, no matter\n+        // what, we evict from the DoSiest peers first. We may choose the same peer as the last\n+        // iteration of this loop.\n+        // Note: if ratios are the same, FeeFrac tiebreaks by denominator. In practice, since\n+        // announcements is always lower, this means that a peer with only high CPU DoS score will\n+        // be targeted before a peer with only high memory DoS score, even if they have the same\n+        // ratios.\n+        std::pop_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+        auto it_worst_peer = peer_it_heap.back();\n+        peer_it_heap.pop_back();\n+\n+        // Evict a random orphan from this peer.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Remove a random announcement from this peer.\" seems better because we only sometimes evict an orphan.",
      "created_at": "2025-02-20T19:31:02Z",
      "updated_at": "2025-02-20T21:27:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964220595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964220595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964227057",
      "pull_request_review_id": 2630943858,
      "id": 1964227057,
      "node_id": "PRRC_kwDOABII5851E7nx",
      "diff_hunk": "@@ -188,13 +175,65 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim(max_orphans)) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim(max_orphans))\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the respective allowances. This metric causes us to naturally select peers who have\n+        // exceeded their limits (i.e. a DoS score > 1) before peers who haven't. However, no matter\n+        // what, we evict from the DoSiest peers first. We may choose the same peer as the last\n+        // iteration of this loop.\n+        // Note: if ratios are the same, FeeFrac tiebreaks by denominator. In practice, since\n+        // announcements is always lower, this means that a peer with only high CPU DoS score will\n+        // be targeted before a peer with only high memory DoS score, even if they have the same\n+        // ratios.\n+        std::pop_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+        auto it_worst_peer = peer_it_heap.back();\n+        peer_it_heap.pop_back();\n+\n+        // Evict a random orphan from this peer.\n+        size_t randompos = rng.randrange(it_worst_peer->second.m_iter_list.size());\n+        auto it_to_evict = it_worst_peer->second.m_iter_list.at(randompos);\n+\n+        // Only erase this peer as an announcer, unless it is the only announcer. Otherwise peers",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is a bit ambiguous, I first read it as \"don't erase the peer as an announcer if it was the only one\", but what is meant is \"erase the peer as an announcer, also remove the orphan if the peer was the only announcer\", so maybe reword it.",
      "created_at": "2025-02-20T19:35:40Z",
      "updated_at": "2025-02-20T21:27:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964227057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964227057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964238336",
      "pull_request_review_id": 2630943858,
      "id": 1964238336,
      "node_id": "PRRC_kwDOABII5851E-YA",
      "diff_hunk": "@@ -168,22 +209,51 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n \n     /** Remove the element at list_pos in m_iter_list in O(1) time by swapping the last element\n      * with the one at list_pos and popping the back if there are multiple elements. */\n     void RemoveIterAt(NodeId peer, size_t list_pos);\n+\n+    int64_t GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    int64_t GetGlobalMaxUsage() const {\n+        return std::max<int64_t>(int64_t(m_peer_orphanage_info.size()) * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 129,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If I understand it correctly, the current logic is that we assign additional weight for all peers that have an entry in `m_peer_orphanage_info`, which means we don't assign weight for peers not participating in tx relay or that do but never sent us an orphan before. But once they sent us an orphan, that weight will stay reserved until they disconnect (and can be used by other peers too), even if they never send us another orphan.\r\n\r\nThis seems like a middle-ground between assigning each peer a fixed `DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER` share which may not be exceeded, and assigning a pool `DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER` for each peer (whether that peer sent us an orphan before or not) - was that the purpose of choosing to do it this way? ",
      "created_at": "2025-02-20T19:45:24Z",
      "updated_at": "2025-02-20T21:27:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964238336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964238336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964296427",
      "pull_request_review_id": 2630943858,
      "id": 1964296427,
      "node_id": "PRRC_kwDOABII5851FMjr",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 35,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One possibility is that an attacker who wants to spam us with orphans can do so via other peers, without  providing the orphans themselves:\r\n\r\n1.) Attacker A inv's a parent P to victim V but doesn't answer `GETDATA` (2 minutes timeout)\r\n2.) Within these 2 minutes, A sends P and multiple non-conflicting children C to the rest of the network - these are accepted/relayed by all other peers, so will eventually be announced to V by all of its legitimate peers.\r\n3.) All of V's legitimate peers will announce P and C, V will only request C (because P is in flight) and saves them as orphans / adds all of its peers as announcers.\r\n4.) V's orphanage reaches its limits. With 125 peers, you'd need ~25 children to reach the max announcement limit of 3000, so you might need to split the children over multiple parents because of the mempool descendant limit. \r\n5.) V will start evicting announcements randomly from peers, so it may also evict legitimate unrelated orphans.\r\n\r\nUnlike with the status quo where attackers can just spam us with orphans for free, this is not free (P and C need to be valid transactions with a sufficient fee to be relayed), but I couldn't think of any countermeasure, so maybe it kind of sets a theoretical limit on how certain we can be that legitimate orphans are resolved?\r\n",
      "created_at": "2025-02-20T20:30:37Z",
      "updated_at": "2025-02-20T21:27:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964296427",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964296427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964465497",
      "pull_request_review_id": 2630852607,
      "id": 1964465497,
      "node_id": "PRRC_kwDOABII5851F11Z",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 35,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": 1964296427,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "IIUC this is basically a way of slowing down the parent resolution of a target package by 2 minutes, thereby increasing the window of possible random eviction when under real cpfp traffic.\r\n\r\nWithout this delay we can still have natural overflow if there are too many (or too large) real packages in flight, the time window here just gets a lot longer\r\n\r\nUnfortunately we have no way of peers to communicate which orphans they claim are higher paying (to preferentially evict those last f.e.). Then at least orphan package makers could try to outbid the queue. Maybe something to think about with a future sender-initiated protocol?\r\n\r\nBeing more aggressive about timing out inbound peers(and or txid-relay) when they aren't responding to `getdata`s could also be on the table, at the cost of bandwidth in the average case over a slow link.\r\n\r\nre:(2) you could also just imagine the scenario where the attacker simply relies on natural cpfp traffic and may just get lucky that it gets evicted in the two minutes. Costs the attacker nothing in this case though chances of failure are likely way higher?",
      "created_at": "2025-02-20T22:48:17Z",
      "updated_at": "2025-02-20T22:50:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1964465497",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1964465497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965867683",
      "pull_request_review_id": 2633684707,
      "id": 1965867683,
      "node_id": "PRRC_kwDOABII5851LMKj",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 35,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": 1964296427,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> IIUC this is basically a way of slowing down the parent resolution of a target package by 2 minutes, thereby increasing the window of possible random eviction when under real cpfp traffic.\r\n\r\nNot sure if I understood that right, but I think that would be a different kind of attack where the attacker  knows the target packet. What I meant was that that the attacker crafts spam transactions (P/C) that the rest of the network relays, but that end up only in the victim's orphanage, resulting in eviction of random other orphans (about which the attacker doesn't need to know any specifics) - similar to how an attacker could today just spam orphans to trigger random eviction on master, but no longer for free.",
      "created_at": "2025-02-21T16:49:02Z",
      "updated_at": "2025-02-21T16:49:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1965867683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965867683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968322091",
      "pull_request_review_id": 2638283819,
      "id": 1968322091,
      "node_id": "PRRC_kwDOABII5851UjYr",
      "diff_hunk": "@@ -168,22 +209,51 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n \n     /** Remove the element at list_pos in m_iter_list in O(1) time by swapping the last element\n      * with the one at list_pos and popping the back if there are multiple elements. */\n     void RemoveIterAt(NodeId peer, size_t list_pos);\n+\n+    int64_t GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    int64_t GetGlobalMaxUsage() const {\n+        return std::max<int64_t>(int64_t(m_peer_orphanage_info.size()) * m_reserved_weight_per_peer, 1);",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 129,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": 1964238336,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If I understand it correctly, ...\r\n\r\nCorrect 👍 the general idea is to put a hard cap on the memory usage per peer. However, if a peer is using a lot more than the others simply because it is very useful, we don't penalize them until we run out of space.\r\n\r\nWe could do a `RegisterPeer` type of thing when the peer first connects, but I don't see any particular reason to do that extra step right now. Perhaps we can add this in the future, if we want to give peers a different reservation depending on the type of connection. This has a nice side effect where we don't reserve any space for useless spy peers, and save a bit of extra work for short-lived connections or ones where no transactions are relayed, though I wouldn't say this is a motivation.",
      "created_at": "2025-02-24T19:45:40Z",
      "updated_at": "2025-02-24T19:45:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1968322091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968322091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968340075",
      "pull_request_review_id": 2638312992,
      "id": 1968340075,
      "node_id": "PRRC_kwDOABII5851Unxr",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 35,
      "commit_id": "c89b37b94574bbf4b97f86430ebac33c5d8f7319",
      "original_commit_id": "6cbe944539d421893f007ab27e7e00c2de503d62",
      "in_reply_to_id": 1964296427,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My general impression is that, since these \"spam\" orphans are real, fee-paying transactions that end up in mempool, they are equally useful / equally deserve the space. I do think this represents a bound on how much total orphan volume we can handle, but I can't really see why the victim node should evict these orphans over the others, just because they only originate from 1 peer.\r\n\r\n> Unfortunately we have no way of peers to communicate which orphans they claim are higher paying (to preferentially evict those last f.e.). Then at least orphan package makers could try to outbid the queue. Maybe something to think about with a future sender-initiated protocol?\r\n\r\nEven if we had a way to communicate this information, I don't think it could be trusted. I think the only real solution to this is a sender-initiated protocol. I have half a mind to go ahead and propose a quick-and-dirty sender-initiated protocol for 1p1cs right now, but maybe that's too short term thinking.",
      "created_at": "2025-02-24T20:00:33Z",
      "updated_at": "2025-02-24T20:00:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1968340075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968340075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    }
  ]
}