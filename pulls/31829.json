{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829",
    "id": 2324761179,
    "node_id": "PR_kwDOABII586KkQpb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31829",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31829.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31829.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
    "number": 31829,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "p2p: improve TxOrphanage denial of service bounds and increase -maxorphantxs",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is part of the orphan resolution project, see #27463.\r\n\r\nWe want to limit the CPU work and memory used by `TxOrphanage` to avoid denial of service attacks. On master, this is achieved by limiting the number of transactions in this data structure to 100, and the weight of each transaction to 400KWu (the largest standard tx) [0]. We always allow new orphans, but if the addition causes us to exceed 100, we evict one randomly. This is dead simple, but has problems:\r\n- It makes the orphanage trivially churnable: any one peer can render it useless by spamming us with lots of orphans.\r\n- Effectively, opportunistic 1p1c is useless in the presence of adversaries: it is *opportunistic* and pairs a low feerate tx with a child that happens to be in the orphanage.\r\n- This number is also often insufficient for the volume of orphans we handle: historical data show that overflows are pretty common, and there are times where \"it seems like [the node] forgot about the orphans and re-requested them multiple times.\" [1] \r\n \r\nJust jacking up the `-maxorphantxs` number is not a good enough solution, because it doesn't solve the churnability problem, and the effective resource bounds scale poorly.\r\n\r\nThis PR introduces numbers for {global, per-peer} {memory usage, announcements}, representing resource limits:\r\n- The (constant) **global announcement limit** is the number of unique (wtxid, peer) pairs in the orphanage [2]. This represents a cap on CPU, and does not change with the number of peers we have. Evictions must happen whenever this limit is reached.\r\n- The (variable) **per-peer announcement limit** is the global announcement limit divided by the number of peers. Peers are allowed to exceed this limit provided the global announcement limit has not been reached. The per-peer announcement limit decreases with more peers.\r\n- The (constant) **per-peer memory usage reservation** is the amount of orphan weight [3] reserved per peer [4]. Reservation means that peers are effectively guaranteed this amount of space. It is not a limit; peers are allowed to exceed this limit provided the global usage limit is not reached.\r\n- The (variable) **global memory usage limit** is the number of peers multiplied by the per-peer reservation [5]. As such, the global memory usage limit scales up with the number of peers we have. Evictions must happen whenever this limit is reached.\r\n- We introduce a \"Peer DoS Score\" which is the maximum between its \"CPU Score\" and \"Memory Score.\" The CPU score is the ratio between the number of orphans announced by this peer / peer announcement limit. The memory score is the total usage of all orphans announced by this peer / peer usage reservation.\r\n\r\nEviction changes in a few ways:\r\n- It is triggered if any of these 3 conditions are true: (1) `-maxorphantxs` is exceeded (2) the global announcement limit is exceeded (3) the global memory usage limit is exceeded.\r\n- Instead of evicting orphans randomly, it does this in a loop until all 3 conditions are no longer true:\r\n  - Sort the peers by their DoS score\r\n  - Select the \"DoSiest peer\" with the highest DoS score.\r\n  - Select a random orphan from the DoSiest peer. Remove this peer as an announcer, or delete the orphan if it only has 1 announcer.\r\n\r\nThis PR also:\r\n- Bounds the number of transactions that can be in a peer's work set within `AddChildrenToWorkset`. It also attempts to use this set more effectively if it fills up: Since work sets can contain orphans that have already been deleted, once per AddChildrenToWorkset call, iterate through the work set and delete the ones that don't correspond to a tx in `m_orphans`.\r\n- Changes the default `-maxorphantxs` to the global announcement limit.\r\n\r\nThis means we can receive 1p1c packages in the presence of spammy peers. It also makes the orphanage more useful and increases our download capacity without drastically increasing orphanage resource usage.\r\n\r\n[0]: This means the effective memory limit in orphan weight is 100 * 400KWu = 40MWu\r\n[1]: https://delvingbitcoin.org/t/stats-on-orphanage-overflows/1421\r\n[2]: Limit is 3000, which is equivalent to one max size ancestor package (24 transactions can be missing inputs) for each peer (default max connections is 125).\r\n[3]: Orphan weight is used in place of actual memory usage because something like \"one maximally sized standard tx\" is easier to reason about than \"considering the bytes allocated for vin and vout vectors, it needs to be within N bytes...\" etc. We can also consider a different formula to encapsulate more the memory overhead but still have an interface that is easy to reason about.\r\n[4]: The limit is 404KWu, which is the maximum size of an ancestor package.\r\n[5]: With 125 peers, this is 50.5MWu, which is a small increase from the existing limit of 40MWu. While the actual memory usage limit is higher (this number does not include the other memory used by `TxOrphanage` to store the outpoints map, etc.), this is within the same ballpark as the old limit.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-02-09T21:14:45Z",
    "updated_at": "2025-02-11T17:25:15Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "d42d6a44253e21961c2b2e940cfc93a88699c3c5",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2025-01-orphanage-peer-dos",
      "ref": "2025-01-orphanage-peer-dos",
      "sha": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 266276,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-11T17:25:13Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2025-02-11T09:57:43Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "86528937e5c4da2e12c46085fc41e87ed759258e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36708,
        "stargazers_count": 81947,
        "watchers_count": 81947,
        "size": 275400,
        "default_branch": "master",
        "open_issues_count": 698,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-11T12:48:31Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-02-11T17:50:03Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 826,
    "deletions": 99,
    "changed_files": 12,
    "commits": 14,
    "review_comments": 35,
    "comments": 5
  },
  "events": [
    {
      "event": "labeled",
      "id": 16239377177,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPH8TsZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239377177",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:14:45Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2646604015,
      "node_id": "IC_kwDOABII586dv_jv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2646604015",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:14:49Z",
      "updated_at": "2025-02-10T08:09:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31829.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31628](https://github.com/bitcoin/bitcoin/pull/31628) (test: add coverage for immediate orphanage eviction case by instagibbs)\n* [#30987](https://github.com/bitcoin/bitcoin/pull/30987) (Don't zero-after-free `DataStream`: Faster IBD on some configurations by davidgumberg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2646604015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16239389279,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPH8Wpf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239389279",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "765fcdf42418581061f9d01d24594d915be6f1a6",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/765fcdf42418581061f9d01d24594d915be6f1a6",
      "created_at": "2025-02-09T21:20:42Z"
    },
    {
      "event": "labeled",
      "id": 16239389767,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPH8WxH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239389767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:20:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2646606231,
      "node_id": "IC_kwDOABII586dwAGX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2646606231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-09T21:20:53Z",
      "updated_at": "2025-02-09T21:20:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36925040096</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2646606231",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16239406371,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPH8a0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16239406371",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d302324edcff648574c5df467435abee05e62a2e",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/d302324edcff648574c5df467435abee05e62a2e",
      "created_at": "2025-02-09T21:28:54Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3NzFiNjllNDYxMjMwZmViNzc2MWIwYWZmZjQxYjQ0YmQzYmEzNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2771b69e461230feb7761b0afff41b44bd3ba34f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2771b69e461230feb7761b0afff41b44bd3ba34f",
      "tree": {
        "sha": "f1d992aae24c2ee9d264008e76555187ccf6cd77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1d992aae24c2ee9d264008e76555187ccf6cd77"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a46be75c43e6489d7cb2aaea614ba552b31b35a",
          "sha": "6a46be75c43e6489d7cb2aaea614ba552b31b35a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a46be75c43e6489d7cb2aaea614ba552b31b35a"
        }
      ],
      "message": "[txorphanage] change type of usage to int64_t",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-10T12:52:35Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-08T16:52:35Z"
      },
      "sha": "2771b69e461230feb7761b0afff41b44bd3ba34f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16247362012,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPIaxHc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16247362012",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0ccf21e7dff269450a9dc844250a919add997db9",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/0ccf21e7dff269450a9dc844250a919add997db9",
      "created_at": "2025-02-10T13:12:37Z"
    },
    {
      "event": "commented",
      "id": 2647951114,
      "node_id": "IC_kwDOABII586d1IcK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2647951114",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T13:13:07Z",
      "updated_at": "2025-02-10T13:13:07Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2647951114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "ready_for_review",
      "id": 16247573394,
      "node_id": "RFRE_lADOABII586pVaFFzwAAAAPIbkuS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16247573394",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T13:27:13Z"
    },
    {
      "event": "unlabeled",
      "id": 16250124243,
      "node_id": "UNLE_lADOABII586pVaFFzwAAAAPIlTfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16250124243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-10T15:45:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2606517127,
      "node_id": "PRR_kwDOABII586bXEuH",
      "url": null,
      "actor": null,
      "commit_id": "0ccf21e7dff269450a9dc844250a919add997db9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "The resource bounds additions seem to make sense, still working through the workset change implications.\r\n\r\nI've got a minimal fuzz harness checking that the \"honest\" peer cannot be evicted, please feel free to take it: https://github.com/instagibbs/bitcoin/tree/2025-01-orphanage-peer-dos_greg_2",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#pullrequestreview-2606517127",
      "submitted_at": "2025-02-10T21:27:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ3YTdhOTYzNGViNGFmZDI2ZDA4NThjYWIzZDYzMDk4ZDA5NTJmYTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47a7a9634eb4afd26d0858cab3d63098d0952fa9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/47a7a9634eb4afd26d0858cab3d63098d0952fa9",
      "tree": {
        "sha": "3145c4eee3f650d792c15868d44f04b7a158bf82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3145c4eee3f650d792c15868d44f04b7a158bf82"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2771b69e461230feb7761b0afff41b44bd3ba34f",
          "sha": "2771b69e461230feb7761b0afff41b44bd3ba34f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2771b69e461230feb7761b0afff41b44bd3ba34f"
        }
      ],
      "message": "[txorphanage] use Assert instead of Assume in SanityCheck",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T12:09:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T12:09:36Z"
      },
      "sha": "47a7a9634eb4afd26d0858cab3d63098d0952fa9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5MjlkNzFjMDgyODU0NGJlNTA5OTM0MzEyYjZhN2QxMWI0N2VhNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c929d71c0828544be509934312b6a7d11b47ea4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c929d71c0828544be509934312b6a7d11b47ea4d",
      "tree": {
        "sha": "ce57a22632c19fa0096001b39728be6c0f3db141",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce57a22632c19fa0096001b39728be6c0f3db141"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47a7a9634eb4afd26d0858cab3d63098d0952fa9",
          "sha": "47a7a9634eb4afd26d0858cab3d63098d0952fa9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/47a7a9634eb4afd26d0858cab3d63098d0952fa9"
        }
      ],
      "message": "[refactor] LimitOrphans into MaybeExpire and MaybeTrim",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T12:09:37Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-07T11:31:00Z"
      },
      "sha": "c929d71c0828544be509934312b6a7d11b47ea4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5ZjBlOWNlNGM2M2Y3N2NkNjg4NzdkODA3Y2Q3ZTM1ZjQ1M2MzM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9f0e9ce4c63f77cd68877d807cd7e35f453c33e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f9f0e9ce4c63f77cd68877d807cd7e35f453c33e",
      "tree": {
        "sha": "c811d9a8f208d8ed2654d9d2cdeaf077e20adc69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c811d9a8f208d8ed2654d9d2cdeaf077e20adc69"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c929d71c0828544be509934312b6a7d11b47ea4d",
          "sha": "c929d71c0828544be509934312b6a7d11b47ea4d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c929d71c0828544be509934312b6a7d11b47ea4d"
        }
      ],
      "message": "[txorphanage] when full, evict from the DoSiest peers first\n\nThe max_orphans param is retained to preserve test behavior.\nDEFAUL_MAX_ORPHAN_ANNOUNCEMENTS and DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER are\nchosen to allow 1 maximally-sized ancestor set to be resolved with each\npeer:\n* DEFAULT_MAX_PEER_CONNECTIONS x (DEFAULT_ANCESTOR_LIMIT - 1) = 3000\n* DEFAULT_ANCESTOR_SIZE_LIMIT = 404'000.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-07T10:56:08Z"
      },
      "sha": "f9f0e9ce4c63f77cd68877d807cd7e35f453c33e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwMTE1YTUzMDc5YWQ5YThjN2RmNWViMzY4MzIxODgxMTZhYWVjZDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0115a53079ad9a8c7df5eb36832188116aaecd4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0115a53079ad9a8c7df5eb36832188116aaecd4",
      "tree": {
        "sha": "d38792b9fda333e1a8546e2ad3f86170cf8903b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d38792b9fda333e1a8546e2ad3f86170cf8903b0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9f0e9ce4c63f77cd68877d807cd7e35f453c33e",
          "sha": "f9f0e9ce4c63f77cd68877d807cd7e35f453c33e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f9f0e9ce4c63f77cd68877d807cd7e35f453c33e"
        }
      ],
      "message": "[txorphanage] SanityCheck PeerOrphanInfo::m_iter_list is consistent with m_orphans",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-07T13:21:37Z"
      },
      "sha": "e0115a53079ad9a8c7df5eb36832188116aaecd4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5Nzc1MmUzNmU3ODZkYWJlMDZmNjZkMDNmYmU1YzQ2MGUxODM4MGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397752e36e786dabe06f66d03fbe5c460e18380c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/397752e36e786dabe06f66d03fbe5c460e18380c",
      "tree": {
        "sha": "2eb9d47ad4eabb8cac2a5cc5739d7cb67edf14c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2eb9d47ad4eabb8cac2a5cc5739d7cb67edf14c0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0115a53079ad9a8c7df5eb36832188116aaecd4",
          "sha": "e0115a53079ad9a8c7df5eb36832188116aaecd4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0115a53079ad9a8c7df5eb36832188116aaecd4"
        }
      ],
      "message": "[unit test] orphanage evicts dosy peers first",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-07T22:11:17Z"
      },
      "sha": "397752e36e786dabe06f66d03fbe5c460e18380c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkMTI2MzY0MTZlODhmMTVlYzBiNjViNDNhMGZhMjRhOGNjY2Q2MTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd12636416e88f15ec0b65b43a0fa24a8cccd613",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd12636416e88f15ec0b65b43a0fa24a8cccd613",
      "tree": {
        "sha": "2a329b6db09e806c998d0c1c8288ba946a7aa390",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a329b6db09e806c998d0c1c8288ba946a7aa390"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397752e36e786dabe06f66d03fbe5c460e18380c",
          "sha": "397752e36e786dabe06f66d03fbe5c460e18380c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/397752e36e786dabe06f66d03fbe5c460e18380c"
        }
      ],
      "message": "[bench] TxOrphanage::LimitOrphans",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-30T07:28:08Z"
      },
      "sha": "cd12636416e88f15ec0b65b43a0fa24a8cccd613"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRmN2MwOGQ0YmYyZDczYTYxMTU0MTljYmUxYzAwY2EyYjkwNjVlMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c",
      "tree": {
        "sha": "86138b5ab51afc0814c2bd1094f3e9fb83cceae6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86138b5ab51afc0814c2bd1094f3e9fb83cceae6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd12636416e88f15ec0b65b43a0fa24a8cccd613",
          "sha": "cd12636416e88f15ec0b65b43a0fa24a8cccd613",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cd12636416e88f15ec0b65b43a0fa24a8cccd613"
        }
      ],
      "message": "[functional test] 1p1c is accepted in the presence of orphanage DoSers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-29T13:26:23Z"
      },
      "sha": "4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwNzZlMTk1NTNiMWM2OWNhNzM3ODY5MzM0MzE5NmE1MDAwYTVjZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9076e19553b1c69ca7378693343196a5000a5ce5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9076e19553b1c69ca7378693343196a5000a5ce5",
      "tree": {
        "sha": "2b40adf967c613e51383e2679f1a01615e8bafb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b40adf967c613e51383e2679f1a01615e8bafb3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c",
          "sha": "4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4f7c08d4bf2d73a6115419cbe1c00ca2b9065e0c"
        }
      ],
      "message": "[txorphanage] trim work sets in AddChildrenToWorkset\n\nBound the amount of orphans that can be in any peer's work set by\nensuring they never grow beyond a certain point. Since there is limited\nspace and work sets can contain orphans that have already been deleted,\nonce per AddChildrenToWorkset call, if we run out of space in a peer's\nwork set, iterate through it and delete the ones that don't correspond\nto a tx in m_orphans.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T16:42:58Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-09T20:18:36Z"
      },
      "sha": "9076e19553b1c69ca7378693343196a5000a5ce5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268223946,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJqWXK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268223946",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7aaf390a5a24857f7ced443a2739e43b4f4ade95",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/7aaf390a5a24857f7ced443a2739e43b4f4ade95",
      "created_at": "2025-02-11T17:03:24Z"
    },
    {
      "event": "commented",
      "id": 2651478837,
      "node_id": "IC_kwDOABII586eCls1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2651478837",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:51Z",
      "updated_at": "2025-02-11T17:04:51Z",
      "author_association": "MEMBER",
      "body": "Thanks @instagibbs for the testing and review, added your fuzz commits and took comments. Still need to write the p2p_orphan_handling test.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2651478837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "mentioned",
      "id": 16268244528,
      "node_id": "MEE_lADOABII586pVaFFzwAAAAPJqbYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268244528",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:52Z"
    },
    {
      "event": "subscribed",
      "id": 16268244548,
      "node_id": "SE_lADOABII586pVaFFzwAAAAPJqbZE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268244548",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:04:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268286279,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJqllH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268286279",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "61b40f0c97bde7b4f8b96a8520869e12f5abe01e",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/61b40f0c97bde7b4f8b96a8520869e12f5abe01e",
      "created_at": "2025-02-11T17:08:01Z"
    },
    {
      "event": "labeled",
      "id": 16268288502,
      "node_id": "LE_lADOABII586pVaFFzwAAAAPJqmH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268288502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:08:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2651487529,
      "node_id": "IC_kwDOABII586eCn0p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2651487529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T17:08:13Z",
      "updated_at": "2025-02-11T17:08:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/37041607307</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#issuecomment-2651487529",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31829"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc3ZDBhNzMzYWNlMGMwZmEyNjE3ZjVjMzNlMzE3ZjRjNzQzNmQ1ZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77d0a733ace0c0fa2617f5c33e317f4c7436d5e8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/77d0a733ace0c0fa2617f5c33e317f4c7436d5e8",
      "tree": {
        "sha": "05d1d65bdccccbcaccf386b1562e0cafe2d0c493",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05d1d65bdccccbcaccf386b1562e0cafe2d0c493"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9076e19553b1c69ca7378693343196a5000a5ce5",
          "sha": "9076e19553b1c69ca7378693343196a5000a5ce5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9076e19553b1c69ca7378693343196a5000a5ce5"
        }
      ],
      "message": "[unit test] work set trimming",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T17:25:09Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T12:58:46Z"
      },
      "sha": "77d0a733ace0c0fa2617f5c33e317f4c7436d5e8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmNjY2NTRhZmY3YzkzZWNhZTY4ODllNmZhMDc1YjkzM2M1YzIwYzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df66654aff7c93ecae6889e6fa075b933c5c20c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df66654aff7c93ecae6889e6fa075b933c5c20c3",
      "tree": {
        "sha": "0203e53135bc4dd0599489d5de830a1559d72cb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0203e53135bc4dd0599489d5de830a1559d72cb0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77d0a733ace0c0fa2617f5c33e317f4c7436d5e8",
          "sha": "77d0a733ace0c0fa2617f5c33e317f4c7436d5e8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/77d0a733ace0c0fa2617f5c33e317f4c7436d5e8"
        }
      ],
      "message": "[test] remove orphanage debug log assertions in p2p_invalid_tx.py\n\nAsserting debug logs does not actually test anything; test using\ngetorphantxs instead.\nAlso remove the test that exactly 101 orphans leads to eviction.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T17:25:09Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-28T13:29:31Z"
      },
      "sha": "df66654aff7c93ecae6889e6fa075b933c5c20c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkNTgyOTU4MmE4M2YwNDVjZmY4YWVkN2M2ZTk0Y2UxMTYzMmY1N2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd5829582a83f045cff8aed7c6e94ce11632f57a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd5829582a83f045cff8aed7c6e94ce11632f57a",
      "tree": {
        "sha": "8862663212ee2a80cb2499df8ac2517a467da08f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8862663212ee2a80cb2499df8ac2517a467da08f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df66654aff7c93ecae6889e6fa075b933c5c20c3",
          "sha": "df66654aff7c93ecae6889e6fa075b933c5c20c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df66654aff7c93ecae6889e6fa075b933c5c20c3"
        }
      ],
      "message": "Increase default -maxorphantx to 3000\n\nNow that TxOrphanage internally enforces more robust memory and\ncomputation bounds, it is safe to increase this number. Historical data\nshows that we frequently bust the 100 limit, leading to us evicting and\nredownloading the same orphans.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T17:25:09Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-07T13:34:05Z"
      },
      "sha": "fd5829582a83f045cff8aed7c6e94ce11632f57a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiYzMwM2Q1MzU2NTYwMWZjY2MxZjJlMDRmOWZiMGRhN2UyY2JkNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bc303d53565601fccc1f2e04f9fb0da7e2cbd48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc303d53565601fccc1f2e04f9fb0da7e2cbd48",
      "tree": {
        "sha": "931687c0367103b4a8a518314172a108096dc905",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/931687c0367103b4a8a518314172a108096dc905"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd5829582a83f045cff8aed7c6e94ce11632f57a",
          "sha": "fd5829582a83f045cff8aed7c6e94ce11632f57a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd5829582a83f045cff8aed7c6e94ce11632f57a"
        }
      ],
      "message": "[txorphanage] Add AnnouncementsByPeer introspection",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T17:25:09Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2025-02-10T16:20:42Z"
      },
      "sha": "8bc303d53565601fccc1f2e04f9fb0da7e2cbd48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmODI2NzY5ZDhmM2I0YTFkODdlOTcwZDdiYjllYTljZjgxMzNmOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "tree": {
        "sha": "af4d52dced00eb6c2cc2953105b05bcd1fb2829c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af4d52dced00eb6c2cc2953105b05bcd1fb2829c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bc303d53565601fccc1f2e04f9fb0da7e2cbd48",
          "sha": "8bc303d53565601fccc1f2e04f9fb0da7e2cbd48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8bc303d53565601fccc1f2e04f9fb0da7e2cbd48"
        }
      ],
      "message": "[fuzz] Add orphan protection harness",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-02-11T17:25:09Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2025-02-10T16:16:42Z"
      },
      "sha": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16268530016,
      "node_id": "HRFPE_lADOABII586pVaFFzwAAAAPJrhFg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16268530016",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "created_at": "2025-02-11T17:25:15Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949498021",
      "pull_request_review_id": 2606517127,
      "id": 1949498021,
      "node_id": "PRRC_kwDOABII5850Mvql",
      "diff_hunk": "@@ -36,9 +36,10 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n ",
      "path": "src/txorphanage.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212\r\n\r\n`MAX_GLOBAL_ORPHAN_ANNOUNCEMENTS` doesn't occur in the PR, should be `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS`?",
      "created_at": "2025-02-10T16:43:36Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949498021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949498021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514690",
      "pull_request_review_id": 2606517127,
      "id": 1949514690,
      "node_id": "PRRC_kwDOABII5850MzvC",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "s/may provide/may provide without risking eviction/?",
      "created_at": "2025-02-10T16:50:22Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949514690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514831",
      "pull_request_review_id": 2606517127,
      "id": 1949514831,
      "node_id": "PRRC_kwDOABII5850MzxP",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As\n+     * more peers are added, each peer's allocation is reduced. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 41,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "s/allocation/protected allocation/?\r\n\r\n",
      "created_at": "2025-02-10T16:50:24Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949514831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949514831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949519057",
      "pull_request_review_id": 2606517127,
      "id": 1949519057,
      "node_id": "PRRC_kwDOABII5850M0zR",
      "diff_hunk": "@@ -111,7 +137,6 @@ class TxOrphanage {\n \n protected:\n     struct OrphanTx : public OrphanTxBase {",
      "path": "src/txorphanage.h",
      "position": 81,
      "original_position": 56,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we think we'll end up using the derived class in a meaningful way later?",
      "created_at": "2025-02-10T16:51:18Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949519057",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949519057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949538646",
      "pull_request_review_id": 2606517127,
      "id": 1949538646,
      "node_id": "PRRC_kwDOABII5850M5lW",
      "diff_hunk": "@@ -156,18 +201,47 @@ class TxOrphanage {\n      *  to remove orphan transactions from the m_orphans */\n     std::map<COutPoint, std::set<OrphanMap::iterator, IteratorComparator>> m_outpoint_to_orphan_it;\n \n-    /** Orphan transactions in vector for quick random eviction */\n-    std::vector<OrphanMap::iterator> m_orphan_list;\n-\n     /** Timestamp for the next scheduled sweep of expired orphans */\n     NodeSeconds m_next_sweep{0s};\n \n     /** If ORPHAN_TX_EXPIRE_INTERVAL has elapsed since the last sweep, expire orphans older than\n      * ORPHAN_TX_EXPIRE_TIME. Called within LimitOrphans. */\n     unsigned int MaybeExpireOrphans();\n \n-    /** If there are more than max_orphans total orphans, evict randomly until that is no longer the case. */\n+    /** If any of the following conditions are met, trim orphans until none are true:\n+     * 1. The global memory usage exceeds the maximum allowed.\n+     * 2. The global number of announcements exceeds the maximum allowed.\n+     * 3. The total number of orphans exceeds max_orphans.\n+     *\n+     * The trimming process sorts peers by their DoS score, only removing announcements /  orphans\n+     * of the peer with the worst DoS score. We use a heap to sort the peers, pop the worst one off,\n+     * and then re-add it if the peer still has transactions. The loop can run a maximum of\n+     * m_max_global_announcements times before there cannot be any more transactions to evict.\n+     * Bounds: O(p) to build the heap, O(n log(p)) for subsequent heap operations.\n+     *   p = number of peers\n+     *   n = number of announcements\n+     * */\n     unsigned int MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng);\n+\n+    unsigned int GetPerPeerMaxUsage() const {\n+        return m_reserved_weight_per_peer;\n+    }\n+\n+    unsigned int GetGlobalMaxUsage() const {\n+        return std::max<unsigned int>(m_peer_orphanage_info.size() * m_reserved_weight_per_peer, 1);\n+    }\n+\n+    unsigned int GetPerPeerMaxAnnouncements() const {",
      "path": "src/txorphanage.h",
      "position": 169,
      "original_position": 138,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note: this is use to \"normalize\" the one DoS score metric against the other only. If this wasn't used, trimming would heavily favor announcement trimming scores first.",
      "created_at": "2025-02-10T17:02:50Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949538646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949538646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 241,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949554535",
      "pull_request_review_id": 2606517127,
      "id": 1949554535,
      "node_id": "PRRC_kwDOABII5850M9dn",
      "diff_hunk": "@@ -138,10 +165,28 @@ class TxOrphanage {\n          * m_total_orphan_size. If a peer is removed as an announcer, even if the orphan still\n          * remains in the orphanage, this number will be decremented. */\n         int64_t m_total_usage{0};\n+\n+        /** Orphan transactions in vector for quick random eviction */\n+        std::vector<OrphanMap::iterator> m_iter_list;\n+\n+        /** There are 2 DoS scores:\n+         * - CPU score (ratio of num announcements / max allowed announcements)\n+         * - Memory score (ratio of total usage / max allowed usage).\n+         *\n+         * If the peer is using more than the allowed for either resource, its DoS score is > 1.\n+         * A peer having a DoS score > 1 does not necessarily mean that something is wrong, since we\n+         * do not trim unless the orphanage exceeds global limits, but it means that this peer will\n+         * be selected for trimming sooner. If the orphanage NeedsTrim(), it must be that at least\n+         * one peer has a DoS score > 1. */\n+        FeeFrac GetDoSScore(unsigned int peer_max_ann, unsigned int peer_max_mem) {\n+            FeeFrac cpu_score(m_iter_list.size(), peer_max_ann);\n+            FeeFrac mem_score(m_total_usage, peer_max_mem);\n+            return std::max<FeeFrac>(cpu_score, mem_score);\n+        }\n     };\n     std::map<NodeId, PeerOrphanInfo> m_peer_orphanage_info;",
      "path": "src/txorphanage.h",
      "position": 125,
      "original_position": 93,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re:global memory limits, they won't be increased until each connected peer offers up their own orphan or announcement (which makes sense)\r\n\r\nwould be good to have test/fuzz coverage that there isn't some bug where this continuously grows, raising the global limits to unsafe levels? Arg in `SanityCheck`?",
      "created_at": "2025-02-10T17:11:47Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949554535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949554535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 194,
      "original_line": 194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949568939",
      "pull_request_review_id": 2606517127,
      "id": 1949568939,
      "node_id": "PRRC_kwDOABII5850NA-r",
      "diff_hunk": "@@ -87,29 +89,32 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n         }\n-    }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(m_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != m_orphan_list.size()) {\n-        // Unless we're deleting the last entry in m_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = m_orphan_list.back();\n-        m_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n+        // Find this orphan iter's position in the list, and delete it.\n+        auto& orphan_list = peer_it->second.m_iter_list;\n+        size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));\n+\n+        if (!Assume(old_pos < orphan_list.size())) continue;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe a bit too paranoid since it was just computed explicitly from the underlying list?",
      "created_at": "2025-02-10T17:21:10Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949568939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949568939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949583127",
      "pull_request_review_id": 2606517127,
      "id": 1949583127,
      "node_id": "PRRC_kwDOABII5850NEcX",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim() || m_orphans.size() > max_orphans)\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the allowance. This metric causes us to naturally select peers who have exceeded\n+        // their limits (i.e. a DoS score > 1) before peers who haven't. We may choose the same peer\n+        // change since the last iteration of this loop.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "wording confusion: same peer change?",
      "created_at": "2025-02-10T17:29:13Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949583127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949583127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949610086",
      "pull_request_review_id": 2606517127,
      "id": 1949610086,
      "node_id": "PRRC_kwDOABII5850NLBm",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> happened yet at this point\r\n\r\nDo you mean prior to LimitOrphans? ",
      "created_at": "2025-02-10T17:44:54Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949610086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949610086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949612609",
      "pull_request_review_id": 2606517127,
      "id": 1949612609,
      "node_id": "PRRC_kwDOABII5850NLpB",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may\n+    // evict more than 1 transaction. All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);\n+\n+    // The DoS peer's orphans have been evicted, nobody else's have.\n+    for (NodeId peer{0}; peer <= dos_peer; ++peer) {\n+        BOOST_CHECK_EQUAL(peer == dos_peer, peer_usages.at(peer) != orphanage.UsageByPeer(peer));",
      "path": "src/test/orphanage_tests.cpp",
      "position": 74,
      "original_position": 36,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would rather we check that we evicted the dos'y peer and somehow didn't *add* more resources allocated to him",
      "created_at": "2025-02-10T17:46:45Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949612609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949612609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949641427",
      "pull_request_review_id": 2606517127,
      "id": 1949641427,
      "node_id": "PRRC_kwDOABII5850NSrT",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 128,
      "original_position": 124,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could do this for both cases\r\n```Suggestion  \r\n       # Something was evicted\r\n        assert_greater_than(len(large_orphans), len(node.getorphantxs()))\r\n```",
      "created_at": "2025-02-10T18:04:45Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949641427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949641427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 476,
      "original_line": 476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949655371",
      "pull_request_review_id": 2606517127,
      "id": 1949655371,
      "node_id": "PRRC_kwDOABII5850NWFL",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "seems wrong, you're sending 3000/125=24 transactions *total*?",
      "created_at": "2025-02-10T18:15:47Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949655371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949655371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949834394",
      "pull_request_review_id": 2606517127,
      "id": 1949834394,
      "node_id": "PRRC_kwDOABII5850OBya",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is backwards. See added unit test:\r\n```\r\ndiff --git a/src/test/orphanage_tests.cpp b/src/test/orphanage_tests.cpp\r\nindex fe0f81fdb4..dde42d9d4a 100644\r\n--- a/src/test/orphanage_tests.cpp\r\n+++ b/src/test/orphanage_tests.cpp\r\n@@ -77,0 +78,24 @@ static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& out\r\n+// 101 output transaction\r\n+static CTransactionRef MakeHugeTransactionSpending(const std::vector<COutPoint>& outpoints, FastRandomContext& det_rand)\r\n+{\r\n+    CKey key;\r\n+    MakeNewKeyWithFastRandomContext(key, det_rand);\r\n+    CMutableTransaction tx;\r\n+    // If no outpoints are given, create a random one.\r\n+    if (outpoints.empty()) {\r\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\r\n+    } else {\r\n+        for (const auto& outpoint : outpoints) {\r\n+            tx.vin.emplace_back(outpoint);\r\n+        }\r\n+    }\r\n+    // Ensure txid != wtxid\r\n+    tx.vin[0].scriptWitness.stack.push_back({1});\r\n+    tx.vout.resize(101);\r\n+    tx.vout[0].nValue = CENT;\r\n+    tx.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\r\n+    tx.vout[1].nValue = 3 * CENT;\r\n+    tx.vout[1].scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(key.GetPubKey()));\r\n+    return MakeTransactionRef(tx);\r\n+}\r\n+\r\n@@ -598,0 +623,23 @@ BOOST_AUTO_TEST_CASE(peer_worksets)\r\n+\r\n+        {\r\n+            // We will fill the orphanage with a single parent and 101 children\r\n+            // from that single transaction to cause potential deletion of work set\r\n+            // from peer 0.\r\n+            auto tx_missing_parent = MakeHugeTransactionSpending({}, det_rand);\r\n+            std::vector<CTransactionRef> tx_orphans;\r\n+            for (unsigned int i{0}; i < MAX_ORPHAN_WORK_QUEUE + 1; i++) {\r\n+                auto tx_orphan = MakeTransactionSpending({COutPoint{tx_missing_parent->GetHash(), i}}, det_rand);\r\n+                BOOST_CHECK(orphanage.AddTx(tx_orphan, /*peer=*/node0));\r\n+            }\r\n+\r\n+            // 101 transactions in the orphanage (no trimming of orphanage yet), now\r\n+            // add parent to work set, which will all be allocated to peer 0.\r\n+            // work set should get trimmed exactly once down to MAX_ORPHAN_WORK_QUEUE\r\n+            orphanage.AddChildrenToWorkSet(*tx_missing_parent, det_rand);\r\n+            for (unsigned int i{0}; i < MAX_ORPHAN_WORK_QUEUE; i++) {\r\n+                BOOST_CHECK(orphanage.GetTxToReconsider(node0));\r\n+            }\r\n+\r\n+            // We should have emptied the work queue in MAX_ORPHAN_WORK_QUEUE steps\r\n+            BOOST_CHECK(!orphanage.HaveTxToReconsider(node0));\r\n+        }\r\ndiff --git a/src/txorphanage.cpp b/src/txorphanage.cpp\r\nindex 09d50a244a..2a881db669 100644\r\n--- a/src/txorphanage.cpp\r\n+++ b/src/txorphanage.cpp\r\n@@ -276 +276 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\r\n-                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\r\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return !m_orphans.contains(wtxid); });\r\n```",
      "created_at": "2025-02-10T20:28:08Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949834394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949834394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949852220",
      "pull_request_review_id": 2606517127,
      "id": 1949852220,
      "node_id": "PRRC_kwDOABII5850OGI8",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });\n+                    peers_workset_trimmed.insert(announcer);\n+                }\n+\n+                // Add this tx to the work set. If the workset is full, even after trimming, don't\n+                // accept any new work items until the work queue has been flushed.\n+                if (orphan_work_set.size() < MAX_ORPHAN_WORK_QUEUE) {",
      "path": "src/txorphanage.cpp",
      "position": 199,
      "original_position": 30,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "should we debug log if we're not adding to work set? might be good to know it's happening",
      "created_at": "2025-02-10T20:40:56Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949852220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949852220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911002",
      "pull_request_review_id": 2606517127,
      "id": 1949911002,
      "node_id": "PRRC_kwDOABII5850OUfa",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 103,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the honest orphan should be as large as possible: `target_vsize=100000`",
      "created_at": "2025-02-10T21:22:49Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949911002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911352",
      "pull_request_review_id": 2606517127,
      "id": 1949911352,
      "node_id": "PRRC_kwDOABII5850OUk4",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 152,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the honest orphan should be as large as possible: `target_vsize=100000`",
      "created_at": "2025-02-10T21:23:09Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949911352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949911352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949914892",
      "pull_request_review_id": 2606517127,
      "id": 1949914892,
      "node_id": "PRRC_kwDOABII5850OVcM",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 137,
      "original_position": 130,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can we get a functional test case that covers the \"protects fully sized ancestor package\" scenario in `p2p_orphan_handling.py`? ",
      "created_at": "2025-02-10T21:26:06Z",
      "updated_at": "2025-02-10T21:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1949914892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1949914892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 485,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722422",
      "pull_request_review_id": 2608521945,
      "id": 1950722422,
      "node_id": "PRRC_kwDOABII5850Ral2",
      "diff_hunk": "@@ -36,9 +36,10 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n         return false;\n     }\n ",
      "path": "src/txorphanage.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949498021,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, fixed",
      "created_at": "2025-02-11T12:04:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950722422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722979",
      "pull_request_review_id": 2608521945,
      "id": 1950722979,
      "node_id": "PRRC_kwDOABII5850Rauj",
      "diff_hunk": "@@ -87,29 +89,32 @@ int TxOrphanage::EraseTx(const Wtxid& wtxid)\n     const auto tx_size{it->second.GetUsage()};\n     m_total_orphan_usage -= tx_size;\n     m_total_announcements -= it->second.announcers.size();\n-    // Decrement each announcer's m_total_usage\n+    // Decrement each announcer's m_total_usage and remove orphan from all m_iter_list.\n     for (const auto& peer : it->second.announcers) {\n         auto peer_it = m_peer_orphanage_info.find(peer);\n         if (Assume(peer_it != m_peer_orphanage_info.end())) {\n             peer_it->second.m_total_usage -= tx_size;\n         }\n-    }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(m_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != m_orphan_list.size()) {\n-        // Unless we're deleting the last entry in m_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = m_orphan_list.back();\n-        m_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n+        // Find this orphan iter's position in the list, and delete it.\n+        auto& orphan_list = peer_it->second.m_iter_list;\n+        size_t old_pos = std::distance(orphan_list.begin(), std::find(orphan_list.begin(), orphan_list.end(), it));\n+\n+        if (!Assume(old_pos < orphan_list.size())) continue;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949568939,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "removed",
      "created_at": "2025-02-11T12:04:50Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950722979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950722979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950723636",
      "pull_request_review_id": 2608521945,
      "id": 1950723636,
      "node_id": "PRRC_kwDOABII5850Ra40",
      "diff_hunk": "@@ -165,13 +170,68 @@ unsigned int TxOrphanage::MaybeExpireOrphans()\n \n unsigned int TxOrphanage::MaybeTrimOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    // Exit early to avoid building the heap unnecessarily\n+    if (!NeedsTrim() && m_orphans.size() <= max_orphans) return 0;\n+\n+    std::vector<PeerMap::iterator> peer_it_heap;\n+    for (auto it = m_peer_orphanage_info.begin(); it != m_peer_orphanage_info.end(); ++it) peer_it_heap.push_back(it);\n+    peer_it_heap.reserve(m_peer_orphanage_info.size());\n+\n+    // Sort peers that have the highest ratio of DoSiness first\n+    auto compare_peer = [this](PeerMap::iterator left, PeerMap::iterator right) {\n+        const auto max_ann{GetPerPeerMaxAnnouncements()};\n+        const auto max_mem{GetPerPeerMaxUsage()};\n+        return left->second.GetDoSScore(max_ann, max_mem) < right->second.GetDoSScore(max_ann, max_mem);\n+    };\n+\n+    std::make_heap(peer_it_heap.begin(), peer_it_heap.end(), compare_peer);\n+\n     unsigned int nEvicted = 0;\n-    while (m_orphans.size() > max_orphans)\n+\n+    // Since each iteration should remove 1 announcement, this loop runs at most m_total_announcements times.\n+    // Note that we don't necessarily delete an orphan on each iteration. We might only be deleting\n+    // a peer from its announcers list.\n+    while (NeedsTrim() || m_orphans.size() > max_orphans)\n     {\n-        // Evict a random orphan:\n-        size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->first);\n-        ++nEvicted;\n+        if (!Assume(!peer_it_heap.empty())) break;\n+        // Find the peer with the highest DoS score, which is a fraction of {usage, announcements} used\n+        // over the allowance. This metric causes us to naturally select peers who have exceeded\n+        // their limits (i.e. a DoS score > 1) before peers who haven't. We may choose the same peer\n+        // change since the last iteration of this loop.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 101,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949583127,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-02-11T12:05:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950723636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950723636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950724798",
      "pull_request_review_id": 2608521945,
      "id": 1950724798,
      "node_id": "PRRC_kwDOABII5850RbK-",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 40,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949514690,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed",
      "created_at": "2025-02-11T12:06:11Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950724798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950724798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950725244",
      "pull_request_review_id": 2608521945,
      "id": 1950725244,
      "node_id": "PRRC_kwDOABII5850RbR8",
      "diff_hunk": "@@ -27,7 +34,26 @@ static constexpr auto ORPHAN_TX_EXPIRE_INTERVAL{5min};\n  * Not thread-safe. Requires external synchronization.\n  */\n class TxOrphanage {\n+    /** The usage (weight) reserved for each peer, representing the amount of memory we are willing\n+     * to allocate for orphanage space. Note that this number is a reservation, not a limit: peers\n+     * are allowed to exceed this reservation until the global limit is reached, and peers are\n+     * effectively guaranteed this amount of space. Reservation is per-peer, so the global upper\n+     * bound on memory usage scales up with more peers. */\n+    unsigned int m_reserved_weight_per_peer{DEFAULT_RESERVED_ORPHAN_WEIGHT_PER_PEER};\n+\n+    /** The maximum number of announcements across all peers, representing a computational upper bound,\n+     * i.e. the maximum number of evictions we might do at a time. There is no per-peer announcement\n+     * limit until the global limit is reached. Also, this limit is constant regardless of how many\n+     * peers we have: if we only have 1 peer, this is the number of orphans they may provide. As\n+     * more peers are added, each peer's allocation is reduced. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 41,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "ef2f44e653a4877d4e65fbd5a51ec83ceb96d212",
      "in_reply_to_id": 1949514831,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-02-11T12:06:30Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950725244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950725244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950732547",
      "pull_request_review_id": 2608521945,
      "id": 1950732547,
      "node_id": "PRRC_kwDOABII5850RdED",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": 1949610086,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, clarified",
      "created_at": "2025-02-11T12:12:11Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950732547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950732547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 247,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950739715",
      "pull_request_review_id": 2608521945,
      "id": 1950739715,
      "node_id": "PRRC_kwDOABII5850Re0D",
      "diff_hunk": "@@ -220,6 +220,42 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n     BOOST_CHECK_EQUAL(orphanage.CountOrphans(), 0);\n }\n \n+BOOST_AUTO_TEST_CASE(eviction)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanage orphanage;\n+\n+    // Send 10 orphans from 15 other peers\n+    NodeId max_peer{15};\n+    std::vector<unsigned int> peer_usages;\n+    for (NodeId peer{0}; peer < max_peer; ++peer) {\n+        for (unsigned int i{0}; i < 10; ++i) {\n+            auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+            orphanage.AddTx(ptx, peer);\n+        }\n+        peer_usages.emplace_back(orphanage.UsageByPeer(peer));\n+    }\n+\n+    NodeId dos_peer{max_peer};\n+    // Send max orphans from 1 peer\n+    for (unsigned int i{0}; i < DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS; ++i) {\n+        auto ptx = MakeTransactionSpending(/*outpoints=*/{}, det_rand);\n+        orphanage.AddTx(ptx, dos_peer);\n+    }\n+    peer_usages.emplace_back(orphanage.UsageByPeer(dos_peer));\n+\n+    // Force an eviction. Note that no limiting has happened yet at this point. LimitOrphans may\n+    // evict more than 1 transaction. All evictions will be from the dos_peer's transactions.\n+    const auto prev_count = orphanage.Size();\n+    orphanage.LimitOrphans(prev_count - 1, det_rand);\n+    BOOST_CHECK(orphanage.Size() <= prev_count - 1);\n+\n+    // The DoS peer's orphans have been evicted, nobody else's have.\n+    for (NodeId peer{0}; peer <= dos_peer; ++peer) {\n+        BOOST_CHECK_EQUAL(peer == dos_peer, peer_usages.at(peer) != orphanage.UsageByPeer(peer));",
      "path": "src/test/orphanage_tests.cpp",
      "position": 74,
      "original_position": 36,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "95b61662e51622292649cd15a61b9caa113cb2fc",
      "in_reply_to_id": 1949612609,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added",
      "created_at": "2025-02-11T12:16:22Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950739715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950739715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 264,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950745977",
      "pull_request_review_id": 2608521945,
      "id": 1950745977,
      "node_id": "PRRC_kwDOABII5850RgV5",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <consensus/amount.h>\n+#include <net.h>\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/sign.h>\n+#include <test/util/setup_common.h>\n+#include <txorphanage.h>\n+#include <util/check.h>\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// Creates a transaction spending outpoints (or 1 randomly generated input if none are given), with num_outputs outputs.\n+static CTransactionRef MakeTransactionSpending(const std::vector<COutPoint>& outpoints, unsigned int num_outputs, FastRandomContext& det_rand)\n+{\n+    CMutableTransaction tx;\n+\n+    // Build vin\n+    // If no outpoints are given, create a random one.\n+    if (outpoints.empty()) {\n+        tx.vin.emplace_back(Txid::FromUint256(det_rand.rand256()), 0);\n+    } else {\n+        for (const auto& outpoint : outpoints) {\n+            tx.vin.emplace_back(outpoint);\n+        }\n+    }\n+    // Ensure txid != wtxid\n+    assert(tx.vin.size() > 0);\n+    tx.vin[0].scriptWitness.stack.push_back({1});\n+\n+    // Build vout\n+    assert(num_outputs > 0);\n+    tx.vout.resize(num_outputs);\n+    for (unsigned int o = 0; o < num_outputs; ++o) {\n+        tx.vout[o].nValue = det_rand.randrange(100) * CENT;\n+        tx.vout[o].scriptPubKey = CScript() << CScriptNum(det_rand.randrange(o + 100)) << OP_EQUAL;\n+    }\n+    return MakeTransactionRef(tx);\n+}\n+\n+static void OrphanageEvictionMany(benchmark::Bench& bench)\n+{\n+    NodeId NUM_PEERS{125};\n+    unsigned int NUM_TRANSACTIONS(DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS / NUM_PEERS);",
      "path": "src/bench/txorphanage.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "3ce9ef7dd3c231976454e8c836640507bdb7e111",
      "in_reply_to_id": 1949655371,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, and they are each announced by every peer. This bench is to test the maximum number of transactions where every peer has 100% overlap. We call `AddTx` `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS` times, which is the maximum before eviction would trigger. If we increase `DEFAULT_MAX_ORPHAN_ANNOUNCEMENTS`, the bench will scale too.",
      "created_at": "2025-02-11T12:18:35Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950745977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950745977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950778587",
      "pull_request_review_id": 2608521945,
      "id": 1950778587,
      "node_id": "PRRC_kwDOABII5850RoTb",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 128,
      "original_position": 124,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949641427,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-02-11T12:37:03Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950778587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950778587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 476,
      "original_line": 476,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780338",
      "pull_request_review_id": 2608521945,
      "id": 1950780338,
      "node_id": "PRRC_kwDOABII5850Rouy",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 103,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949911002,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-02-11T12:38:23Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950780338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780433",
      "pull_request_review_id": 2608521945,
      "id": 1950780433,
      "node_id": "PRRC_kwDOABII5850RowR",
      "diff_hunk": "@@ -375,6 +390,143 @@ def test_other_parent_in_mempool(self):\n         result_missing_parent = node.submitpackage(package_hex_missing_parent)\n         assert_equal(result_missing_parent[\"package_msg\"], \"package-not-child-with-unconfirmed-parents\")\n \n+    def create_large_orphan(self):\n+        \"\"\"Create huge orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 390000)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 20]))]\n+        return tx\n+\n+    def create_small_orphan(self):\n+        \"\"\"Create small orphan transaction\"\"\"\n+        tx = CTransaction()\n+        # Nonexistent UTXO\n+        tx.vin = [CTxIn(COutPoint(random.randrange(1 << 256), random.randrange(1, 100)))]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_NOP] * 5)]\n+        tx.vout = [CTxOut(100, CScript([OP_RETURN, b'a' * 3]))]\n+        return tx\n+\n+    @cleanup\n+    def test_orphanage_dos_large(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers use lots of orphanage space\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+        peer_doser = node.add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Create very large orphans to be sent by DoSy peers (may take a while)\")\n+        large_orphans = [self.create_large_orphan() for _ in range(100)]\n+        # Check to make sure these are orphans, within max standard size (to be accepted into the orphanage)\n+        for large_orphan in large_orphans:\n+            assert_greater_than_or_equal(100000, large_orphan.get_vsize())\n+            assert_greater_than(MAX_STANDARD_TX_WEIGHT, large_orphan.get_weight())\n+            assert_greater_than_or_equal(3 * large_orphan.get_vsize(), 2 * 100000)\n+            testres = node.testmempoolaccept([large_orphan.serialize().hex()])\n+            assert not testres[0][\"allowed\"]\n+            assert_equal(testres[0][\"reject-reason\"], \"missing-inputs\")\n+\n+        num_individual_dosers = 20\n+        self.log.info(f\"Connect {num_individual_dosers} peers and send a very large orphan from each one\")\n+        # This test assumes that unrequested transactions are processed (skipping inv and\n+        # getdata steps because they require going through request delays)\n+        # Connect 20 peers and have each of them send a large orphan.\n+        for large_orphan in large_orphans[:num_individual_dosers]:\n+            peer_doser_individual = node.add_p2p_connection(P2PInterface())\n+            peer_doser_individual.send_and_ping(msg_tx(large_orphan))\n+            node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+            peer_doser_individual.wait_for_getdata([large_orphan.vin[0].prevout.hash])\n+\n+        # Make sure that these transactions are going through the orphan handling codepaths.\n+        # Subsequent rounds will not wait for getdata because the time mocking will cause the\n+        # normal package request to time out.\n+        self.wait_until(lambda: len(node.getorphantxs()) == num_individual_dosers)\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)\n+\n+        # Announce\n+        orphan_wtxid = high_fee_child[\"wtxid\"]\n+        orphan_tx = high_fee_child[\"tx\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Wait for getdata\n+        peer_normal.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_normal.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_normal.send_and_ping(msg_tx(orphan_tx))\n+\n+        # Wait for parent request\n+        parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer_normal.wait_for_getdata([parent_txid_int])\n+\n+        self.log.info(\"Send another round of very large orphans from a DoSy peer\")\n+        for large_orphan in large_orphans[60:]:\n+            peer_doser.send_and_ping(msg_tx(large_orphan))\n+\n+        self.log.info(\"Provide the orphan's parent. This 1p1c package should be successfully accepted.\")\n+        peer_normal.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n+        assert_equal(node.getmempoolentry(orphan_tx.rehash())[\"ancestorcount\"], 2)\n+\n+    @cleanup\n+    def test_orphanage_dos_many(self):\n+        self.log.info(\"Test that the node can still resolve orphans when peers are sending tons of orphans\")\n+        node = self.nodes[0]\n+        node.setmocktime(int(time.time()))\n+\n+        peer_normal = node.add_p2p_connection(P2PInterface())\n+\n+        batch_size = 100\n+        num_peers = 10\n+        # Each of the num_peers peers creates a distinct set of orphans\n+        many_orphans = [self.create_small_orphan() for _ in range(batch_size * num_peers)]\n+\n+        self.log.info(f\"Send sets of {batch_size} orphans from {num_peers} DoSy peers (may take a while)\")\n+        for peernum in range(num_peers):\n+            peer_doser_batch = node.add_p2p_connection(P2PInterface())\n+            for tx in many_orphans[batch_size*peernum : batch_size*(peernum+1)]:\n+                # Don't sync with ping or wait for responses, because it dramatically increases the\n+                # runtime of this test.\n+                peer_doser_batch.send_message(msg_tx(tx))\n+\n+        self.log.info(\"Send an orphan from a non-DoSy peer. Its orphan should not be evicted.\")\n+        low_fee_parent = self.create_tx_below_mempoolminfee(self.wallet)\n+        high_fee_child = self.wallet.create_self_transfer(utxo_to_spend=low_fee_parent[\"new_utxo\"], fee_rate=20*FEERATE_1SAT_VB)",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": null,
      "original_position": 152,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "653f1bb84db59b11ae20489a7ac2fee4cb78778b",
      "in_reply_to_id": 1949911352,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-02-11T12:38:27Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950780433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950780433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950789783",
      "pull_request_review_id": 2608521945,
      "id": 1950789783,
      "node_id": "PRRC_kwDOABII5850RrCX",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949834394,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wow, very bad bit flip :facepalm: thank you",
      "created_at": "2025-02-11T12:45:06Z",
      "updated_at": "2025-02-11T17:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1950789783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1950789783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951246422",
      "pull_request_review_id": 2609431712,
      "id": 1951246422,
      "node_id": "PRRC_kwDOABII5850TahW",
      "diff_hunk": "@@ -264,10 +266,24 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx, FastRandomContext\n                 // Get this source peer's work set, emplacing an empty set if it didn't exist\n                 // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n                 std::set<Wtxid>& orphan_work_set = m_peer_orphanage_info.try_emplace(announcer).first->second.m_work_set;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), announcer);\n+\n+                // If this peer's work set would exceed the maximum allowed size, trim any work\n+                // items that are no longer in the orphanage. We should only do this once per peer\n+                // per call to AddChildrenToWorkSet, so keep track of which peers we have trimmed.\n+                // We also never need to do it more than once since evictions don't happen in this\n+                // function.\n+                if (orphan_work_set.size() + 1 > MAX_ORPHAN_WORK_QUEUE && !peers_workset_trimmed.contains(announcer)) {\n+                    std::erase_if(orphan_work_set, [&](const auto& wtxid) { return m_orphans.contains(wtxid); });",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "ff826769d8f3b4a1d87e970d7bb9ea9cf8133f9b",
      "original_commit_id": "33034eaa3b45c815fc595c5d906b38c12602a3df",
      "in_reply_to_id": 1949834394,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wrote a similar test to check that an evicted work item is the one that doesn't exist in `m_orphans` anymore.",
      "created_at": "2025-02-11T17:06:14Z",
      "updated_at": "2025-02-11T17:06:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31829#discussion_r1951246422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1951246422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31829"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    }
  ]
}