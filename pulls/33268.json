{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268",
    "id": 2783139679,
    "node_id": "PR_kwDOABII586l41df",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33268",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33268.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33268.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/69eeb11bc585e92a3b56811c3251f13dba05aa5f",
    "number": 33268,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "wallet: Identify transactions spending 0-value outputs, and add tests for anchor outputs in a wallet",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "One of the ways that the wallet would determine if a transaction belonged to the wallet was by checking if the total amount being spent by a transaction from outputs known to the wallet was greater than 0. This has worked fine until recently since there was no reason for 0-value outputs to be created. However, with ephemeral dust and P2A, it is possible to create standard 0-value outputs, and the wallet was not correctly identifying the spends of such outputs. This PR updates `IsFromMe` to only check whether the wallet knows any of the inputs, rather than checking the debit amount of a transaction.\r\n\r\nAdditionally, a new functional test is added to test for this case, as well as a few other anchor output related scenarios. This also revealed a bug in `sendall` which would cause an assertion error when trying to spend all of the outputs in a wallet that has anchor outputs.\r\n\r\nFixes #33265 ",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 8285236537,
        "node_id": "LA_kwDOABII588AAAAB7datOQ",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20backport%20(29.x)",
        "name": "Needs backport (29.x)",
        "description": "",
        "color": "dd7200",
        "default": false
      }
    ],
    "created_at": "2025-08-28T22:28:48Z",
    "updated_at": "2025-09-03T13:33:22Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "551b21b600d9f80350fe0332db20cb49da04c40c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "achow101:zero-value-from-me",
      "ref": "zero-value-from-me",
      "sha": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 40,
        "watchers_count": 40,
        "size": 306843,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-02T22:28:09Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2025-08-28T17:47:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7e58c94112d061af38648808aae87c369098f44c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37699,
        "stargazers_count": 85327,
        "watchers_count": 85327,
        "size": 291847,
        "default_branch": "master",
        "open_issues_count": 763,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-03T10:19:34Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-03T13:35:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 193,
    "deletions": 2,
    "changed_files": 7,
    "commits": 5,
    "review_comments": 16,
    "comments": 12
  },
  "events": [
    {
      "event": "labeled",
      "id": 19400686637,
      "node_id": "LE_lADOABII587Ij7RbzwAAAASEXvwt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19400686637",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-28T22:28:52Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 3235135210,
      "node_id": "IC_kwDOABII587A1D7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3235135210",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-28T22:28:53Z",
      "updated_at": "2025-09-03T13:12:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33268.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3178375101), [kannapoix](https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3178686997) |\n| Concept ACK | [rkrux](https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3180181577) |\n| Stale ACK | [jsarenik](https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3239456408) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33034](https://github.com/bitcoin/bitcoin/pull/33034) (wallet: Store transactions in a separate sqlite table by achow101)\n* [#32763](https://github.com/bitcoin/bitcoin/pull/32763) (wallet: Replace CWalletTx::mapValue and vOrderForm with explicit class members by achow101)\n* [#31615](https://github.com/bitcoin/bitcoin/pull/31615) (validation: ensure assumevalid is always used during reindex by Eunovo)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3235135210",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19400702224,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASEXzkQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19400702224",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bae350cdc5b211e51b554096655781e5e552c908",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/bae350cdc5b211e51b554096655781e5e552c908",
      "created_at": "2025-08-28T22:30:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19400878178,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASEYehi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19400878178",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7d1c3ce7f0f06c6b74e080055c1248800938286b",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/7d1c3ce7f0f06c6b74e080055c1248800938286b",
      "created_at": "2025-08-28T22:52:12Z"
    },
    {
      "event": "labeled",
      "id": 19400879920,
      "node_id": "LE_lADOABII587Ij7RbzwAAAASEYe8w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19400879920",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-28T22:52:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3235171179,
      "node_id": "IC_kwDOABII587A1Mtr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3235171179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-28T22:52:28Z",
      "updated_at": "2025-08-28T22:52:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/49140364057</sub>\n<sub>LLM reason (✨ experimental): Lint failure (py_lint) due to an unused import in test_wallet_anchor.py (CTransaction) flagged by ruff.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3235171179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "unlabeled",
      "id": 19401549184,
      "node_id": "UNLE_lADOABII587Ij7RbzwAAAASEbCWA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19401549184",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T00:08:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3236117393,
      "node_id": "IC_kwDOABII587A4zuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3236117393",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T08:00:29Z",
      "updated_at": "2025-08-29T08:05:27Z",
      "author_association": "NONE",
      "body": "Tested ACK 7d1c3ce7f0f0. I have compiled it and ran the script from issue #33265 with no output other than the current UTC date. Works for me.\r\n\r\nThanks!",
      "user": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3236117393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "commented",
      "id": 3236825770,
      "node_id": "IC_kwDOABII587A7gqq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3236825770",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T12:09:41Z",
      "updated_at": "2025-08-29T12:09:58Z",
      "author_association": "NONE",
      "body": "After it gets merged into `master` branch, I would recommend backporting it to current stable release branch which already contains the ephemeral outputs support ([29.x](https://github.com/bitcoin/bitcoin/blob/7cc9a087069bfcdb79a08ce77eb3a60adf9483af/doc/release-notes/release-notes-29.0.md?plain=1#L64})).",
      "user": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3236825770",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "reviewed",
      "id": 3168442705,
      "node_id": "PRR_kwDOABII58682plR",
      "url": null,
      "actor": null,
      "commit_id": "7d1c3ce7f0f06c6b74e080055c1248800938286b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-29T13:03:22Z",
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3168442705",
      "submitted_at": "2025-08-29T13:03:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "commented",
      "id": 3236975180,
      "node_id": "IC_kwDOABII587A8FJM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3236975180",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T13:04:00Z",
      "updated_at": "2025-08-29T13:04:00Z",
      "author_association": "MEMBER",
      "body": "@jsarenik technically this issue could happen if miners mine 0-value outputs of any kind, but given that it's now relay-possible, seems like a good idea to backport",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3236975180",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "mentioned",
      "id": 19411427443,
      "node_id": "MEE_lADOABII587Ij7RbzwAAAASFAuBz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19411427443",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T13:04:02Z"
    },
    {
      "event": "subscribed",
      "id": 19411427467,
      "node_id": "SE_lADOABII587Ij7RbzwAAAASFAuCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19411427467",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T13:04:02Z"
    },
    {
      "event": "labeled",
      "id": 19411449808,
      "node_id": "LE_lADOABII587Ij7RbzwAAAASFAzfQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19411449808",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-29T13:05:22Z",
      "label": {
        "name": "Needs backport (29.x)",
        "color": "dd7200"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19417987567,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASFZvnv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19417987567",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "de98ffbbdbade12ec45bfb6626718c86fb25c3a7",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/de98ffbbdbade12ec45bfb6626718c86fb25c3a7",
      "created_at": "2025-08-29T19:55:06Z"
    },
    {
      "event": "commented",
      "id": 3239456408,
      "node_id": "IC_kwDOABII587BFi6Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3239456408",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-30T18:53:48Z",
      "updated_at": "2025-08-30T18:53:48Z",
      "author_association": "NONE",
      "body": "Tested ACK de98ffb",
      "user": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3239456408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "reviewed",
      "id": 3171730621,
      "node_id": "PRR_kwDOABII5869DMS9",
      "url": null,
      "actor": null,
      "commit_id": "de98ffbbdbade12ec45bfb6626718c86fb25c3a7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-31T17:42:23Z",
      "author_association": "MEMBER",
      "body": "q: is `IsFromMe()` method still relevant? It seems we could directly call `IsMine()` on the inputs, which is also cached now and should be slightly safer for migration.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3171730621",
      "submitted_at": "2025-08-31T17:42:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "commented",
      "id": 3240325938,
      "node_id": "IC_kwDOABII587BI3My",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3240325938",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-31T18:31:10Z",
      "updated_at": "2025-08-31T18:31:10Z",
      "author_association": "MEMBER",
      "body": "> is `IsFromMe()` method still relevant?\r\n\r\nYes, transactions that we make are still treated specially.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3240325938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "commented",
      "id": 3240345028,
      "node_id": "IC_kwDOABII587BI73E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3240345028",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-31T18:59:22Z",
      "updated_at": "2025-08-31T18:59:22Z",
      "author_association": "MEMBER",
      "body": "> > is `IsFromMe()` method still relevant?\r\n> \r\n> Yes, transactions that we make are still treated specially.\r\n\r\nWhere?. `IsFromMe()` seems to be only ever called in `AddToWalletIfInvolvingMe()` and `ApplyMigrationData()` next to the `IsMine()` call. In both places we effectively treat it as `is_mine = IsMine(outputs) || IsFromMe(inputs)`.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3240345028",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "commented",
      "id": 3240361084,
      "node_id": "IC_kwDOABII587BI_x8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3240361084",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-31T19:30:06Z",
      "updated_at": "2025-08-31T19:30:06Z",
      "author_association": "MEMBER",
      "body": "> Where?\r\n\r\nHmm, I forgot that `CachedTxIsFromMe` does not use `IsFromMe`. Might need to change that in this PR as well.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3240361084",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19448556364,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASHOWtM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19448556364",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c33734f25de80547da3056179b94d1d066367cda",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/c33734f25de80547da3056179b94d1d066367cda",
      "created_at": "2025-09-01T22:50:38Z"
    },
    {
      "event": "commented",
      "id": 3243349872,
      "node_id": "IC_kwDOABII587BUZdw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3243349872",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-01T22:50:40Z",
      "updated_at": "2025-09-01T22:50:40Z",
      "author_association": "MEMBER",
      "body": "> Hmm, I forgot that `CachedTxIsFromMe` does not use `IsFromMe`. Might need to change that in this PR as well.\r\n\r\nI've pulled in 2 commits from #27865 which drop `CachedTxIsFromMe` and replace it with an `IsFromMe` check which is stored on disk.\r\n\r\n> In both places we effectively treat it as `is_mine = IsMine(outputs) || IsFromMe(inputs)`.\r\n\r\nWhile that's true, moving `IsFromMe` into `IsMine` does change `IsMine`'s semantics in other places, so I'm not sure that that would necessarily be correct. I think it would be better to explore that in a different PR.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3243349872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwOWIyNzNkZjhhZDhhNzQ3MDI3NmEzMWYzY2I5MDBlNDgwYWE5OWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/009b273df8ad8a7470276a31f3cb900e480aa99b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/009b273df8ad8a7470276a31f3cb900e480aa99b",
      "tree": {
        "sha": "508ebec96171802ec8ca8e33eff4f176f455146e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/508ebec96171802ec8ca8e33eff4f176f455146e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ca6f3b37b992591726bd13b494369bee3bd6468",
          "sha": "6ca6f3b37b992591726bd13b494369bee3bd6468",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ca6f3b37b992591726bd13b494369bee3bd6468"
        }
      ],
      "message": "test: Test wallet 'from me' status change\n\nIf something is imported into the wallet, it can change the 'from me'\nstatus of a transaction. This status is only visible through\ngettransaction's \"fee\" field which is only shown for transactions that\nare 'from me'.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-01T23:05:07Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-01T20:38:28Z"
      },
      "sha": "009b273df8ad8a7470276a31f3cb900e480aa99b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0MzBlNWMyNWY5MDY1MDViNWRjZjZkNzNkNzJkMTBiNDBiNDlkZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4430e5c25f906505b5dcf6d73d72d10b40b49dde",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4430e5c25f906505b5dcf6d73d72d10b40b49dde",
      "tree": {
        "sha": "4db4ca0a2bf74862387aafee76713cd03a7539ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4db4ca0a2bf74862387aafee76713cd03a7539ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/009b273df8ad8a7470276a31f3cb900e480aa99b",
          "sha": "009b273df8ad8a7470276a31f3cb900e480aa99b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/009b273df8ad8a7470276a31f3cb900e480aa99b"
        }
      ],
      "message": "wallet: Determine IsFromMe by checking for TXOs of inputs\n\nInstead of checking whether the total amount of inputs known by the\nwallet is greater than 0, we should be checking for whether the input is\nknown by the wallet. This enables us to determine whether a transaction\nspends an of output with an amount of 0, which is necessary for marking\n0-value dust outputs as spent.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-01T23:05:10Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-08-28T20:39:46Z"
      },
      "sha": "4430e5c25f906505b5dcf6d73d72d10b40b49dde"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwMWM5Y2I2ZTUwYmIzZGM3ZGYxNjg3MzljMWRmMGE0NWRjZmY0MmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/101c9cb6e50bb3dc7df168739c1df0a45dcff42d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/101c9cb6e50bb3dc7df168739c1df0a45dcff42d",
      "tree": {
        "sha": "b2c4fa04a042abe2ef1fc7c194aa674e91a2bdc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2c4fa04a042abe2ef1fc7c194aa674e91a2bdc8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4430e5c25f906505b5dcf6d73d72d10b40b49dde",
          "sha": "4430e5c25f906505b5dcf6d73d72d10b40b49dde",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4430e5c25f906505b5dcf6d73d72d10b40b49dde"
        }
      ],
      "message": "wallet: Throw an error in sendall if the tx size cannot be calculated",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-01T23:05:10Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-08-28T22:13:36Z"
      },
      "sha": "101c9cb6e50bb3dc7df168739c1df0a45dcff42d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFjZDU3YzY3YjEwYTc3MWQyZWIxYzIzMjRiMjQxNTMzYzBiMWYyODc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "tree": {
        "sha": "0fb6ea23f860d1ca6f9fb1c3c1fd54b57dfdd279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fb6ea23f860d1ca6f9fb1c3c1fd54b57dfdd279"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/101c9cb6e50bb3dc7df168739c1df0a45dcff42d",
          "sha": "101c9cb6e50bb3dc7df168739c1df0a45dcff42d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/101c9cb6e50bb3dc7df168739c1df0a45dcff42d"
        }
      ],
      "message": "test: Add a test for anchor outputs in the wallet",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-01T23:05:10Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-08-28T22:13:23Z"
      },
      "sha": "1cd57c67b10a771d2eb1c2324b241533c0b1f287"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19448639606,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASHOrB2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19448639606",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "created_at": "2025-09-01T23:06:11Z"
    },
    {
      "event": "labeled",
      "id": 19448640503,
      "node_id": "LE_lADOABII587Ij7RbzwAAAASHOrP3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19448640503",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-01T23:06:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3243362856,
      "node_id": "IC_kwDOABII587BUcoo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3243362856",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-01T23:06:24Z",
      "updated_at": "2025-09-01T23:06:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/49358785571</sub>\n<sub>LLM reason (✨ experimental): Lint Python code failure: unused variable `fee` in test_wallet_listtransactions.py (F841).</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3243362856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "unlabeled",
      "id": 19449194535,
      "node_id": "UNLE_lADOABII587Ij7RbzwAAAASHQygn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19449194535",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-02T00:36:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3177732783,
      "node_id": "PRR_kwDOABII5869aFqv",
      "url": null,
      "actor": null,
      "commit_id": "e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-02T18:49:18Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3177732783",
      "submitted_at": "2025-09-02T18:49:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "reviewed",
      "id": 3178296449,
      "node_id": "PRR_kwDOABII5869cPSB",
      "url": null,
      "actor": null,
      "commit_id": "e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-02T22:15:12Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3178296449",
      "submitted_at": "2025-09-02T22:15:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5ZWViMTFiYzU4NWU5MmEzYjU2ODExYzMyNTFmMTNkYmEwNWFhNWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "tree": {
        "sha": "9293cc9fb160c0491243a8e973b8e9ec68ec851d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9293cc9fb160c0491243a8e973b8e9ec68ec851d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cd57c67b10a771d2eb1c2324b241533c0b1f287",
          "sha": "1cd57c67b10a771d2eb1c2324b241533c0b1f287",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1cd57c67b10a771d2eb1c2324b241533c0b1f287"
        }
      ],
      "message": "wallet: Add m_cached_from_me to cache \"from me\" status\n\nm_cached_from_me is used to track whether a transaction is \"from me\", i.e. has\nany inputs which belong to the wallet. This is held in memory only in\nthe same way that a transaction's balances are.",
      "committer": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2025-09-02T22:24:36Z"
      },
      "author": {
        "name": "Ava Chow",
        "email": "github@achow101.com",
        "date": "2024-02-20T16:54:35Z"
      },
      "sha": "69eeb11bc585e92a3b56811c3251f13dba05aa5f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19469925267,
      "node_id": "HRFPE_lADOABII587Ij7RbzwAAAASIf3uT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19469925267",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "commit_url": "https://api.github.com/repos/achow101/bitcoin/commits/69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "created_at": "2025-09-02T22:28:10Z"
    },
    {
      "event": "commented",
      "id": 3246998303,
      "node_id": "IC_kwDOABII587BiUMf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3246998303",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-02T22:28:57Z",
      "updated_at": "2025-09-02T22:28:57Z",
      "author_association": "MEMBER",
      "body": "Didn't really like `m_from_me` commits, so switched the implementation to just cache \"from me\" rather than also storing it on disk.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#issuecomment-3246998303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33268"
    },
    {
      "event": "reviewed",
      "id": 3178375101,
      "node_id": "PRR_kwDOABII5869cie9",
      "url": null,
      "actor": null,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-02T22:44:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/33268/commits/69eeb11bc585e92a3b56811c3251f13dba05aa5f with non-blocking nits above.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3178375101",
      "submitted_at": "2025-09-02T22:44:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "reviewed",
      "id": 3178686997,
      "node_id": "PRR_kwDOABII5869duoV",
      "url": null,
      "actor": null,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-03T08:59:33Z",
      "author_association": "NONE",
      "body": "ACK 69eeb11bc585e92a3b56811c3251f13dba05aa5f\n\nI have run the all functional tests and reviewed the code.\nI left a nit comment below.",
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3178686997",
      "submitted_at": "2025-09-03T08:59:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    },
    {
      "event": "reviewed",
      "id": 3180181577,
      "node_id": "PRR_kwDOABII5869jbhJ",
      "url": null,
      "actor": null,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-03T13:12:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 69eeb11bc585e92a3b56811c3251f13dba05aa5f\r\n\r\nAgree with the intent. Nit in PR description because specifically `IsFromMe` is updated in the PR:\r\n\r\n```diff\r\n- One of the ways that the wallet would determine if a transaction belonged to the wallet was by checking\r\n+ One of the ways that the wallet would determine if a transaction was sent from the wallet was by checking\r\n```",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#pullrequestreview-3180181577",
      "submitted_at": "2025-09-03T13:12:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2309954963",
      "pull_request_review_id": 3168442705,
      "id": 2309954963,
      "node_id": "PRRC_kwDOABII586Jrx2T",
      "diff_hunk": "@@ -1634,7 +1634,11 @@ bool CWallet::IsMine(const COutPoint& outpoint) const\n \n bool CWallet::IsFromMe(const CTransaction& tx) const\n {\n-    return (GetDebit(tx) > 0);\n+    LOCK(cs_wallet);",
      "path": "src/wallet/wallet.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "e3a367156d24f8321d6eb4f1a883faebba1bd44f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> which is necessary for marking anchor outputs as spent.\r\n\r\nTo be pedantic, it's not about PayToAnchor(P2A), which can be any value, but any 0-value outputs, even if they weren't ephemeral (say a miner mined it to dust your wallet).\r\n\r\nThere are other legitimate 0-value output use-cases such as connector outputs, so let's just call it 0-value dust?",
      "created_at": "2025-08-29T11:46:31Z",
      "updated_at": "2025-08-29T13:03:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2309954963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2309954963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1637,
      "original_line": 1637,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2310110919",
      "pull_request_review_id": 3168442705,
      "id": 2310110919,
      "node_id": "PRRC_kwDOABII586JsX7H",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_anchor_listunspent(self):",
      "path": "test/functional/wallet_anchor.py",
      "position": 1,
      "original_position": 33,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "7d1c3ce7f0f06c6b74e080055c1248800938286b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this subtest is covering 0-value outputs, not anchors per se. I'd rather keep the tests logically separated to not confused the concepts more than they already are :)\r\n\r\n",
      "created_at": "2025-08-29T13:03:18Z",
      "updated_at": "2025-08-29T13:03:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2310110919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2310110919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2311048525",
      "pull_request_review_id": 3169963868,
      "id": 2311048525,
      "node_id": "PRRC_kwDOABII586Jv81N",
      "diff_hunk": "@@ -1634,7 +1634,11 @@ bool CWallet::IsMine(const COutPoint& outpoint) const\n \n bool CWallet::IsFromMe(const CTransaction& tx) const\n {\n-    return (GetDebit(tx) > 0);\n+    LOCK(cs_wallet);",
      "path": "src/wallet/wallet.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "e3a367156d24f8321d6eb4f1a883faebba1bd44f",
      "in_reply_to_id": 2309954963,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated the commit message.",
      "created_at": "2025-08-29T19:55:17Z",
      "updated_at": "2025-08-29T19:55:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2311048525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2311048525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1637,
      "original_line": 1637,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2311048812",
      "pull_request_review_id": 3169964204,
      "id": 2311048812,
      "node_id": "PRRC_kwDOABII586Jv85s",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_anchor_listunspent(self):",
      "path": "test/functional/wallet_anchor.py",
      "position": 1,
      "original_position": 33,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "7d1c3ce7f0f06c6b74e080055c1248800938286b",
      "in_reply_to_id": 2310110919,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Clarified the test name",
      "created_at": "2025-08-29T19:55:26Z",
      "updated_at": "2025-08-29T19:55:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2311048812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2311048812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2316892720",
      "pull_request_review_id": 3177732783,
      "id": 2316892720,
      "node_id": "PRRC_kwDOABII586KGPow",
      "diff_hunk": "@@ -311,6 +317,45 @@ def test_op_return(self):\n \n         assert 'address' not in op_ret_tx\n \n+    def test_from_me_status_change(self):\n+        self.log.info(\"Test gettransaction after changing a transaction's 'from me' status\")\n+        self.nodes[0].createwallet(\"fromme\")\n+        default_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        wallet = self.nodes[0].get_wallet_rpc(\"fromme\")",
      "path": "test/functional/wallet_listtransactions.py",
      "position": 39,
      "original_position": 39,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: perhaps it makes review easier.\r\n\r\n```suggestion\r\n        fromme_wallet = self.nodes[0].get_wallet_rpc(\"fromme\")\r\n```",
      "created_at": "2025-09-02T18:49:12Z",
      "updated_at": "2025-09-02T18:49:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2316892720",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2316892720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2317289335",
      "pull_request_review_id": 3178296449,
      "id": 2317289335,
      "node_id": "PRRC_kwDOABII586KHwd3",
      "diff_hunk": "@@ -1634,7 +1640,11 @@ bool CWallet::IsMine(const COutPoint& outpoint) const\n \n bool CWallet::IsFromMe(const CTransaction& tx) const",
      "path": "src/wallet/wallet.cpp",
      "position": 2,
      "original_position": 15,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "e201a1e5a4ee6711f9adb4b7c566494f43f34e09",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n\r\n```suggestion\r\nbool CWallet::IsFromMe(const CTransaction& tx) const\r\n{\r\n    return std::any_of(tx.vin.begin(), tx.vin.end(),\r\n        [this](const CTxIn& txin) { return WITH_LOCK(cs_wallet, return GetTXO(txin.prevout)); });\r\n}\r\n```",
      "created_at": "2025-09-02T22:15:08Z",
      "updated_at": "2025-09-02T22:15:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2317289335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2317289335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1635,
      "original_line": 1635,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2317552470",
      "pull_request_review_id": 3178686997,
      "id": 2317552470,
      "node_id": "PRRC_kwDOABII586KIwtW",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_0_value_anchor_listunspent(self):\n+        self.log.info(\"Test that 0-value anchor outputs are detected as UTXOs\")\n+\n+        # Create an anchor output, and spend it\n+        sender = MiniWallet(self.nodes[0])\n+        anchor_tx = sender.create_self_transfer(fee_rate=0, version=3)[\"tx\"]\n+        anchor_tx.vout.append(CTxOut(0, PAY_TO_ANCHOR))\n+        anchor_spend = sender.create_self_transfer(version=3)[\"tx\"]\n+        anchor_spend.vin.append(CTxIn(COutPoint(anchor_tx.txid_int, 1), b\"\"))\n+        anchor_spend.wit.vtxinwit.append(CTxInWitness())\n+        submit_res = self.nodes[0].submitpackage([anchor_tx.serialize().hex(), anchor_spend.serialize().hex()])\n+        assert_equal(submit_res[\"package_msg\"], \"success\")\n+        anchor_txid = anchor_tx.txid_hex\n+        anchor_spend_txid = anchor_spend.txid_hex\n+\n+        # Mine each tx in separate blocks\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_tx.serialize().hex()])\n+        anchor_tx_height = self.nodes[0].getblockcount()\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_spend.serialize().hex()])\n+\n+        # Mock time forward and generate some blocks to avoid rescanning of latest blocks\n+        self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+        self.generate(self.nodes[0], 10)\n+\n+        self.nodes[0].createwallet(wallet_name=\"anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor\")\n+        import_res = wallet.importdescriptors([{\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"}])\n+        assert_equal(import_res[0][\"success\"], True)\n+\n+        # The wallet should have no UTXOs, and not know of the anchor tx or its spend\n+        assert_equal(wallet.listunspent(), [])\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescanning the block containing the anchor so that listunspent will list the output\n+        wallet.rescanblockchain(0, anchor_tx_height)\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 0)\n+        wallet.gettransaction(anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescan the rest of the blockchain to see the anchor was spent\n+        wallet.rescanblockchain()\n+        assert_equal(wallet.listunspent(), [])\n+        wallet.gettransaction(anchor_spend_txid)\n+\n+    def test_import_anchors(self):\n+        self.log.info(\"Test that descriptors for anchor outputs can only be imported to watchonly wallets\")\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor_privkeys\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor_privkeys\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], False)\n+        assert_equal(import_res[1][\"success\"], False)\n+\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+    def test_cannot_sign_anchors(self):\n+        self.log.info(\"Test that the wallet cannot spend anchor outputs\")\n+        self.nodes[0].createwallet(wallet_name=\"anchor_spend\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor_spend\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+        anchor_txid = self.default_wallet.sendtoaddress(ANCHOR_ADDRESS, 1)\n+        self.generate(self.nodes[0], 1)\n+\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 1)\n+\n+        assert_raises_rpc_error(-4, \"Missing solving data for estimating transaction size\", wallet.send, [{self.default_wallet.getnewaddress(): 0.9999}])\n+        assert_raises_rpc_error(-4, \"Error: Private keys are disabled for this wallet\", wallet.sendtoaddress, self.default_wallet.getnewaddress(), 0.9999)\n+        assert_raises_rpc_error(-4, \"Unable to determine the size of the transaction, the wallet contains unsolvable descriptors\", wallet.sendall, recipients=[self.default_wallet.getnewaddress()], inputs=utxos)",
      "path": "test/functional/wallet_anchor.py",
      "position": 124,
      "original_position": 124,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "in_reply_to_id": null,
      "user": {
        "login": "kannapoix",
        "id": 16045487,
        "node_id": "MDQ6VXNlcjE2MDQ1NDg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/16045487?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kannapoix",
        "html_url": "https://github.com/kannapoix",
        "followers_url": "https://api.github.com/users/kannapoix/followers",
        "following_url": "https://api.github.com/users/kannapoix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kannapoix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kannapoix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kannapoix/subscriptions",
        "organizations_url": "https://api.github.com/users/kannapoix/orgs",
        "repos_url": "https://api.github.com/users/kannapoix/repos",
        "events_url": "https://api.github.com/users/kannapoix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kannapoix/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This error message might be confusing.\nA message like “Private keys are disabled for this wallet” would be more intuitive, similar to what sendtoaddress returns.\nhttps://github.com/bitcoin/bitcoin/blob/46369583f3a99d2b403349790f8b26dbc28de132/src/wallet/rpc/spend.cpp#L177-L179\n\nI’m not suggesting to remove the current error.\nIt should still be raised when the wallet has private keys enabled but fails to determine the transaction size.",
      "created_at": "2025-09-03T01:38:14Z",
      "updated_at": "2025-09-03T08:59:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2317552470",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2317552470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318656200",
      "pull_request_review_id": 3180181577,
      "id": 2318656200,
      "node_id": "PRRC_kwDOABII586KM-LI",
      "diff_hunk": "@@ -311,6 +317,45 @@ def test_op_return(self):\n \n         assert 'address' not in op_ret_tx\n \n+    def test_from_me_status_change(self):\n+        self.log.info(\"Test gettransaction after changing a transaction's 'from me' status\")\n+        self.nodes[0].createwallet(\"fromme\")\n+        default_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        wallet = self.nodes[0].get_wallet_rpc(\"fromme\")\n+\n+        # The 'fee' field of gettransaction is only added when the transaction is 'from me'\n+        # Run twice, once for a transaction in the mempool, again when it confirms\n+        for confirm in [False, True]:\n+            key = get_generate_key()\n+            descriptor = descsum_create(f\"wpkh({key.privkey})\")\n+            default_wallet.importdescriptors([{\"desc\": descriptor, \"timestamp\": \"now\"}])\n+\n+            send_res = default_wallet.send(outputs=[{key.p2wpkh_addr: 1}, {wallet.getnewaddress(): 1}])\n+            assert_equal(send_res[\"complete\"], True)\n+            vout = find_vout_for_address(self.nodes[0], send_res[\"txid\"], key.p2wpkh_addr)\n+            utxos = [{\"txid\": send_res[\"txid\"], \"vout\": vout}]\n+            self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+            # Send to the test wallet, ensuring that one input is for the descriptor we will import,\n+            # and that there are other inputs belonging to only the sending wallet\n+            send_res = default_wallet.send(outputs=[{wallet.getnewaddress(): 1.5}], inputs=utxos, add_inputs=True)\n+            assert_equal(send_res[\"complete\"], True)\n+            txid = send_res[\"txid\"]\n+            self.nodes[0].syncwithvalidationinterfacequeue()\n+            assert \"fee\" not in wallet.gettransaction(txid)",
      "path": "test/functional/wallet_listtransactions.py",
      "position": 60,
      "original_position": 60,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "009b273df8ad8a7470276a31f3cb900e480aa99b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 009b273df8ad8a7470276a31f3cb900e480aa99b \"test: Test wallet 'from me' status change\"\r\n\r\nProbably can also assert on any detail entry being in send category after the descriptor is imported in the concerned wallet and not so before the import. Makes testing more explicit imho.\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_listtransactions.py b/test/functional/wallet_listtransactions.py\r\nindex a19a1a32b1..0c60d4839d 100755\r\n--- a/test/functional/wallet_listtransactions.py\r\n+++ b/test/functional/wallet_listtransactions.py\r\n@@ -342,7 +342,9 @@ class ListTransactionsTest(BitcoinTestFramework):\r\n             assert_equal(send_res[\"complete\"], True)\r\n             txid = send_res[\"txid\"]\r\n             self.nodes[0].syncwithvalidationinterfacequeue()\r\n-            assert \"fee\" not in wallet.gettransaction(txid)\r\n+            get_tx = wallet.gettransaction(txid)\r\n+            assert \"fee\" not in get_tx\r\n+            assert_equal(any(detail[\"category\"] == \"send\" for detail in get_tx[\"details\"]), False)\r\n \r\n             if confirm:\r\n                 self.generate(self.nodes[0], 1, sync_fun=self.no_op)\r\n@@ -355,7 +357,9 @@ class ListTransactionsTest(BitcoinTestFramework):\r\n             # TODO: We should check that the fee matches, but since the transaction spends inputs\r\n             # not known to the wallet, it is incorrectly calculating the fee.\r\n             # assert_equal(wallet.gettransaction(txid)[\"fee\"], fee)\r\n-            assert \"fee\" in wallet.gettransaction(txid)\r\n+            get_tx = wallet.gettransaction(txid)\r\n+            assert \"fee\" in get_tx\r\n+            assert_equal(any(detail[\"category\"] == \"send\" for detail in get_tx[\"details\"]), True)\r\n \r\n if __name__ == '__main__':\r\n     ListTransactionsTest(__file__).main()\r\n```",
      "created_at": "2025-09-03T11:21:51Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318656200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318656200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 345,
      "original_line": 345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318698691",
      "pull_request_review_id": 3180181577,
      "id": 2318698691,
      "node_id": "PRRC_kwDOABII586KNIjD",
      "diff_hunk": "@@ -311,6 +317,45 @@ def test_op_return(self):\n \n         assert 'address' not in op_ret_tx\n \n+    def test_from_me_status_change(self):\n+        self.log.info(\"Test gettransaction after changing a transaction's 'from me' status\")\n+        self.nodes[0].createwallet(\"fromme\")\n+        default_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        wallet = self.nodes[0].get_wallet_rpc(\"fromme\")\n+\n+        # The 'fee' field of gettransaction is only added when the transaction is 'from me'\n+        # Run twice, once for a transaction in the mempool, again when it confirms\n+        for confirm in [False, True]:\n+            key = get_generate_key()\n+            descriptor = descsum_create(f\"wpkh({key.privkey})\")\n+            default_wallet.importdescriptors([{\"desc\": descriptor, \"timestamp\": \"now\"}])\n+\n+            send_res = default_wallet.send(outputs=[{key.p2wpkh_addr: 1}, {wallet.getnewaddress(): 1}])\n+            assert_equal(send_res[\"complete\"], True)\n+            vout = find_vout_for_address(self.nodes[0], send_res[\"txid\"], key.p2wpkh_addr)\n+            utxos = [{\"txid\": send_res[\"txid\"], \"vout\": vout}]\n+            self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+\n+            # Send to the test wallet, ensuring that one input is for the descriptor we will import,\n+            # and that there are other inputs belonging to only the sending wallet\n+            send_res = default_wallet.send(outputs=[{wallet.getnewaddress(): 1.5}], inputs=utxos, add_inputs=True)\n+            assert_equal(send_res[\"complete\"], True)\n+            txid = send_res[\"txid\"]\n+            self.nodes[0].syncwithvalidationinterfacequeue()\n+            assert \"fee\" not in wallet.gettransaction(txid)\n+\n+            if confirm:\n+                self.generate(self.nodes[0], 1, sync_fun=self.no_op)\n+                # Mock time forward and generate blocks so that the import does not rescan the transaction\n+                self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+                self.generate(self.nodes[0], 10, sync_fun=self.no_op)",
      "path": "test/functional/wallet_listtransactions.py",
      "position": 66,
      "original_position": 66,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "009b273df8ad8a7470276a31f3cb900e480aa99b",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 009b273df8ad8a7470276a31f3cb900e480aa99b \"test: Test wallet 'from me' status change\"\r\n\r\nAre these necessary? The test passes without them even with a re-scan.\r\n```diff\r\n             if confirm:\r\n                 self.generate(self.nodes[0], 1, sync_fun=self.no_op)\r\n-                # Mock time forward and generate blocks so that the import does not rescan the transaction\r\n-                self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\r\n-                self.generate(self.nodes[0], 10, sync_fun=self.no_op)\r\n```",
      "created_at": "2025-09-03T11:41:16Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318698691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318698691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": 349,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318702489",
      "pull_request_review_id": 3180181577,
      "id": 2318702489,
      "node_id": "PRRC_kwDOABII586KNJeZ",
      "diff_hunk": "",
      "path": "src/wallet/receive.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 69eeb11bc585e92a3b56811c3251f13dba05aa5f \"wallet: Add m_cached_from_me to cache \"from me\" status\"\r\n\r\nMaybe switch the order of the last 2 commits so that this commit also has coverage?",
      "created_at": "2025-09-03T11:42:56Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318702489",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318702489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318709095",
      "pull_request_review_id": 3180181577,
      "id": 2318709095,
      "node_id": "PRRC_kwDOABII586KNLFn",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"",
      "path": "test/functional/wallet_anchor.py",
      "position": 24,
      "original_position": 24,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 1cd57c67b10a771d2eb1c2324b241533c0b1f287 \"test: Add a test for anchor outputs in the wallet\"\r\n\r\nNit: Probably can stay in the util file where `PAY_TO_ANCHOR` is defined.",
      "created_at": "2025-09-03T11:45:49Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318709095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318709095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318733172",
      "pull_request_review_id": 3180181577,
      "id": 2318733172,
      "node_id": "PRRC_kwDOABII586KNQ90",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_0_value_anchor_listunspent(self):\n+        self.log.info(\"Test that 0-value anchor outputs are detected as UTXOs\")\n+\n+        # Create an anchor output, and spend it\n+        sender = MiniWallet(self.nodes[0])\n+        anchor_tx = sender.create_self_transfer(fee_rate=0, version=3)[\"tx\"]\n+        anchor_tx.vout.append(CTxOut(0, PAY_TO_ANCHOR))\n+        anchor_spend = sender.create_self_transfer(version=3)[\"tx\"]\n+        anchor_spend.vin.append(CTxIn(COutPoint(anchor_tx.txid_int, 1), b\"\"))\n+        anchor_spend.wit.vtxinwit.append(CTxInWitness())\n+        submit_res = self.nodes[0].submitpackage([anchor_tx.serialize().hex(), anchor_spend.serialize().hex()])\n+        assert_equal(submit_res[\"package_msg\"], \"success\")\n+        anchor_txid = anchor_tx.txid_hex\n+        anchor_spend_txid = anchor_spend.txid_hex\n+\n+        # Mine each tx in separate blocks\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_tx.serialize().hex()])\n+        anchor_tx_height = self.nodes[0].getblockcount()\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_spend.serialize().hex()])\n+\n+        # Mock time forward and generate some blocks to avoid rescanning of latest blocks\n+        self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+        self.generate(self.nodes[0], 10)\n+\n+        self.nodes[0].createwallet(wallet_name=\"anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor\")\n+        import_res = wallet.importdescriptors([{\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"}])\n+        assert_equal(import_res[0][\"success\"], True)\n+\n+        # The wallet should have no UTXOs, and not know of the anchor tx or its spend\n+        assert_equal(wallet.listunspent(), [])\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescanning the block containing the anchor so that listunspent will list the output\n+        wallet.rescanblockchain(0, anchor_tx_height)\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 0)\n+        wallet.gettransaction(anchor_txid)",
      "path": "test/functional/wallet_anchor.py",
      "position": 74,
      "original_position": 74,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 1cd57c67b10a771d2eb1c2324b241533c0b1f287 \"test: Add a test for anchor outputs in the wallet\"\r\n\r\nsupernit:\r\n\r\n```diff\r\nindex 1d1435145a..a47f3c6b3c 100755\r\n--- a/test/functional/wallet_anchor.py\r\n+++ b/test/functional/wallet_anchor.py\r\n@@ -71,13 +71,13 @@ class WalletAnchorTest(BitcoinTestFramework):\r\n         assert_equal(utxos[0][\"txid\"], anchor_txid)\r\n         assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\r\n         assert_equal(utxos[0][\"amount\"], 0)\r\n-        wallet.gettransaction(anchor_txid)\r\n+        assert wallet.gettransaction(anchor_txid)\r\n         assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\r\n \r\n         # Rescan the rest of the blockchain to see the anchor was spent\r\n         wallet.rescanblockchain()\r\n         assert_equal(wallet.listunspent(), [])\r\n-        wallet.gettransaction(anchor_spend_txid)\r\n+        assert wallet.gettransaction(anchor_spend_txid)\r\n```",
      "created_at": "2025-09-03T11:56:13Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318733172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318733172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318809119",
      "pull_request_review_id": 3180181577,
      "id": 2318809119,
      "node_id": "PRRC_kwDOABII586KNjgf",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_0_value_anchor_listunspent(self):\n+        self.log.info(\"Test that 0-value anchor outputs are detected as UTXOs\")\n+\n+        # Create an anchor output, and spend it\n+        sender = MiniWallet(self.nodes[0])\n+        anchor_tx = sender.create_self_transfer(fee_rate=0, version=3)[\"tx\"]\n+        anchor_tx.vout.append(CTxOut(0, PAY_TO_ANCHOR))\n+        anchor_spend = sender.create_self_transfer(version=3)[\"tx\"]\n+        anchor_spend.vin.append(CTxIn(COutPoint(anchor_tx.txid_int, 1), b\"\"))\n+        anchor_spend.wit.vtxinwit.append(CTxInWitness())\n+        submit_res = self.nodes[0].submitpackage([anchor_tx.serialize().hex(), anchor_spend.serialize().hex()])\n+        assert_equal(submit_res[\"package_msg\"], \"success\")\n+        anchor_txid = anchor_tx.txid_hex\n+        anchor_spend_txid = anchor_spend.txid_hex\n+\n+        # Mine each tx in separate blocks\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_tx.serialize().hex()])\n+        anchor_tx_height = self.nodes[0].getblockcount()\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_spend.serialize().hex()])\n+\n+        # Mock time forward and generate some blocks to avoid rescanning of latest blocks\n+        self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+        self.generate(self.nodes[0], 10)\n+\n+        self.nodes[0].createwallet(wallet_name=\"anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor\")\n+        import_res = wallet.importdescriptors([{\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"}])\n+        assert_equal(import_res[0][\"success\"], True)\n+\n+        # The wallet should have no UTXOs, and not know of the anchor tx or its spend\n+        assert_equal(wallet.listunspent(), [])\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescanning the block containing the anchor so that listunspent will list the output\n+        wallet.rescanblockchain(0, anchor_tx_height)\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 0)\n+        wallet.gettransaction(anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescan the rest of the blockchain to see the anchor was spent\n+        wallet.rescanblockchain()\n+        assert_equal(wallet.listunspent(), [])\n+        wallet.gettransaction(anchor_spend_txid)\n+\n+    def test_import_anchors(self):",
      "path": "test/functional/wallet_anchor.py",
      "position": 82,
      "original_position": 82,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 1cd57c67b10a771d2eb1c2324b241533c0b1f287 \"test: Add a test for anchor outputs in the wallet\"\r\n\r\nThere is a bit of duplication in all 3 tests. Maybe can remove this test altogether and put some of its functionality in the below test.\r\n```diff\r\ndiff --git a/test/functional/wallet_anchor.py b/test/functional/wallet_anchor.py\r\nindex 1d1435145a..e6872deba0 100755\r\n--- a/test/functional/wallet_anchor.py\r\n+++ b/test/functional/wallet_anchor.py\r\n@@ -79,40 +79,22 @@ class WalletAnchorTest(BitcoinTestFramework):\r\n         assert_equal(wallet.listunspent(), [])\r\n         wallet.gettransaction(anchor_spend_txid)\r\n \r\n-    def test_import_anchors(self):\r\n-        self.log.info(\"Test that descriptors for anchor outputs can only be imported to watchonly wallets\")\r\n-        self.nodes[0].createwallet(wallet_name=\"import_anchor_privkeys\", blank=True)\r\n-        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor_privkeys\")\r\n-        import_res = wallet.importdescriptors([\r\n-            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\r\n-            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\r\n-        ])\r\n-        assert_equal(import_res[0][\"success\"], False)\r\n-        assert_equal(import_res[1][\"success\"], False)\r\n-\r\n-        self.nodes[0].createwallet(wallet_name=\"import_anchor\", disable_private_keys=True)\r\n-        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor\")\r\n-        import_res = wallet.importdescriptors([\r\n-            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\r\n-            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\r\n-        ])\r\n-        assert_equal(import_res[0][\"success\"], True)\r\n-        assert_equal(import_res[1][\"success\"], True)\r\n-\r\n     def test_cannot_sign_anchors(self):\r\n         self.log.info(\"Test that the wallet cannot spend anchor outputs\")\r\n-        self.nodes[0].createwallet(wallet_name=\"anchor_spend\", disable_private_keys=True)\r\n-        wallet = self.nodes[0].get_wallet_rpc(\"anchor_spend\")\r\n-        import_res = wallet.importdescriptors([\r\n-            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\r\n-            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\r\n-        ])\r\n-        assert_equal(import_res[0][\"success\"], True)\r\n-        assert_equal(import_res[1][\"success\"], True)\r\n+        for disable_private_keys in [False, True]:\r\n+            self.nodes[0].createwallet(wallet_name=f\"anchor_spend_{disable_private_keys}\", disable_private_keys=disable_private_keys)\r\n+            wallet = self.nodes[0].get_wallet_rpc(f\"anchor_spend_{disable_private_keys}\")\r\n+            import_res = wallet.importdescriptors([\r\n+                {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\r\n+                {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\r\n+            ])\r\n+            assert_equal(import_res[0][\"success\"], disable_private_keys)\r\n+            assert_equal(import_res[1][\"success\"], disable_private_keys)\r\n \r\n         anchor_txid = self.default_wallet.sendtoaddress(ANCHOR_ADDRESS, 1)\r\n         self.generate(self.nodes[0], 1)\r\n \r\n+        wallet = self.nodes[0].get_wallet_rpc(f\"anchor_spend_True\")\r\n         utxos = wallet.listunspent()\r\n         assert_equal(len(utxos), 1)\r\n         assert_equal(utxos[0][\"txid\"], anchor_txid)\r\n@@ -126,7 +108,6 @@ class WalletAnchorTest(BitcoinTestFramework):\r\n     def run_test(self):\r\n         self.default_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\r\n         self.test_0_value_anchor_listunspent()\r\n-        self.test_import_anchors()\r\n         self.test_cannot_sign_anchors()\r\n \r\n if __name__ == '__main__':\r\n\r\n```",
      "created_at": "2025-09-03T12:26:16Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318809119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318809119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318869615",
      "pull_request_review_id": 3180181577,
      "id": 2318869615,
      "node_id": "PRRC_kwDOABII586KNyRv",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_0_value_anchor_listunspent(self):\n+        self.log.info(\"Test that 0-value anchor outputs are detected as UTXOs\")\n+\n+        # Create an anchor output, and spend it\n+        sender = MiniWallet(self.nodes[0])\n+        anchor_tx = sender.create_self_transfer(fee_rate=0, version=3)[\"tx\"]\n+        anchor_tx.vout.append(CTxOut(0, PAY_TO_ANCHOR))\n+        anchor_spend = sender.create_self_transfer(version=3)[\"tx\"]\n+        anchor_spend.vin.append(CTxIn(COutPoint(anchor_tx.txid_int, 1), b\"\"))\n+        anchor_spend.wit.vtxinwit.append(CTxInWitness())\n+        submit_res = self.nodes[0].submitpackage([anchor_tx.serialize().hex(), anchor_spend.serialize().hex()])\n+        assert_equal(submit_res[\"package_msg\"], \"success\")\n+        anchor_txid = anchor_tx.txid_hex\n+        anchor_spend_txid = anchor_spend.txid_hex\n+\n+        # Mine each tx in separate blocks\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_tx.serialize().hex()])\n+        anchor_tx_height = self.nodes[0].getblockcount()\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_spend.serialize().hex()])\n+\n+        # Mock time forward and generate some blocks to avoid rescanning of latest blocks\n+        self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+        self.generate(self.nodes[0], 10)\n+\n+        self.nodes[0].createwallet(wallet_name=\"anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor\")\n+        import_res = wallet.importdescriptors([{\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"}])\n+        assert_equal(import_res[0][\"success\"], True)\n+\n+        # The wallet should have no UTXOs, and not know of the anchor tx or its spend\n+        assert_equal(wallet.listunspent(), [])\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescanning the block containing the anchor so that listunspent will list the output\n+        wallet.rescanblockchain(0, anchor_tx_height)\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 0)\n+        wallet.gettransaction(anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescan the rest of the blockchain to see the anchor was spent\n+        wallet.rescanblockchain()\n+        assert_equal(wallet.listunspent(), [])\n+        wallet.gettransaction(anchor_spend_txid)\n+\n+    def test_import_anchors(self):\n+        self.log.info(\"Test that descriptors for anchor outputs can only be imported to watchonly wallets\")\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor_privkeys\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor_privkeys\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], False)\n+        assert_equal(import_res[1][\"success\"], False)\n+\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+    def test_cannot_sign_anchors(self):\n+        self.log.info(\"Test that the wallet cannot spend anchor outputs\")\n+        self.nodes[0].createwallet(wallet_name=\"anchor_spend\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor_spend\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+        anchor_txid = self.default_wallet.sendtoaddress(ANCHOR_ADDRESS, 1)\n+        self.generate(self.nodes[0], 1)\n+\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 1)\n+\n+        assert_raises_rpc_error(-4, \"Missing solving data for estimating transaction size\", wallet.send, [{self.default_wallet.getnewaddress(): 0.9999}])\n+        assert_raises_rpc_error(-4, \"Error: Private keys are disabled for this wallet\", wallet.sendtoaddress, self.default_wallet.getnewaddress(), 0.9999)\n+        assert_raises_rpc_error(-4, \"Unable to determine the size of the transaction, the wallet contains unsolvable descriptors\", wallet.sendall, recipients=[self.default_wallet.getnewaddress()], inputs=utxos)",
      "path": "test/functional/wallet_anchor.py",
      "position": 124,
      "original_position": 124,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "1cd57c67b10a771d2eb1c2324b241533c0b1f287",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/1cd57c67b10a771d2eb1c2324b241533c0b1f287 \"test: Add a test for anchor outputs in the wallet\"\r\n\r\nWhile passing the `inputs` in this RPC is fine, I feel another frequently used way of calling `sendall` RPC could be to not pass the `inputs` in the request, in which case the RPC throws `Internal bug detected`.\r\n\r\n```zsh\r\ntest_framework.authproxy.JSONRPCException: Internal bug detected: output.input_bytes > 0\r\nwallet/rpc/spend.cpp:1524 (operator())\r\nBitcoin Core v29.99.0-69eeb11bc585\r\nPlease report this issue here: https://github.com/bitcoin/bitcoin/issues\r\n (-1)\r\n``` \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba0b4304eceeec52eb3ffd2e7f8bb831ba1ec278/src/wallet/rpc/spend.cpp#L1524\r\n\r\nOne way to resolve (if the filtering is not done in AvailableCoins instead)\r\n```diff\r\ndiff --git a/src/wallet/rpc/spend.cpp b/src/wallet/rpc/spend.cpp\r\nindex 45c85af9b6..d00547a897 100644\r\n--- a/src/wallet/rpc/spend.cpp\r\n+++ b/src/wallet/rpc/spend.cpp\r\n@@ -1521,7 +1521,6 @@ RPCHelpMan sendall()\r\n                 CoinFilterParams coins_params;\r\n                 coins_params.min_amount = 0;\r\n                 for (const COutput& output : AvailableCoins(*pwallet, &coin_control, fee_rate, coins_params).All()) {\r\n-                    CHECK_NONFATAL(output.input_bytes > 0);\r\n                     if (send_max && fee_rate.GetFee(output.input_bytes) > output.txout.nValue) {\r\n                         continue;\r\n                     }\r\ndiff --git a/test/functional/wallet_anchor.py b/test/functional/wallet_anchor.py\r\nindex 1d1435145a..49ef34c764 100755\r\n--- a/test/functional/wallet_anchor.py\r\n+++ b/test/functional/wallet_anchor.py\r\n@@ -122,6 +122,7 @@ class WalletAnchorTest(BitcoinTestFramework):\r\n         assert_raises_rpc_error(-4, \"Missing solving data for estimating transaction size\", wallet.send, [{self.default_wallet.getnewaddress(): 0.9999}])\r\n         assert_raises_rpc_error(-4, \"Error: Private keys are disabled for this wallet\", wallet.sendtoaddress, self.default_wallet.getnewaddress(), 0.9999)\r\n         assert_raises_rpc_error(-4, \"Unable to determine the size of the transaction, the wallet contains unsolvable descriptors\", wallet.sendall, recipients=[self.default_wallet.getnewaddress()], inputs=utxos)\r\n+        assert_raises_rpc_error(-4, \"Unable to determine the size of the transaction, the wallet contains unsolvable descriptors\", wallet.sendall, recipients=[self.default_wallet.getnewaddress()])\r\n \r\n     def run_test(self):\r\n         self.default_wallet = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\r\n``` ",
      "created_at": "2025-09-03T12:48:00Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318869615",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318869615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318929377",
      "pull_request_review_id": 3180181577,
      "id": 2318929377,
      "node_id": "PRRC_kwDOABII586KOA3h",
      "diff_hunk": "@@ -195,7 +195,9 @@ void CachedTxGetAmounts(const CWallet& wallet, const CWalletTx& wtx,\n \n bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx)\n {\n-    return (CachedTxGetDebit(wallet, wtx, /*avoid_reuse=*/false) > 0);\n+    if (wtx.m_cached_from_me.has_value()) return wtx.m_cached_from_me.value();\n+    wtx.m_cached_from_me = wallet.IsFromMe(*wtx.tx);\n+    return wtx.m_cached_from_me.value();",
      "path": "src/wallet/receive.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/69eeb11bc585e92a3b56811c3251f13dba05aa5f \"wallet: Add m_cached_from_me to cache \"from me\" status\"\r\n\r\nnit to shorten:\r\n```diff\r\ndiff --git a/src/wallet/receive.cpp b/src/wallet/receive.cpp\r\nindex 4ed98c6d55..13a25b3632 100644\r\n--- a/src/wallet/receive.cpp\r\n+++ b/src/wallet/receive.cpp\r\n@@ -195,8 +195,9 @@ void CachedTxGetAmounts(const CWallet& wallet, const CWalletTx& wtx,\r\n \r\n bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx)\r\n {\r\n-    if (wtx.m_cached_from_me.has_value()) return wtx.m_cached_from_me.value();\r\n-    wtx.m_cached_from_me = wallet.IsFromMe(*wtx.tx);\r\n+    if (!wtx.m_cached_from_me.has_value()) {\r\n+        wtx.m_cached_from_me = wallet.IsFromMe(*wtx.tx);\r\n+    }\r\n     return wtx.m_cached_from_me.value();\r\n }\r\n```",
      "created_at": "2025-09-03T13:08:43Z",
      "updated_at": "2025-09-03T13:12:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318929377",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318929377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": 198,
      "original_start_line": 198,
      "start_side": "RIGHT",
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318999432",
      "pull_request_review_id": 3180700382,
      "id": 2318999432,
      "node_id": "PRRC_kwDOABII586KOR-I",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+import time\n+\n+from test_framework.blocktools import MAX_FUTURE_BLOCK_TIME\n+from test_framework.descriptors import descsum_create\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script_util import PAY_TO_ANCHOR\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+ANCHOR_ADDRESS = \"bcrt1pfeesnyr2tx\"\n+\n+class WalletAnchorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def test_0_value_anchor_listunspent(self):\n+        self.log.info(\"Test that 0-value anchor outputs are detected as UTXOs\")\n+\n+        # Create an anchor output, and spend it\n+        sender = MiniWallet(self.nodes[0])\n+        anchor_tx = sender.create_self_transfer(fee_rate=0, version=3)[\"tx\"]\n+        anchor_tx.vout.append(CTxOut(0, PAY_TO_ANCHOR))\n+        anchor_spend = sender.create_self_transfer(version=3)[\"tx\"]\n+        anchor_spend.vin.append(CTxIn(COutPoint(anchor_tx.txid_int, 1), b\"\"))\n+        anchor_spend.wit.vtxinwit.append(CTxInWitness())\n+        submit_res = self.nodes[0].submitpackage([anchor_tx.serialize().hex(), anchor_spend.serialize().hex()])\n+        assert_equal(submit_res[\"package_msg\"], \"success\")\n+        anchor_txid = anchor_tx.txid_hex\n+        anchor_spend_txid = anchor_spend.txid_hex\n+\n+        # Mine each tx in separate blocks\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_tx.serialize().hex()])\n+        anchor_tx_height = self.nodes[0].getblockcount()\n+        self.generateblock(self.nodes[0], sender.get_address(), [anchor_spend.serialize().hex()])\n+\n+        # Mock time forward and generate some blocks to avoid rescanning of latest blocks\n+        self.nodes[0].setmocktime(int(time.time()) + MAX_FUTURE_BLOCK_TIME + 1)\n+        self.generate(self.nodes[0], 10)\n+\n+        self.nodes[0].createwallet(wallet_name=\"anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor\")\n+        import_res = wallet.importdescriptors([{\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"}])\n+        assert_equal(import_res[0][\"success\"], True)\n+\n+        # The wallet should have no UTXOs, and not know of the anchor tx or its spend\n+        assert_equal(wallet.listunspent(), [])\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescanning the block containing the anchor so that listunspent will list the output\n+        wallet.rescanblockchain(0, anchor_tx_height)\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 0)\n+        wallet.gettransaction(anchor_txid)\n+        assert_raises_rpc_error(-5, \"Invalid or non-wallet transaction id\", wallet.gettransaction, anchor_spend_txid)\n+\n+        # Rescan the rest of the blockchain to see the anchor was spent\n+        wallet.rescanblockchain()\n+        assert_equal(wallet.listunspent(), [])\n+        wallet.gettransaction(anchor_spend_txid)\n+\n+    def test_import_anchors(self):\n+        self.log.info(\"Test that descriptors for anchor outputs can only be imported to watchonly wallets\")\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor_privkeys\", blank=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor_privkeys\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], False)\n+        assert_equal(import_res[1][\"success\"], False)\n+\n+        self.nodes[0].createwallet(wallet_name=\"import_anchor\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"import_anchor\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+    def test_cannot_sign_anchors(self):\n+        self.log.info(\"Test that the wallet cannot spend anchor outputs\")\n+        self.nodes[0].createwallet(wallet_name=\"anchor_spend\", disable_private_keys=True)\n+        wallet = self.nodes[0].get_wallet_rpc(\"anchor_spend\")\n+        import_res = wallet.importdescriptors([\n+            {\"desc\": descsum_create(f\"addr({ANCHOR_ADDRESS})\"), \"timestamp\": \"now\"},\n+            {\"desc\": descsum_create(f\"raw({PAY_TO_ANCHOR.hex()})\"), \"timestamp\": \"now\"}\n+        ])\n+        assert_equal(import_res[0][\"success\"], True)\n+        assert_equal(import_res[1][\"success\"], True)\n+\n+        anchor_txid = self.default_wallet.sendtoaddress(ANCHOR_ADDRESS, 1)\n+        self.generate(self.nodes[0], 1)\n+\n+        utxos = wallet.listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(utxos[0][\"txid\"], anchor_txid)\n+        assert_equal(utxos[0][\"address\"], ANCHOR_ADDRESS)\n+        assert_equal(utxos[0][\"amount\"], 1)\n+\n+        assert_raises_rpc_error(-4, \"Missing solving data for estimating transaction size\", wallet.send, [{self.default_wallet.getnewaddress(): 0.9999}])\n+        assert_raises_rpc_error(-4, \"Error: Private keys are disabled for this wallet\", wallet.sendtoaddress, self.default_wallet.getnewaddress(), 0.9999)\n+        assert_raises_rpc_error(-4, \"Unable to determine the size of the transaction, the wallet contains unsolvable descriptors\", wallet.sendall, recipients=[self.default_wallet.getnewaddress()], inputs=utxos)",
      "path": "test/functional/wallet_anchor.py",
      "position": 124,
      "original_position": 124,
      "commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "original_commit_id": "69eeb11bc585e92a3b56811c3251f13dba05aa5f",
      "in_reply_to_id": 2317552470,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this particular error is appropriately specific. The error in `sendtoaddress`, while easier to parse, is thrown because it also tries to sign the transaction, though at an earlier stage in the RPC flow. Perhaps this particular test can avoid testing for this different error because it is conspicuous.",
      "created_at": "2025-09-03T13:33:21Z",
      "updated_at": "2025-09-03T13:33:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33268#discussion_r2318999432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2318999432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33268"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    }
  ]
}