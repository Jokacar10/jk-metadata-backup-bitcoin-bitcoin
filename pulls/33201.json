{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201",
    "id": 2749590867,
    "node_id": "PR_kwDOABII586j421T",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33201",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33201.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33201.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cd86ddaa1dac104415ab16cc8068fd50d068c12f",
    "number": 33201,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add functional test for IPC interface",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This adds support to the functional test framework to run the multiprocess `bitcoin-node` binary, and then tests it in a new `interface_ipc.py` functional test through the `pycapnp` module.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-08-15T20:10:28Z",
    "updated_at": "2025-08-19T09:29:39Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "9143b294af3bcd5ef4428ce269f36706909bd5ad",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202508_ipc_test",
      "ref": "202508_ipc_test",
      "sha": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 90,
        "watchers_count": 90,
        "size": 271787,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-18T21:47:47Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2025-08-07T03:02:13Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f58de8749e94c4f6d5ab4a13d098ccfc291336c7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37649,
        "stargazers_count": 85085,
        "watchers_count": 85085,
        "size": 291328,
        "default_branch": "master",
        "open_issues_count": 753,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-18T19:19:25Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-19T08:41:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 274,
    "deletions": 23,
    "changed_files": 15,
    "commits": 5,
    "review_comments": 38,
    "comments": 12
  },
  "events": [
    {
      "event": "commented",
      "id": 3192603021,
      "node_id": "IC_kwDOABII586-S0GN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3192603021",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T20:10:34Z",
      "updated_at": "2025-08-18T21:47:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33201.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3192707525), [Sjors](https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3193457612) |\n| Stale ACK | [josibake](https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3128923018), [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3129165105) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33142](https://github.com/bitcoin/bitcoin/pull/33142) (test: Run bench sanity checks in parallel with functional tests by maflcko)\n* [#32297](https://github.com/bitcoin/bitcoin/pull/32297) (bitcoin-cli: Add -ipcconnect option by ryanofsky)\n* [#31802](https://github.com/bitcoin/bitcoin/pull/31802) (Add bitcoin-{node,gui} to release binaries for IPC by Sjors)\n* [#31723](https://github.com/bitcoin/bitcoin/pull/31723) (qa debug: Add --debug_runs/-waitfordebugger [DRAFT] by hodlinator)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- git clone https://github.com/capnproto/pycapnp.git` -> git clone https://github.com/capnproto/pycapnp.git [remove stray backtick]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3192603021",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19181379810,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3TKDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19181379810",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5050855e5530b23c918cd6ae51571e95d613c5b7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5050855e5530b23c918cd6ae51571e95d613c5b7",
      "created_at": "2025-08-15T20:14:07Z"
    },
    {
      "event": "labeled",
      "id": 19181382564,
      "node_id": "LE_lADOABII587GQholzwAAAAR3TKuk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19181382564",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T20:14:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3192610057,
      "node_id": "IC_kwDOABII586-S10J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3192610057",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T20:14:21Z",
      "updated_at": "2025-08-15T20:14:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/48194727681</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by errors detected during the linting process, specifically from `ruff` and mypy, indicating code issues and missing module imports.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3192610057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19181535501,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3TwEN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19181535501",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "27bd67857dd0e145d7539b949df2b7aaa53c6b1b",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/27bd67857dd0e145d7539b949df2b7aaa53c6b1b",
      "created_at": "2025-08-15T20:24:13Z"
    },
    {
      "event": "commented",
      "id": 3192707525,
      "node_id": "IC_kwDOABII586-TNnF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3192707525",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T20:46:14Z",
      "updated_at": "2025-08-15T20:46:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. 27bd67857dd0e145d7539b949df2b7aaa53c6b1b is really nice and simpler than I would have expected.\r\n\r\nIn case it's useful #30437 adds an [interface_ipc_mining.py](https://github.com/ryanofsky/bitcoin/blob/pr/mine/test/functional/interface_ipc_mining.py) test, and #32297 adds an [interface_ipc_cli.py](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-cli/test/functional/interface_ipc_cli.py) test which are similar to this test and have similar test framework updates. Code from those PRs might be useful here or vice versa.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3192707525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19182984730,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3ZR4a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19182984730",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c6b5a49c881405917a2ca5eee73de36634035d52",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/c6b5a49c881405917a2ca5eee73de36634035d52",
      "created_at": "2025-08-15T22:34:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19183083953,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3ZqGx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183083953",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "588fd5049555c34c49d945ca99bc00e02da59ac2",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/588fd5049555c34c49d945ca99bc00e02da59ac2",
      "created_at": "2025-08-15T22:45:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19183447149,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3bCxt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183447149",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b4cb8f648902e19a411bb51b0d3fe900c60e13b5",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b4cb8f648902e19a411bb51b0d3fe900c60e13b5",
      "created_at": "2025-08-15T23:53:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19183534974,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3bYN-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183534974",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b87de46c7aace9429e5cb38319f78f0dbbe3c052",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b87de46c7aace9429e5cb38319f78f0dbbe3c052",
      "created_at": "2025-08-16T00:08:04Z"
    },
    {
      "event": "commented",
      "id": 3193457612,
      "node_id": "IC_kwDOABII586-WEvM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3193457612",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-16T07:06:46Z",
      "updated_at": "2025-08-16T07:07:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nSo far I achieved test coverage for the [Mining interface](https://github.com/bitcoin/bitcoin/blob/master/src/interfaces/mining.h) with a combination of [unit tests](https://github.com/bitcoin/bitcoin/blob/57e8f34fe20620b3350ca1f0fa5c7d8d3a06be82/src/test/miner_tests.cpp#L725-L776) and by having RPC methods such as `getblocktemplate` use the interface internally. But the latter has side-effects (see #32547) and could be avoided once we have enough direct coverage. \r\n\r\nCentOS CI fails with `capnp.lib.capnp.KjException: mp/proxy.capnp:6: failed: Import failed: /capnp/c++.capn` https://cirrus-ci.com/task/4824947408764928?logs=ci#L3320",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3193457612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "reviewed",
      "id": 3125717125,
      "node_id": "PRR_kwDOABII5866TqiF",
      "url": null,
      "actor": null,
      "commit_id": "b87de46c7aace9429e5cb38319f78f0dbbe3c052",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-16T07:09:20Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3125717125",
      "submitted_at": "2025-08-16T07:09:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19186655026,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3nR8y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19186655026",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "88c21ed07c0aeb0b0d551e42145a9b8b8620f77d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/88c21ed07c0aeb0b0d551e42145a9b8b8620f77d",
      "created_at": "2025-08-16T13:08:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19186671497,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3nV-J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19186671497",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6bfad6a1daff50d9089ff4e0179824e2c2ac241",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/e6bfad6a1daff50d9089ff4e0179824e2c2ac241",
      "created_at": "2025-08-16T13:13:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19186723728,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3niuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19186723728",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f5b8da21838d3e58512efb59829cc779c4a08888",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/f5b8da21838d3e58512efb59829cc779c4a08888",
      "created_at": "2025-08-16T13:28:48Z"
    },
    {
      "event": "unlabeled",
      "id": 19186927560,
      "node_id": "UNLE_lADOABII587GQholzwAAAAR3oUfI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19186927560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-16T14:31:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19187017922,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3oqjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19187017922",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1aa7cf5e887f9cc659cb35aa9f2b7f1a4aef169e",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/1aa7cf5e887f9cc659cb35aa9f2b7f1a4aef169e",
      "created_at": "2025-08-16T15:01:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19188794864,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3vcXw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19188794864",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0637aa43dc013f690d959a95ed9369d76d4527c6",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0637aa43dc013f690d959a95ed9369d76d4527c6",
      "created_at": "2025-08-16T22:17:22Z"
    },
    {
      "event": "labeled",
      "id": 19188941981,
      "node_id": "LE_lADOABII587GQholzwAAAAR3wASd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19188941981",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-16T23:12:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19189507018,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3yKPK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19189507018",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "74fc236dab438d6f970eb42e58fff8e5198a2f7a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/74fc236dab438d6f970eb42e58fff8e5198a2f7a",
      "created_at": "2025-08-17T02:31:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19189552167,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR3yVQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19189552167",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "created_at": "2025-08-17T02:53:39Z"
    },
    {
      "event": "unlabeled",
      "id": 19189689510,
      "node_id": "UNLE_lADOABII587GQholzwAAAAR3y2ym",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19189689510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T03:55:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3126216095,
      "node_id": "PRR_kwDOABII5866VkWf",
      "url": null,
      "actor": null,
      "commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-17T07:17:41Z",
      "author_association": "MEMBER",
      "body": "On macOS 15.6 with capnp 1.2.0 installed via Homebrew and Python 3.10.14 installed via PyEnv I get:\r\n\r\n```\r\npip3 install pycapnp\r\n...\r\nSuccessfully installed pycapnp-2.0.0\r\n\r\ncmake -B build\r\ncmake --build build\r\n...\r\n\r\n% build/test/functional/interface_ipc.py\r\n2025-08-17T07:05:49.321522Z TestFramework (INFO): PRNG seed is: 6039316184654231320\r\n2025-08-17T07:05:49.322566Z TestFramework (INFO): Initializing test directory /var/folders/8p/qqdl2fsj7rd6q096jtmsfydc0000gn/T/bitcoin_func_test_z3jtr5u1\r\n2025-08-17T07:05:50.595292Z TestFramework (ERROR): Unexpected exception\r\nTraceback (most recent call last):\r\n  File \"/Users/sjors/dev/bitcoin/test/functional/test_framework/test_framework.py\", line 200, in main\r\n    self.run_test()\r\n  File \"/Users/sjors/dev/bitcoin/build/test/functional/interface_ipc.py\", line 82, in run_test\r\n    self.run_echo_test()\r\n  File \"/Users/sjors/dev/bitcoin/build/test/functional/interface_ipc.py\", line 63, in run_echo_test\r\n    asyncio.run(capnp.run(async_routine()))\r\n  File \"/Users/sjors/.pyenv/versions/3.10.14/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/Users/sjors/.pyenv/versions/3.10.14/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\r\n    return future.result()\r\n  File \"capnp/lib/capnp.pyx\", line 1944, in run\r\n  File \"capnp/lib/capnp.pyx\", line 1945, in capnp.lib.capnp.run\r\n  File \"/Users/sjors/dev/bitcoin/build/test/functional/interface_ipc.py\", line 57, in async_routine\r\n    init, ctx = await self.make_capnp_init_ctx()\r\n  File \"/Users/sjors/dev/bitcoin/build/test/functional/interface_ipc.py\", line 45, in make_capnp_init_ctx\r\n    modules = self.capnp_modules()\r\n  File \"/Users/sjors/dev/bitcoin/build/test/functional/interface_ipc.py\", line 38, in capnp_modules\r\n    \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\r\n  File \"capnp/lib/capnp.pyx\", line 4385, in capnp.lib.capnp.load\r\n  File \"capnp/lib/capnp.pyx\", line 3574, in capnp.lib.capnp.SchemaParser.load\r\ncapnp.lib.capnp.KjException: mp/proxy.capnp:6: failed: Import failed: /capnp/c++.capnp\r\n```\r\n\r\nMaybe related: https://github.com/capnproto/pycapnp/issues/377 (though `pycapnp-1.3.0` doesn't work at all, since it doesn't have the `run` method)\r\n\r\nSuggested test doc improvement:\r\n\r\n```diff\r\ndiff --git a/test/README.md b/test/README.md\r\nindex 37f2c07217..3b2979cdf6 100644\r\n--- a/test/README.md\r\n+++ b/test/README.md\r\n@@ -34,6 +34,9 @@ The ZMQ functional test requires a python ZMQ library. To install it:\r\n - on Unix, run `sudo apt-get install python3-zmq`\r\n - on mac OS, run `pip3 install pyzmq`\r\n\r\n+The IPC functional test requires a python IPC library. To install it:\r\n+\r\n+- `pip3 install pycapnp`\r\n\r\n On Windows the `PYTHONUTF8` environment variable must be set to 1:\r\n```\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3126216095",
      "submitted_at": "2025-08-17T07:08:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19191296810,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR34_Mq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19191296810",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "created_at": "2025-08-17T13:31:38Z"
    },
    {
      "event": "commented",
      "id": 3194390246,
      "node_id": "IC_kwDOABII586-Zobm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3194390246",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T13:33:01Z",
      "updated_at": "2025-08-17T13:33:01Z",
      "author_association": "MEMBER",
      "body": "Rebased on #33190, added instructions to `test/README.md`, added extra paths for finding `capnp/c++.capnp`, and expanded the tests to cover more methods.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3194390246",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "commented",
      "id": 3194458417,
      "node_id": "IC_kwDOABII586-Z5Ex",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3194458417",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:30:18Z",
      "updated_at": "2025-08-17T15:30:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n> On macOS 15.6 with capnp 1.2.0 installed via Homebrew and Python 3.10.14 installed via PyEnv I get:\r\n> \r\n> ```\r\n> % build/test/functional/interface_ipc.py\r\n> 2025-08-17T07:05:49.321522Z TestFramework (INFO): PRNG seed is: 6039316184654231320\r\n> 2025-08-17T07:05:49.322566Z TestFramework (INFO): Initializing test directory \r\n> ```\r\n> \r\n> Maybe related: [capnproto/pycapnp#377](https://github.com/capnproto/pycapnp/issues/377) (though `pycapnp-1.3.0` doesn't work at all, since it doesn't have the `run` method)\r\n> \r\n\r\nExperiencing related errors in a nix-shell on macos (the change as suggested by Sjors did not fix it) \r\n\r\n```shell\r\nbuild/test/functional/test_runner.py -j8 interface_ipc.py\r\nTemporary test directory at /private/tmp/nix-shell-46943-2562808985/test_runner_₿_🏃_20250817_171423\r\nRemaining jobs: [interface_ipc.py]\r\n1/1 - interface_ipc.py failed, Duration: 1 s\r\n\r\nstdout:\r\n2025-08-17T15:14:23.339367Z TestFramework (INFO): PRNG seed is: 8709597786033281775\r\n2025-08-17T15:14:23.339826Z TestFramework (INFO): Initializing test directory /private/tmp/nix-shell-46943-2562808985/test_runner_₿_🏃_20250817_171423/interface_ipc_0\r\n2025-08-17T15:14:24.140276Z TestFramework (INFO): Running echo test\r\n\r\n\r\nstderr:\r\nlibc++abi: terminating due to uncaught exception of type kj::ExceptionImpl: mp/proxy.capnp:6: failed: Import failed: /capnp/c++.capnp\r\n\r\nTEST             | STATUS    | DURATION\r\n\r\ninterface_ipc.py | ✖ Failed  | 1 s\r\n```\r\n\r\nlocation of `c++.capnp`: \r\n`/nix/store/qfb31v9la93rp92krx05ndzm5nidsrzd-capnproto-1.2.0/include/capnp`",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3194458417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "commented",
      "id": 3194459743,
      "node_id": "IC_kwDOABII586-Z5Zf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3194459743",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:32:33Z",
      "updated_at": "2025-08-17T15:32:51Z",
      "author_association": "MEMBER",
      "body": "@janb84 Yeah, the include paths used in the python test are a guess. It'd be nice to pass through the location of the capnp installation from the build system to the tests, but I don't know how.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3194459743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "mentioned",
      "id": 19191697748,
      "node_id": "MEE_lADOABII587GQholzwAAAAR36hFU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19191697748",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:33:12Z"
    },
    {
      "event": "subscribed",
      "id": 19191697759,
      "node_id": "SE_lADOABII587GQholzwAAAAR36hFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19191697759",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:33:12Z"
    },
    {
      "event": "commented",
      "id": 3194462270,
      "node_id": "IC_kwDOABII586-Z6A-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3194462270",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:37:10Z",
      "updated_at": "2025-08-17T15:37:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @janb84 Yeah, the include paths used in the python test are a guess. It'd be nice to pass through the location of the capnp installation from the build system to the tests, but I don't know how.\r\n\r\nI'm also looking into it to get it to work, just a heads-up that there is (possibly) some trouble on nixos/ nix-shells ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3194462270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "mentioned",
      "id": 19191710617,
      "node_id": "MEE_lADOABII587GQholzwAAAAR36kOZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19191710617",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:37:11Z"
    },
    {
      "event": "subscribed",
      "id": 19191710622,
      "node_id": "SE_lADOABII587GQholzwAAAAR36kOe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19191710622",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-17T15:37:11Z"
    },
    {
      "event": "reviewed",
      "id": 3128857140,
      "node_id": "PRR_kwDOABII5866fpI0",
      "url": null,
      "actor": null,
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T15:42:20Z",
      "author_association": "MEMBER",
      "body": "Approach ACK \r\n\r\nFirst pass initial comments",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3128857140",
      "submitted_at": "2025-08-18T15:42:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "reviewed",
      "id": 3128923018,
      "node_id": "PRR_kwDOABII5866f5OK",
      "url": null,
      "actor": null,
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T15:51:02Z",
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/33201/commits/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nThanks for picking this up! I think the docs and multiplatform support still need a bit of work but that can be tackled in a follow-up(s), considering the main benefit I see here is getting a basic functional test in place that can be extended later.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3128923018",
      "submitted_at": "2025-08-18T15:51:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "review_requested",
      "id": 19206953378,
      "node_id": "RRE_lADOABII587GQholzwAAAAR40tmi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19206953378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T15:51:07Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19206953656,
      "node_id": "RRE_lADOABII587GQholzwAAAAR40tq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19206953656",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T15:51:08Z",
      "requested_reviewer": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 19206953894,
      "node_id": "RRE_lADOABII587GQholzwAAAAR40tum",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19206953894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T15:51:09Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 3197489074,
      "node_id": "IC_kwDOABII586-lc-y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3197489074",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T15:53:13Z",
      "updated_at": "2025-08-18T15:53:13Z",
      "author_association": "MEMBER",
      "body": "> the include paths used in the python test are a guess. It'd be nice to pass through the location of the capnp installation from the build system to the tests\r\n\r\nI took a stab at this, ended up being harder than expected and I don't yet have something that works. But I think this is the correct longterm approach, instead of trying to guess in the functional test itself.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3197489074",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "reviewed",
      "id": 3129015509,
      "node_id": "PRR_kwDOABII5866gPzV",
      "url": null,
      "actor": null,
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T16:08:52Z",
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3129015509",
      "submitted_at": "2025-08-18T16:08:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "reviewed",
      "id": 3129165105,
      "node_id": "PRR_kwDOABII5866g0Ux",
      "url": null,
      "actor": null,
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T16:51:08Z",
      "author_association": "MEMBER",
      "body": "ACK 3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3129165105",
      "submitted_at": "2025-08-18T16:51:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "referenced",
      "id": 19207997947,
      "node_id": "REFE_lADOABII587GQholzwAAAAR44sn7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19207997947",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d0103472f1d691e8e1a73049ba85163e103ae28",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6d0103472f1d691e8e1a73049ba85163e103ae28",
      "created_at": "2025-08-18T16:52:07Z"
    },
    {
      "event": "referenced",
      "id": 19208069571,
      "node_id": "REFE_lADOABII587GQholzwAAAAR44-HD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19208069571",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c17b20d786de38e05d9340a38cab1d44e806374d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c17b20d786de38e05d9340a38cab1d44e806374d",
      "created_at": "2025-08-18T16:56:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19208386475,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR46Ler",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19208386475",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f1491db0242e1d06edd960a6c003c7522e66c0ea",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/f1491db0242e1d06edd960a6c003c7522e66c0ea",
      "created_at": "2025-08-18T17:17:05Z"
    },
    {
      "event": "reviewed",
      "id": 3129221960,
      "node_id": "PRR_kwDOABII5866hCNI",
      "url": null,
      "actor": null,
      "commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-18T17:17:10Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3129221960",
      "submitted_at": "2025-08-18T17:17:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19208431471,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR46Wdv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19208431471",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2174f515dfddeab90e8466d6a92e8d6ca7b2dacd",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/2174f515dfddeab90e8466d6a92e8d6ca7b2dacd",
      "created_at": "2025-08-18T17:20:16Z"
    },
    {
      "event": "labeled",
      "id": 19208434641,
      "node_id": "LE_lADOABII587GQholzwAAAAR46XPR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19208434641",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T17:20:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3197789781,
      "node_id": "IC_kwDOABII586-mmZV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3197789781",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T17:20:31Z",
      "updated_at": "2025-08-18T17:20:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/48327091424</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by errors detected in the lint test due to unused imports and variables in the Python code.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3197789781",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "commented",
      "id": 3197934560,
      "node_id": "IC_kwDOABII586-nJvg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3197934560",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T18:13:33Z",
      "updated_at": "2025-08-18T18:13:33Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/actions/runs/17047602183/job/48327342413?pr=33201#step:8:3379:\r\n```bash\r\nstderr:\r\nTraceback (most recent call last):\r\n  File \"/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-aarch64-apple-darwin23.6.0/test/functional/interface_ipc.py\", line 161, in <module>\r\n    IPCInterfaceTest(__file__).main()\r\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^\r\n  File \"/Users/runner/work/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 186, in __init__\r\n    self.set_test_params()\r\n    ~~~~~~~~~~~~~~~~~~~~^^\r\n  File \"/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-aarch64-apple-darwin23.6.0/test/functional/interface_ipc.py\", line 40, in set_test_params\r\n    self.capnp_modules = self.load_capnp_modules()\r\n                         ~~~~~~~~~~~~~~~~~~~~~~~^^\r\n  File \"/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-aarch64-apple-darwin23.6.0/test/functional/interface_ipc.py\", line 23, in load_capnp_modules\r\n    cpp_capnp_dir = Path(capnp.__path__[0]).parent\r\n                         ^^^^^\r\nNameError: name 'capnp' is not defined\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3197934560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4OWY3MTk1YjJhY2JjM2U1MGVlNzViMmI1YTg4YWYwNThjZjdiMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/789f7195b2acbc3e50ee75b2b5a88af058cf7b14",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/789f7195b2acbc3e50ee75b2b5a88af058cf7b14",
      "tree": {
        "sha": "3f289aa6f5b2f31a6df75217c75973badcdd1efe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f289aa6f5b2f31a6df75217c75973badcdd1efe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f58de8749e94c4f6d5ab4a13d098ccfc291336c7",
          "sha": "f58de8749e94c4f6d5ab4a13d098ccfc291336c7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f58de8749e94c4f6d5ab4a13d098ccfc291336c7"
        }
      ],
      "message": "test: add is_ipc_enabled() and skip_if_no_ipc() functions\n\nExpose ENABLE_IPC build option to function tests so new tests for bitcoin-mine\nin #30437 and bitcoin-cli in #32297 can test IPC-only features.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-18T21:31:53Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-11-27T03:53:46Z"
      },
      "sha": "789f7195b2acbc3e50ee75b2b5a88af058cf7b14"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRhMjU1MTFlODg1YzJiN2E2MzQ4MmMyN2NiZDBiN2NhZjk5YjQxN2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da25511e885c2b7a63482c27cbd0b7caf99b417d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/da25511e885c2b7a63482c27cbd0b7caf99b417d",
      "tree": {
        "sha": "5484c96274df3aa5e286ef395a2867d783596b0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5484c96274df3aa5e286ef395a2867d783596b0a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/789f7195b2acbc3e50ee75b2b5a88af058cf7b14",
          "sha": "789f7195b2acbc3e50ee75b2b5a88af058cf7b14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/789f7195b2acbc3e50ee75b2b5a88af058cf7b14"
        }
      ],
      "message": "test: Provide path to `bitcoin` binary\n\nSet new `BitcoinTestFramework.binary_paths.bitcoin_bin` property with path to\nthe `bitcoin` wrapper binary. This allows new tests for `bitcoin-mine` in\n#30437 and `bitcoin-cli` in #32297 to find the `bitcoin` binary and call\n`bitcoin -m` to start nodes with IPC support. This way the new tests can run\nwhenever the ENABLE_IPC build option is enabled, instead of only running when\nthe `BITCOIN_CMD` environment variable is set to `bitcoin -m`",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-18T21:31:53Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-11-27T03:53:46Z"
      },
      "sha": "da25511e885c2b7a63482c27cbd0b7caf99b417d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0ZWY2ZDJjZTJiNDg1NDljMGE5MDU1OGFmZjZlMmIxYTgyZTQ4Mzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839",
      "tree": {
        "sha": "e8111f05f29b5b34d1efcd27e5f43ec3de5eff27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8111f05f29b5b34d1efcd27e5f43ec3de5eff27"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da25511e885c2b7a63482c27cbd0b7caf99b417d",
          "sha": "da25511e885c2b7a63482c27cbd0b7caf99b417d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/da25511e885c2b7a63482c27cbd0b7caf99b417d"
        }
      ],
      "message": "test: Add TestNode ipcbind option\n\nWith this change, tests can specify `self.extra_init = [{ipcbind: True}]` to\nstart a node listening on an IPC socket, instead of needing to choose which\nnode binary to invoke and what `self.extra_args=[[\"-ipcbind=...\"]]` value to\npass to it.\n\nThe eliminates boilerplate code #30437 (interface_ipc_mining.py), #32297\n(interface_ipc_cli.py), and #33201 (interface_ipc.py) previously needed in\ntheir test setup.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-18T21:41:08Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-08-18T15:19:22Z"
      },
      "sha": "f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdhN2YxMTkzM2I4M2QyOTAxMjkzNzc1MjNjYzRhM2NmYzQ1ZmU5ZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a7f11933b83d290129377523cc4a3cfc45fe9ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a7f11933b83d290129377523cc4a3cfc45fe9ef",
      "tree": {
        "sha": "a3fa860c8db88aad7fe1413ab812666deb1dd85e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3fa860c8db88aad7fe1413ab812666deb1dd85e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839",
          "sha": "f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f4ef6d2ce2b48549c0a90558aff6e2b1a82e4839"
        }
      ],
      "message": "cmake: Enable ENABLE_IPC option by default",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-18T21:41:08Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2025-01-26T18:24:51Z"
      },
      "sha": "7a7f11933b83d290129377523cc4a3cfc45fe9ef"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19212495404,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR5J2os",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19212495404",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28bb62ef4dc128ecbc95561f6a3242baa9175be9",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/28bb62ef4dc128ecbc95561f6a3242baa9175be9",
      "created_at": "2025-08-18T21:44:27Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkODZkZGFhMWRhYzEwNDQxNWFiMTZjYzgwNjhmZDUwZDA2OGMxMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "tree": {
        "sha": "b5b0461ea33b078e8b4565fb63130a1eae629f00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5b0461ea33b078e8b4565fb63130a1eae629f00"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a7f11933b83d290129377523cc4a3cfc45fe9ef",
          "sha": "7a7f11933b83d290129377523cc4a3cfc45fe9ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a7f11933b83d290129377523cc4a3cfc45fe9ef"
        }
      ],
      "message": "ci: add functional test for IPC interface",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-18T21:47:43Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-08-15T20:07:56Z"
      },
      "sha": "cd86ddaa1dac104415ab16cc8068fd50d068c12f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19212542283,
      "node_id": "HRFPE_lADOABII587GQholzwAAAAR5KCFL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19212542283",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "created_at": "2025-08-18T21:47:48Z"
    },
    {
      "event": "commented",
      "id": 3199936994,
      "node_id": "IC_kwDOABII586-uyni",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3199936994",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-19T09:18:08Z",
      "updated_at": "2025-08-19T09:18:45Z",
      "author_association": "MEMBER",
      "body": "If this PR is to be based on #31802 or #33190 then it should be marked draft. Otherwise it could be made independent by dropping 7a7f11933b83d290129377523cc4a3cfc45fe9ef and instead enabling IPC for one or more CI machines that run functional tests.\r\n\r\nIt should be straightforward for me to rebase #31802 after this lands as long as you leave `ci/test/00_setup_env_i686_multiprocess.sh` alone (due to 789f7195b2acbc3e50ee75b2b5a88af058cf7b14).\r\n\r\nMy preference would be to base it on #31802 because that gives the widest test coverage, including depends builds.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3199936994",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33201"
    },
    {
      "event": "reviewed",
      "id": 3131461914,
      "node_id": "PRR_kwDOABII5866plEa",
      "url": null,
      "actor": null,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-19T09:25:34Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3131461914",
      "submitted_at": "2025-08-19T09:25:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    },
    {
      "event": "reviewed",
      "id": 3131499361,
      "node_id": "PRR_kwDOABII5866puNh",
      "url": null,
      "actor": null,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-19T09:29:39Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#pullrequestreview-3131499361",
      "submitted_at": "2025-08-19T09:29:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280284442",
      "pull_request_review_id": 3125717125,
      "id": 2280284442,
      "node_id": "PRRC_kwDOABII586H6mEa",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from pathlib import Path\n+import tempfile\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            echo = init.makeEcho(ctx).result\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            mining = init.makeMining(ctx)\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)",
      "path": "test/functional/interface_ipc.py",
      "position": 117,
      "original_position": 74,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "b87de46c7aace9429e5cb38319f78f0dbbe3c052",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be great to cover the `waitNext()` method on `template`.",
      "created_at": "2025-08-16T07:09:19Z",
      "updated_at": "2025-08-16T07:09:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280284442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280284442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280749995",
      "pull_request_review_id": 3126216095,
      "id": 2280749995,
      "node_id": "PRRC_kwDOABII586H8Xur",
      "diff_hunk": "@@ -52,7 +52,7 @@ fi\n \n if [ -n \"$PIP_PACKAGES\" ]; then\n   # shellcheck disable=SC2086\n-  ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n+  ${CI_RETRY_EXE} pip3 install --break-system-packages --user $PIP_PACKAGES",
      "path": "ci/test/01_base_install.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33 _ci: add functional test for IPC interface_: @maflcko thoughts on how to avoid `--break-system-packages`? On CI it's probably fine, but for the unix build instructions it seems less optimal?",
      "created_at": "2025-08-17T07:02:48Z",
      "updated_at": "2025-08-17T07:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280749995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280749995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280844477",
      "pull_request_review_id": 3126308065,
      "id": 2280844477,
      "node_id": "PRRC_kwDOABII586H8uy9",
      "diff_hunk": "@@ -52,7 +52,7 @@ fi\n \n if [ -n \"$PIP_PACKAGES\" ]; then\n   # shellcheck disable=SC2086\n-  ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n+  ${CI_RETRY_EXE} pip3 install --break-system-packages --user $PIP_PACKAGES",
      "path": "ci/test/01_base_install.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "in_reply_to_id": 2280749995,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@Sjors I'll expand the functional tests with some more methods now that CI works. It took many tries to find something that works on a reasonable number of platforms.\n\nI have tried `pip3 install pycapnp` on macOS CI, but that gives a strange error that I also got when running locally. Locally, I fixed that by installing pycapnp from source, but in macOS CI, that resulted in C++ errors about Python functions that were not found. At this point, I'm going to give up on getting it to work there; someone else can work on adding that.\n\nRegarding you running locally, where is your `c++.capnp` installed? The `interface_i2p.py` script currently just assumes it's in `/usr/include/capnp/c++.capnp`, but that will not work for custom installations.",
      "created_at": "2025-08-17T11:38:36Z",
      "updated_at": "2025-08-17T11:38:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280844477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280844477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280873238",
      "pull_request_review_id": 3126333561,
      "id": 2280873238,
      "node_id": "PRRC_kwDOABII586H810W",
      "diff_hunk": "@@ -52,7 +52,7 @@ fi\n \n if [ -n \"$PIP_PACKAGES\" ]; then\n   # shellcheck disable=SC2086\n-  ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n+  ${CI_RETRY_EXE} pip3 install --break-system-packages --user $PIP_PACKAGES",
      "path": "ci/test/01_base_install.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "in_reply_to_id": 2280749995,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> where is your c++.capnp installed?\r\n\r\n`/opt/homebrew/bin/capnpc-c++`\r\n\r\nThis makes the test pass:\r\n\r\n```diff\r\ndiff --git a/test/functional/interface_ipc.py b/test/functional/interface_ipc.py\r\nindex 759fbbbc74..6f34a0dca6 100755\r\n--- a/test/functional/interface_ipc.py\r\n+++ b/test/functional/interface_ipc.py\r\n@@ -33,7 +33,10 @@ class IPCInterfaceTest(BitcoinTestFramework):\r\n     def capnp_modules(self):\r\n         src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\r\n         mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\r\n-        imports = [\"/usr/include\", str(src_dir), str(mp_dir)]\r\n+        # c++.capnp path:\r\n+        # https://github.com/capnproto/pycapnp/issues/279#issuecomment-2477709244\r\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\r\n+        imports = [\"/usr/include\", str(src_dir), str(mp_dir), str(cpp_capnp_dir)]\r\n         return {\r\n             \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\r\n             \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\r\n```\r\n\r\nSee https://github.com/capnproto/pycapnp/issues/279",
      "created_at": "2025-08-17T13:05:01Z",
      "updated_at": "2025-08-17T13:05:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280873238",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280873238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280882677",
      "pull_request_review_id": 3126341861,
      "id": 2280882677,
      "node_id": "PRRC_kwDOABII586H84H1",
      "diff_hunk": "@@ -52,7 +52,7 @@ fi\n \n if [ -n \"$PIP_PACKAGES\" ]; then\n   # shellcheck disable=SC2086\n-  ${CI_RETRY_EXE} pip3 install --user $PIP_PACKAGES\n+  ${CI_RETRY_EXE} pip3 install --break-system-packages --user $PIP_PACKAGES",
      "path": "ci/test/01_base_install.sh",
      "position": 5,
      "original_position": 5,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "eb482c1f3423fb5d5b91bd47b8bd6ec290d55d33",
      "in_reply_to_id": 2280749995,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-08-17T13:31:45Z",
      "updated_at": "2025-08-17T13:31:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280882677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280882677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280882721",
      "pull_request_review_id": 3126341904,
      "id": 2280882721,
      "node_id": "PRRC_kwDOABII586H84Ih",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from pathlib import Path\n+import tempfile\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            echo = init.makeEcho(ctx).result\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            mining = init.makeMining(ctx)\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)",
      "path": "test/functional/interface_ipc.py",
      "position": 117,
      "original_position": 74,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "b87de46c7aace9429e5cb38319f78f0dbbe3c052",
      "in_reply_to_id": 2280284442,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-08-17T13:31:56Z",
      "updated_at": "2025-08-17T13:31:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2280882721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280882721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282735877",
      "pull_request_review_id": 3128857140,
      "id": 2282735877,
      "node_id": "PRRC_kwDOABII586ID8kF",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 48,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" 3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nShould modules be a test parameter initialised in `set_test_params` so that we can later reuse in mining test?\r\n",
      "created_at": "2025-08-18T15:24:28Z",
      "updated_at": "2025-08-18T15:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282735877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282735877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282752457",
      "pull_request_review_id": 3128857140,
      "id": 2282752457,
      "node_id": "PRRC_kwDOABII586IEAnJ",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" https://github.com/bitcoin/bitcoin/commit/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nThis currently does not work on macOs when the pycapnp uses system installed capnproto  installed via homebrew.\r\n\r\nEditing it to works for me.\r\n\r\n```python\r\n  imports = [\"/opt/homebrew/opt/capnp/include\", str(src_dir), str(mp_dir)]\r\n```\r\n\r\nI thought of two ways to fix it but was not successful.\r\n1. Whether we can get the path to the include directly from `pycapnp`\r\n2. Search for the location of `capnproto` installation for supported platforms and add it.",
      "created_at": "2025-08-18T15:30:17Z",
      "updated_at": "2025-08-18T16:00:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282752457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282752457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282757571",
      "pull_request_review_id": 3128857140,
      "id": 2282757571,
      "node_id": "PRRC_kwDOABII586IEB3D",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Mining proxy object.\n+            mining = init.makeMining(ctx)\n+            # Test simple inspectors.\n+            assert (await mining.result.isTestChain(ctx))\n+            assert (await mining.result.isInitialBlockDownload(ctx))\n+            blockref = await mining.result.getTip(ctx)\n+            assert blockref.hasResult\n+            assert len(blockref.result.hash) == 32\n+            assert blockref.result.height > 100\n+            # Mine a block.\n+            wait = mining.result.waitTipChanged(ctx, blockref.result.hash, 1000.0)\n+            self.generate(self.nodes[0], 1)\n+            newblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert newblockref.result.hash != blockref.result.hash\n+            assert newblockref.result.height == blockref.result.height + 1\n+            # Wait for timeout (1000 milliseconds)\n+            wait = mining.result.waitTipChanged(ctx, newblockref.result.hash, 1000.0)\n+            oldblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert oldblockref.result.hash == newblockref.result.hash\n+            assert oldblockref.result.height == newblockref.result.height\n+\n+            # Create a template.\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)\n+            # Test some inspectors of template.\n+            header = await template.result.getBlockHeader(ctx)\n+            assert len(header.result) == 80\n+            block_data = BytesIO((await template.result.getBlock(ctx)).result)\n+            block = CBlock()\n+            block.deserialize(block_data)",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 114,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" https://github.com/bitcoin/bitcoin/commit/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nShould be abstracted away as a helper to be reused ?\r\n```python\r\n    async def parse_and_deserialize_block(self, block_template, ctx):\r\n        block_data = BytesIO((await block_template.result.getBlock(ctx)).result)\r\n        block = CBlock()\r\n        block.deserialize(block_data)\r\n        return block\r\n```\r\n```suggestion\r\n            block = await self.parse_and_deserialize_block(template, ctx)\r\n```",
      "created_at": "2025-08-18T15:32:25Z",
      "updated_at": "2025-08-18T15:59:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282757571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282757571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282772502",
      "pull_request_review_id": 3128857140,
      "id": 2282772502,
      "node_id": "PRRC_kwDOABII586IEFgW",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Mining proxy object.\n+            mining = init.makeMining(ctx)\n+            # Test simple inspectors.\n+            assert (await mining.result.isTestChain(ctx))\n+            assert (await mining.result.isInitialBlockDownload(ctx))\n+            blockref = await mining.result.getTip(ctx)\n+            assert blockref.hasResult\n+            assert len(blockref.result.hash) == 32\n+            assert blockref.result.height > 100\n+            # Mine a block.\n+            wait = mining.result.waitTipChanged(ctx, blockref.result.hash, 1000.0)\n+            self.generate(self.nodes[0], 1)\n+            newblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert newblockref.result.hash != blockref.result.hash\n+            assert newblockref.result.height == blockref.result.height + 1\n+            # Wait for timeout (1000 milliseconds)\n+            wait = mining.result.waitTipChanged(ctx, newblockref.result.hash, 1000.0)\n+            oldblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert oldblockref.result.hash == newblockref.result.hash\n+            assert oldblockref.result.height == newblockref.result.height\n+\n+            # Create a template.\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)\n+            # Test some inspectors of template.\n+            header = await template.result.getBlockHeader(ctx)\n+            assert len(header.result) == 80\n+            block_data = BytesIO((await template.result.getBlock(ctx)).result)\n+            block = CBlock()\n+            block.deserialize(block_data)\n+            assert ser_uint256(block.hashPrevBlock) == newblockref.result.hash\n+            assert len(block.vtx) >= 1\n+            txfees = await template.result.getTxFees(ctx)\n+            assert len(txfees.result) == 0\n+            txsigops = await template.result.getTxSigops(ctx)\n+            assert len(txsigops.result) == 0\n+            coinbase_data = BytesIO((await template.result.getCoinbaseTx(ctx)).result)\n+            coinbase = CTransaction()\n+            coinbase.deserialize(coinbase_data)\n+            assert coinbase.vin[0].prevout.hash == 0\n+            # Wait for a new template.\n+            waitoptions = modules['mining'].BlockWaitOptions()\n+            waitoptions.timeout = 1000.0\n+            waitnext = template.result.waitNext(ctx, waitoptions)\n+            new_tip = self.generate(self.nodes[0], 1)\n+            template2 = await waitnext\n+            assert template2\n+            block2_data = BytesIO((await template2.result.getBlock(ctx)).result)\n+            block2 = CBlock()\n+            block2.deserialize(block2_data)\n+            assert int(new_tip[0], 16) == block2.hashPrevBlock\n+            # Wait for another, but timeout.\n+            waitnext = template2.result.waitNext(ctx, waitoptions)\n+            template3 = await waitnext\n+            assert template3.to_dict() == {}\n+            # Destroy template objects\n+            template.result.destroy(ctx)\n+            template2.result.destroy(ctx)",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 142,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" https://github.com/bitcoin/bitcoin/commit/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nAlso add a branch for when we have a better template based on increase in transaction fees in the mempool above the fee threshold.\r\n\r\n```suggestion\r\n            assert_equal(len(block2.vtx), 1)\r\n            # Wait for another, get one after increase in fees in the mempool.\r\n            waitnext = template2.result.waitNext(ctx, waitoptions)\r\n            self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1, fee_rate=10)\r\n            template3 = await waitnext\r\n            assert template3\r\n            block3 = await self.parse_and_deserialize_block(template3, ctx)\r\n            assert_equal(len(block3.vtx), 2)\r\n            # Wait for another, but timeout.\r\n            waitnext = template3.result.waitNext(ctx, waitoptions)\r\n            template4 = await waitnext\r\n            assert template4.to_dict() == {}\r\n            # Destroy template objects\r\n            template.result.destroy(ctx)\r\n            template2.result.destroy(ctx)\r\n            template3.result.destroy(ctx)\r\n```",
      "created_at": "2025-08-18T15:39:01Z",
      "updated_at": "2025-08-18T15:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282772502",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282772502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 135,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282774168",
      "pull_request_review_id": 3128857140,
      "id": 2282774168,
      "node_id": "PRRC_kwDOABII586IEF6Y",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Mining proxy object.\n+            mining = init.makeMining(ctx)\n+            # Test simple inspectors.\n+            assert (await mining.result.isTestChain(ctx))\n+            assert (await mining.result.isInitialBlockDownload(ctx))\n+            blockref = await mining.result.getTip(ctx)\n+            assert blockref.hasResult\n+            assert len(blockref.result.hash) == 32\n+            assert blockref.result.height > 100\n+            # Mine a block.\n+            wait = mining.result.waitTipChanged(ctx, blockref.result.hash, 1000.0)\n+            self.generate(self.nodes[0], 1)\n+            newblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert newblockref.result.hash != blockref.result.hash\n+            assert newblockref.result.height == blockref.result.height + 1\n+            # Wait for timeout (1000 milliseconds)\n+            wait = mining.result.waitTipChanged(ctx, newblockref.result.hash, 1000.0)\n+            oldblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert oldblockref.result.hash == newblockref.result.hash\n+            assert oldblockref.result.height == newblockref.result.height\n+\n+            # Create a template.\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)\n+            # Test some inspectors of template.\n+            header = await template.result.getBlockHeader(ctx)\n+            assert len(header.result) == 80\n+            block_data = BytesIO((await template.result.getBlock(ctx)).result)\n+            block = CBlock()\n+            block.deserialize(block_data)\n+            assert ser_uint256(block.hashPrevBlock) == newblockref.result.hash\n+            assert len(block.vtx) >= 1\n+            txfees = await template.result.getTxFees(ctx)\n+            assert len(txfees.result) == 0\n+            txsigops = await template.result.getTxSigops(ctx)\n+            assert len(txsigops.result) == 0\n+            coinbase_data = BytesIO((await template.result.getCoinbaseTx(ctx)).result)\n+            coinbase = CTransaction()\n+            coinbase.deserialize(coinbase_data)\n+            assert coinbase.vin[0].prevout.hash == 0\n+            # Wait for a new template.\n+            waitoptions = modules['mining'].BlockWaitOptions()\n+            waitoptions.timeout = 1000.0\n+            waitnext = template.result.waitNext(ctx, waitoptions)\n+            new_tip = self.generate(self.nodes[0], 1)\n+            template2 = await waitnext\n+            assert template2\n+            block2_data = BytesIO((await template2.result.getBlock(ctx)).result)\n+            block2 = CBlock()\n+            block2.deserialize(block2_data)\n+            assert int(new_tip[0], 16) == block2.hashPrevBlock",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 135,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" https://github.com/bitcoin/bitcoin/commit/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nnit: use our internal assertion helpers for better errors?",
      "created_at": "2025-08-18T15:39:39Z",
      "updated_at": "2025-08-18T15:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282774168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282774168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282776829",
      "pull_request_review_id": 3128857140,
      "id": 2282776829,
      "node_id": "PRRC_kwDOABII586IEGj9",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 79,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"ci: add functional test for IPC interface\" https://github.com/bitcoin/bitcoin/commit/3f7ff4849e6165a6bcc4d5977c35a467fd7fc232\r\n\r\nIs their benefit of having context for each test, else we can just have a global context?",
      "created_at": "2025-08-18T15:40:51Z",
      "updated_at": "2025-08-18T15:42:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282776829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282776829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282780835",
      "pull_request_review_id": 3128923018,
      "id": 2282780835,
      "node_id": "PRRC_kwDOABII586IEHij",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These commands for installing via a venv dont work for me on macos or linux. I'm also not sure about installing via pip, since we need to be sure we are installing the package with capnproto bundled. Instead, I think `pycapnp` should be installed from source (venv or otherwise):\r\n\r\n```\r\ngit clone https://github.com/capnproto/pycapnp.git\r\ncd pycapnp\r\npip install . -C force-bundled-libcapnp=True\r\n```\r\n\r\nThis approach worked on macos and linux for me (inside a venv on both).",
      "created_at": "2025-08-18T15:42:36Z",
      "updated_at": "2025-08-18T16:54:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282780835",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282780835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282782619",
      "pull_request_review_id": 3128923018,
      "id": 2282782619,
      "node_id": "PRRC_kwDOABII586IEH-b",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 36,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "AFAICT, this only works when capnproto is bundled inside `pycapnp`.",
      "created_at": "2025-08-18T15:43:24Z",
      "updated_at": "2025-08-18T15:51:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282782619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282782619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282815035",
      "pull_request_review_id": 3128975993,
      "id": 2282815035,
      "node_id": "PRRC_kwDOABII586IEP47",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "FWIW, this worked for me on macos: https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282780835. I'd recommend we have the docs tell users to install `pycapnp` from source, since that should \"just work\" everywhere due to this line: `cpp_capnp_dir = Path(capnp.__path__[0]).parent`.\r\n\r\nEventually, we can replace this recommendation once we have CMake automatically finding the include directory for capnproto and making the test framework aware.",
      "created_at": "2025-08-18T15:57:01Z",
      "updated_at": "2025-08-18T15:57:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282815035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282815035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282839448",
      "pull_request_review_id": 3129015509,
      "id": 2282839448,
      "node_id": "PRRC_kwDOABII586IEV2Y",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `venv/bin/python3 test/functional/interface_ipc.py`\r\n\r\nThis should be `build/test/functional/interface_ipc.py`. Otherwise the test wont run.",
      "created_at": "2025-08-18T16:08:52Z",
      "updated_at": "2025-08-18T16:08:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282839448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282839448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282841908",
      "pull_request_review_id": 3129019221,
      "id": 2282841908,
      "node_id": "PRRC_kwDOABII586IEWc0",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@josibake \r\nI did that initially but was having some errors\r\n\r\n<details>\r\n<summary>logs\r\n</summary>\r\n\r\n```terminal\r\n(.venv) abubakarismail@Abubakars-MacBook-Pro pycapnp % cmake --version\r\ncmake version 4.1.0\r\n\r\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\r\n(.venv) abubakarismail@Abubakars-MacBook-Pro pycapnp % pip install . -C force-bundled-libcapnp=True\r\n\r\nProcessing /Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/pycapnp\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... done\r\nBuilding wheels for collected packages: pycapnp\r\n  Building wheel for pycapnp (pyproject.toml) ... error\r\n  error: subprocess-exited-with-error\r\n  \r\n  × Building wheel for pycapnp (pyproject.toml) did not run successfully.\r\n  │ exit code: 1\r\n  ╰─> [89 lines of output]\r\n      running build_ext\r\n      CMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\r\n        Compatibility with CMake < 3.10 will be removed from a future version of\r\n        CMake.\r\n      \r\n        Update the VERSION argument <min> value.  Or, use the <min>...<max> syntax\r\n        to tell CMake that the project requires at least <min> but has been updated\r\n        to work with policies introduced by <max> or earlier.\r\n      \r\n      \r\n      CMake Error at CMakeLists.txt:2 (project):\r\n        Running\r\n      \r\n         '/opt/homebrew/bin/ninja' '--version'\r\n      \r\n        failed with:\r\n      \r\n         Traceback (most recent call last):\r\n          File \"/opt/homebrew/bin/ninja\", line 5, in <module>\r\n            from ninja import ninja\r\n      \r\n        ModuleNotFoundError: No module named 'ninja'\r\n      \r\n      \r\n      \r\n      CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage\r\n      -- Configuring incomplete, errors occurred!\r\n      *WARNING* no libcapnp detected or rebuild forced. Attempting to build it from source now. If you have C++ Cap'n Proto installed, it may be out of date or is not being detected. This may take a while...\r\n      already have /Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/pycapnp/bundled/capnproto-c++\r\n      Traceback (most recent call last):\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/.venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 389, in <module>\r\n          main()\r\n          ~~~~^^\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/.venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 373, in main\r\n          json_out[\"return_val\"] = hook(**hook_input[\"kwargs\"])\r\n                                   ~~~~^^^^^^^^^^^^^^^^^^^^^^^^\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/.venv/lib/python3.13/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 280, in build_wheel\r\n          return _build_backend().build_wheel(\r\n                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n              wheel_directory, config_settings, metadata_directory\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n          )\r\n          ^\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/pycapnp/_custom_build/backend.py\", line 28, in build_wheel\r\n          return super().build_wheel(wheel_directory, config_settings, metadata_directory)\r\n                 ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/build_meta.py\", line 435, in build_wheel\r\n          return _build(['bdist_wheel', '--dist-info-dir', str(metadata_directory)])\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/build_meta.py\", line 423, in _build\r\n          return self._build_with_temp_dir(\r\n                 ~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n              cmd,\r\n              ^^^^\r\n          ...<3 lines>...\r\n              self._arbitrary_args(config_settings),\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n          )\r\n          ^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/build_meta.py\", line 404, in _build_with_temp_dir\r\n          self.run_setup()\r\n          ~~~~~~~~~~~~~~^^\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/pycapnp/_custom_build/backend.py\", line 22, in run_setup\r\n          return super().run_setup(setup_script)\r\n                 ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/build_meta.py\", line 317, in run_setup\r\n          exec(code, locals())\r\n          ~~~~^^^^^^^^^^^^^^^^\r\n        File \"<string>\", line 212, in <module>\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/__init__.py\", line 115, in setup\r\n          return distutils.core.setup(**attrs)\r\n                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/_distutils/core.py\", line 186, in setup\r\n          return run_commands(dist)\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/_distutils/core.py\", line 202, in run_commands\r\n          dist.run_commands()\r\n          ~~~~~~~~~~~~~~~~~^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/_distutils/dist.py\", line 1002, in run_commands\r\n          self.run_command(cmd)\r\n          ~~~~~~~~~~~~~~~~^^^^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/dist.py\", line 1102, in run_command\r\n          super().run_command(command)\r\n          ~~~~~~~~~~~~~~~~~~~^^^^^^^^^\r\n        File \"/private/var/folders/dj/d8p8jhd172n7wnq81ryfl6rc0000gn/T/pip-build-env-xr1q9l8l/overlay/lib/python3.13/site-packages/setuptools/_distutils/dist.py\", line 1021, in run_command\r\n          cmd_obj.run()\r\n          ~~~~~~~~~~~^^\r\n        File \"<string>\", line 169, in run\r\n        File \"/Users/abubakarismail/Desktop/Work/bitcoin-dev/py-bitcoin-ipc-client/pycapnp/buildutils/build.py\", line 65, in build_libcapnp\r\n          raise RuntimeError(\"CMake failed {}\".format(returncode))\r\n      RuntimeError: CMake failed 1\r\n      [end of output]\r\n  \r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for pycapnp\r\nFailed to build pycapnp\r\n\r\n[notice] A new release of pip is available: 25.1.1 -> 25.2\r\n[notice] To update, run: pip install --upgrade pip\r\nERROR: Failed to build installable wheels for some pyproject.toml based projects (pycapnp)\r\n```\r\n</details>\r\n\r\nSo I opted into the other approach of\r\n\r\n`pip install .`\r\nwhich by default, the setup script will automatically use the locally installed Cap'n Proto. If Cap'n Proto is not installed, it will bundle and build the matching Cap'n Proto library.\r\n\r\nSo it picked up my homebrew capnproto installation.",
      "created_at": "2025-08-18T16:09:48Z",
      "updated_at": "2025-08-18T16:09:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282841908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282841908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282849226",
      "pull_request_review_id": 3129030764,
      "id": 2282849226,
      "node_id": "PRRC_kwDOABII586IEYPK",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282839448,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "When you build using depends with the autotools it will work I think?\r\nSo both options maybe?",
      "created_at": "2025-08-18T16:12:43Z",
      "updated_at": "2025-08-18T16:12:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282849226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282849226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282853664",
      "pull_request_review_id": 3129038681,
      "id": 2282853664,
      "node_id": "PRRC_kwDOABII586IEZUg",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I did that initially but was having some errors\r\n\r\nIt looks like the `pycapnp` package doesn't currently work with Python 3.13 (https://github.com/capnproto/pycapnp/issues/372).",
      "created_at": "2025-08-18T16:14:23Z",
      "updated_at": "2025-08-18T16:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282853664",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282853664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282857319",
      "pull_request_review_id": 3129044040,
      "id": 2282857319,
      "node_id": "PRRC_kwDOABII586IEaNn",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282839448,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Documentation being added to master shouldn't be for Autotools.",
      "created_at": "2025-08-18T16:15:22Z",
      "updated_at": "2025-08-18T16:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282857319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282857319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282939552",
      "pull_request_review_id": 3129163553,
      "id": 2282939552,
      "node_id": "PRRC_kwDOABII586IEuSg",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It looks like the pycapnp package doesn't currently work with Python 3.13 (https://github.com/capnproto/pycapnp/issues/372)\r\n\r\nThis issue seems unrelated.\r\n\r\nThe actual issue was that my ninja installation was not linked.\r\n\r\n```\r\n brew link --overwrite ninja\r\n```\r\n\r\nAnd then @josibake recommended documentation should work.\r\n\r\nThanks @josibake for helping me debug.",
      "created_at": "2025-08-18T16:50:33Z",
      "updated_at": "2025-08-18T16:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282939552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282939552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282980169",
      "pull_request_review_id": 3129221960,
      "id": 2282980169,
      "node_id": "PRRC_kwDOABII586IE4NJ",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 28,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"ci: add functional test for IPC interface\" (3f7ff4849e6165a6bcc4d5977c35a467fd7fc232)\r\n\r\nThis seems like it leaves behind an empty directory after the test runs. In any case it should be possible drop this code and simplify this commit by cherrypicking three commits from #30437:\r\n\r\n- c3d82ef8fa947f108502ec80c522b4bd0084dd4c test: add is_ipc_enabled() and skip_if_no_ipc() functions\r\n- 3af4d9a50ab008aa3974c580a831095e2ba17042 test: Provide path to `bitcoin` binary\r\n- 6d0103472f1d691e8e1a73049ba85163e103ae28 test: Add TestNode ipcbind option\r\n\r\nI posted a branch doing this at https://github.com/ryanofsky/bitcoin/commits/pr/ipc-py.1",
      "created_at": "2025-08-18T17:09:50Z",
      "updated_at": "2025-08-18T17:17:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282980169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282980169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282984358",
      "pull_request_review_id": 3129221960,
      "id": 2282984358,
      "node_id": "PRRC_kwDOABII586IE5Om",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 36,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282782619,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282782619\r\n\r\n> AFAICT, this only works when capnproto is bundled inside `pycapnp`.\r\n\r\nCan confirm at least on nixos there are no .capnp files in this directory. Seems harmless to keep this if it helps other platforms, but would be good to document where it's necessary.",
      "created_at": "2025-08-18T17:11:59Z",
      "updated_at": "2025-08-18T17:17:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282984358",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282984358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282987892",
      "pull_request_review_id": 3129221960,
      "id": 2282987892,
      "node_id": "PRRC_kwDOABII586IE6F0",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282752457\r\n\r\nOn nixos, I needed to change this as follows:\r\n\r\n```diff\r\n-        cpp_capnp_dir = Path(capnp.__path__[0]).parent\r\n+        capnp_dir = Path(shutil.which(\"capnp\")).parent.parent / \"include\"\r\n         src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\r\n         mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\r\n-        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\r\n+        imports = [str(capnp_dir), str(src_dir), str(mp_dir)]\r\n```\r\n\r\nMaybe something like this could work with homebrew too.",
      "created_at": "2025-08-18T17:13:53Z",
      "updated_at": "2025-08-18T17:17:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282987892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282987892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994052",
      "pull_request_review_id": 3129240309,
      "id": 2282994052,
      "node_id": "PRRC_kwDOABII586IE7mE",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 48,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282735877,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, done.",
      "created_at": "2025-08-18T17:17:14Z",
      "updated_at": "2025-08-18T17:17:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282994052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994684",
      "pull_request_review_id": 3129241120,
      "id": 2282994684,
      "node_id": "PRRC_kwDOABII586IE7v8",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I added a comment to explain that Python 3.13 doesn't currently work.",
      "created_at": "2025-08-18T17:17:33Z",
      "updated_at": "2025-08-18T17:17:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282994684",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994842",
      "pull_request_review_id": 3129241351,
      "id": 2282994842,
      "node_id": "PRRC_kwDOABII586IE7ya",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Mining proxy object.\n+            mining = init.makeMining(ctx)\n+            # Test simple inspectors.\n+            assert (await mining.result.isTestChain(ctx))\n+            assert (await mining.result.isInitialBlockDownload(ctx))\n+            blockref = await mining.result.getTip(ctx)\n+            assert blockref.hasResult\n+            assert len(blockref.result.hash) == 32\n+            assert blockref.result.height > 100\n+            # Mine a block.\n+            wait = mining.result.waitTipChanged(ctx, blockref.result.hash, 1000.0)\n+            self.generate(self.nodes[0], 1)\n+            newblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert newblockref.result.hash != blockref.result.hash\n+            assert newblockref.result.height == blockref.result.height + 1\n+            # Wait for timeout (1000 milliseconds)\n+            wait = mining.result.waitTipChanged(ctx, newblockref.result.hash, 1000.0)\n+            oldblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert oldblockref.result.hash == newblockref.result.hash\n+            assert oldblockref.result.height == newblockref.result.height\n+\n+            # Create a template.\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)\n+            # Test some inspectors of template.\n+            header = await template.result.getBlockHeader(ctx)\n+            assert len(header.result) == 80\n+            block_data = BytesIO((await template.result.getBlock(ctx)).result)\n+            block = CBlock()\n+            block.deserialize(block_data)",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 114,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282757571,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-08-18T17:17:39Z",
      "updated_at": "2025-08-18T17:17:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282994842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282994842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995076",
      "pull_request_review_id": 3129241708,
      "id": 2282995076,
      "node_id": "PRRC_kwDOABII586IE72E",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]\n+        return {\n+            \"proxy\": capnp.load(str(mp_dir / \"mp\" / \"proxy.capnp\"), imports=imports),\n+            \"init\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"init.capnp\"), imports=imports),\n+            \"echo\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"echo.capnp\"), imports=imports),\n+            \"mining\": capnp.load(str(src_dir / \"ipc\" / \"capnp\" / \"mining.capnp\"), imports=imports),\n+        }\n+\n+    async def make_capnp_init_ctx(self):\n+        modules = self.capnp_modules()\n+        # Establish a connection, and create Init proxy object.\n+        connection = await capnp.AsyncIoStream.create_unix_connection(self.socket_path)\n+        client = capnp.TwoPartyClient(connection)\n+        init = client.bootstrap().cast_as(modules['init'].Init)\n+        # Create a thread, and a context object it is registered in.\n+        threadmap = init.construct().threadMap\n+        thread = threadmap.makeThread(\"pythread\").result\n+        ctx = modules['proxy'].Context()\n+        ctx.thread = thread\n+        # Return both.\n+        return init, ctx\n+\n+    def run_echo_test(self):\n+        self.log.info(\"Running echo test\")\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Echo proxy object.\n+            echo = init.makeEcho(ctx).result\n+            # Test a few invocations of echo.\n+            for s in [\"hallo\", \"\", \"haha\"]:\n+                result_eval = (await echo.echo(ctx, s)).result\n+                assert s == result_eval\n+            # Destroy the object.\n+            echo.destroy(ctx)\n+        asyncio.run(capnp.run(async_routine()))\n+\n+    def run_mining_test(self):\n+        self.log.info(\"Running mining test\")\n+        modules = self.capnp_modules()\n+        async def async_routine():\n+            init, ctx = await self.make_capnp_init_ctx()\n+            # Create Mining proxy object.\n+            mining = init.makeMining(ctx)\n+            # Test simple inspectors.\n+            assert (await mining.result.isTestChain(ctx))\n+            assert (await mining.result.isInitialBlockDownload(ctx))\n+            blockref = await mining.result.getTip(ctx)\n+            assert blockref.hasResult\n+            assert len(blockref.result.hash) == 32\n+            assert blockref.result.height > 100\n+            # Mine a block.\n+            wait = mining.result.waitTipChanged(ctx, blockref.result.hash, 1000.0)\n+            self.generate(self.nodes[0], 1)\n+            newblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert newblockref.result.hash != blockref.result.hash\n+            assert newblockref.result.height == blockref.result.height + 1\n+            # Wait for timeout (1000 milliseconds)\n+            wait = mining.result.waitTipChanged(ctx, newblockref.result.hash, 1000.0)\n+            oldblockref = await wait\n+            assert len(newblockref.result.hash) == 32\n+            assert oldblockref.result.hash == newblockref.result.hash\n+            assert oldblockref.result.height == newblockref.result.height\n+\n+            # Create a template.\n+            opts = modules['mining'].BlockCreateOptions()\n+            opts.useMempool = True\n+            opts.blockReservedWeight = 4000\n+            opts.coinbaseOutputMaxAdditionalSigops = 0\n+            template = mining.result.createNewBlock(opts)\n+            # Test some inspectors of template.\n+            header = await template.result.getBlockHeader(ctx)\n+            assert len(header.result) == 80\n+            block_data = BytesIO((await template.result.getBlock(ctx)).result)\n+            block = CBlock()\n+            block.deserialize(block_data)\n+            assert ser_uint256(block.hashPrevBlock) == newblockref.result.hash\n+            assert len(block.vtx) >= 1\n+            txfees = await template.result.getTxFees(ctx)\n+            assert len(txfees.result) == 0\n+            txsigops = await template.result.getTxSigops(ctx)\n+            assert len(txsigops.result) == 0\n+            coinbase_data = BytesIO((await template.result.getCoinbaseTx(ctx)).result)\n+            coinbase = CTransaction()\n+            coinbase.deserialize(coinbase_data)\n+            assert coinbase.vin[0].prevout.hash == 0\n+            # Wait for a new template.\n+            waitoptions = modules['mining'].BlockWaitOptions()\n+            waitoptions.timeout = 1000.0\n+            waitnext = template.result.waitNext(ctx, waitoptions)\n+            new_tip = self.generate(self.nodes[0], 1)\n+            template2 = await waitnext\n+            assert template2\n+            block2_data = BytesIO((await template2.result.getBlock(ctx)).result)\n+            block2 = CBlock()\n+            block2.deserialize(block2_data)\n+            assert int(new_tip[0], 16) == block2.hashPrevBlock\n+            # Wait for another, but timeout.\n+            waitnext = template2.result.waitNext(ctx, waitoptions)\n+            template3 = await waitnext\n+            assert template3.to_dict() == {}\n+            # Destroy template objects\n+            template.result.destroy(ctx)\n+            template2.result.destroy(ctx)",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 142,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282772502,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, added!",
      "created_at": "2025-08-18T17:17:48Z",
      "updated_at": "2025-08-18T17:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282995076",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 135,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995525",
      "pull_request_review_id": 3129242292,
      "id": 2282995525,
      "node_id": "PRRC_kwDOABII586IE79F",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282780835,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cool, used this in the instructions.",
      "created_at": "2025-08-18T17:18:01Z",
      "updated_at": "2025-08-18T17:18:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282995525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995874",
      "pull_request_review_id": 3129242751,
      "id": 2282995874,
      "node_id": "PRRC_kwDOABII586IE8Ci",
      "diff_hunk": "@@ -34,6 +34,15 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. To install it:\n+\n+- `pip3 install pycapnp`\n+\n+Depending on the system, it may be necessary to install and run in a venv:\n+\n+- `python -m venv venv`\n+- `venv/bin/pip3 install pycapnp`\n+- `venv/bin/python3 test/functional/interface_ipc.py`",
      "path": "test/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282839448,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2025-08-18T17:18:10Z",
      "updated_at": "2025-08-18T17:18:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282995874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282995874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283046276",
      "pull_request_review_id": 3129314646,
      "id": 2283046276,
      "node_id": "PRRC_kwDOABII586IFIWE",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 28,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282980169,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This branch / patch works for me on Nix on macOS. Hint, do not forget to `import shutil` when applying the patch below. ",
      "created_at": "2025-08-18T17:40:48Z",
      "updated_at": "2025-08-18T17:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2283046276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283046276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283047618",
      "pull_request_review_id": 3129317170,
      "id": 2283047618,
      "node_id": "PRRC_kwDOABII586IFIrC",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 28,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282980169,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky Thanks! Will address later today.",
      "created_at": "2025-08-18T17:41:20Z",
      "updated_at": "2025-08-18T17:41:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2283047618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283047618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283137376",
      "pull_request_review_id": 3129440401,
      "id": 2283137376,
      "node_id": "PRRC_kwDOABII586IFelg",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 36,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282782619,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry, didn’t mean to imply this breaks things if present, rather that adding this line works because it allows accessing the bundled version. This is why I recommended in a separate comment that our docs prompt the user to always install from source using the bundled version when installing pycapnp.\r\n\r\nLonger term, I am confident we can drop all of this from the functional test in favour of having CMake pipe through the correct info to the config file.",
      "created_at": "2025-08-18T18:25:33Z",
      "updated_at": "2025-08-18T18:25:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2283137376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283137376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283314830",
      "pull_request_review_id": 3129697159,
      "id": 2283314830,
      "node_id": "PRRC_kwDOABII586IGJ6O",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 36,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282782619,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, when I saw this I wasn't aware what a [\"bundled\"](https://github.com/capnproto/pycapnp/blob/a89eb0dee6c67049bf2f6b875e51dd3f71a6abd1/setup.py#L146-L151) capnproto was but agree it makes sense to use it if the python extension includes it.\r\n\r\nI guess I'd be curious what would happen if the docs were changed to use `force-system-libcapnp=True` instead of `force-bundled-libcapnp=True`? It seems like since the c++ code already requires capnproto to be built, maybe it's wasteful for the instructions to recommend downloading it and rebuilding if it's not necessary?\r\n\r\nAlso agree it could be good to get the location of the include directory from cmake. There's a [`CAPNP_INCLUDE_DIRS`](https://github.com/capnproto/capnproto/blob/91907420323cacdcfd967acb23d3fe0dc273b19f/c%2B%2B/cmake/CapnProtoConfig.cmake.in#L26) cmake variable that could work for this.\r\n\r\nI'm not sure it is *necessarily* better to use the cmake value because in theory there's no reason the python client needs to use the same library as the c++ server, and maybe it's even good to test with different versions. But getting a location directly from cmake is probably more reliable than having to derive one in python.\r\n\r\nIf we don't use the cmake path, the `shutil.which` approach suggested https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2282987892 also could be reasonable and seems to match what python setup code does [internally](https://github.com/capnproto/pycapnp/blob/a89eb0dee6c67049bf2f6b875e51dd3f71a6abd1/setup.py#L124).\r\n\r\nOverall anything that works here seems fine to me.",
      "created_at": "2025-08-18T19:54:34Z",
      "updated_at": "2025-08-18T19:54:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2283314830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2283314830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284635042",
      "pull_request_review_id": 3131427772,
      "id": 2284635042,
      "node_id": "PRRC_kwDOABII586ILMOi",
      "diff_hunk": "@@ -0,0 +1,150 @@\n+#!/usr/bin/env python3\n+# Copyright (c) The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the IPC (multiprocess) interface.\"\"\"\n+import asyncio\n+import functools\n+from io import BytesIO\n+from pathlib import Path\n+import tempfile\n+from test_framework.messages import (CBlock, CTransaction, ser_uint256)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Test may be skipped and not have capnp installed\n+try:\n+    import capnp  # type: ignore[import] # noqa: F401\n+except ImportError:\n+    pass\n+\n+\n+class IPCInterfaceTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.use_multiprocess_node = True\n+        # The default socket path exceeds the maximum socket filename length in CI.\n+        self.socket_path = Path(tempfile.mkdtemp()) / \"ipc.sock\"\n+        self.extra_args = [[f\"-ipcbind=unix:{self.socket_path}\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_py_capnp()\n+        self.skip_if_no_bitcoind_ipc()\n+\n+    @functools.cache\n+    def capnp_modules(self):\n+        cpp_capnp_dir = Path(capnp.__path__[0]).parent\n+        src_dir = Path(self.config['environment']['SRCDIR']) / \"src\"\n+        mp_dir = src_dir / \"ipc\" / \"libmultiprocess\" / \"include\"\n+        imports = [\"/usr/include\", str(cpp_capnp_dir), str(src_dir), str(mp_dir)]",
      "path": "test/functional/interface_ipc.py",
      "position": null,
      "original_position": 39,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "3f7ff4849e6165a6bcc4d5977c35a467fd7fc232",
      "in_reply_to_id": 2282752457,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As of cd86ddaa1dac104415ab16cc8068fd50d068c12f the test passes for me on macOS with Python 3.10.14 with pycapnp installed via pip and capnp installed via homebrew.\r\n\r\nI also tested Python 3.12.11. With Python 3.13.17 `pip3 install pycapnp` fails. We can worry about that later.",
      "created_at": "2025-08-19T09:10:33Z",
      "updated_at": "2025-08-19T09:10:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2284635042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284635042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284658673",
      "pull_request_review_id": 3131461914,
      "id": 2284658673,
      "node_id": "PRRC_kwDOABII586ILR_x",
      "diff_hunk": "@@ -34,6 +34,26 @@ The ZMQ functional test requires a python ZMQ library. To install it:\n - on Unix, run `sudo apt-get install python3-zmq`\n - on mac OS, run `pip3 install pyzmq`\n \n+The IPC functional test requires a python IPC library. `pip3 install pycapnp` may work, but if not, install it from source:\n+\n+```sh\n+git clone https://github.com/capnproto/pycapnp.git`",
      "path": "test/README.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "from the llm:\n\n\n```suggestion\ngit clone https://github.com/capnproto/pycapnp.git\n```",
      "created_at": "2025-08-19T09:19:57Z",
      "updated_at": "2025-08-19T09:25:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2284658673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284658673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284671990",
      "pull_request_review_id": 3131461914,
      "id": 2284671990,
      "node_id": "PRRC_kwDOABII586ILVP2",
      "diff_hunk": "@@ -550,15 +557,15 @@ def bin_dir_from_version(version):\n \n             bin_dirs.append(bin_dir)\n \n+        extra_init = [{}] * num_nodes if self.extra_init is None else self.extra_init",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure why the lint task complains here: \n\n```\n[21:49:19.712] test/functional/test_framework/test_framework.py:560: error: Need type annotation for \"extra_init\"  [var-annotated]\n[21:49:21.445] Found 1 error in 1 file (checked 301 source files)\n[21:49:21.473] ^---- ⚠️ Failure generated from lint-python.py\n```\n\nNo other variable in this function is required to be annotated and the lint should probably be fixed to not require it here either.",
      "created_at": "2025-08-19T09:25:05Z",
      "updated_at": "2025-08-19T09:25:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2284671990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284671990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 560,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284683975",
      "pull_request_review_id": 3131499361,
      "id": 2284683975,
      "node_id": "PRRC_kwDOABII586ILYLH",
      "diff_hunk": "@@ -964,6 +964,13 @@ def skip_if_no_py_sqlite3(self):\n         except ImportError:\n             raise SkipTest(\"sqlite3 module not available.\")\n \n+    def skip_if_no_py_capnp(self):\n+        \"\"\"Attempt to import the capnp package and skip the test if the import fails.\"\"\"\n+        try:\n+            import capnp  # type: ignore[import] # noqa: F401",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 7,
      "original_position": 7,
      "commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "original_commit_id": "cd86ddaa1dac104415ab16cc8068fd50d068c12f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In cd86ddaa1dac104415ab16cc8068fd50d068c12f _ci: add functional test for IPC interface_: is it somehow possible for `import` to succeed but capnp to remain undefined?\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/33201#issuecomment-3197934560",
      "created_at": "2025-08-19T09:29:39Z",
      "updated_at": "2025-08-19T09:29:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33201#discussion_r2284683975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2284683975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33201"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 970,
      "original_line": 970,
      "side": "RIGHT"
    }
  ]
}