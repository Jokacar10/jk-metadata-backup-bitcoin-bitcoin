{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661",
    "id": 2021327722,
    "node_id": "PR_kwDOABII5854ewNq",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30661",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30661.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30661.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
    "number": 30661,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "fuzz: Test headers pre-sync through p2p",
    "user": {
      "login": "marcofleon",
      "id": 95179662,
      "node_id": "U_kgDOBaxTjg",
      "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcofleon",
      "html_url": "https://github.com/marcofleon",
      "followers_url": "https://api.github.com/users/marcofleon/followers",
      "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
      "organizations_url": "https://api.github.com/users/marcofleon/orgs",
      "repos_url": "https://api.github.com/users/marcofleon/repos",
      "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/marcofleon/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR reopens https://github.com/bitcoin/bitcoin/pull/28043. It's a regression fuzz test for https://github.com/bitcoin/bitcoin/pull/26355 and [a couple bugs](https://github.com/bitcoin/bitcoin/pull/25717/commits/ed6cddd98e32263fc116a4380af6d66da20da990) that were addressed in https://github.com/bitcoin/bitcoin/pull/25717. This should help us move forward with the [removal of mainnet checkpoints](https://github.com/bitcoin/bitcoin/pull/25725).\r\n\r\nIt seems like the main concern in https://github.com/bitcoin/bitcoin/pull/28043 was the global mock function for proof of work. This PR aims to be an improvement by replacing the previous approach with a fuzz build configured using `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION`. This ensures that the simplified test code will never be in a release binary. If we agree this is the way to go, there are some other places (for future targets) where this method could be used. \r\n\r\nIn this target, PoW isn't being tested, so the goal is to bypass the check and let the fuzzer do its thing. In the other harnesses where PoW is actually being fuzzed, `CheckProofOfWork` is now `CheckProofOfWorkImpl`. So, the only change to that function is in the name.\r\n\r\nMore about `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` can be found at https://llvm.org/docs/LibFuzzer.html#fuzzer-friendly-build-mode and https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/fuzzing_in_depth.md#d-modifying-the-target.\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-08-15T15:35:54Z",
    "updated_at": "2025-09-26T11:47:06Z",
    "closed_at": "2024-09-16T17:59:42Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-09-16T17:59:42Z",
    "merged_by": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "2bf721e76a575e865518e5fe51f00ce975b70b6a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "marcofleon:2024/06/headers-sync-fuzztest",
      "ref": "2024/06/headers-sync-fuzztest",
      "sha": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 593603618,
        "node_id": "R_kgDOI2GsIg",
        "name": "bitcoin",
        "full_name": "marcofleon/bitcoin",
        "owner": {
          "login": "marcofleon",
          "id": 95179662,
          "node_id": "U_kgDOBaxTjg",
          "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marcofleon",
          "html_url": "https://github.com/marcofleon",
          "followers_url": "https://api.github.com/users/marcofleon/followers",
          "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
          "organizations_url": "https://api.github.com/users/marcofleon/orgs",
          "repos_url": "https://api.github.com/users/marcofleon/repos",
          "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/marcofleon/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/marcofleon/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/marcofleon/bitcoin",
        "archive_url": "https://api.github.com/repos/marcofleon/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/marcofleon/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/marcofleon/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/marcofleon/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/marcofleon/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/marcofleon/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/marcofleon/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/marcofleon/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/marcofleon/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/marcofleon/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/marcofleon/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/marcofleon/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/marcofleon/bitcoin/events",
        "forks_url": "https://api.github.com/repos/marcofleon/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/marcofleon/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/marcofleon/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/marcofleon/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/marcofleon/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/marcofleon/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/marcofleon/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/marcofleon/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/marcofleon/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/marcofleon/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/marcofleon/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/marcofleon/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/marcofleon/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/marcofleon/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/marcofleon/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/marcofleon/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:marcofleon/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/marcofleon/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/marcofleon/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/marcofleon/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/marcofleon/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/marcofleon/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/marcofleon/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/marcofleon/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/marcofleon/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/marcofleon/bitcoin/hooks",
        "svn_url": "https://github.com/marcofleon/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 251331,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-19T14:14:12Z",
        "created_at": "2023-01-26T12:28:27Z",
        "updated_at": "2025-09-18T16:52:08Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e4fb97a5127ee767af7cbfab3ee07a18514bda1c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37864,
        "stargazers_count": 85697,
        "watchers_count": 85697,
        "size": 294130,
        "default_branch": "master",
        "open_issues_count": 798,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-25T22:42:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-26T10:28:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 227,
    "deletions": 11,
    "changed_files": 9,
    "commits": 4,
    "review_comments": 20,
    "comments": 26
  },
  "events": [
    {
      "event": "commented",
      "id": 2291557623,
      "node_id": "IC_kwDOABII586IlmT3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291557623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:35:57Z",
      "updated_at": "2024-09-16T09:23:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30661).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2292103593), [instagibbs](https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2292826975), [brunoerg](https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2296997010), [naumenkogs](https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2348253473) |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349247257), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2352408633) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29664](https://github.com/bitcoin/bitcoin/pull/29664) (p2p: When close to the tip, download blocks in parallel from additional peers to prevent stalling by mzumsande)\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2291557623",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "labeled",
      "id": 13897878828,
      "node_id": "LE_lADOABII586TH7fOzwAAAAM8YM0s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13897878828",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:36:00Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2291565368,
      "node_id": "IC_kwDOABII586IloM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291565368",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:40:29Z",
      "updated_at": "2024-08-15T15:40:29Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThanks for picking this up!",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2291565368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2291572839,
      "node_id": "IC_kwDOABII586IlqBn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291572839",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:44:27Z",
      "updated_at": "2024-08-15T15:44:27Z",
      "author_association": "MEMBER",
      "body": "I started considering adding a fuzzing harness for timewarp attacks(and mitigations). It would also rely on this type of PoW-checking avoidance.\r\n\r\nconcept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2291572839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13898232765,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAAM8ZjO9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13898232765",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/9d84717c92ed052dea6f78c715833d328835ba79",
      "created_at": "2024-08-15T16:07:49Z"
    },
    {
      "event": "labeled",
      "id": 13898233599,
      "node_id": "LE_lADOABII586TH7fOzwAAAAM8Zjb_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13898233599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T16:07:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2291614092,
      "node_id": "IC_kwDOABII586Il0GM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291614092",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T16:07:55Z",
      "updated_at": "2024-08-15T16:07:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28819298588</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2291614092",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2291686784,
      "node_id": "IC_kwDOABII586ImF2A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291686784",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T16:37:39Z",
      "updated_at": "2024-08-15T16:37:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2291686784",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "unlabeled",
      "id": 13899624258,
      "node_id": "UNLE_lADOABII586TH7fOzwAAAAM8e29C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13899624258",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T17:27:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13908853326,
      "node_id": "LE_lADOABII586TH7fOzwAAAAM9CEJO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13908853326",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T09:57:47Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "reviewed",
      "id": 2247924410,
      "node_id": "PRR_kwDOABII586F_Jq6",
      "url": null,
      "actor": null,
      "commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-20T12:58:08Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2247924410",
      "submitted_at": "2024-08-20T12:58:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "commented",
      "id": 2299449603,
      "node_id": "IC_kwDOABII586JDtED",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2299449603",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T18:09:17Z",
      "updated_at": "2024-08-20T18:09:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> More about FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION can be found at https://llvm.org/docs/LibFuzzer.html#fuzzer-friendly-build-mode and https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/fuzzing_in_depth.md#d-modifying-the-target.\r\n\r\nPerhaps it would be good to mention this in docs?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2299449603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "reviewed",
      "id": 2248736998,
      "node_id": "PRR_kwDOABII586GCQDm",
      "url": null,
      "actor": null,
      "commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-20T18:24:09Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2248736998",
      "submitted_at": "2024-08-20T18:24:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "reviewed",
      "id": 2249078944,
      "node_id": "PRR_kwDOABII586GDjig",
      "url": null,
      "actor": null,
      "commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-20T20:54:57Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2249078944",
      "submitted_at": "2024-08-20T20:54:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13963406071,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANASKr3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963406071",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4e87dcc205ba2bb7996dc077ad46b1b1e309dd8e",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/4e87dcc205ba2bb7996dc077ad46b1b1e309dd8e",
      "created_at": "2024-08-21T16:30:24Z"
    },
    {
      "event": "commented",
      "id": 2302558442,
      "node_id": "IC_kwDOABII586JPkDq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2302558442",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T16:58:53Z",
      "updated_at": "2024-08-21T16:58:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Perhaps it would be good to mention this in docs?\r\n\r\nAgreed @brunoerg. We can add it post-merge, assuming people are on board with the method.\r\n",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2302558442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 13963794287,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANATpdv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963794287",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T16:58:54Z"
    },
    {
      "event": "subscribed",
      "id": 13963794312,
      "node_id": "SE_lADOABII586TH7fOzwAAAANATpeI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13963794312",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T16:58:54Z"
    },
    {
      "event": "reviewed",
      "id": 2257087050,
      "node_id": "PRR_kwDOABII586GiGpK",
      "url": null,
      "actor": null,
      "commit_id": "4e87dcc205ba2bb7996dc077ad46b1b1e309dd8e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-23T12:14:15Z",
      "author_association": "MEMBER",
      "body": "Code review ACK 4e87dcc205ba2bb7996dc077ad46b1b1e309dd8e\r\n\r\n[Coverage report](http://bitcoind-fuzz.dergoegge.de:8000/bitcoin-pr30661/harnesses/p2p_headers_sync/coverage_report/coverage/workdir/bitcoin/index.html).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2257087050",
      "submitted_at": "2024-08-23T12:14:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "review_requested",
      "id": 13992444806,
      "node_id": "RRE_lADOABII586TH7fOzwAAAANCA8OG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13992444806",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T12:14:18Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13992444933,
      "node_id": "RRE_lADOABII586TH7fOzwAAAANCA8QF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13992444933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T12:14:19Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2312928188,
      "node_id": "IC_kwDOABII586J3Hu8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2312928188",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T15:48:01Z",
      "updated_at": "2024-08-27T15:48:01Z",
      "author_association": "MEMBER",
      "body": "I think some text in the fuzz case itself would help motivate what it's trying to accomplish. Right now it's pretty bare so I'm not sure what kinds of bugs/issues it is trying to unsurface. ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2312928188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14062826166,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANGNbK2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14062826166",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d4e2d00cd2290a338bfb0ed7871af3bb5d58f02",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/6d4e2d00cd2290a338bfb0ed7871af3bb5d58f02",
      "created_at": "2024-08-29T14:12:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14064042014,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANGSEAe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14064042014",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "855ae9a56e781f1ccef4019e814af51fbc7cf722",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/855ae9a56e781f1ccef4019e814af51fbc7cf722",
      "created_at": "2024-08-29T14:56:25Z"
    },
    {
      "event": "unlabeled",
      "id": 14064928434,
      "node_id": "UNLE_lADOABII586TH7fOzwAAAANGVcay",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14064928434",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T15:21:07Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14084579412,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANHgaBU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14084579412",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7f19237573711aa8171bdbbc4c18dd293d44935f",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/7f19237573711aa8171bdbbc4c18dd293d44935f",
      "created_at": "2024-08-30T16:28:20Z"
    },
    {
      "event": "commented",
      "id": 2321920032,
      "node_id": "IC_kwDOABII586KZbAg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2321920032",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T16:36:48Z",
      "updated_at": "2024-08-30T16:37:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@instagibbs I've elaborated a bit in the harness (and added a couple one liners). Let me know if that last comment helps at all. Happy to add more if you see an opportunity for clarification or have something specific in mind.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2321920032",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14084890956,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANHhmFM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14084890956",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T16:36:50Z"
    },
    {
      "event": "subscribed",
      "id": 14084890988,
      "node_id": "SE_lADOABII586TH7fOzwAAAANHhmFs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14084890988",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T16:36:50Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjMDJkNGIyYmRiYzdhM2ZjMzAzMWE2M2IzYjE2YmFmYTY2OWQ1MWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c",
      "tree": {
        "sha": "eabaec10a5bf7fd9255b7dbbd0bd9ab3fd2f91ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eabaec10a5bf7fd9255b7dbbd0bd9ab3fd2f91ad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
          "sha": "a74bdeea1b8e27b2335f0f7da78006e87ecfb235",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a74bdeea1b8e27b2335f0f7da78006e87ecfb235"
        }
      ],
      "message": "net_processing: Make MAX_HEADERS_RESULTS a PeerManager option",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-09-02T14:42:44Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-08-13T10:32:07Z"
      },
      "sha": "0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEzZjZmNWFjZDg5ZjJmNWJiMTM2ZWMyNDdmMjU5ZDIxMmU4OTQ0ZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3f6f5acd89f2f5bb136ec247f259d212e8944d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3f6f5acd89f2f5bb136ec247f259d212e8944d0",
      "tree": {
        "sha": "8b90ab2e97a21cc61de72de6b60b9edb6d3daa0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b90ab2e97a21cc61de72de6b60b9edb6d3daa0b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c",
          "sha": "0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c"
        }
      ],
      "message": "build: Automatically define FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION for fuzz builds",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-09-02T14:43:33Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-08-13T14:47:19Z"
      },
      "sha": "a3f6f5acd89f2f5bb136ec247f259d212e8944d0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwZWFhNDc0OWZlMGY3NTVlMTEzZWVlNzBkZWUxOTg5YmRjMDdhZDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0eaa4749fe0f755e113eee70dee1989bdc07ad5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a0eaa4749fe0f755e113eee70dee1989bdc07ad5",
      "tree": {
        "sha": "357c337218bc1b39c6490ca111358c736c55acbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/357c337218bc1b39c6490ca111358c736c55acbc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3f6f5acd89f2f5bb136ec247f259d212e8944d0",
          "sha": "a3f6f5acd89f2f5bb136ec247f259d212e8944d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3f6f5acd89f2f5bb136ec247f259d212e8944d0"
        }
      ],
      "message": "Add FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION in PoW check\n\nTo avoid PoW being a blocker for fuzz tests,\n`FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` is used in fuzz builds to\nbypass the actual PoW validation in `CheckProofOfWork`. It's\nreplaced with a check on the last byte of the hash, which allows the\nfuzzer to quickly generate (in)valid blocks by checking a single bit,\nrather than performing the full PoW computation.\n\nIf PoW is the target of a fuzz test, then it should call\n`CheckProofOfWorkImpl`.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-09-02T14:43:33Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-08-13T10:42:59Z"
      },
      "sha": "a0eaa4749fe0f755e113eee70dee1989bdc07ad5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14104719738,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANItPF6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14104719738",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/787232638f987fe34a71a26d36bb5645a8a7be50",
      "created_at": "2024-09-02T14:49:06Z"
    },
    {
      "event": "reviewed",
      "id": 2283624126,
      "node_id": "PRR_kwDOABII586IHVa-",
      "url": null,
      "actor": null,
      "commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-05T17:20:34Z",
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2283624126",
      "submitted_at": "2024-09-05T17:20:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "labeled",
      "id": 14182902943,
      "node_id": "LE_lADOABII586TH7fOzwAAAANNXeyf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14182902943",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T12:52:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14186890042,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANNmsM6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14186890042",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "73f9a25bd012573154ec9e233fb91c72fe73fdce",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/73f9a25bd012573154ec9e233fb91c72fe73fdce",
      "created_at": "2024-09-09T17:26:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14186954538,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANNm78q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14186954538",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1243d2ffa30ebc8a148623e3cdabd61f70714932",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/1243d2ffa30ebc8a148623e3cdabd61f70714932",
      "created_at": "2024-09-09T17:31:44Z"
    },
    {
      "event": "reviewed",
      "id": 2292038673,
      "node_id": "PRR_kwDOABII586InbwR",
      "url": null,
      "actor": null,
      "commit_id": "1243d2ffa30ebc8a148623e3cdabd61f70714932",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-10T10:30:06Z",
      "author_association": "MEMBER",
      "body": "Code review ACK 1243d2ffa30ebc8a148623e3cdabd61f70714932\r\n\r\nCI timeout is unrelated\r\n",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2292038673",
      "submitted_at": "2024-09-10T10:30:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "review_requested",
      "id": 14196502710,
      "node_id": "RRE_lADOABII586TH7fOzwAAAANOLXC2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14196502710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T10:30:10Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5N2Y0M2Q2M2E2ZTgzNWJhZTIwYjBiYzVkNTM2ZGY5OGY1NWQ4YTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "tree": {
        "sha": "cb63232a3868350ff7548596df00b6d463167ef9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb63232a3868350ff7548596df00b6d463167ef9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0eaa4749fe0f755e113eee70dee1989bdc07ad5",
          "sha": "a0eaa4749fe0f755e113eee70dee1989bdc07ad5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a0eaa4749fe0f755e113eee70dee1989bdc07ad5"
        }
      ],
      "message": "fuzz: Add harness for p2p headers sync",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-09-10T10:56:07Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2024-08-13T11:08:42Z"
      },
      "sha": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14196846674,
      "node_id": "HRFPE_lADOABII586TH7fOzwAAAANOMrBS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14196846674",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "created_at": "2024-09-10T10:57:12Z"
    },
    {
      "event": "commented",
      "id": 2340343047,
      "node_id": "IC_kwDOABII586Lfs0H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2340343047",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T10:58:51Z",
      "updated_at": "2024-09-10T10:58:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed comments by @instagibbs. Thanks for the review!",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2340343047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14196870066,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANOMwuy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14196870066",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T10:58:52Z"
    },
    {
      "event": "subscribed",
      "id": 14196870075,
      "node_id": "SE_lADOABII586TH7fOzwAAAANOMwu7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14196870075",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T10:58:52Z"
    },
    {
      "event": "reviewed",
      "id": 2292103593,
      "node_id": "PRR_kwDOABII586Inrmp",
      "url": null,
      "actor": null,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-10T11:01:21Z",
      "author_association": "MEMBER",
      "body": "reACK a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2292103593",
      "submitted_at": "2024-09-10T11:01:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "reviewed",
      "id": 2292826975,
      "node_id": "PRR_kwDOABII586IqcNf",
      "url": null,
      "actor": null,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-10T15:09:20Z",
      "author_association": "MEMBER",
      "body": "tested ACK a97f43d63a6e835bae20b0bc5d536df98f55d8a0\r\n\r\nFails when modifications are made on mainnet and regtest.\r\n\r\nAnother follow up improvement I'd like is direct assertion that the \"chainwork\" of the header chain never exceed minimum chainwork, or if that is exceeded, we can drop the assertion that the chain never extends past genesis block.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2292826975",
      "submitted_at": "2024-09-10T15:09:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "unlabeled",
      "id": 14207384591,
      "node_id": "UNLE_lADOABII586TH7fOzwAAAANO03wP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14207384591",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T23:34:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2343196210,
      "node_id": "IC_kwDOABII586LqlYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2343196210",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T10:02:04Z",
      "updated_at": "2024-09-11T10:02:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Another follow up improvement I'd like is direct assertion that the \"chainwork\" of the header chain never exceed minimum chainwork, or if that is exceeded, we can drop the assertion that the chain never extends past genesis block.\r\n\r\nAgreed, I think something like this would need to be added as part of the building a chain on top of the initial set of headers.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2343196210",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2343642089,
      "node_id": "IC_kwDOABII586LsSPp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2343642089",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T13:14:35Z",
      "updated_at": "2024-09-11T13:14:35Z",
      "author_association": "MEMBER",
      "body": "@brunoerg @maflcko review ping :)",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2343642089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14216085042,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANPWD4y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14216085042",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T13:14:36Z"
    },
    {
      "event": "subscribed",
      "id": 14216085060,
      "node_id": "SE_lADOABII586TH7fOzwAAAANPWD5E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14216085060",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T13:14:36Z"
    },
    {
      "event": "mentioned",
      "id": 14216085081,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANPWD5Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14216085081",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T13:14:36Z"
    },
    {
      "event": "subscribed",
      "id": 14216085098,
      "node_id": "SE_lADOABII586TH7fOzwAAAANPWD5q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14216085098",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T13:14:36Z"
    },
    {
      "event": "reviewed",
      "id": 2296997010,
      "node_id": "PRR_kwDOABII586I6WSS",
      "url": null,
      "actor": null,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T13:18:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2296997010",
      "submitted_at": "2024-09-11T13:18:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "commented",
      "id": 2348253473,
      "node_id": "IC_kwDOABII586L94Eh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2348253473",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T07:41:22Z",
      "updated_at": "2024-09-13T07:41:22Z",
      "author_association": "MEMBER",
      "body": "ACK a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2348253473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2348545844,
      "node_id": "IC_kwDOABII586L-_c0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2348545844",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T09:58:29Z",
      "updated_at": "2024-09-13T09:58:29Z",
      "author_association": "MEMBER",
      "body": "Ping also @mzumsande, given you [expressed some reservations](https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1846077000) to this approach last time.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2348545844",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14246413057,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANRJwMB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14246413057",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T09:58:30Z"
    },
    {
      "event": "subscribed",
      "id": 14246413110,
      "node_id": "SE_lADOABII586TH7fOzwAAAANRJwM2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14246413110",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T09:58:30Z"
    },
    {
      "event": "commented",
      "id": 2349136997,
      "node_id": "IC_kwDOABII586MBPxl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349136997",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T14:47:57Z",
      "updated_at": "2024-09-13T14:47:57Z",
      "author_association": "MEMBER",
      "body": "(This is a repost, sorry about that)\r\n\r\n> It's a regression fuzz test for [#26355](https://github.com/bitcoin/bitcoin/pull/26355)\r\n\r\nShould this fuzzer fail if I make this line return the result from IsContinuationOfLowWorkHeadersSync?\r\nhttps://github.com/bitcoin/bitcoin/blob/cf0120ff024aa73a56f2975c832fda6aa8146dfa/src/net_processing.cpp#L2900\r\n\r\nI briefly fuzzed after making the change and didn't hit anything. Likely I just didn't fuzz enough, but posting just in case somebody has a fuzz output that I could use to verify.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349136997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2349247257,
      "node_id": "IC_kwDOABII586MBqsZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349247257",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T15:39:45Z",
      "updated_at": "2024-09-13T15:39:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Ping also @mzumsande, given you https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1846077000 to this approach last time.\r\n\r\nNo reservations with the current approach. Concept ACK, I haven't reviewed the actual fuzz target in detail (and don't know if I would get to that in time, considering this has already multiple acks).\r\n\r\nWould it make sense to additionally have some belt-and-suspenders check somewhere at the start of bitcoind that `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` is not set, so it's not only in the build system?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349247257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14250824899,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANRalTD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14250824899",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T15:39:46Z"
    },
    {
      "event": "subscribed",
      "id": 14250824917,
      "node_id": "SE_lADOABII586TH7fOzwAAAANRalTV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14250824917",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T15:39:46Z"
    },
    {
      "event": "commented",
      "id": 2349317870,
      "node_id": "IC_kwDOABII586MB77u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349317870",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T16:16:11Z",
      "updated_at": "2024-09-13T16:16:11Z",
      "author_association": "MEMBER",
      "body": ">Would it make sense to additionally have some belt-and-suspenders check somewhere at the start of bitcoind that FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION is not set, so it's not only in the build system?\r\n\r\nI guess we could (e.g. in `bitcoind.cpp`) do something like:\r\n\r\n```c++\r\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\r\nstatic_assert(false, \"bitcoind can't be build with FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\");\r\n#endif\r\n```\r\n\r\nBut I would be surprised if our existing tests do not already fail if bitcoind is accidentally compiled with `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION`. Something as fundamental as the pow check should be covered by our unit and functional tests.\r\n\r\nI think it would be better not to add anything like the above because one might fuzz bitcoind directly, e.g. we could consider dropping the custom honggfuzz netdriver patch and use `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` instead (https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md#fuzzing-the-bitcoin-core-p2p-layer-using-honggfuzz-netdriver). For such a fuzzing approach, having the blockers removed would be required as well.\r\n",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349317870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2349471125,
      "node_id": "IC_kwDOABII586MChWV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349471125",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:06:27Z",
      "updated_at": "2024-09-13T17:06:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I briefly fuzzed after making the change and didn't hit anything. Likely I just didn't fuzz enough, but posting just in case somebody has a fuzz output that I could use to verify.\r\n\r\nI left different mutations of it running overnight (12h+) and I also didn't get a crash for this one.\r\n\r\n> I think it would be better not to add anything like the above because one might fuzz bitcoind directly, e.g. we could consider dropping the custom honggfuzz netdriver patch and use FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION instead (https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md#fuzzing-the-bitcoin-core-p2p-layer-using-honggfuzz-netdriver). For such a fuzzing approach, having the blockers removed would be required as well.\r\n\r\nConcept ACK for this. Also, the custom honggfuzz netdriver patch is outdated.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349471125",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2349476460,
      "node_id": "IC_kwDOABII586MCips",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349476460",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:07:13Z",
      "updated_at": "2024-09-13T17:07:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I briefly fuzzed after making the change and didn't hit anything. Likely I just didn't fuzz enough, but posting just in case somebody has a fuzz output that I could use to verify.\r\n\r\n@glozow thanks for reviewing. I'm looking into this more. Good catch actually. Turns out I only partially reverted that commit when testing (only moved the `return true` out of the `else` in `TryLowWorkHeadersSync`). In that case, the fuzzer crashes on this line:\r\nhttps://github.com/bitcoin/bitcoin/blob/e43ce250c6fb65cc0c8903296c8ab228539d2204/src/net_processing.cpp#L3192\r\nI'm not quite sure why yet.\r\n\r\nAnyway, I'll fuzz over the weekend and (hopefully) get back to you with an input that should produce a crash with the full reversion of 7ad15d11005eac36421398530da127333d87ea80.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349476460",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14251873041,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANRelMR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14251873041",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:07:14Z"
    },
    {
      "event": "subscribed",
      "id": 14251873057,
      "node_id": "SE_lADOABII586TH7fOzwAAAANRelMh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14251873057",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:07:14Z"
    },
    {
      "event": "commented",
      "id": 2349486479,
      "node_id": "IC_kwDOABII586MClGP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2349486479",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:09:12Z",
      "updated_at": "2024-09-13T17:09:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I left different mutations of it running overnight (12h+) and I also didn't get a crash for this one.\r\n\r\nGood to know, thanks. I'll mark this PR as a draft for now until I figure what's going on.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2349486479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "convert_to_draft",
      "id": 14251901882,
      "node_id": "CTDE_lADOABII586TH7fOzwAAAANResO6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14251901882",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:09:24Z"
    },
    {
      "event": "ready_for_review",
      "id": 14269508667,
      "node_id": "RFRE_lADOABII586TH7fOzwAAAANSh2w7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14269508667",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:18:44Z"
    },
    {
      "event": "commented",
      "id": 2352408633,
      "node_id": "IC_kwDOABII586MNug5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2352408633",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:23:34Z",
      "updated_at": "2024-09-16T09:23:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think the use of FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION is a good approach.\r\n\r\nConcept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2352408633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "commented",
      "id": 2352420906,
      "node_id": "IC_kwDOABII586MNxgq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2352420906",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:29:51Z",
      "updated_at": "2024-09-16T09:29:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@brunoerg @glozow When you get the chance, try this input: [presync_crash.txt](https://github.com/user-attachments/files/17010767/presync_crash.txt)\r\n\r\nThe assert in the harness should fail with that input after reverting 7ad15d1",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2352420906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14269669222,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANSid9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14269669222",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:29:53Z"
    },
    {
      "event": "subscribed",
      "id": 14269669249,
      "node_id": "SE_lADOABII586TH7fOzwAAAANSid-B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14269669249",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:29:53Z"
    },
    {
      "event": "mentioned",
      "id": 14269669279,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANSid-f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14269669279",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:29:53Z"
    },
    {
      "event": "subscribed",
      "id": 14269669300,
      "node_id": "SE_lADOABII586TH7fOzwAAAANSid-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14269669300",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T09:29:53Z"
    },
    {
      "event": "commented",
      "id": 2352710746,
      "node_id": "IC_kwDOABII586MO4Ra",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2352710746",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T11:56:41Z",
      "updated_at": "2024-09-16T11:56:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The assert in the harness should fail with that input after reverting https://github.com/bitcoin/bitcoin/commit/7ad15d11005eac36421398530da127333d87ea80\r\n\r\nYes, confirmed! \r\n\r\n```sh\r\nAssertion failed: (WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size()) == original_index_size), function p2p_headers_presync_fuzz_target, file p2p_headers_presync.cpp, line 197.\r\n==80161== ERROR: libFuzzer: deadly signal\r\n    #0 0x107edce84 in __sanitizer_print_stack_trace+0x28 (libclang_rt.asan_osx_dynamic.dylib:arm64+0x5ce84)\r\n    #1 0x104a53b80 in fuzzer::PrintStackTrace() FuzzerUtil.cpp:210\r\n    #2 0x104a39bfc in fuzzer::Fuzzer::CrashCallback() FuzzerLoop.cpp:231\r\n    #3 0x18bec9a20 in _sigtramp+0x34 (libsystem_platform.dylib:arm64+0x3a20)\r\n    #4 0x454100018be99cbc  (<unknown module>)\r\n    #5 0x4b6a80018bda5a3c  (<unknown module>)\r\n    #6 0xdd7700018bda4d2c  (<unknown module>)\r\n    #7 0xa510800102909c48  (<unknown module>)\r\n    #8 0x102d403a8 in LLVMFuzzerTestOneInput fuzz.cpp:209\r\n    #9 0x104a3b024 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) FuzzerLoop.cpp:614\r\n    #10 0x104a27d68 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) FuzzerDriver.cpp:327\r\n    #11 0x104a2d000 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) FuzzerDriver.cpp:862\r\n    #12 0x104a54468 in main FuzzerMain.cpp:20\r\n    #13 0x18bb190dc  (<unknown module>)\r\n    #14 0xc6207ffffffffffc  (<unknown module>)\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2352710746",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "merged",
      "id": 14277458599,
      "node_id": "ME_lADOABII586TH7fOzwAAAANTALqn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14277458599",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2bf721e76a575e865518e5fe51f00ce975b70b6a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bf721e76a575e865518e5fe51f00ce975b70b6a",
      "created_at": "2024-09-16T17:59:42Z"
    },
    {
      "event": "closed",
      "id": 14277458653,
      "node_id": "CE_lADOABII586TH7fOzwAAAANTALrd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14277458653",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T17:59:43Z"
    },
    {
      "event": "commented",
      "id": 2356502855,
      "node_id": "IC_kwDOABII586MdWFH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2356502855",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T17:27:21Z",
      "updated_at": "2024-09-17T17:27:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Another follow up improvement I'd like is direct assertion that the \"chainwork\" of the header chain never exceed minimum chainwork, or if that is exceeded, we can drop the assertion that the chain never extends past genesis block.\r\n\r\nFollowup here: https://github.com/bitcoin/bitcoin/pull/30918\r\n\r\nAlso, I was mistaken in this [comment](https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1750661750). The test as is already does build a chain that is more than 16 headers long. So, there was no need to address this in the followup.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2356502855",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "reviewed",
      "id": 2285132178,
      "node_id": "PRR_kwDOABII586INFmS",
      "url": null,
      "actor": null,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-18T12:38:14Z",
      "author_association": "MEMBER",
      "body": "Nice.\r\n\r\nLeft some style nits. Feel free to ignore.\r\n\r\nIs there a set of fuzz inputs, or a coverage report?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2285132178",
      "submitted_at": "2024-09-18T12:38:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "commented",
      "id": 2361663097,
      "node_id": "IC_kwDOABII586MxB55",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2361663097",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T16:59:48Z",
      "updated_at": "2024-09-19T16:59:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko thanks for the review! Your comments make sense to me, I'll address them in the followup.\r\n\r\nI just added some inputs for this target to qa-assets. Here is a [coverage report](https://marcofleon.github.io/coverage/p2p_headers_presync/).",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2361663097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "mentioned",
      "id": 14327718420,
      "node_id": "MEE_lADOABII586TH7fOzwAAAANV_6IU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14327718420",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T16:59:50Z"
    },
    {
      "event": "subscribed",
      "id": 14327718482,
      "node_id": "SE_lADOABII586TH7fOzwAAAANV_6JS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14327718482",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T16:59:50Z"
    },
    {
      "event": "commented",
      "id": 2363634967,
      "node_id": "IC_kwDOABII586M4jUX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2363634967",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T12:33:57Z",
      "updated_at": "2024-09-20T12:33:57Z",
      "author_association": "MEMBER",
      "body": "Thanks! However, I think there was some kind of issue with the fuzz inputs, so that the macOS 14 CI ran into timeouts.\r\n\r\nI've removed them temporarily again in https://github.com/bitcoin-core/qa-assets/commit/84cea7068728bc2c765b9da680eedcb85f9f3c1b . This should allow for some time to investigate, while unbreaking the CI.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#issuecomment-2363634967",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30661"
    },
    {
      "event": "referenced",
      "id": 14344119772,
      "node_id": "REFE_lADOABII586TH7fOzwAAAANW-eXc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14344119772",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0894748316c5483063ceb6c3cd76d32febac35e9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0894748316c5483063ceb6c3cd76d32febac35e9",
      "created_at": "2024-09-20T18:35:12Z"
    },
    {
      "event": "reviewed",
      "id": 2330304805,
      "node_id": "PRR_kwDOABII586K5aEl",
      "url": null,
      "actor": null,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-26T07:07:22Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#pullrequestreview-2330304805",
      "submitted_at": "2024-09-26T07:07:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
    },
    {
      "event": "referenced",
      "id": 15084732079,
      "node_id": "REFE_lADOABII586TH7fOzwAAAAODHr6v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15084732079",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "commit_url": "https://api.github.com/repos/TheCharlatan/rust-bitcoinkernel/commits/8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "created_at": "2024-11-02T20:58:33Z"
    },
    {
      "event": "locked",
      "id": 19942146161,
      "node_id": "LOE_lADOABII586TH7fOzwAAAASkpQBx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19942146161",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-26T11:47:06Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723269955",
      "pull_request_review_id": 2247924410,
      "id": 1723269955,
      "node_id": "PRRC_kwDOABII585mtwND",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 51,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9d84717c92ed052dea6f78c715833d328835ba79 \"fuzz: Add harness for p2p headers sync\": Is there any reason to use `resize` instead of simply doing:\r\n```diff\r\ndiff --git a/src/test/fuzz/p2p_headers_sync.cpp b/src/test/fuzz/p2p_headers_sync.cpp\r\nindex 8de39431b8..f474263620 100644\r\n--- a/src/test/fuzz/p2p_headers_sync.cpp\r\n+++ b/src/test/fuzz/p2p_headers_sync.cpp\r\n@@ -48,10 +48,11 @@ void HeadersSyncSetup::ResetAndInitialize()\r\n     connman.StopNodes();\r\n \r\n     NodeId id{0};\r\n-    std::vector<ConnectionType> conn_types = {};\r\n-    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\r\n-    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\r\n-    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\r\n+    std::vector<ConnectionType> conn_types = {\r\n+        ConnectionType::OUTBOUND_FULL_RELAY,\r\n+        ConnectionType::BLOCK_RELAY,\r\n+        ConnectionType::INBOUND\r\n+    };\r\n```",
      "created_at": "2024-08-20T12:58:08Z",
      "updated_at": "2024-08-20T12:58:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1723269955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723269955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723759297",
      "pull_request_review_id": 2248736998,
      "id": 1723759297,
      "node_id": "PRRC_kwDOABII585mvnrB",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 181,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9d84717c92ed052dea6f78c715833d328835ba79 \"fuzz: Add harness for p2p headers sync\": I can be wrong but I think that when sending a compact block, the peer will always reject it due to low-work header or the PoW bypass would work here? ",
      "created_at": "2024-08-20T18:24:09Z",
      "updated_at": "2024-08-20T18:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1723759297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723759297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723967099",
      "pull_request_review_id": 2249078944,
      "id": 1723967099,
      "node_id": "PRRC_kwDOABII585mwaZ7",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 146,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    SetMockTime(base.nTime);\r\n```",
      "created_at": "2024-08-20T20:54:57Z",
      "updated_at": "2024-08-20T20:54:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1723967099",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723967099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725390683",
      "pull_request_review_id": 2251351313,
      "id": 1725390683,
      "node_id": "PRRC_kwDOABII585m119b",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 51,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": 1723269955,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, that's simpler. Fixed.",
      "created_at": "2024-08-21T16:31:58Z",
      "updated_at": "2024-08-21T16:31:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1725390683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725390683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725390903",
      "pull_request_review_id": 2251351750,
      "id": 1725390903,
      "node_id": "PRRC_kwDOABII585m12A3",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 146,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": 1723967099,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-08-21T16:32:08Z",
      "updated_at": "2024-08-21T16:32:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1725390903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725390903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725418870",
      "pull_request_review_id": 2251400720,
      "id": 1725418870,
      "node_id": "PRRC_kwDOABII585m1812",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 181,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": 1723759297,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, I think you're talking about this part here:\r\nhttps://github.com/bitcoin/bitcoin/blob/60b816439eb4bd837778d424628cd3978e0856d9/src/net_processing.cpp#L4754-L4758\r\n\r\nIt was added as a bug fix in https://github.com/bitcoin/bitcoin/pull/25717/commits/ed6cddd98e32263fc116a4380af6d66da20da990 and is part of what this harness is meant to test. If you remove that code from `net_processing` and run this test, it should crash. ",
      "created_at": "2024-08-21T16:52:46Z",
      "updated_at": "2024-08-21T16:52:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1725418870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725418870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725475551",
      "pull_request_review_id": 2251498177,
      "id": 1725475551,
      "node_id": "PRRC_kwDOABII585m2Krf",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 181,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "9d84717c92ed052dea6f78c715833d328835ba79",
      "in_reply_to_id": 1723759297,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cool, thank you.",
      "created_at": "2024-08-21T17:39:33Z",
      "updated_at": "2024-08-21T17:39:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1725475551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725475551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1728873486",
      "pull_request_review_id": 2257087050,
      "id": 1728873486,
      "node_id": "PRRC_kwDOABII585nDIQO",
      "diff_hunk": "@@ -134,7 +134,18 @@ bool PermittedDifficultyTransition(const Consensus::Params& params, int64_t heig\n     return true;\n }\n \n+// Bypasses the actual proof of work check during fuzz testing with a simplified validation checking whether\n+// the most signficant bit of the last byte of the hash is set.\n bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params& params)\n+{\n+#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION",
      "path": "src/pow.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "4e87dcc205ba2bb7996dc077ad46b1b1e309dd8e",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the use of `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` is a good approach. `CheckProofOfWorkImpl` will always be a blocker in fuzz tests, so getting it out of the way for all harnesses that aren't testing the check itself makes sense.",
      "created_at": "2024-08-23T12:14:06Z",
      "updated_at": "2024-08-23T12:14:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1728873486",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1728873486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745881799",
      "pull_request_review_id": 2283624126,
      "id": 1745881799,
      "node_id": "PRRC_kwDOABII585oEArH",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(base.nTime);\n+\n+    // The chain is just a single block, so this is equal to 1\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 156,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "won't this always build off genesis?",
      "created_at": "2024-09-05T16:56:14Z",
      "updated_at": "2024-09-05T17:20:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1745881799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745881799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745887683",
      "pull_request_review_id": 2283624126,
      "id": 1745887683,
      "node_id": "PRRC_kwDOABII585oECHD",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(base.nTime);\n+\n+    // The chain is just a single block, so this is equal to 1\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        // Send low-work headers, compact blocks, and blocks\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a block\n+                auto block = finalized_block();\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::BLOCK, TX_WITH_WITNESS(block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            });\n+    }\n+\n+    // The headers/blocks sent in this test should never be stored, as the chains don't have the work required\n+    // to meet the anti-DoS work threshold. So, if at any point the block index grew in size, then there's a bug",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 197,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I modified this harness to use `REGTEST` chainparams with a minimum chainwork setting of `0x0` and the harness has yet to fail, fwiw. \r\n\r\nMight need to make sure this harness is getting deep enough to actually check what's being intended?",
      "created_at": "2024-09-05T17:01:04Z",
      "updated_at": "2024-09-05T17:20:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1745887683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745887683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745889618",
      "pull_request_review_id": 2283624126,
      "id": 1745889618,
      "node_id": "PRRC_kwDOABII585oEClS",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 136,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's clearer to name this `p2p_headers_presync` as well as the file.",
      "created_at": "2024-09-05T17:02:49Z",
      "updated_at": "2024-09-05T17:20:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1745889618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745889618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746614616",
      "pull_request_review_id": 2285132178,
      "id": 1746614616,
      "node_id": "PRRC_kwDOABII585oGzlY",
      "diff_hunk": "@@ -71,6 +74,8 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n         //! Whether or not the internal RNG behaves deterministically (this is\n         //! a test-only option).\n         bool deterministic_rng{false};\n+        //! Number of headers sent in one getheaders message result.",
      "path": "src/net_processing.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 0c02d4b2bdbc7a3fc3031a63b3b16bafa669d51c: Looks like this is a test-only option, like the previous one, so would it not make sense to mention this as well?",
      "created_at": "2024-09-06T07:10:47Z",
      "updated_at": "2024-09-18T12:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1746614616",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746614616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 77,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750661750",
      "pull_request_review_id": 2290548658,
      "id": 1750661750,
      "node_id": "PRRC_kwDOABII585oWPp2",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(base.nTime);\n+\n+    // The chain is just a single block, so this is equal to 1\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 156,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": 1745881799,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, fixed. This also made me realize that I don't really need the loop. But I'm thinking to do a followup where it would build on the chain of 16 headers, as opposed to just sending 16 headers one time and resetting. So I think I'll keep the loop there for now, as it shouldn't make a difference as far as I'm aware.",
      "created_at": "2024-09-09T17:39:26Z",
      "updated_at": "2024-09-09T17:39:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1750661750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750661750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750674964",
      "pull_request_review_id": 2290570198,
      "id": 1750674964,
      "node_id": "PRRC_kwDOABII585oWS4U",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(base.nTime);\n+\n+    // The chain is just a single block, so this is equal to 1\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        // Send low-work headers, compact blocks, and blocks\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a block\n+                auto block = finalized_block();\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::BLOCK, TX_WITH_WITNESS(block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            });\n+    }\n+\n+    // The headers/blocks sent in this test should never be stored, as the chains don't have the work required\n+    // to meet the anti-DoS work threshold. So, if at any point the block index grew in size, then there's a bug",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 197,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": 1745887683,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "With REGTEST enabled, it's blocked here:\r\nhttps://github.com/bitcoin/bitcoin/blob/712a2b5453cdf2568fece94b969d6e0923b6ba16/src/validation.cpp#L4204-L4209\r\n\r\nUsing MAIN params it passes because those soft forks aren't deployed and so the header is added to the block index and you'll get the failure. I could add `header.nVersion = 4` in the `ConsumeHeader` function of the harness to make it pass for both main and regtest. What do you think?",
      "created_at": "2024-09-09T17:48:11Z",
      "updated_at": "2024-09-09T17:48:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1750674964",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750674964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750676867",
      "pull_request_review_id": 2290572944,
      "id": 1750676867,
      "node_id": "PRRC_kwDOABII585oWTWD",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 136,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": 1745889618,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good suggestion, thank you.",
      "created_at": "2024-09-09T17:49:44Z",
      "updated_at": "2024-09-09T17:49:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1750676867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750676867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750677345",
      "pull_request_review_id": 2290573664,
      "id": 1750677345,
      "node_id": "PRRC_kwDOABII585oWTdh",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(base.nTime);\n+\n+    // The chain is just a single block, so this is equal to 1\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        // Send low-work headers, compact blocks, and blocks\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send FUZZ_MAX_HEADERS_RESULTS headers\n+                std::vector<CBlock> headers;\n+                headers.resize(FUZZ_MAX_HEADERS_RESULTS);\n+                for (CBlock& header : headers) {\n+                    header = ConsumeHeader(fuzzed_data_provider, base.GetHash(), base.nBits);\n+                    FinalizeHeader(header);\n+                    base = header;\n+                }\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::HEADERS, TX_WITH_WITNESS(headers));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a compact block\n+                auto block = finalized_block();\n+                CBlockHeaderAndShortTxIDs cmpct_block{block, fuzzed_data_provider.ConsumeIntegral<uint64_t>()};\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::CMPCTBLOCK, TX_WITH_WITNESS(cmpct_block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            },\n+            [&]() NO_THREAD_SAFETY_ANALYSIS {\n+                // Send a block\n+                auto block = finalized_block();\n+\n+                auto headers_msg = NetMsg::Make(NetMsgType::BLOCK, TX_WITH_WITNESS(block));\n+                g_testing_setup->SendMessage(fuzzed_data_provider, std::move(headers_msg));\n+            });\n+    }\n+\n+    // The headers/blocks sent in this test should never be stored, as the chains don't have the work required\n+    // to meet the anti-DoS work threshold. So, if at any point the block index grew in size, then there's a bug",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 1,
      "original_position": 197,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "787232638f987fe34a71a26d36bb5645a8a7be50",
      "in_reply_to_id": 1745887683,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let the fuzzer choose the version, I think?",
      "created_at": "2024-09-09T17:50:08Z",
      "updated_at": "2024-09-09T17:50:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1750677345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750677345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764943665",
      "pull_request_review_id": 2285132178,
      "id": 1764943665,
      "node_id": "PRRC_kwDOABII585pMucx",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})",
      "path": "src/test/fuzz/p2p_headers_presync.cpp",
      "position": 24,
      "original_position": 24,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Any reason to specify default values when they are not used?",
      "created_at": "2024-09-18T12:12:10Z",
      "updated_at": "2024-09-18T12:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1764943665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764943665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": 23,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764961991",
      "pull_request_review_id": 2285132178,
      "id": 1764961991,
      "node_id": "PRRC_kwDOABII585pMy7H",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    connman.FlushSendBuffer(connection);\n+    (void)connman.ReceiveMsgFrom(connection, std::move(msg));\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = ConsumeTime(fuzzed_data_provider);\n+    header.hashPrevBlock = prev_hash;\n+    header.nVersion = fuzzed_data_provider.ConsumeIntegral<int32_t>();\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // In order to reach the headers acceptance logic, the block is\n+    // constructed in a way that will pass the mutation checks.\n+    CBlock block{header};\n+    CMutableTransaction tx;\n+    tx.vin.resize(1);\n+    tx.vout.resize(1);\n+    tx.vout[0].nValue = 0;\n+    tx.vin[0].scriptSig.resize(2);\n+    block.vtx.push_back(MakeTransactionRef(tx));\n+    block.hashMerkleRoot = block.vtx[0]->GetHash();\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {.extra_args = {\"-checkpoints=0\"}});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_presync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};",
      "path": "src/test/fuzz/p2p_headers_presync.cpp",
      "position": 147,
      "original_position": 147,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit: When there is a local alias of a global, my preference is to use the local: `chainman.GetParams()`, over `Params()`, but up to you. (Same for FinalizeHeader)",
      "created_at": "2024-09-18T12:25:28Z",
      "updated_at": "2024-09-18T12:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1764961991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764961991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 147,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776500085",
      "pull_request_review_id": 2330304805,
      "id": 1776500085,
      "node_id": "PRRC_kwDOABII585p4z11",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(",
      "path": "src/test/fuzz/p2p_headers_presync.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Without a socket (second argument to `CNode` constructor is `nullptr`) this will not test much of the handshake:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/65f6e7078b17e6e73d74dfeb00159878099fee1e/src/net.cpp#L1600-L1605\r\n\r\nAny special reason to go socket-less? I am working on a `CConnman` refactor that is changing this anyway, should I assign a fuzzed socket to the node?",
      "created_at": "2024-09-26T07:07:19Z",
      "updated_at": "2024-09-26T07:07:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1776500085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776500085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": 59,
      "original_start_line": 59,
      "start_side": "RIGHT",
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776526638",
      "pull_request_review_id": 2330345801,
      "id": 1776526638,
      "node_id": "PRRC_kwDOABII585p46Uu",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     TestOpts opts = {})\n+        : TestingSetup(chain_type, opts)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, *m_node.warnings, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {\n+        ConnectionType::OUTBOUND_FULL_RELAY,\n+        ConnectionType::BLOCK_RELAY,\n+        ConnectionType::INBOUND\n+    };\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(",
      "path": "src/test/fuzz/p2p_headers_presync.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "original_commit_id": "a97f43d63a6e835bae20b0bc5d536df98f55d8a0",
      "in_reply_to_id": 1776500085,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Send and receive doesn't go through sockets in this test. `Handshake` is just a method to initialize some fields with dummy or mocked data.\r\n\r\nEdit: Whether or not a socket is used shouldn't matter for this test, which is a net_processing/validation test, not a low-level net test.",
      "created_at": "2024-09-26T07:27:29Z",
      "updated_at": "2024-09-26T07:29:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30661#discussion_r1776526638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776526638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30661"
        }
      },
      "start_line": 59,
      "original_start_line": 59,
      "start_side": "RIGHT",
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    }
  ]
}