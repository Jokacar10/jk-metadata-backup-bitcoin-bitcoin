{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896",
    "id": 2647774764,
    "node_id": "PR_kwDOABII586d0dYs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32896",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32896.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32896.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a2c43c3b9447377d2f2635e23c9043e40b769dd4",
    "number": 32896,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "wallet, rpc: add v3 transaction creation and wallet support",
    "user": {
      "login": "ishaanam",
      "id": 75942586,
      "node_id": "MDQ6VXNlcjc1OTQyNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ishaanam",
      "html_url": "https://github.com/ishaanam",
      "followers_url": "https://api.github.com/users/ishaanam/followers",
      "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
      "organizations_url": "https://api.github.com/users/ishaanam/orgs",
      "repos_url": "https://api.github.com/users/ishaanam/repos",
      "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ishaanam/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR Implements the following:\r\n- If creating a v3 transaction, `AvailableCoins` doesn't return unconfirmed v2 utxos (and vice versa)\r\n- `AvailableCoins` doesn't return an unconfirmed v3 utxo if its transaction already has a child\r\n- If a v3 transaction is kicked out of the mempool by a sibling, mark the sibling as a mempool conflict\r\n- Throw an error if pre-selected inputs are of the wrong transaction version\r\n- Allow setting version to 3 manually in `createrawtransaction` (uses commits from #31936)\r\n- Limits a v3 transaction weight in coin selection\r\n\r\nCloses #31348\r\n\r\nTo-Do:\r\n- [x] Test a v3 sibling conflict kicking out one of our transactions from the mempool\r\n- [x] Implement separate size limit for TRUC children\r\n- [x] Test that we can't fund a v2 transaction when everything is v3 unconfirmed\r\n- [x] Test a v3 sibling conflict being removed from the mempool\r\n- [x] Test limiting v3 transaction weight in coin selection\r\n- [x] Simplify tests\r\n- [x] Add documentation \r\n- [x] Test that user-input max weight is not overwritten by truc max weight\r\n- [x] Test v3 in RPCs other than `createrawtransaction`",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/72",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72/labels",
      "id": 12172984,
      "node_id": "MI_kwDOABII584Aub64",
      "number": 72,
      "state": "open",
      "title": "30.0",
      "description": "",
      "creator": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "open_issues": 11,
      "closed_issues": 41,
      "created_at": "2025-01-15T19:21:36Z",
      "updated_at": "2025-08-01T14:45:25Z"
    },
    "created_at": "2025-07-07T20:13:59Z",
    "updated_at": "2025-08-01T19:38:39Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "9182b88ca9aa5b250cd686f8ca45288e447042ac",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ishaanam:wallet_v3_txs",
      "ref": "wallet_v3_txs",
      "sha": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 462046293,
        "node_id": "R_kgDOG4pEVQ",
        "name": "bitcoin",
        "full_name": "ishaanam/bitcoin",
        "owner": {
          "login": "ishaanam",
          "id": 75942586,
          "node_id": "MDQ6VXNlcjc1OTQyNTg2",
          "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ishaanam",
          "html_url": "https://github.com/ishaanam",
          "followers_url": "https://api.github.com/users/ishaanam/followers",
          "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
          "organizations_url": "https://api.github.com/users/ishaanam/orgs",
          "repos_url": "https://api.github.com/users/ishaanam/repos",
          "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ishaanam/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ishaanam/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ishaanam/bitcoin",
        "archive_url": "https://api.github.com/repos/ishaanam/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ishaanam/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ishaanam/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ishaanam/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ishaanam/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ishaanam/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ishaanam/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ishaanam/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ishaanam/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ishaanam/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ishaanam/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ishaanam/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ishaanam/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ishaanam/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ishaanam/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ishaanam/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ishaanam/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ishaanam/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ishaanam/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ishaanam/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ishaanam/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ishaanam/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ishaanam/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ishaanam/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ishaanam/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ishaanam/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ishaanam/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ishaanam/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ishaanam/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ishaanam/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ishaanam/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ishaanam/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ishaanam/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ishaanam/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ishaanam/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ishaanam/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ishaanam/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ishaanam/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ishaanam/bitcoin/hooks",
        "svn_url": "https://github.com/ishaanam/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 279088,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-01T19:50:17Z",
        "created_at": "2022-02-21T22:03:42Z",
        "updated_at": "2025-08-01T17:43:07Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3cb65ffa83d43709b9ac091b35eaed2517ccbcc1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37595,
        "stargazers_count": 84850,
        "watchers_count": 84850,
        "size": 290069,
        "default_branch": "master",
        "open_issues_count": 748,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-01T15:06:44Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-01T17:46:21Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 737,
    "deletions": 29,
    "changed_files": 23,
    "commits": 11,
    "review_comments": 94,
    "comments": 9
  },
  "events": [
    {
      "event": "commented",
      "id": 3046400194,
      "node_id": "IC_kwDOABII5861lGDC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3046400194",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T20:14:04Z",
      "updated_at": "2025-08-01T08:33:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32896.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-2998494185), [rkrux](https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3020910288), [murchandamus](https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3040093165) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32983](https://github.com/bitcoin/bitcoin/pull/32983) (rpc: refactor: use string_view in Arg/MaybeArg by stickies-v)\n* [#32857](https://github.com/bitcoin/bitcoin/pull/32857) (wallet: allow skipping script paths by Sjors)\n* [#32523](https://github.com/bitcoin/bitcoin/pull/32523) (wallet: Remove isminetypes by achow101)\n* [#21283](https://github.com/bitcoin/bitcoin/pull/21283) (Implement BIP 370 PSBTv2 by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3046400194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18512237200,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARPalKQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18512237200",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0b5416122a8e2014e96767a9ccd269bcb714aa02",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/0b5416122a8e2014e96767a9ccd269bcb714aa02",
      "created_at": "2025-07-07T20:18:56Z"
    },
    {
      "event": "labeled",
      "id": 18512240505,
      "node_id": "LE_lADOABII586_VswkzwAAAARPal95",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18512240505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T20:19:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3046411869,
      "node_id": "IC_kwDOABII5861lI5d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3046411869",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T20:19:15Z",
      "updated_at": "2025-07-07T20:19:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/45505893140</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a lint error due to a file permission issue with a Python script that has a shebang line but incorrect executable permissions.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3046411869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18528888651,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARQaGdL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18528888651",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/75d606c5648f8d679e69f1daa795e0ba1b624794",
      "created_at": "2025-07-08T15:18:36Z"
    },
    {
      "event": "reviewed",
      "id": 2998494185,
      "node_id": "PRR_kwDOABII586yuWPp",
      "url": null,
      "actor": null,
      "commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice, concept ACK! Saw that these tests fail on #31936, which is helpful for showing its issues. Ultimately, I think the wallet commits should be introduced before the RPC ones.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-2998494185",
      "submitted_at": "2025-07-08T17:41:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18532637896,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARQoZzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18532637896",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e8a200e5e4812f14d9c098c27cca9efa02122761",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/e8a200e5e4812f14d9c098c27cca9efa02122761",
      "created_at": "2025-07-08T19:21:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18532941546,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARQpj7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18532941546",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0d3a7677a706a60b6eed64f46a0039193c79830d",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/0d3a7677a706a60b6eed64f46a0039193c79830d",
      "created_at": "2025-07-08T19:44:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18533916982,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARQtSE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18533916982",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "created_at": "2025-07-08T21:02:57Z"
    },
    {
      "event": "reviewed",
      "id": 3000189728,
      "node_id": "PRR_kwDOABII586y00Mg",
      "url": null,
      "actor": null,
      "commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3000189728",
      "submitted_at": "2025-07-09T06:27:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18552468458,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARR0DPq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18552468458",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5b0e65423b0bad9d792ae2a921e1faab58d0a534",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/5b0e65423b0bad9d792ae2a921e1faab58d0a534",
      "created_at": "2025-07-09T19:38:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18552767443,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARR1MPT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18552767443",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0188a16a6d0af103b9328651d82d23539405d4aa",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/0188a16a6d0af103b9328651d82d23539405d4aa",
      "created_at": "2025-07-09T20:01:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18553103414,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARR2eQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18553103414",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "012ccc025d3e6a81b88e6fa1299a3b2622659662",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/012ccc025d3e6a81b88e6fa1299a3b2622659662",
      "created_at": "2025-07-09T20:27:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18570900242,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARS6XMS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18570900242",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2fef28ede4b6794241cd0e7079d05008f9fd54de",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/2fef28ede4b6794241cd0e7079d05008f9fd54de",
      "created_at": "2025-07-10T17:55:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18571903008,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARS-MAg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18571903008",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c6cb62e8d2e2e6010b0ba16e02ee0e3428e5f885",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/c6cb62e8d2e2e6010b0ba16e02ee0e3428e5f885",
      "created_at": "2025-07-10T19:03:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18573620788,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARTEvY0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18573620788",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7ded135089b8247f0e251318e3961df0e95ac0f4",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/7ded135089b8247f0e251318e3961df0e95ac0f4",
      "created_at": "2025-07-10T20:54:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18609280354,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARVMxVi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18609280354",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eee86957be47eca367de43858e81da15b9e352e0",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/eee86957be47eca367de43858e81da15b9e352e0",
      "created_at": "2025-07-14T03:34:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18618968043,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARVxufr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18618968043",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ca97f19d64c6c6d98cec6117272a3334f8f4d785",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/ca97f19d64c6c6d98cec6117272a3334f8f4d785",
      "created_at": "2025-07-14T14:05:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18619724364,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARV0nJM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18619724364",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "created_at": "2025-07-14T14:45:04Z"
    },
    {
      "event": "ready_for_review",
      "id": 18619733414,
      "node_id": "RFRE_lADOABII586_VswkzwAAAARV0pWm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18619733414",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T14:45:32Z"
    },
    {
      "event": "commented",
      "id": 3069883620,
      "node_id": "IC_kwDOABII5862-rTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3069883620",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T14:46:42Z",
      "updated_at": "2025-07-14T14:46:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "This PR is now ready for review.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3069883620",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "labeled",
      "id": 18623246336,
      "node_id": "LE_lADOABII586_VswkzwAAAARWCDAA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18623246336",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T18:12:06Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 18623246346,
      "node_id": "LE_lADOABII586_VswkzwAAAARWCDAK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18623246346",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T18:12:06Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "unlabeled",
      "id": 18623919498,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARWEnWK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18623919498",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T18:56:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3020910288,
      "node_id": "PRR_kwDOABII5860D27Q",
      "url": null,
      "actor": null,
      "commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK b3817a822054fb2ea2964535b5a0ee55dd5d55ac\r\nThanks for picking this up, I will try to review it soon.\r\n\r\nThe TODOs seem to be done and can be removed from the PR description.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3020910288",
      "submitted_at": "2025-07-15T15:17:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "reviewed",
      "id": 3021245623,
      "node_id": "PRR_kwDOABII5860FIy3",
      "url": null,
      "actor": null,
      "commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3021245623",
      "submitted_at": "2025-07-15T16:47:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18646282030,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARXZ68u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18646282030",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "657d153c26c2491e6e04ba135e7ac22658a0c110",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/657d153c26c2491e6e04ba135e7ac22658a0c110",
      "created_at": "2025-07-15T20:27:37Z"
    },
    {
      "event": "labeled",
      "id": 18648359471,
      "node_id": "LE_lADOABII586_VswkzwAAAARXh2Iv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18648359471",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T23:39:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3076074331,
      "node_id": "IC_kwDOABII5863WStb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3076074331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T23:39:31Z",
      "updated_at": "2025-07-15T23:39:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `macOS-cross, gui, no tests`: https://github.com/bitcoin/bitcoin/runs/46044194546</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a linker error due to an undefined symbol in RPCHelpMan.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3076074331",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "reviewed",
      "id": 3023385092,
      "node_id": "PRR_kwDOABII5860NTIE",
      "url": null,
      "actor": null,
      "commit_id": "657d153c26c2491e6e04ba135e7ac22658a0c110",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3023385092",
      "submitted_at": "2025-07-16T06:41:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18660520039,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARYQPBn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18660520039",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "827fdc4904d8dd33609e7042ecf2c5429a23690f",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/827fdc4904d8dd33609e7042ecf2c5429a23690f",
      "created_at": "2025-07-16T14:13:52Z"
    },
    {
      "event": "unlabeled",
      "id": 18663734437,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARYcfyl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18663734437",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-16T16:53:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3026497105,
      "node_id": "PRR_kwDOABII5860ZK5R",
      "url": null,
      "actor": null,
      "commit_id": "827fdc4904d8dd33609e7042ecf2c5429a23690f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3026497105",
      "submitted_at": "2025-07-16T20:06:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18684732384,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARZsmPg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18684732384",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3122ca2128d8a1856103e299a470133efbe16ef9",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/3122ca2128d8a1856103e299a470133efbe16ef9",
      "created_at": "2025-07-17T17:23:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18684838434,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARZtAIi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18684838434",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5958bd194a9167fd31f75eb49086a6ac484d06f6",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/5958bd194a9167fd31f75eb49086a6ac484d06f6",
      "created_at": "2025-07-17T17:30:22Z"
    },
    {
      "event": "labeled",
      "id": 18684840828,
      "node_id": "LE_lADOABII586_VswkzwAAAARZtAt8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18684840828",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T17:30:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3084879554,
      "node_id": "IC_kwDOABII586334bC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3084879554",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T17:30:33Z",
      "updated_at": "2025-07-17T17:30:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/46200015717</sub>\n<sub>LLM reason (✨ experimental): The failure is caused by lint errors detected by `ruff` due to unused imports in Python files.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3084879554",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18684993989,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARZtmHF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18684993989",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "083886e2c00b0e811348bda5854979d6a0482f91",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/083886e2c00b0e811348bda5854979d6a0482f91",
      "created_at": "2025-07-17T17:41:03Z"
    },
    {
      "event": "commented",
      "id": 3084977883,
      "node_id": "IC_kwDOABII58634Qbb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3084977883",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T18:08:04Z",
      "updated_at": "2025-07-17T18:08:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review @glozow! I've addressed your comments and also refactored a few of the functional tests.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3084977883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "mentioned",
      "id": 18685378738,
      "node_id": "MEE_lADOABII586_VswkzwAAAARZvECy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18685378738",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T18:08:05Z"
    },
    {
      "event": "subscribed",
      "id": 18685378754,
      "node_id": "SE_lADOABII586_VswkzwAAAARZvEDC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18685378754",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T18:08:05Z"
    },
    {
      "event": "unlabeled",
      "id": 18687298672,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARZ2Yxw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18687298672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T20:19:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 18707713468,
      "node_id": "LE_lADOABII586_VswkzwAAAARbEQ28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18707713468",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-18T21:43:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5MTBkOWI2MWYyM2Y2NTMzNTM2N2YyZjhkZDAyMWFjMWNjZDkwN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1910d9b61f23f65335367f2f8dd021ac1ccd907a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1910d9b61f23f65335367f2f8dd021ac1ccd907a",
      "tree": {
        "sha": "9fcdee2bd6e29c2c3f120d9c7a2eeef6feb9b49c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fcdee2bd6e29c2c3f120d9c7a2eeef6feb9b49c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11c6a864c9ee3a9bbd65720517fd22c155fd9060",
          "sha": "11c6a864c9ee3a9bbd65720517fd22c155fd9060",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11c6a864c9ee3a9bbd65720517fd22c155fd9060"
        }
      ],
      "message": "wallet: unconfirmed ancestors and descendants are always truc",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-21T14:45:26Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-02T19:56:28Z"
      },
      "sha": "1910d9b61f23f65335367f2f8dd021ac1ccd907a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18731100487,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARcdelH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18731100487",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "62c66fec9b8d9c51bb47ccf39c48887c8b80b067",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/62c66fec9b8d9c51bb47ccf39c48887c8b80b067",
      "created_at": "2025-07-21T15:00:36Z"
    },
    {
      "event": "unlabeled",
      "id": 18731493846,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARce-nW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18731493846",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T15:20:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3040093165,
      "node_id": "PRR_kwDOABII5861NCPt",
      "url": null,
      "actor": null,
      "commit_id": "62c66fec9b8d9c51bb47ccf39c48887c8b80b067",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3040093165",
      "submitted_at": "2025-07-21T23:16:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18777563488,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARfOuFg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18777563488",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5f3dbfe17cde2d17e515bffcd99d2a8260b5c981",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/5f3dbfe17cde2d17e515bffcd99d2a8260b5c981",
      "created_at": "2025-07-23T15:43:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18777641202,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARfPBDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18777641202",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ddad6af1319084104961ae28af0e91cc126edb09",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/ddad6af1319084104961ae28af0e91cc126edb09",
      "created_at": "2025-07-23T15:47:04Z"
    },
    {
      "event": "labeled",
      "id": 18777655081,
      "node_id": "LE_lADOABII586_VswkzwAAAARfPEcp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18777655081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-23T15:47:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3109193463,
      "node_id": "IC_kwDOABII5865Uob3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3109193463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-23T15:47:46Z",
      "updated_at": "2025-07-23T15:47:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/46575305874</sub>\n<sub>LLM reason (✨ experimental): Lint errors caused by f-string syntax issues caused the CI failure.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3109193463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18777777961,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARfPicp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18777777961",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "208bc42a2ff0ebd07c1301c5102a28d99c38a6a1",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/208bc42a2ff0ebd07c1301c5102a28d99c38a6a1",
      "created_at": "2025-07-23T15:52:46Z"
    },
    {
      "event": "reviewed",
      "id": 3048555517,
      "node_id": "PRR_kwDOABII5861tUP9",
      "url": null,
      "actor": null,
      "commit_id": "208bc42a2ff0ebd07c1301c5102a28d99c38a6a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3048555517",
      "submitted_at": "2025-07-23T18:39:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "unlabeled",
      "id": 18780590163,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARfaRBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18780590163",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-23T18:43:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3051854806,
      "node_id": "PRR_kwDOABII586155vW",
      "url": null,
      "actor": null,
      "commit_id": "208bc42a2ff0ebd07c1301c5102a28d99c38a6a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks pretty good! Generally, I prefer more detailed comments when the code is not 100% self-explanatory, particularly for the confusing areas like mempool conflicts",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3051854806",
      "submitted_at": "2025-07-24T15:14:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdmNDNiNTU1OWM1ZjUwOGFjMjEwMzUwODQ3YmNhNmYwZjBlMDkxYmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f43b5559c5f508ac210350847bca6f0f0e091be",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7f43b5559c5f508ac210350847bca6f0f0e091be",
      "tree": {
        "sha": "419d4fc48baa31b12a26b96853c72ff5ce9e4b71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/419d4fc48baa31b12a26b96853c72ff5ce9e4b71"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1910d9b61f23f65335367f2f8dd021ac1ccd907a",
          "sha": "1910d9b61f23f65335367f2f8dd021ac1ccd907a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1910d9b61f23f65335367f2f8dd021ac1ccd907a"
        }
      ],
      "message": " wallet: don't include unconfirmed v3 txs with children in available coins",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T14:22:53Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-08T19:09:16Z"
      },
      "sha": "7f43b5559c5f508ac210350847bca6f0f0e091be"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlM2E3ZjZlZTZjZGFjZTk1NDJjMGI5ZTE2M2IzNDQ3NzIzY2I5NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e3a7f6ee6cdace9542c0b9e163b3447723cb942",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e3a7f6ee6cdace9542c0b9e163b3447723cb942",
      "tree": {
        "sha": "9166d2d589b086433061aa7049f46f717c380018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9166d2d589b086433061aa7049f46f717c380018"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f43b5559c5f508ac210350847bca6f0f0e091be",
          "sha": "7f43b5559c5f508ac210350847bca6f0f0e091be",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7f43b5559c5f508ac210350847bca6f0f0e091be"
        }
      ],
      "message": "wallet: set m_version in coin control to default value\n\nIn future commits we assume that coin_control.m_version has a\nvalue when making sure that we follow truc rules, so we should\ngive it a default value of CTransaction::CURRENT_VERSION.",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T14:22:59Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-23T14:36:38Z"
      },
      "sha": "5e3a7f6ee6cdace9542c0b9e163b3447723cb942"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkNDM2NDgwZjRjODk4YWNjMDExNTBiZjAyMTM4NDg4ZGIwNDVlZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd436480f4c898acc01150bf02138488db045efc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd436480f4c898acc01150bf02138488db045efc",
      "tree": {
        "sha": "4985f1f204af3c82a66de74b9dedb9a5ea4d0a4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4985f1f204af3c82a66de74b9dedb9a5ea4d0a4c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e3a7f6ee6cdace9542c0b9e163b3447723cb942",
          "sha": "5e3a7f6ee6cdace9542c0b9e163b3447723cb942",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e3a7f6ee6cdace9542c0b9e163b3447723cb942"
        }
      ],
      "message": "wallet: throw error at conflicting tx versions in pre-selected inputs",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T14:48:28Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-08T19:10:00Z"
      },
      "sha": "fd436480f4c898acc01150bf02138488db045efc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjOTEwYzUwOTEwODhjODA4MWNmYWUxZjMxNDk5YzA0ODY2ODJhNmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac910c5091088c8081cfae1f31499c0486682a6a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac910c5091088c8081cfae1f31499c0486682a6a",
      "tree": {
        "sha": "8f989d5d2a280bb5b28c6a6c0036cdbb8938054a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f989d5d2a280bb5b28c6a6c0036cdbb8938054a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd436480f4c898acc01150bf02138488db045efc",
          "sha": "fd436480f4c898acc01150bf02138488db045efc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd436480f4c898acc01150bf02138488db045efc"
        }
      ],
      "message": "wallet: mark unconfirmed v3 siblings as mempool conflicts",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T14:48:31Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-08T15:14:58Z"
      },
      "sha": "ac910c5091088c8081cfae1f31499c0486682a6a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0YzNjMWExMTdlMDFiYjM5YjA2MTRiOGUxYWYzYTFmYTcwMzEzM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84c3c1a117e01bb39b0614b8e1af3a1fa703133b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84c3c1a117e01bb39b0614b8e1af3a1fa703133b",
      "tree": {
        "sha": "542a980676e14fccf874764567c35e5742939f4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/542a980676e14fccf874764567c35e5742939f4e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac910c5091088c8081cfae1f31499c0486682a6a",
          "sha": "ac910c5091088c8081cfae1f31499c0486682a6a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac910c5091088c8081cfae1f31499c0486682a6a"
        }
      ],
      "message": "wallet: limit v3 tx weight in coin selection",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T15:02:05Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-07T20:09:01Z"
      },
      "sha": "84c3c1a117e01bb39b0614b8e1af3a1fa703133b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5ZDI0ODA3OTE0ZTUxYWZmOTRlMTBhNWM2MzgxOTM4MDczYzM4ZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9d24807914e51aff94e10a5c6381938073c38fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d24807914e51aff94e10a5c6381938073c38fd",
      "tree": {
        "sha": "faadc8d608eb082c82eb3d5451e962c00535852c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faadc8d608eb082c82eb3d5451e962c00535852c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84c3c1a117e01bb39b0614b8e1af3a1fa703133b",
          "sha": "84c3c1a117e01bb39b0614b8e1af3a1fa703133b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/84c3c1a117e01bb39b0614b8e1af3a1fa703133b"
        }
      ],
      "message": "rpc: Add version parameter for transaction",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-28T15:14:24Z"
      },
      "author": {
        "name": "Bue-von-hon",
        "email": "dkssudvn2@gmail.com",
        "date": "2025-04-26T01:32:30Z"
      },
      "sha": "a9d24807914e51aff94e10a5c6381938073c38fd"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18862090497,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARkRKkB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862090497",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "78a4989908b9b62a11446b4f97ab340b5f99679b",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/78a4989908b9b62a11446b4f97ab340b5f99679b",
      "created_at": "2025-07-28T18:11:44Z"
    },
    {
      "event": "commented",
      "id": 3128453950,
      "node_id": "IC_kwDOABII5866eGs-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3128453950",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:18Z",
      "updated_at": "2025-07-28T18:23:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the feedback @glozow and @achow101! I'm converting this to a draft while I work on some additional test cases, but otherwise the code is ready for review.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3128453950",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "mentioned",
      "id": 18862281483,
      "node_id": "MEE_lADOABII586_VswkzwAAAARkR5ML",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862281483",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:20Z"
    },
    {
      "event": "subscribed",
      "id": 18862281503,
      "node_id": "SE_lADOABII586_VswkzwAAAARkR5Mf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862281503",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:20Z"
    },
    {
      "event": "mentioned",
      "id": 18862281530,
      "node_id": "MEE_lADOABII586_VswkzwAAAARkR5M6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862281530",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:20Z"
    },
    {
      "event": "subscribed",
      "id": 18862281562,
      "node_id": "SE_lADOABII586_VswkzwAAAARkR5Na",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862281562",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:20Z"
    },
    {
      "event": "convert_to_draft",
      "id": 18862285066,
      "node_id": "CTDE_lADOABII586_VswkzwAAAARkR6EK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18862285066",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T18:23:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18902209959,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARmqNWn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18902209959",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4a74a612410981336f6cfb7e1701b978af2f762d",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/4a74a612410981336f6cfb7e1701b978af2f762d",
      "created_at": "2025-07-30T15:35:02Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliNDc4ZjFmNjhjMDBiNWM1MTRhMzBhNTNkMTljZDU4ZmU4MTM3OTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b478f1f68c00b5c514a30a53d19cd58fe813795",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b478f1f68c00b5c514a30a53d19cd58fe813795",
      "tree": {
        "sha": "f782463a07e768aa2f8d45f589d4c2985ba4ecd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f782463a07e768aa2f8d45f589d4c2985ba4ecd7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9d24807914e51aff94e10a5c6381938073c38fd",
          "sha": "a9d24807914e51aff94e10a5c6381938073c38fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d24807914e51aff94e10a5c6381938073c38fd"
        }
      ],
      "message": "rpc: Support version 3 transaction creation\n\nAdds v3 support to the following RPCs:\n- createrawtransaction\n- createpsbt\n- send\n- sendall\n- walletcreatefundedpsbt\n\nCo-authored-by: chungeun-choi <cucuridas@gmail.com>\nCo-authored-by: dongwook-chan <dongwook.chan@gmail.com>\nCo-authored-by: sean-k1 <uhs2000@naver.com>\nCo-authored-by: ishaanam <ishaana.misra@gmail.com>",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-30T16:09:15Z"
      },
      "author": {
        "name": "Bue-von-hon",
        "email": "dkssudvn2@gmail.com",
        "date": "2025-04-26T11:42:20Z"
      },
      "sha": "9b478f1f68c00b5c514a30a53d19cd58fe813795"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjZTcxN2MzYjcyY2MxMjM1NmY3Y2E4MzNlZmNlNGRiYjBlYzNlNjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ce717c3b72cc12356f7ca833efce4dbb0ec3e67",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0ce717c3b72cc12356f7ca833efce4dbb0ec3e67",
      "tree": {
        "sha": "91f1e565a048f5b30abdf20d39f494c01c0fc8de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91f1e565a048f5b30abdf20d39f494c01c0fc8de"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b478f1f68c00b5c514a30a53d19cd58fe813795",
          "sha": "9b478f1f68c00b5c514a30a53d19cd58fe813795",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b478f1f68c00b5c514a30a53d19cd58fe813795"
        }
      ],
      "message": "test: extract `bulk_vout` from `bulk_tx` so it can be used by wallet tests",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-30T16:09:18Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-26T06:41:29Z"
      },
      "sha": "0ce717c3b72cc12356f7ca833efce4dbb0ec3e67"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlNWEyNTQxMDM5MGNkMGI5NjQwNzA0NzRmM2JkNjI5Yzg4ZTE3MzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e5a25410390cd0b964070474f3bd629c88e1736",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e5a25410390cd0b964070474f3bd629c88e1736",
      "tree": {
        "sha": "16bde1232b9913e421f26031cf7e5b2765f6df76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16bde1232b9913e421f26031cf7e5b2765f6df76"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ce717c3b72cc12356f7ca833efce4dbb0ec3e67",
          "sha": "0ce717c3b72cc12356f7ca833efce4dbb0ec3e67",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0ce717c3b72cc12356f7ca833efce4dbb0ec3e67"
        }
      ],
      "message": "test: add truc wallet tests",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-30T16:09:18Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-26T06:44:14Z"
      },
      "sha": "5e5a25410390cd0b964070474f3bd629c88e1736"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyYzQzYzNiOTQ0NzM3N2QyZjI2MzVlMjNjOTA0M2U0MGI3NjlkZDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "tree": {
        "sha": "f71f506e4a462de06cf3b1dd78f27407fa498da6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f71f506e4a462de06cf3b1dd78f27407fa498da6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e5a25410390cd0b964070474f3bd629c88e1736",
          "sha": "5e5a25410390cd0b964070474f3bd629c88e1736",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5e5a25410390cd0b964070474f3bd629c88e1736"
        }
      ],
      "message": "doc: add release notes for version 3 transactions",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-30T16:09:18Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2025-07-17T17:18:38Z"
      },
      "sha": "a2c43c3b9447377d2f2635e23c9043e40b769dd4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18902880846,
      "node_id": "HRFPE_lADOABII586_VswkzwAAAARmsxJO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18902880846",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "created_at": "2025-07-30T16:09:54Z"
    },
    {
      "event": "labeled",
      "id": 18902884259,
      "node_id": "LE_lADOABII586_VswkzwAAAARmsx-j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18902884259",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T16:10:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 18902895677,
      "node_id": "RFRE_lADOABII586_VswkzwAAAARms0w9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18902895677",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T16:10:42Z"
    },
    {
      "event": "commented",
      "id": 3136976112,
      "node_id": "IC_kwDOABII5866-nTw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3136976112",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T16:11:11Z",
      "updated_at": "2025-07-30T16:11:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have added more tests and this PR is ready for review.",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#issuecomment-3136976112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32896"
    },
    {
      "event": "milestoned",
      "id": 18903684666,
      "node_id": "MIE_lADOABII586_VswkzwAAAARmv1Y6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18903684666",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T16:53:05Z",
      "milestone": {
        "title": "30.0"
      }
    },
    {
      "event": "unlabeled",
      "id": 18905824161,
      "node_id": "UNLE_lADOABII586_VswkzwAAAARm3_uh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18905824161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T18:56:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3080238325,
      "node_id": "PRR_kwDOABII5863mLT1",
      "url": null,
      "actor": null,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "a2c43c3b9447377d2f2635e23c9043e40b769dd4 looks pretty good to me! Minor comments mostly about docs",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#pullrequestreview-3080238325",
      "submitted_at": "2025-08-01T19:38:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193049601",
      "pull_request_review_id": 2998494185,
      "id": 2193049601,
      "node_id": "PRRC_kwDOABII586Ct0gB",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.generate(self.nodes[0], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[0], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(50, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.alice.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 70,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "e7b40847385b4781118e103ac896dc6dd104cb15",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We should also check that we can't fund a v2 transaction when everything is v3 unconfirmed",
      "created_at": "2025-07-08T17:16:04Z",
      "updated_at": "2025-07-08T17:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193049601",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193049601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193052705",
      "pull_request_review_id": 2998494185,
      "id": 2193052705,
      "node_id": "PRRC_kwDOABII586Ct1Qh",
      "diff_hunk": "@@ -715,6 +716,12 @@ CreatedTransactionResult FundTransaction(CWallet& wallet, const CMutableTransact\n         coinControl.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n     }\n \n+    if (tx.version == TRUC_VERSION) {\n+        if (!coinControl.m_max_tx_weight.has_value() || coinControl.m_max_tx_weight.value() > 40000) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Instead of magic numbers, try using `TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR`",
      "created_at": "2025-07-08T17:17:51Z",
      "updated_at": "2025-07-08T17:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193052705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193052705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193065536",
      "pull_request_review_id": 2998494185,
      "id": 2193065536,
      "node_id": "PRRC_kwDOABII586Ct4ZA",
      "diff_hunk": "@@ -258,6 +258,9 @@ class CWalletTx\n     // BlockConflicted.\n     std::set<Txid> mempool_conflicts;\n \n+    // Set of v3 transactions that spend from this tx",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Comment seems inaccurate: it mentions a set but this only allows for 1 transaction. Should also mention (1) that this is used to stop us from creating another unconfirmed child and (2) this is specifically the in mempool-sibling, as there can be multiple siblings but only 1 in mempool (unless there was a reorg).",
      "created_at": "2025-07-08T17:25:10Z",
      "updated_at": "2025-07-08T17:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193065536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193065536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193078705",
      "pull_request_review_id": 2998494185,
      "id": 2193078705,
      "node_id": "PRRC_kwDOABII586Ct7mx",
      "diff_hunk": "@@ -715,6 +716,12 @@ CreatedTransactionResult FundTransaction(CWallet& wallet, const CMutableTransact\n         coinControl.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n     }\n \n+    if (tx.version == TRUC_VERSION) {\n+        if (!coinControl.m_max_tx_weight.has_value() || coinControl.m_max_tx_weight.value() > 40000) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": 2193052705,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also, there is a separate size limit for TRUC children - I don't think that's been implemented yet?",
      "created_at": "2025-07-08T17:33:20Z",
      "updated_at": "2025-07-08T17:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193078705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193078705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193091714",
      "pull_request_review_id": 2998494185,
      "id": 2193091714,
      "node_id": "PRRC_kwDOABII586Ct-yC",
      "diff_hunk": "@@ -83,6 +83,8 @@ struct CoinFilterParams {\n     bool include_immature_coinbase{false};\n     // By default, skip locked UTXOs\n     bool skip_locked{true};\n+    // Whether or not to care about the tx version\n+    bool track_version{true}; // only used by AvailableCoinsListUnspent",
      "path": "src/wallet/spend.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A more descriptive name may be `exclude_version3`.",
      "created_at": "2025-07-08T17:37:49Z",
      "updated_at": "2025-07-08T17:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193091714",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193091714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193283389",
      "pull_request_review_id": 2998863065,
      "id": 2193283389,
      "node_id": "PRRC_kwDOABII586Cutk9",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.generate(self.nodes[0], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[0], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(50, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.alice.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 70,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "e7b40847385b4781118e103ac896dc6dd104cb15",
      "in_reply_to_id": 2193049601,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, I will add a test for this.",
      "created_at": "2025-07-08T19:22:20Z",
      "updated_at": "2025-07-08T19:22:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193283389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193283389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193284376",
      "pull_request_review_id": 2998864598,
      "id": 2193284376,
      "node_id": "PRRC_kwDOABII586Cut0Y",
      "diff_hunk": "@@ -715,6 +716,12 @@ CreatedTransactionResult FundTransaction(CWallet& wallet, const CMutableTransact\n         coinControl.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n     }\n \n+    if (tx.version == TRUC_VERSION) {\n+        if (!coinControl.m_max_tx_weight.has_value() || coinControl.m_max_tx_weight.value() > 40000) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": 2193052705,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I will look into implementing the separate size limit. ",
      "created_at": "2025-07-08T19:23:04Z",
      "updated_at": "2025-07-08T19:23:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193284376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193284376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 720,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193285093",
      "pull_request_review_id": 2998865668,
      "id": 2193285093,
      "node_id": "PRRC_kwDOABII586Cut_l",
      "diff_hunk": "@@ -258,6 +258,9 @@ class CWalletTx\n     // BlockConflicted.\n     std::set<Txid> mempool_conflicts;\n \n+    // Set of v3 transactions that spend from this tx",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": 2193065536,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-08T19:23:35Z",
      "updated_at": "2025-07-08T19:23:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193285093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193285093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193289150",
      "pull_request_review_id": 2998871866,
      "id": 2193289150,
      "node_id": "PRRC_kwDOABII586Cuu--",
      "diff_hunk": "@@ -83,6 +83,8 @@ struct CoinFilterParams {\n     bool include_immature_coinbase{false};\n     // By default, skip locked UTXOs\n     bool skip_locked{true};\n+    // Whether or not to care about the tx version\n+    bool track_version{true}; // only used by AvailableCoinsListUnspent",
      "path": "src/wallet/spend.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": 2193091714,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure if that name would be accurate, because this boolean is set to `true` even when we are trying to create a v3 transaction, in which case we are technically not excluding version 3.",
      "created_at": "2025-07-08T19:26:01Z",
      "updated_at": "2025-07-08T19:26:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2193289150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193289150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194156945",
      "pull_request_review_id": 3000189728,
      "id": 2194156945,
      "node_id": "PRRC_kwDOABII586CyC2R",
      "diff_hunk": "@@ -80,6 +80,9 @@\n \n DEFAULT_MEMPOOL_EXPIRY_HOURS = 336  # hours\n \n+TX_MIN_STANDARD_VERSION = 1\n+TX_MAX_STANDARD_VERSION = 3",
      "path": "test/functional/test_framework/messages.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "there's also `test/functional/feature_taproot.py:TX_MAX_STANDARD_VERSION = 3`",
      "created_at": "2025-07-09T06:25:22Z",
      "updated_at": "2025-07-09T06:27:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2194156945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194156945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194159096",
      "pull_request_review_id": 3000189728,
      "id": 2194159096,
      "node_id": "PRRC_kwDOABII586CyDX4",
      "diff_hunk": "@@ -154,6 +155,13 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    if (!version.isNull()) {\n+        uint32_t nVersion = version.getInt<uint32_t>();\n+        if (nVersion < TX_MIN_STANDARD_VERSION || nVersion > TX_MAX_STANDARD_VERSION)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, version out of range(\") + util::ToString(TX_MIN_STANDARD_VERSION) + \"~\" + util::ToString(TX_MAX_STANDARD_VERSION) + \")\");",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could use strprintf for shorter code? Also missing `{}` around body of the `if`?",
      "created_at": "2025-07-09T06:26:46Z",
      "updated_at": "2025-07-09T06:27:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2194159096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2194159096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2195916152",
      "pull_request_review_id": 3002995392,
      "id": 2195916152,
      "node_id": "PRRC_kwDOABII586C4wV4",
      "diff_hunk": "@@ -80,6 +80,9 @@\n \n DEFAULT_MEMPOOL_EXPIRY_HOURS = 336  # hours\n \n+TX_MIN_STANDARD_VERSION = 1\n+TX_MAX_STANDARD_VERSION = 3",
      "path": "test/functional/test_framework/messages.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "in_reply_to_id": 2194156945,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed this test to import `TX_MAX_STANDARD_VERSION` instead.",
      "created_at": "2025-07-09T20:28:07Z",
      "updated_at": "2025-07-09T20:28:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2195916152",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2195916152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2195917838",
      "pull_request_review_id": 3002997997,
      "id": 2195917838,
      "node_id": "PRRC_kwDOABII586C4wwO",
      "diff_hunk": "@@ -154,6 +155,13 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    if (!version.isNull()) {\n+        uint32_t nVersion = version.getInt<uint32_t>();\n+        if (nVersion < TX_MIN_STANDARD_VERSION || nVersion > TX_MAX_STANDARD_VERSION)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, version out of range(\") + util::ToString(TX_MIN_STANDARD_VERSION) + \"~\" + util::ToString(TX_MAX_STANDARD_VERSION) + \")\");",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7fdff3ff7c3814a78eb931ccfdf3e19b5592c563",
      "in_reply_to_id": 2194159096,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-09T20:29:20Z",
      "updated_at": "2025-07-09T20:29:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2195917838",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2195917838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207804501",
      "pull_request_review_id": 3020910288,
      "id": 2207804501,
      "node_id": "PRRC_kwDOABII586DmGxV",
      "diff_hunk": "@@ -154,6 +155,15 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    if (!version.isNull()) {\n+        uint32_t nVersion = version.getInt<uint32_t>();\n+        if (nVersion < TX_MIN_STANDARD_VERSION || nVersion > TX_MAX_STANDARD_VERSION) {\n+            // throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, version out of range(\") + util::ToString(TX_MIN_STANDARD_VERSION) + \"~\" + util::ToString(TX_MAX_STANDARD_VERSION) + \")\");",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This commented error should be removed now.",
      "created_at": "2025-07-15T15:14:08Z",
      "updated_at": "2025-07-15T15:17:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2207804501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207804501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208017260",
      "pull_request_review_id": 3021245623,
      "id": 2208017260,
      "node_id": "PRRC_kwDOABII586Dm6ts",
      "diff_hunk": "@@ -437,7 +438,7 @@ static RPCHelpMan createrawtransaction()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, request.params[4]);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\n    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, self.Arg<uint32_t>(\"version\"));\n```\n\nnit: This should allow to drop the parsing in `ConstructTransaction` and the manual indexing here.",
      "created_at": "2025-07-15T16:47:11Z",
      "updated_at": "2025-07-15T16:47:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2208017260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208017260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208593588",
      "pull_request_review_id": 3022192521,
      "id": 2208593588,
      "node_id": "PRRC_kwDOABII586DpHa0",
      "diff_hunk": "@@ -154,6 +155,15 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    if (!version.isNull()) {\n+        uint32_t nVersion = version.getInt<uint32_t>();\n+        if (nVersion < TX_MIN_STANDARD_VERSION || nVersion > TX_MAX_STANDARD_VERSION) {\n+            // throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, version out of range(\") + util::ToString(TX_MIN_STANDARD_VERSION) + \"~\" + util::ToString(TX_MAX_STANDARD_VERSION) + \")\");",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "in_reply_to_id": 2207804501,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-15T20:28:01Z",
      "updated_at": "2025-07-15T20:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2208593588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208593588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208595036",
      "pull_request_review_id": 3022195028,
      "id": 2208595036,
      "node_id": "PRRC_kwDOABII586DpHxc",
      "diff_hunk": "@@ -437,7 +438,7 @@ static RPCHelpMan createrawtransaction()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, request.params[4]);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b3817a822054fb2ea2964535b5a0ee55dd5d55ac",
      "in_reply_to_id": 2208017260,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-15T20:28:30Z",
      "updated_at": "2025-07-15T20:28:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2208595036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2208595036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209414266",
      "pull_request_review_id": 3023385092,
      "id": 2209414266,
      "node_id": "PRRC_kwDOABII586DsPx6",
      "diff_hunk": "@@ -437,7 +438,7 @@ static RPCHelpMan createrawtransaction()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, self.Arg<unsigned long>(\"version\"));",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "657d153c26c2491e6e04ba135e7ac22658a0c110",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Using uint32_t and something like this should fix the linker error:\n\n```\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\nindex 5da02b4df4..0604dec2dc 100644\n--- a/src/rpc/util.cpp\n+++ b/src/rpc/util.cpp\n@@ -731,6 +731,7 @@ TMPL_INST(CheckRequiredOrDefault, const UniValue&, *CHECK_NONFATAL(maybe_arg););\n TMPL_INST(CheckRequiredOrDefault, bool, CHECK_NONFATAL(maybe_arg)->get_bool(););\n TMPL_INST(CheckRequiredOrDefault, int, CHECK_NONFATAL(maybe_arg)->getInt<int>(););\n TMPL_INST(CheckRequiredOrDefault, uint64_t, CHECK_NONFATAL(maybe_arg)->getInt<uint64_t>(););\n+TMPL_INST(CheckRequiredOrDefault, uint32_t, CHECK_NONFATAL(maybe_arg)->getInt<uint32_t>(););\n TMPL_INST(CheckRequiredOrDefault, const std::string&, CHECK_NONFATAL(maybe_arg)->get_str(););\n \n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\n",
      "created_at": "2025-07-16T06:41:47Z",
      "updated_at": "2025-07-16T06:41:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2209414266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209414266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210830294",
      "pull_request_review_id": 3025690592,
      "id": 2210830294,
      "node_id": "PRRC_kwDOABII586DxpfW",
      "diff_hunk": "@@ -437,7 +438,7 @@ static RPCHelpMan createrawtransaction()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, self.Arg<unsigned long>(\"version\"));",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "657d153c26c2491e6e04ba135e7ac22658a0c110",
      "in_reply_to_id": 2209414266,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this fixed the error, thanks!",
      "created_at": "2025-07-16T15:51:57Z",
      "updated_at": "2025-07-16T15:51:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2210830294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2210830294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211351922",
      "pull_request_review_id": 3026497105,
      "id": 2211351922,
      "node_id": "PRRC_kwDOABII586Dzo1y",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 29,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "maybe these should live in mempool_util?",
      "created_at": "2025-07-16T19:22:16Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211351922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211351922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211355006",
      "pull_request_review_id": 3026497105,
      "id": 2211355006,
      "node_id": "PRRC_kwDOABII586Dzpl-",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 82,
      "original_position": 79,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This looks like it was copy-pasted from the test framework - can we just use the existing method, perhaps with a wrapper if needed?",
      "created_at": "2025-07-16T19:23:53Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211355006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211355006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211362713",
      "pull_request_review_id": 3026497105,
      "id": 2211362713,
      "node_id": "PRRC_kwDOABII586DzreZ",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 129,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might want to assert that it's v2",
      "created_at": "2025-07-16T19:27:01Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211362713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211362713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211372152",
      "pull_request_review_id": 3026497105,
      "id": 2211372152,
      "node_id": "PRRC_kwDOABII586Dztx4",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 195,
      "original_position": 200,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should there also be a test where Alice tries to spend her change after Bob has spent from the parent? That wouldn't require `include_unsafe` IIUC",
      "created_at": "2025-07-16T19:32:03Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211372152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211372152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211375162",
      "pull_request_review_id": 3026497105,
      "id": 2211375162,
      "node_id": "PRRC_kwDOABII586Dzug6",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 172,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could you also add `v2_tx_spends_confirmed_v3_tx` and `v3_tx_spends_confirmed_v2_tx` to check that version mismatches are fine there?",
      "created_at": "2025-07-16T19:33:44Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211375162",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211375162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211379860",
      "pull_request_review_id": 3026497105,
      "id": 2211379860,
      "node_id": "PRRC_kwDOABII586DzvqU",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 293,
      "original_position": 269,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What does \"two outputs\" mean here? This has 1 output, no?",
      "created_at": "2025-07-16T19:36:20Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211379860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211379860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 293,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211381702",
      "pull_request_review_id": 3026497105,
      "id": 2211381702,
      "node_id": "PRRC_kwDOABII586DzwHG",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 302,
      "original_position": 278,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will Alice's wallet attempt to rebroadcast her transaction if/when the parent + Bob's confirm? Can we do an RBF of Alice's transaction to evict Bob's?",
      "created_at": "2025-07-16T19:37:30Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211381702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211381702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211385875",
      "pull_request_review_id": 3026497105,
      "id": 2211385875,
      "node_id": "PRRC_kwDOABII586DzxIT",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 284,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        # send a v2 output to alice and confirm it\r\n````",
      "created_at": "2025-07-16T19:40:10Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211385875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211385875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211390451",
      "pull_request_review_id": 3026497105,
      "id": 2211390451,
      "node_id": "PRRC_kwDOABII586DzyPz",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice\n+        self.charlie.sendall([self.alice.getnewaddress()])[\"txid\"]\n+        self.generate(self.nodes[2], 1)\n+        # create a v3 tx to alice and bob\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        alice_v2_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] != 0][0]",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 292,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Isn't this just...?\r\n```suggestion\r\n        alice_v2_unspent = self.alice.listunspent(minconf=1)[0]\r\n```",
      "created_at": "2025-07-16T19:42:17Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211390451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211390451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211403206",
      "pull_request_review_id": 3026497105,
      "id": 2211403206,
      "node_id": "PRRC_kwDOABII586Dz1XG",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice\n+        self.charlie.sendall([self.alice.getnewaddress()])[\"txid\"]\n+        self.generate(self.nodes[2], 1)\n+        # create a v3 tx to alice and bob\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        alice_v2_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] != 0][0]\n+        alice_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] == 0][0]\n+\n+        # alice spends both of her outputs\n+        inputs = [{'txid' : alice_v2_unspent['txid'], 'vout' : 0}, {'txid' : alice_unspent['txid'], 'vout' : alice_unspent['vout']}]\n+        outputs = {self.charlie.getnewaddress() : alice_v2_unspent['amount'] + alice_unspent['amount'] - Decimal(0.00005120)}\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+        # bob can't create a transaction\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+        # alice fee-bumps her tx so it only spends the v2 utxo\n+        inputs = [{'txid' : alice_v2_unspent['txid'], 'vout' : 0},]\n+        outputs = {self.charlie.getnewaddress() : alice_v2_unspent['amount'] - Decimal(0.00015120)}\n+        self.send_tx(self.alice, inputs, outputs, 2)\n+        # bob can now create a transaction\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        self.send_tx(self.bob, inputs, outputs, 3)\n+\n+    @cleanup\n+    def mempool_conflicts_removed_when_v3_conflict_removed(self):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 351,
      "original_position": 320,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can this be consolidated with `v3_conflict_removed_from_mempool` since they are mostly the same?",
      "created_at": "2025-07-16T19:47:42Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211403206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211403206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211435769",
      "pull_request_review_id": 3026497105,
      "id": 2211435769,
      "node_id": "PRRC_kwDOABII586Dz9T5",
      "diff_hunk": "@@ -904,11 +925,17 @@ util::Result<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coin\n         // If no solution is found, return the first detailed error (if any).\n         // future: add \"error level\" so the worst one can be picked instead.\n         std::vector<util::Result<SelectionResult>> res_detailed_errors;\n+        CoinSelectionParams temp_selection_params = coin_selection_params;\n         for (const auto& select_filter : ordered_filters) {\n             auto it = filtered_groups.find(select_filter.filter);\n             if (it == filtered_groups.end()) continue;\n+            if (temp_selection_params.m_version == TRUC_VERSION && (select_filter.filter.conf_mine == 0 || select_filter.filter.conf_theirs == 0)) {\n+                if (temp_selection_params.m_max_tx_weight > (TRUC_CHILD_MAX_VSIZE * WITNESS_SCALE_FACTOR)) {\n+                    temp_selection_params.m_max_tx_weight = TRUC_CHILD_MAX_VSIZE * WITNESS_SCALE_FACTOR;\n+                }",
      "path": "src/wallet/spend.cpp",
      "position": 59,
      "original_position": 60,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "827fdc4904d8dd33609e7042ecf2c5429a23690f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The approach of modifying the `CoinSelectionParams.m_max_tx_weight` seems fine to me. The only issue I notice is the error message being \"The inputs size exceeds the maximum weight. Please try sending a smaller amount or manually consolidating your wallet's UTXOs\", which could be slightly confusing, but I think out of scope for this PR. A separate PR could maybe tell the user what the limit was, since it could be MAX_STANDARD_TX_WEIGHT, max TRUC weight, max child TRUC weight, or ancestor/cluster size limits (oh, just found out that isn't handled - also a potential followup).",
      "created_at": "2025-07-16T19:55:30Z",
      "updated_at": "2025-07-16T20:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2211435769",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2211435769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 932,
      "original_start_line": 933,
      "start_side": "RIGHT",
      "line": 934,
      "original_line": 934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213901825",
      "pull_request_review_id": 3030399457,
      "id": 2213901825,
      "node_id": "PRRC_kwDOABII586D9XYB",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 29,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211351922,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-17T17:23:58Z",
      "updated_at": "2025-07-17T17:23:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213901825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213901825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213903403",
      "pull_request_review_id": 3030401668,
      "id": 2213903403,
      "node_id": "PRRC_kwDOABII586D9Xwr",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 82,
      "original_position": 79,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211355006,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a `bulk_vout` function to `script_util.py` which is used by `MiniWallet` and these tests.",
      "created_at": "2025-07-17T17:24:52Z",
      "updated_at": "2025-07-17T17:24:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213903403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213903403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213914676",
      "pull_request_review_id": 3030419846,
      "id": 2213914676,
      "node_id": "PRRC_kwDOABII586D9ag0",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 129,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211362713,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a version 2 assertion everywhere that `sendall` is used in the tests.",
      "created_at": "2025-07-17T17:30:52Z",
      "updated_at": "2025-07-17T17:30:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213914676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213914676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213915214",
      "pull_request_review_id": 3030420671,
      "id": 2213915214,
      "node_id": "PRRC_kwDOABII586D9apO",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 195,
      "original_position": 200,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211372152,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a test for alice spending change",
      "created_at": "2025-07-17T17:31:13Z",
      "updated_at": "2025-07-17T17:31:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213915214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213915214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213915397",
      "pull_request_review_id": 3030420951,
      "id": 2213915397,
      "node_id": "PRRC_kwDOABII586D9asF",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 172,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211375162,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-17T17:31:21Z",
      "updated_at": "2025-07-17T17:31:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213915397",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213915397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213916090",
      "pull_request_review_id": 3030421999,
      "id": 2213916090,
      "node_id": "PRRC_kwDOABII586D9a26",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 293,
      "original_position": 269,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211379860,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this was an outdated comment which I've now removed",
      "created_at": "2025-07-17T17:31:44Z",
      "updated_at": "2025-07-17T17:31:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213916090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213916090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 293,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213916340",
      "pull_request_review_id": 3030422400,
      "id": 2213916340,
      "node_id": "PRRC_kwDOABII586D9a60",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 284,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211385875,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-17T17:31:54Z",
      "updated_at": "2025-07-17T17:31:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213916340",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213916340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213917014",
      "pull_request_review_id": 3030423531,
      "id": 2213917014,
      "node_id": "PRRC_kwDOABII586D9bFW",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice\n+        self.charlie.sendall([self.alice.getnewaddress()])[\"txid\"]\n+        self.generate(self.nodes[2], 1)\n+        # create a v3 tx to alice and bob\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        alice_v2_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] != 0][0]",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 292,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211390451,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I've updated both of the places where I was doing this.",
      "created_at": "2025-07-17T17:32:20Z",
      "updated_at": "2025-07-17T17:32:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213917014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213917014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213923610",
      "pull_request_review_id": 3030434604,
      "id": 2213923610,
      "node_id": "PRRC_kwDOABII586D9csa",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 302,
      "original_position": 278,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211381702,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, because when Bob confirms, it is removed from `mempool_conflicts` and Alice's transaction is considered \"Inactive\". I've added a part to this test case where Alice evicts Bob's transaction. ",
      "created_at": "2025-07-17T17:36:19Z",
      "updated_at": "2025-07-17T17:36:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213923610",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213923610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213927081",
      "pull_request_review_id": 3030440970,
      "id": 2213927081,
      "node_id": "PRRC_kwDOABII586D9dip",
      "diff_hunk": "@@ -0,0 +1,396 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+    ser_compact_size\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_1,\n+    OP_RETURN\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+TRUC_MAX_VSIZE = 10000\n+TRUC_CHILD_MAX_VSIZE = 1000\n+\n+def cleanup(func):\n+    def wrapper(self):\n+        try:\n+            func(self)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n+        returns the tx\n+        \"\"\"\n+        if target_vsize < tx.get_vsize():\n+            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n+\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        # determine number of needed padding bytes\n+        dummy_vbytes = target_vsize - tx.get_vsize()\n+        # compensate for the increase of the compact-size encoded script length\n+        # (note that the length encoding of the unpadded output script needs one byte)\n+        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n+        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n+        assert_equal(tx.get_vsize(), target_vsize)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.v3_tx_spends_unconfirmed_v2_tx()\n+        self.v2_tx_spends_unconfirmed_v3_tx()\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.spend_v3_input_with_v2()\n+        self.spend_v2_input_with_v3()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def v3_tx_spends_unconfirmed_v2_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        # by default, sendall uses tx version 2\n+        self.charlie.sendall([self.bob.getnewaddress()])\n+        assert_equal(self.charlie.getbalances()[\"mine\"][\"trusted\"], 0)\n+\n+        self.sync_mempools()\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 49)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v3 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v3, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_unconfirmed_v3_tx(self):\n+        self.log.info(\"Test unavailable funds when v3 tx spends unconfirmed v2 tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def spend_v3_input_with_v2(self):\n+        self.log.info(\"Test spending a pre-selected v3 input with a v2 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=2)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 3 pre-selected input with a version 2 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_v2_input_with_v3(self):\n+        self.log.info(\"Test spending a pre-selected v2 input with a v3 transaction\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 2)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_tx = self.alice.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Can't spend unconfirmed version 2 pre-selected input with a version 3 tx\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def v3_tx_evicted_from_mempool_by_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        alice_txid = self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00010120)} # two outputs\n+        bob_txid = self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        assert_equal(self.alice.gettransaction(alice_txid)['mempoolconflicts'], [bob_txid])\n+\n+    @cleanup\n+    def v3_conflict_removed_from_mempool(self):\n+        self.log.info(\"Test a v3 conflict being removed\")\n+        self.generate(self.nodes[2], 1)\n+        # send a v2 output to alice\n+        self.charlie.sendall([self.alice.getnewaddress()])[\"txid\"]\n+        self.generate(self.nodes[2], 1)\n+        # create a v3 tx to alice and bob\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+\n+        alice_v2_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] != 0][0]\n+        alice_unspent = [unspent for unspent in self.alice.listunspent(minconf=0) if unspent[\"confirmations\"] == 0][0]\n+\n+        # alice spends both of her outputs\n+        inputs = [{'txid' : alice_v2_unspent['txid'], 'vout' : 0}, {'txid' : alice_unspent['txid'], 'vout' : alice_unspent['vout']}]\n+        outputs = {self.charlie.getnewaddress() : alice_v2_unspent['amount'] + alice_unspent['amount'] - Decimal(0.00005120)}\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+        # bob can't create a transaction\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+        # alice fee-bumps her tx so it only spends the v2 utxo\n+        inputs = [{'txid' : alice_v2_unspent['txid'], 'vout' : 0},]\n+        outputs = {self.charlie.getnewaddress() : alice_v2_unspent['amount'] - Decimal(0.00015120)}\n+        self.send_tx(self.alice, inputs, outputs, 2)\n+        # bob can now create a transaction\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        self.send_tx(self.bob, inputs, outputs, 3)\n+\n+    @cleanup\n+    def mempool_conflicts_removed_when_v3_conflict_removed(self):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 351,
      "original_position": 320,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "b7f8be8c4d16c3e819c0368d6ba938b87b6397e4",
      "in_reply_to_id": 2211403206,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be tricky to consolidate the two because one of them is testing preventing the wallet from creating a transaction and the other is testing marking conflicts correctly. ",
      "created_at": "2025-07-17T17:38:31Z",
      "updated_at": "2025-07-17T17:38:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2213927081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2213927081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220508773",
      "pull_request_review_id": 3040093165,
      "id": 2220508773,
      "node_id": "PRRC_kwDOABII586EWkZl",
      "diff_hunk": "@@ -283,6 +283,16 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\n             if (input_bytes == -1) {\n                 input_bytes = CalculateMaximumSignedInputSize(txout, &wallet, &coin_control);\n             }\n+            auto it = wallet.mapWallet.find(outpoint.hash);\n+            if (coin_control.m_version.has_value() && it != wallet.mapWallet.end()) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "cf712ab56e3256db5dfcf422860bdb3cf87cd03e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"wallet: throw error at conflicting tx versions in pre-selected inputs\" (cf712ab56e3256db5dfcf422860bdb3cf87cd03e):\r\nIs `m_version` always set?\r\nOtherwise, what would happen if `coin_control.m_version` is not set, and one preselected input is TRUC, but another one is not?",
      "created_at": "2025-07-21T22:44:56Z",
      "updated_at": "2025-07-21T23:16:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2220508773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220508773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220523528",
      "pull_request_review_id": 3040093165,
      "id": 2220523528,
      "node_id": "PRRC_kwDOABII586EWoAI",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this makes an unconfirmed v3 output unspendable\n+        // for all of the utxos that this spends...",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "bff006b7ae7fa120fac4f2118e891d2c88d38f9a",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"wallet: don't include unconfirmed v3 txs with children in available coins\" (bff006b7ae7fa120fac4f2118e891d2c88d38f9a):\r\n\r\nI find this comment hard to parse. Do you mean something along the lines of:\r\n\r\n```suggestion\r\n        // this marks all outputs of any unconfirmed v3 parent transactions as unspendable\r\n        // if any of its outputs are spent by this transaction\r\n``` ",
      "created_at": "2025-07-21T22:56:06Z",
      "updated_at": "2025-07-21T23:16:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2220523528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220523528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1401,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220548538",
      "pull_request_review_id": 3040093165,
      "id": 2220548538,
      "node_id": "PRRC_kwDOABII586EWuG6",
      "diff_hunk": "@@ -0,0 +1,399 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN\n+)\n+\n+from test_framework.script_util import bulk_vout\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.mempool_util import (\n+    TRUC_MAX_VSIZE,\n+    TRUC_CHILD_MAX_VSIZE,\n+)\n+\n+def cleanup(func):\n+    def wrapper(self, *args):\n+        try:\n+            func(self, *args)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        bulk_vout(tx, target_vsize)\n+\n+    def run_test_with_swapped_versions(self, test_func):\n+        test_func(2, 3)\n+        test_func(3, 2)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.run_test_with_swapped_versions(self.tx_spends_unconfirmed_tx_with_wrong_version)\n+        self.run_test_with_swapped_versions(self.v2_tx_spends_confirmed_v3_tx)\n+        self.run_test_with_swapped_versions(self.spend_inputs_with_different_versions)\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.truc_tx_with_conflicting_sibling_change()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def tx_spends_unconfirmed_tx_with_wrong_version(self, version_a, version_b):\n+        self.log.info(f\"Test unavailable funds when v{version_a} tx spends unconfirmed v{version_b} tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, version_a)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=version_b)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_confirmed_v3_tx(self, version_a, version_b):\n+        self.log.info(f\"Test unavailable funds when v{version_a} tx spends confirmed v{version_b} tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, version_a)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        self.send_tx(self.bob, inputs, outputs, version_b)\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)}\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling_change(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # bob spends her output with a v3 transaction\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        # alice tries to spend money\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 1.999}\n+        alice_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_inputs_with_different_versions(self, version_a, version_b):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 237,
      "original_position": 230,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "46f4f372b8096547049a96187e80ec49e49cb1d5",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Following the prior comment, I think it would be good to have a test where you are trying to build a transaction for which the version is not set, that has both a pre-selected version 1|2 and a pre-selected version 3 input.",
      "created_at": "2025-07-21T23:15:02Z",
      "updated_at": "2025-07-21T23:16:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2220548538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2220548538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 237,
      "original_line": 237,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226003081",
      "pull_request_review_id": 3048042932,
      "id": 2226003081,
      "node_id": "PRRC_kwDOABII586ErhyJ",
      "diff_hunk": "@@ -283,6 +283,16 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\n             if (input_bytes == -1) {\n                 input_bytes = CalculateMaximumSignedInputSize(txout, &wallet, &coin_control);\n             }\n+            auto it = wallet.mapWallet.find(outpoint.hash);\n+            if (coin_control.m_version.has_value() && it != wallet.mapWallet.end()) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "cf712ab56e3256db5dfcf422860bdb3cf87cd03e",
      "in_reply_to_id": 2220508773,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is a good point, if `coin_control.m_version` is not set and the preselected inputs have different versions, then an error would not be thrown. I have changed `m_version` so that it has a default value of `CTransaction::CURRENT_VERSION` instead of being optional.",
      "created_at": "2025-07-23T15:43:30Z",
      "updated_at": "2025-07-23T15:43:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2226003081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226003081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226003455",
      "pull_request_review_id": 3048043627,
      "id": 2226003455,
      "node_id": "PRRC_kwDOABII586Erh3_",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this makes an unconfirmed v3 output unspendable\n+        // for all of the utxos that this spends...",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "bff006b7ae7fa120fac4f2118e891d2c88d38f9a",
      "in_reply_to_id": 2220523528,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I've updated the comment",
      "created_at": "2025-07-23T15:43:37Z",
      "updated_at": "2025-07-23T15:43:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2226003455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226003455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1401,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226004291",
      "pull_request_review_id": 3048044750,
      "id": 2226004291,
      "node_id": "PRRC_kwDOABII586EriFD",
      "diff_hunk": "@@ -0,0 +1,399 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"\n+\n+from decimal import Decimal, getcontext\n+\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.messages import (\n+    COIN,\n+    CTransaction,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_RETURN\n+)\n+\n+from test_framework.script_util import bulk_vout\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+\n+from test_framework.mempool_util import (\n+    TRUC_MAX_VSIZE,\n+    TRUC_CHILD_MAX_VSIZE,\n+)\n+\n+def cleanup(func):\n+    def wrapper(self, *args):\n+        try:\n+            func(self, *args)\n+        finally:\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            try:\n+                self.alice.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            try:\n+                self.bob.sendall([self.charlie.getnewaddress()])\n+            except JSONRPCException as e:\n+                assert \"Total value of UTXO pool too low to pay for transaction\" in e.error['message']\n+            self.sync_mempools()\n+            self.generate(self.nodes[2], 1)\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"untrusted_pending\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"trusted\"])\n+            assert_equal(0, self.alice.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(0, self.bob.getbalances()[\"mine\"][\"immature\"])\n+            assert_equal(self.alice.getrawmempool(), [])\n+            assert_equal(self.bob.getrawmempool(), [])\n+\n+    return wrapper\n+\n+class WalletV3Test(BitcoinTestFramework):\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        getcontext().prec=10\n+        self.num_nodes = 3\n+        self.setup_clean_chain = True\n+        # whitelist peers to speed up tx relay / mempool sync\n+        self.noban_tx_relay = True\n+\n+    def send_tx(self, from_node, inputs, outputs, version):\n+        raw_tx = from_node.createrawtransaction(inputs=inputs, outputs=outputs, version=version)\n+        if inputs == []:\n+            raw_tx = from_node.fundrawtransaction(raw_tx, {'include_unsafe' : True})[\"hex\"]\n+        raw_tx = from_node.signrawtransactionwithwallet(raw_tx)[\"hex\"]\n+        txid = from_node.sendrawtransaction(raw_tx)\n+        self.sync_mempools()\n+        return txid\n+\n+    def bulk_tx(self, tx, amount, target_vsize):\n+        tx.vout.append(CTxOut(nValue=(amount * COIN), scriptPubKey=CScript([OP_RETURN])))\n+        bulk_vout(tx, target_vsize)\n+\n+    def run_test_with_swapped_versions(self, test_func):\n+        test_func(2, 3)\n+        test_func(3, 2)\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+\n+        self.nodes[0].createwallet(\"alice\")\n+        self.alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        self.bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.nodes[2].createwallet(\"charlie\")\n+        self.charlie = self.nodes[2].get_wallet_rpc(\"charlie\")\n+\n+        self.generatetoaddress(self.nodes[0], 100, self.charlie.getnewaddress())\n+\n+        self.run_test_with_swapped_versions(self.tx_spends_unconfirmed_tx_with_wrong_version)\n+        self.run_test_with_swapped_versions(self.v2_tx_spends_confirmed_v3_tx)\n+        self.run_test_with_swapped_versions(self.spend_inputs_with_different_versions)\n+        self.v3_utxos_appear_in_listunspent()\n+        self.truc_tx_with_conflicting_sibling()\n+        self.truc_tx_with_conflicting_sibling_change()\n+        self.v3_tx_evicted_from_mempool_by_sibling()\n+        self.v3_conflict_removed_from_mempool()\n+        self.mempool_conflicts_removed_when_v3_conflict_removed()\n+        self.max_tx_weight()\n+        self.max_tx_child_weight()\n+\n+    @cleanup\n+    def tx_spends_unconfirmed_tx_with_wrong_version(self, version_a, version_b):\n+        self.log.info(f\"Test unavailable funds when v{version_a} tx spends unconfirmed v{version_b} tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, version_a)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        raw_tx_v2 = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=version_b)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            raw_tx_v2, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def v2_tx_spends_confirmed_v3_tx(self, version_a, version_b):\n+        self.log.info(f\"Test unavailable funds when v{version_a} tx spends confirmed v{version_b} tx\")\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, version_a)\n+\n+        assert_equal(self.bob.getbalances()[\"mine\"][\"trusted\"], 0)\n+        assert_greater_than(self.bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        inputs = []\n+        outputs = {self.alice.getnewaddress() : 1.0}\n+\n+        self.generate(self.nodes[2], 1)\n+\n+        self.send_tx(self.bob, inputs, outputs, version_b)\n+\n+    @cleanup\n+    def v3_utxos_appear_in_listunspent(self):\n+        self.log.info(\"Test that unconfirmed v3 utxos still appear in listunspent\")\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0}\n+        parent_txid = self.send_tx(self.charlie, inputs, outputs, 3)\n+        assert_equal(self.alice.listunspent(minconf=0)[0][\"txid\"], parent_txid)\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # alice spends her output with a v3 transaction\n+        alice_unspent = self.alice.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : alice_unspent['vout']},]\n+        outputs = {self.alice.getnewaddress() : alice_unspent['amount'] - Decimal(0.00000120)}\n+        self.send_tx(self.alice, inputs, outputs, 3)\n+\n+        # bob tries to spend money\n+        inputs=[]\n+        outputs = {self.bob.getnewaddress() : 1.999}\n+        bob_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.bob.fundrawtransaction,\n+            bob_tx, {'include_unsafe': True}\n+        )\n+\n+    @cleanup\n+    def truc_tx_with_conflicting_sibling_change(self):\n+        # unconfirmed v3 tx to alice & bob\n+        self.log.info(\"Test v3 transaction with conflicting sibling\")\n+        self.generate(self.nodes[2], 1)\n+\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 2.0, self.bob.getnewaddress() : 2.0}\n+        self.send_tx(self.charlie, inputs, outputs, 3)\n+        parent_txid = self.charlie.getrawmempool()[0]\n+\n+        # bob spends her output with a v3 transaction\n+        bob_unspent = self.bob.listunspent(minconf=0)[0]\n+        inputs=[{'txid' : parent_txid, 'vout' : bob_unspent['vout']},]\n+        outputs = {self.bob.getnewaddress() : bob_unspent['amount'] - Decimal(0.00000120)} # two outputs\n+        self.send_tx(self.bob, inputs, outputs, 3)\n+\n+        # alice tries to spend money\n+        inputs=[]\n+        outputs = {self.alice.getnewaddress() : 1.999}\n+        alice_tx = self.bob.createrawtransaction(inputs=inputs, outputs=outputs, version=3)\n+\n+        assert_raises_rpc_error(\n+            -4,\n+            \"Insufficient funds\",\n+            self.alice.fundrawtransaction,\n+            alice_tx\n+        )\n+\n+    @cleanup\n+    def spend_inputs_with_different_versions(self, version_a, version_b):",
      "path": "test/functional/wallet_v3_txs.py",
      "position": 237,
      "original_position": 230,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "46f4f372b8096547049a96187e80ec49e49cb1d5",
      "in_reply_to_id": 2220548538,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a test for this.",
      "created_at": "2025-07-23T15:44:00Z",
      "updated_at": "2025-07-23T15:44:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2226004291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226004291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 237,
      "original_line": 237,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226343248",
      "pull_request_review_id": 3048555517,
      "id": 2226343248,
      "node_id": "PRRC_kwDOABII586Es01Q",
      "diff_hunk": "@@ -283,6 +283,16 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\n             if (input_bytes == -1) {\n                 input_bytes = CalculateMaximumSignedInputSize(txout, &wallet, &coin_control);\n             }\n+            auto it = wallet.mapWallet.find(outpoint.hash);\n+            if (it != wallet.mapWallet.end()) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "40c6d135f37a1d8dd64cbea3ca30229c2e012fa2",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 40c6d135f37a1d8dd64cbea3ca30229c2e012fa2 \"wallet: throw error at conflicting tx versions in pre-selected inputs\"\r\n\r\nWe want to avoid querying `mapWallet` as much as possible for performance. `txo.GetWalletTx` returns a reference to the `CWalletTx` that can be used here instead of a `mapWallet` lookup.",
      "created_at": "2025-07-23T18:28:13Z",
      "updated_at": "2025-07-23T18:39:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2226343248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226343248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 286,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226356487",
      "pull_request_review_id": 3048555517,
      "id": 2226356487,
      "node_id": "PRRC_kwDOABII586Es4EH",
      "diff_hunk": "@@ -1679,7 +1680,7 @@ static RPCHelpMan createpsbt()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, DEFAULT_RAWTX_VERSION);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6 \"rpc: Support v3 raw transactions creation\"\r\n\r\nIf `createrawtransaction` is going to support setting the version, then `createpsbt`, `walletcreatefundedpsbt`, `send`, and `sendall` need to as well.",
      "created_at": "2025-07-23T18:35:31Z",
      "updated_at": "2025-07-23T18:39:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2226356487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2226356487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228645591",
      "pull_request_review_id": 3051854806,
      "id": 2228645591,
      "node_id": "PRRC_kwDOABII586E1m7X",
      "diff_hunk": "@@ -386,6 +387,14 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n                 safeTx = false;\n             }\n \n+            if (nDepth == 0 && params.track_version) {\n+                if (coinControl->m_version == TRUC_VERSION) {\n+                    if (wtx.tx->version != TRUC_VERSION) continue;\n+                } else {\n+                    if (wtx.tx->version == TRUC_VERSION) continue;\n+                }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "1910d9b61f23f65335367f2f8dd021ac1ccd907a",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This might be clearer:\r\nEDIT: ah nvm, I see you use the 2 clauses further in later commits. Feel free to ignore.\r\n\r\n```suggestion\r\n\r\n                // an unconfirmed TRUC must spend only TRUC, and non-TRUC must only spend non-TRUC\r\n                if ((wtx.tx->version == TRUC_VERSION) != (coinControl->m_version == TRUC_VERSION)) continue;\r\n```",
      "created_at": "2025-07-24T14:12:09Z",
      "updated_at": "2025-07-24T15:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228645591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228645591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 391,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228646732",
      "pull_request_review_id": 3051854806,
      "id": 2228646732,
      "node_id": "PRRC_kwDOABII586E1nNM",
      "diff_hunk": "@@ -83,6 +83,8 @@ struct CoinFilterParams {\n     bool include_immature_coinbase{false};\n     // By default, skip locked UTXOs\n     bool skip_locked{true};\n+    // Whether or not to care about the tx version\n+    bool track_version{true}; // only used by AvailableCoinsListUnspent",
      "path": "src/wallet/spend.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "75d606c5648f8d679e69f1daa795e0ba1b624794",
      "in_reply_to_id": 2193091714,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah right! Resolving",
      "created_at": "2025-07-24T14:12:36Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228646732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228646732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228715272",
      "pull_request_review_id": 3051854806,
      "id": 2228715272,
      "node_id": "PRRC_kwDOABII586E138I",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this marks all outputs of any unconfirmed v3 parent transactions as unspendable\n+        // if any of its outputs are spent by this transaction\n+        for (const CTxIn& tx_in : tx->vin) {\n+            auto wallet_it = mapWallet.find(tx_in.prevout.hash);\n+            if (wallet_it != mapWallet.end()) {\n+                CWalletTx& wtx = wallet_it->second;\n+                if (wtx.isUnconfirmed()) {\n+                    wtx.v3_spend = tx->GetHash();\n+                }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Naming these `parent_it` and `parent_wtx` would make it easier to understand",
      "created_at": "2025-07-24T14:35:58Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228715272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228715272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228722754",
      "pull_request_review_id": 3051854806,
      "id": 2228722754,
      "node_id": "PRRC_kwDOABII586E15xC",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this marks all outputs of any unconfirmed v3 parent transactions as unspendable",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think \"marks as unspendable\" seems a little strong? Perhaps also explain why you are doing this\r\n\r\n```suggestion\r\n        // Unconfirmed TRUC transactions are only allowed a 1-parent-1-child topology.\r\n        // For any unconfirmed v3 parents (there should be a maximum of 1 except in reorgs),\r\n        // record this child so the wallet doesn't try to spend any other outputs\r\n```",
      "created_at": "2025-07-24T14:38:50Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228722754",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228722754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228737241",
      "pull_request_review_id": 3051854806,
      "id": 2228737241,
      "node_id": "PRRC_kwDOABII586E19TZ",
      "diff_hunk": "@@ -1446,6 +1462,19 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n             });\n         }\n     }\n+\n+    // reverse what happens in transactionAddedToMempool",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe be more specific? Unset `v3_spend` to make it possible to spend from this transaction again. If this transaction was replaced by another child of the same parent, their transactionAddedToMempool will update `v3_spend`.",
      "created_at": "2025-07-24T14:44:17Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228737241",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228737241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228739872",
      "pull_request_review_id": 3051854806,
      "id": 2228739872,
      "node_id": "PRRC_kwDOABII586E198g",
      "diff_hunk": "@@ -390,6 +390,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (nDepth == 0 && params.track_version) {\n                 if (coinControl->m_version == TRUC_VERSION) {\n                     if (wtx.tx->version != TRUC_VERSION) continue;\n+                    if (wtx.v3_spend.has_value()) continue; // this unconfirmed v3 transaction already has a child\n                 } else {\n                     if (wtx.tx->version == TRUC_VERSION) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 32,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think you could `Assume(!wtx.v3_spend.has_value())` here",
      "created_at": "2025-07-24T14:45:10Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228739872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228739872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228744739",
      "pull_request_review_id": 3051854806,
      "id": 2228744739,
      "node_id": "PRRC_kwDOABII586E1_Ij",
      "diff_hunk": "@@ -258,6 +258,10 @@ class CWalletTx\n     // BlockConflicted.\n     std::set<Txid> mempool_conflicts;\n \n+    // Track v3 mempool tx that spends from this tx\n+    // so that we don't try to create another unconfirmed child\n+    std::optional<Txid> v3_spend;",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Naming everywhere should replace \"v3\" with \"truc.\" We have so many versions and \"legacy\" types everywhere, so it's best to try to reduce ambiguity when possible. Also, \"child\" is more clear than \"spend,\" and \"in_mempool\" would also help with clarity.\r\n\r\n```suggestion\r\n    std::optional<Txid> truc_child_in_mempool;\r\n```",
      "created_at": "2025-07-24T14:46:59Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228744739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228744739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 263,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228751179",
      "pull_request_review_id": 3051854806,
      "id": 2228751179,
      "node_id": "PRRC_kwDOABII586E2AtL",
      "diff_hunk": "@@ -109,10 +109,10 @@ class CCoinControl\n     int m_max_depth = DEFAULT_MAX_DEPTH;\n     //! SigningProvider that has pubkeys and scripts to do spend size estimation for external inputs\n     FlatSigningProvider m_external_provider;\n+    //! Version\n+    uint32_t m_version = CTransaction::CURRENT_VERSION;\n     //! Locktime\n     std::optional<uint32_t> m_locktime;\n-    //! Version\n-    std::optional<uint32_t> m_version;",
      "path": "src/wallet/coincontrol.h",
      "position": null,
      "original_position": 9,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "eecff95b6fe611c8ed40895108aacd6b44543234",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Question: why is eecff95b6fe611c8ed40895108aacd6b44543234 necessary? It would be helpful to put the motivation in the commit message.",
      "created_at": "2025-07-24T14:49:30Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228751179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228751179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 115,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228759954",
      "pull_request_review_id": 3051854806,
      "id": 2228759954,
      "node_id": "PRRC_kwDOABII586E2C2S",
      "diff_hunk": "@@ -1406,6 +1406,17 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 CWalletTx& wtx = wallet_it->second;\n                 if (wtx.isUnconfirmed()) {\n                     wtx.v3_spend = tx->GetHash();\n+                    // Find all wallet transactions that spend utxos from this tx",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2f62dec3681be78dddf9c72f3eca2f20f363834f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Again would be helpful to add one or two sentences to explain why we need to do this and why marking as mempool conflict is the appropriate treatment for a sibling (I don't think it's immediately obvious to everyone).",
      "created_at": "2025-07-24T14:52:54Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228759954",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228759954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228762116",
      "pull_request_review_id": 3051854806,
      "id": 2228762116,
      "node_id": "PRRC_kwDOABII586E2DYE",
      "diff_hunk": "@@ -1406,6 +1406,17 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 CWalletTx& wtx = wallet_it->second;\n                 if (wtx.isUnconfirmed()) {\n                     wtx.v3_spend = tx->GetHash();\n+                    // Find all wallet transactions that spend utxos from this tx\n+                    for (long unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n+                        for (auto range = mapTxSpends.equal_range(COutPoint(wtx.tx->GetHash(), i)); range.first != range.second; range.first++) {\n+                            const Txid& spent_id = range.first->second;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2f62dec3681be78dddf9c72f3eca2f20f363834f",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Naming this `sibling_txid` would be clearer",
      "created_at": "2025-07-24T14:53:46Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228762116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228762116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228770694",
      "pull_request_review_id": 3051854806,
      "id": 2228770694,
      "node_id": "PRRC_kwDOABII586E2FeG",
      "diff_hunk": "@@ -1303,6 +1310,13 @@ RPCHelpMan send()\n             if (options.exists(\"max_tx_weight\")) {\n                 coin_control.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n             }\n+\n+            if (rawTx.version == TRUC_VERSION) {\n+                if (!coin_control.m_max_tx_weight.has_value() || coin_control.m_max_tx_weight.value() > TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR) {\n+                    coin_control.m_max_tx_weight = TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR;\n+                }\n+            }",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "e384f69d949b3340484d5a4b1914ef5fad848341",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`m_max_tx_weight` should be corrected to the *minimum* of the original value and the TRUC maximum, otherwise you might be overriding what the user passed in above.",
      "created_at": "2025-07-24T14:56:46Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228770694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228770694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1310,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228771963",
      "pull_request_review_id": 3051854806,
      "id": 2228771963,
      "node_id": "PRRC_kwDOABII586E2Fx7",
      "diff_hunk": "@@ -1303,6 +1310,13 @@ RPCHelpMan send()\n             if (options.exists(\"max_tx_weight\")) {\n                 coin_control.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n             }\n+\n+            if (rawTx.version == TRUC_VERSION) {\n+                if (!coin_control.m_max_tx_weight.has_value() || coin_control.m_max_tx_weight.value() > TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR) {\n+                    coin_control.m_max_tx_weight = TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR;\n+                }\n+            }",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "e384f69d949b3340484d5a4b1914ef5fad848341",
      "in_reply_to_id": 2228770694,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(perhaps add a test case for this?)",
      "created_at": "2025-07-24T14:57:16Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228771963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228771963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1310,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228775694",
      "pull_request_review_id": 3051854806,
      "id": 2228775694,
      "node_id": "PRRC_kwDOABII586E2GsO",
      "diff_hunk": "@@ -147,6 +147,7 @@ std::vector<uint32_t> GetDust(const CTransaction& tx, CFeeRate dust_relay_rate);\n // allowing the new transaction version in the wallet/RPC.\n static constexpr decltype(CTransaction::version) TX_MIN_STANDARD_VERSION{1};\n static constexpr decltype(CTransaction::version) TX_MAX_STANDARD_VERSION{3};\n+static constexpr decltype(CTransaction::version) DEFAULT_RAWTX_VERSION{CTransaction::CURRENT_VERSION};",
      "path": "src/policy/policy.h",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "f9ed2875ab6fbe073bc8ca6192b771bda0db7af2",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "f9ed2875ab6fbe073bc8ca6192b771bda0db7af2: this is unused in the commit and should be squashed into the next one. Also, I think this should live rawtransaction.cpp and wallet should have its own default version constexpr",
      "created_at": "2025-07-24T14:58:34Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228775694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228775694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228783155",
      "pull_request_review_id": 3051854806,
      "id": 2228783155,
      "node_id": "PRRC_kwDOABII586E2Igz",
      "diff_hunk": "@@ -1302,7 +1302,7 @@ RPCHelpMan send()\n                     ParseOutputs(outputs),\n                     InterpretSubtractFeeFromOutputInstructions(options[\"subtract_fee_from_outputs\"], outputs.getKeys())\n             );\n-            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf, DEFAULT_RAWTX_VERSION);",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think perhaps the wallet's default tx version should be specified in a separate constexpr that lives in the wallet code?",
      "created_at": "2025-07-24T15:00:54Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228783155",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228783155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228802603",
      "pull_request_review_id": 3051854806,
      "id": 2228802603,
      "node_id": "PRRC_kwDOABII586E2NQr",
      "diff_hunk": "@@ -98,7 +98,7 @@ bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType)\n \n bool IsStandardTx(const CTransaction& tx, const std::optional<unsigned>& max_datacarrier_bytes, bool permit_bare_multisig, const CFeeRate& dust_relay_fee, std::string& reason)\n {\n-    if (tx.version > TX_MAX_STANDARD_VERSION || tx.version < 1) {\n+    if (tx.version > TX_MAX_STANDARD_VERSION || tx.version < TX_MIN_STANDARD_VERSION) {",
      "path": "src/policy/policy.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This change is in 2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6 but seems to belong in b07d9b92821 instead",
      "created_at": "2025-07-24T15:07:24Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228802603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228802603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 101,
      "original_start_line": 101,
      "start_side": "LEFT",
      "line": 101,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228809702",
      "pull_request_review_id": 3051854806,
      "id": 2228809702,
      "node_id": "PRRC_kwDOABII586E2O_m",
      "diff_hunk": "@@ -30,6 +30,11 @@\n     MiniWallet,\n )\n \n+ORPHAN_TX_EXPIRE_TIME = 1200",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Orphans don't expire anymore and this is unused (is it from a rebase maybe?)",
      "created_at": "2025-07-24T15:10:05Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228809702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228809702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228810695",
      "pull_request_review_id": 3051854806,
      "id": 2228810695,
      "node_id": "PRRC_kwDOABII586E2PPH",
      "diff_hunk": "@@ -121,17 +120,9 @@ def _bulk_tx(self, tx, target_vsize):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n         returns the tx\n         \"\"\"\n-        if target_vsize < tx.get_vsize():\n-            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n-\n         tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n-        # determine number of needed padding bytes\n-        dummy_vbytes = target_vsize - tx.get_vsize()\n-        # compensate for the increase of the compact-size encoded script length\n-        # (note that the length encoding of the unpadded output script needs one byte)\n-        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n-        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n-        assert_equal(tx.get_vsize(), target_vsize)",
      "path": "test/functional/test_framework/wallet.py",
      "position": 34,
      "original_position": 34,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe put the `bulk_vout` refactor into a separate commit",
      "created_at": "2025-07-24T15:10:26Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228810695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228810695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 124,
      "original_start_line": 124,
      "start_side": "LEFT",
      "line": 134,
      "original_line": 134,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228811904",
      "pull_request_review_id": 3051854806,
      "id": 2228811904,
      "node_id": "PRRC_kwDOABII586E2PiA",
      "diff_hunk": "@@ -0,0 +1,422 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "s/v3/TRUC\r\n",
      "created_at": "2025-07-24T15:10:54Z",
      "updated_at": "2025-07-24T15:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2228811904",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2228811904"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2231837660",
      "pull_request_review_id": 3056536309,
      "id": 2231837660,
      "node_id": "PRRC_kwDOABII586FByPc",
      "diff_hunk": "@@ -390,6 +390,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (nDepth == 0 && params.track_version) {\n                 if (coinControl->m_version == TRUC_VERSION) {\n                     if (wtx.tx->version != TRUC_VERSION) continue;\n+                    if (wtx.v3_spend.has_value()) continue; // this unconfirmed v3 transaction already has a child\n                 } else {\n                     if (wtx.tx->version == TRUC_VERSION) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 32,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228739872,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why is it safe to assume that the transaction doesn't already have a child here?",
      "created_at": "2025-07-25T19:11:15Z",
      "updated_at": "2025-07-25T19:11:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2231837660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2231837660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2231981895",
      "pull_request_review_id": 3056754941,
      "id": 2231981895,
      "node_id": "PRRC_kwDOABII586FCVdH",
      "diff_hunk": "@@ -390,6 +390,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (nDepth == 0 && params.track_version) {\n                 if (coinControl->m_version == TRUC_VERSION) {\n                     if (wtx.tx->version != TRUC_VERSION) continue;\n+                    if (wtx.v3_spend.has_value()) continue; // this unconfirmed v3 transaction already has a child\n                 } else {\n                     if (wtx.tx->version == TRUC_VERSION) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 32,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228739872,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "non-TRUC transactions shouldn't have TRUC children. I think it would be a bug if we set this variable for a transaction that isn't TRUC",
      "created_at": "2025-07-25T20:49:08Z",
      "updated_at": "2025-07-25T20:49:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2231981895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2231981895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2236689505",
      "pull_request_review_id": 3063019095,
      "id": 2236689505,
      "node_id": "PRRC_kwDOABII586FUSxh",
      "diff_hunk": "@@ -390,6 +390,7 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (nDepth == 0 && params.track_version) {\n                 if (coinControl->m_version == TRUC_VERSION) {\n                     if (wtx.tx->version != TRUC_VERSION) continue;\n+                    if (wtx.v3_spend.has_value()) continue; // this unconfirmed v3 transaction already has a child\n                 } else {\n                     if (wtx.tx->version == TRUC_VERSION) continue;",
      "path": "src/wallet/spend.cpp",
      "position": 32,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228739872,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, that makes sense, I thought that you were talking about changing the if-statement on line 393. ",
      "created_at": "2025-07-28T14:19:06Z",
      "updated_at": "2025-07-28T14:19:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2236689505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2236689505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 403,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237491835",
      "pull_request_review_id": 3064095739,
      "id": 2237491835,
      "node_id": "PRRC_kwDOABII586FXWp7",
      "diff_hunk": "@@ -283,6 +283,16 @@ util::Result<PreSelectedInputs> FetchSelectedInputs(const CWallet& wallet, const\n             if (input_bytes == -1) {\n                 input_bytes = CalculateMaximumSignedInputSize(txout, &wallet, &coin_control);\n             }\n+            auto it = wallet.mapWallet.find(outpoint.hash);\n+            if (it != wallet.mapWallet.end()) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "40c6d135f37a1d8dd64cbea3ca30229c2e012fa2",
      "in_reply_to_id": 2226343248,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:12:18Z",
      "updated_at": "2025-07-28T18:12:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237491835",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237491835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 286,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237492581",
      "pull_request_review_id": 3064096780,
      "id": 2237492581,
      "node_id": "PRRC_kwDOABII586FXW1l",
      "diff_hunk": "@@ -1679,7 +1680,7 @@ static RPCHelpMan createpsbt()\n     if (!request.params[3].isNull()) {\n         rbf = request.params[3].get_bool();\n     }\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf, DEFAULT_RAWTX_VERSION);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": 2226356487,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, will add additional tests for these RPCs as well. ",
      "created_at": "2025-07-28T18:12:44Z",
      "updated_at": "2025-07-28T18:12:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237492581",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237492581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237493859",
      "pull_request_review_id": 3064099408,
      "id": 2237493859,
      "node_id": "PRRC_kwDOABII586FXXJj",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this marks all outputs of any unconfirmed v3 parent transactions as unspendable",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228722754,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:13:14Z",
      "updated_at": "2025-07-28T18:13:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237493859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237493859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237494375",
      "pull_request_review_id": 3064100340,
      "id": 2237494375,
      "node_id": "PRRC_kwDOABII586FXXRn",
      "diff_hunk": "@@ -1446,6 +1462,19 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n             });\n         }\n     }\n+\n+    // reverse what happens in transactionAddedToMempool",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228737241,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:13:23Z",
      "updated_at": "2025-07-28T18:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237494375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237494375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237495065",
      "pull_request_review_id": 3064101534,
      "id": 2237495065,
      "node_id": "PRRC_kwDOABII586FXXcZ",
      "diff_hunk": "@@ -258,6 +258,10 @@ class CWalletTx\n     // BlockConflicted.\n     std::set<Txid> mempool_conflicts;\n \n+    // Track v3 mempool tx that spends from this tx\n+    // so that we don't try to create another unconfirmed child\n+    std::optional<Txid> v3_spend;",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 6,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228744739,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:13:41Z",
      "updated_at": "2025-07-28T18:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237495065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237495065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 263,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237496037",
      "pull_request_review_id": 3064103012,
      "id": 2237496037,
      "node_id": "PRRC_kwDOABII586FXXrl",
      "diff_hunk": "@@ -109,10 +109,10 @@ class CCoinControl\n     int m_max_depth = DEFAULT_MAX_DEPTH;\n     //! SigningProvider that has pubkeys and scripts to do spend size estimation for external inputs\n     FlatSigningProvider m_external_provider;\n+    //! Version\n+    uint32_t m_version = CTransaction::CURRENT_VERSION;\n     //! Locktime\n     std::optional<uint32_t> m_locktime;\n-    //! Version\n-    std::optional<uint32_t> m_version;",
      "path": "src/wallet/coincontrol.h",
      "position": null,
      "original_position": 9,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "eecff95b6fe611c8ed40895108aacd6b44543234",
      "in_reply_to_id": 2228751179,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added description to commit message.",
      "created_at": "2025-07-28T18:14:03Z",
      "updated_at": "2025-07-28T18:14:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237496037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237496037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 112,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 115,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237499169",
      "pull_request_review_id": 3064107884,
      "id": 2237499169,
      "node_id": "PRRC_kwDOABII586FXYch",
      "diff_hunk": "@@ -1406,6 +1406,17 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 CWalletTx& wtx = wallet_it->second;\n                 if (wtx.isUnconfirmed()) {\n                     wtx.v3_spend = tx->GetHash();\n+                    // Find all wallet transactions that spend utxos from this tx",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2f62dec3681be78dddf9c72f3eca2f20f363834f",
      "in_reply_to_id": 2228759954,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:15:55Z",
      "updated_at": "2025-07-28T18:15:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237499169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237499169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237499397",
      "pull_request_review_id": 3064108207,
      "id": 2237499397,
      "node_id": "PRRC_kwDOABII586FXYgF",
      "diff_hunk": "@@ -1406,6 +1406,17 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 CWalletTx& wtx = wallet_it->second;\n                 if (wtx.isUnconfirmed()) {\n                     wtx.v3_spend = tx->GetHash();\n+                    // Find all wallet transactions that spend utxos from this tx\n+                    for (long unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n+                        for (auto range = mapTxSpends.equal_range(COutPoint(wtx.tx->GetHash(), i)); range.first != range.second; range.first++) {\n+                            const Txid& spent_id = range.first->second;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2f62dec3681be78dddf9c72f3eca2f20f363834f",
      "in_reply_to_id": 2228762116,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:16:03Z",
      "updated_at": "2025-07-28T18:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237499397",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237499397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237500416",
      "pull_request_review_id": 3064110141,
      "id": 2237500416,
      "node_id": "PRRC_kwDOABII586FXYwA",
      "diff_hunk": "@@ -1303,6 +1310,13 @@ RPCHelpMan send()\n             if (options.exists(\"max_tx_weight\")) {\n                 coin_control.m_max_tx_weight = options[\"max_tx_weight\"].getInt<int>();\n             }\n+\n+            if (rawTx.version == TRUC_VERSION) {\n+                if (!coin_control.m_max_tx_weight.has_value() || coin_control.m_max_tx_weight.value() > TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR) {\n+                    coin_control.m_max_tx_weight = TRUC_MAX_VSIZE * WITNESS_SCALE_FACTOR;\n+                }\n+            }",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "e384f69d949b3340484d5a4b1914ef5fad848341",
      "in_reply_to_id": 2228770694,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've corrected the code and will add a test case for this",
      "created_at": "2025-07-28T18:16:37Z",
      "updated_at": "2025-07-28T18:16:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237500416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237500416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1310,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237500806",
      "pull_request_review_id": 3064110576,
      "id": 2237500806,
      "node_id": "PRRC_kwDOABII586FXY2G",
      "diff_hunk": "@@ -147,6 +147,7 @@ std::vector<uint32_t> GetDust(const CTransaction& tx, CFeeRate dust_relay_rate);\n // allowing the new transaction version in the wallet/RPC.\n static constexpr decltype(CTransaction::version) TX_MIN_STANDARD_VERSION{1};\n static constexpr decltype(CTransaction::version) TX_MAX_STANDARD_VERSION{3};\n+static constexpr decltype(CTransaction::version) DEFAULT_RAWTX_VERSION{CTransaction::CURRENT_VERSION};",
      "path": "src/policy/policy.h",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "f9ed2875ab6fbe073bc8ca6192b771bda0db7af2",
      "in_reply_to_id": 2228775694,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:16:46Z",
      "updated_at": "2025-07-28T18:16:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237500806",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237500806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237501117",
      "pull_request_review_id": 3064111089,
      "id": 2237501117,
      "node_id": "PRRC_kwDOABII586FXY69",
      "diff_hunk": "@@ -1302,7 +1302,7 @@ RPCHelpMan send()\n                     ParseOutputs(outputs),\n                     InterpretSubtractFeeFromOutputInstructions(options[\"subtract_fee_from_outputs\"], outputs.getKeys())\n             );\n-            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf, DEFAULT_RAWTX_VERSION);",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": 2228783155,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:16:58Z",
      "updated_at": "2025-07-28T18:16:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237501117",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237501117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237501642",
      "pull_request_review_id": 3064112135,
      "id": 2237501642,
      "node_id": "PRRC_kwDOABII586FXZDK",
      "diff_hunk": "@@ -98,7 +98,7 @@ bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType)\n \n bool IsStandardTx(const CTransaction& tx, const std::optional<unsigned>& max_datacarrier_bytes, bool permit_bare_multisig, const CFeeRate& dust_relay_fee, std::string& reason)\n {\n-    if (tx.version > TX_MAX_STANDARD_VERSION || tx.version < 1) {\n+    if (tx.version > TX_MAX_STANDARD_VERSION || tx.version < TX_MIN_STANDARD_VERSION) {",
      "path": "src/policy/policy.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "2bcdf53a58ee6cd7c70f2afd97a16fce5dcc21c6",
      "in_reply_to_id": 2228802603,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've moved the change to the correct commit",
      "created_at": "2025-07-28T18:17:16Z",
      "updated_at": "2025-07-28T18:17:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237501642",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237501642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 101,
      "original_start_line": 101,
      "start_side": "LEFT",
      "line": 101,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237502419",
      "pull_request_review_id": 3064113139,
      "id": 2237502419,
      "node_id": "PRRC_kwDOABII586FXZPT",
      "diff_hunk": "@@ -30,6 +30,11 @@\n     MiniWallet,\n )\n \n+ORPHAN_TX_EXPIRE_TIME = 1200",
      "path": "test/functional/test_framework/mempool_util.py",
      "position": null,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": 2228809702,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've removed it, pretty sure it was from a rebase",
      "created_at": "2025-07-28T18:17:40Z",
      "updated_at": "2025-07-28T18:17:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237502419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237502419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237502775",
      "pull_request_review_id": 3064113891,
      "id": 2237502775,
      "node_id": "PRRC_kwDOABII586FXZU3",
      "diff_hunk": "@@ -121,17 +120,9 @@ def _bulk_tx(self, tx, target_vsize):\n         \"\"\"Pad a transaction with extra outputs until it reaches a target vsize.\n         returns the tx\n         \"\"\"\n-        if target_vsize < tx.get_vsize():\n-            raise RuntimeError(f\"target_vsize {target_vsize} is less than transaction virtual size {tx.get_vsize()}\")\n-\n         tx.vout.append(CTxOut(nValue=0, scriptPubKey=CScript([OP_RETURN])))\n-        # determine number of needed padding bytes\n-        dummy_vbytes = target_vsize - tx.get_vsize()\n-        # compensate for the increase of the compact-size encoded script length\n-        # (note that the length encoding of the unpadded output script needs one byte)\n-        dummy_vbytes -= len(ser_compact_size(dummy_vbytes)) - 1\n-        tx.vout[-1].scriptPubKey = CScript([OP_RETURN] + [OP_1] * dummy_vbytes)\n-        assert_equal(tx.get_vsize(), target_vsize)",
      "path": "test/functional/test_framework/wallet.py",
      "position": 34,
      "original_position": 34,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": 2228810695,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:17:51Z",
      "updated_at": "2025-07-28T18:17:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237502775",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237502775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 124,
      "original_start_line": 124,
      "start_side": "LEFT",
      "line": 134,
      "original_line": 134,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237503063",
      "pull_request_review_id": 3064114246,
      "id": 2237503063,
      "node_id": "PRRC_kwDOABII586FXZZX",
      "diff_hunk": "@@ -0,0 +1,422 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2025 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test how the wallet deals with v3 transactions\"\"\"",
      "path": "test/functional/wallet_v3_txs.py",
      "position": null,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "98e865fb2c2d1231934cc572d578755d18ec56b9",
      "in_reply_to_id": 2228811904,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:17:59Z",
      "updated_at": "2025-07-28T18:17:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237503063",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237503063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237503366",
      "pull_request_review_id": 3064114637,
      "id": 2237503366,
      "node_id": "PRRC_kwDOABII586FXZeG",
      "diff_hunk": "@@ -1393,6 +1394,21 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n                 return wtx.mempool_conflicts.insert(txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\n             });\n         }\n+\n+    }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // this marks all outputs of any unconfirmed v3 parent transactions as unspendable\n+        // if any of its outputs are spent by this transaction\n+        for (const CTxIn& tx_in : tx->vin) {\n+            auto wallet_it = mapWallet.find(tx_in.prevout.hash);\n+            if (wallet_it != mapWallet.end()) {\n+                CWalletTx& wtx = wallet_it->second;\n+                if (wtx.isUnconfirmed()) {\n+                    wtx.v3_spend = tx->GetHash();\n+                }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "279b45e9ba649b05508ff19eec7550d53cd5306c",
      "in_reply_to_id": 2228715272,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-28T18:18:08Z",
      "updated_at": "2025-07-28T18:18:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2237503366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2237503366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": 1404,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248640723",
      "pull_request_review_id": 3080238325,
      "id": 2248640723,
      "node_id": "PRRC_kwDOABII586GB4jT",
      "diff_hunk": "@@ -83,6 +83,8 @@ struct CoinFilterParams {\n     bool include_immature_coinbase{false};\n     // By default, skip locked UTXOs\n     bool skip_locked{true};\n+    // Whether or not to care about the tx version\n+    bool track_version{true}; // only used by AvailableCoinsListUnspent",
      "path": "src/wallet/spend.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "1910d9b61f23f65335367f2f8dd021ac1ccd907a",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1910d9b61f23f65335367f2f8dd021ac1ccd907a\r\n\r\nCould be more specific. Also, this isn't only used by AvailableCoinsListUnspent. It's always checked in `AvailableCoins`, but `AvailableCoinsListUnspent` is the only caller that disables it because it's not building a transaction.\r\n\r\n```suggestion\r\n    // When true, filter unconfirmed coins by whether their version's TRUCness matches what is set by CCoinControl.\r\n    bool check_version_trucness{true};\r\n```",
      "created_at": "2025-08-01T18:49:44Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248640723",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248640723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 86,
      "original_start_line": 86,
      "start_side": "RIGHT",
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248642322",
      "pull_request_review_id": 3080238325,
      "id": 2248642322,
      "node_id": "PRRC_kwDOABII586GB48S",
      "diff_hunk": "@@ -390,8 +390,10 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n             if (nDepth == 0 && params.track_version) {\n                 if (coinControl->m_version == TRUC_VERSION) {\n                     if (wtx.tx->version != TRUC_VERSION) continue;\n+                    if (wtx.truc_child_in_mempool.has_value()) continue; // this unconfirmed v3 transaction already has a child",
      "path": "src/wallet/spend.cpp",
      "position": 30,
      "original_position": 4,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7f43b5559c5f508ac210350847bca6f0f0e091be",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7f43b5559c5f508ac210350847bca6f0f0e091be\r\n\r\nnit: generally prefer comments to live on separate lines\r\n```suggestion\r\n                     // this unconfirmed v3 transaction already has a child\r\n                    if (wtx.truc_child_in_mempool.has_value()) continue;\r\n```",
      "created_at": "2025-08-01T18:50:43Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248642322",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248642322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 401,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248644653",
      "pull_request_review_id": 3080238325,
      "id": 2248644653,
      "node_id": "PRRC_kwDOABII586GB5gt",
      "diff_hunk": "@@ -1446,6 +1463,22 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n             });\n         }\n     }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // unset truc_child_in_mempool to make it possible to spend from\n+        // this again. If this tx was replaced by another\n+        // child of the same parent, transactionAddedToMempool\n+        // will update truc_child_in_mempool\n+        for (const CTxIn& tx_in : tx->vin) {\n+            auto wallet_it = mapWallet.find(tx_in.prevout.hash);",
      "path": "src/wallet/wallet.cpp",
      "position": 56,
      "original_position": 42,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7f43b5559c5f508ac210350847bca6f0f0e091be",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit 7f43b5559c5f508ac210350847bca6f0f0e091be\r\n\r\ncall this `parent_it` as well?",
      "created_at": "2025-08-01T18:52:15Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248644653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248644653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1487,
      "original_line": 1473,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248646240",
      "pull_request_review_id": 3080238325,
      "id": 2248646240,
      "node_id": "PRRC_kwDOABII586GB55g",
      "diff_hunk": "@@ -1446,6 +1463,22 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n             });\n         }\n     }\n+\n+    if (tx->version == TRUC_VERSION) {\n+        // unset truc_child_in_mempool to make it possible to spend from\n+        // this again. If this tx was replaced by another",
      "path": "src/wallet/wallet.cpp",
      "position": 52,
      "original_position": 38,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "7f43b5559c5f508ac210350847bca6f0f0e091be",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        // If this tx has a parent, unset its truc_child_in_mempool to make it possible\r\n        // to spend from the parent again. If this tx was replaced by another\r\n```",
      "created_at": "2025-08-01T18:53:11Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248646240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248646240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 1482,
      "original_start_line": 1468,
      "start_side": "RIGHT",
      "line": 1483,
      "original_line": 1469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248686896",
      "pull_request_review_id": 3080238325,
      "id": 2248686896,
      "node_id": "PRRC_kwDOABII586GCD0w",
      "diff_hunk": "@@ -1475,6 +1489,15 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n                 CWalletTx& wtx = wallet_it->second;\n                 if (wtx.truc_child_in_mempool == tx->GetHash()) {\n                     wtx.truc_child_in_mempool = std::nullopt;\n+                    // Find all wallet transactions that spend utxos from this tx",
      "path": "src/wallet/wallet.cpp",
      "position": 61,
      "original_position": 31,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "ac910c5091088c8081cfae1f31499c0486682a6a",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This comment can be confusing - we're not actually looking for transactions spending from *this* tx. We're looking for siblings of this tx, which spend from utxos of `wtx` (which is actually this transaction's parent). Might be helpful to rename `wallet_it` to `parent_it` and update this comment.",
      "created_at": "2025-08-01T19:05:08Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248686896",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248686896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1492,
      "original_line": 1492,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248694635",
      "pull_request_review_id": 3080238325,
      "id": 2248694635,
      "node_id": "PRRC_kwDOABII586GCFtr",
      "diff_hunk": "@@ -53,6 +53,6 @@ std::vector<std::pair<CTxDestination, CAmount>> ParseOutputs(const UniValue& out\n void AddOutputs(CMutableTransaction& rawTx, const UniValue& outputs_in);\n \n /** Create a transaction from univalue parameters */\n-CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, std::optional<bool> rbf);\n+CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, std::optional<bool> rbf, const uint32_t& version);",
      "path": "src/rpc/rawtransaction_util.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "9b478f1f68c00b5c514a30a53d19cd58fe813795",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9b478f1f68c00b5c514a30a53d19cd58fe813795\r\n\r\nintegers can just be passed by value",
      "created_at": "2025-08-01T19:10:01Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248694635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248694635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248721755",
      "pull_request_review_id": 3080238325,
      "id": 2248721755,
      "node_id": "PRRC_kwDOABII586GCMVb",
      "diff_hunk": "@@ -0,0 +1,19 @@\n+Updated RPCs\n+------------\n+The following RPCs now contain a `version` parameter that allows\n+the user to create transactions of any standard version number (1-3):\n+- `createrawtransaction`\n+- `createpsbt`\n+- `send`\n+- `sendall`\n+- `walletcreatefundedpsbt`\n+\n+Wallet\n+------\n+Support has been added for spending version 3 transactions received by",
      "path": "doc/release-notes-32896.md",
      "position": 13,
      "original_position": 13,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now that there is `send` and `sendall` support, is it just transactions received by the wallet?",
      "created_at": "2025-08-01T19:26:03Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248721755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248721755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248722112",
      "pull_request_review_id": 3080238325,
      "id": 2248722112,
      "node_id": "PRRC_kwDOABII586GCMbA",
      "diff_hunk": "@@ -0,0 +1,19 @@\n+Updated RPCs\n+------------\n+The following RPCs now contain a `version` parameter that allows\n+the user to create transactions of any standard version number (1-3):\n+- `createrawtransaction`\n+- `createpsbt`\n+- `send`\n+- `sendall`\n+- `walletcreatefundedpsbt`\n+\n+Wallet\n+------\n+Support has been added for spending version 3 transactions received by\n+the wallet. The wallet ensures that version 3 policy rules are being",
      "path": "doc/release-notes-32896.md",
      "position": 14,
      "original_position": 14,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe mention TRUC and/or BIP 431?",
      "created_at": "2025-08-01T19:26:18Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248722112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248722112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248729121",
      "pull_request_review_id": 3080238325,
      "id": 2248729121,
      "node_id": "PRRC_kwDOABII586GCOIh",
      "diff_hunk": "@@ -924,11 +924,17 @@ util::Result<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coin\n         // If no solution is found, return the first detailed error (if any).\n         // future: add \"error level\" so the worst one can be picked instead.\n         std::vector<util::Result<SelectionResult>> res_detailed_errors;\n+        CoinSelectionParams temp_selection_params = coin_selection_params;\n         for (const auto& select_filter : ordered_filters) {\n             auto it = filtered_groups.find(select_filter.filter);\n             if (it == filtered_groups.end()) continue;\n+            if (temp_selection_params.m_version == TRUC_VERSION && (select_filter.filter.conf_mine == 0 || select_filter.filter.conf_theirs == 0)) {\n+                if (temp_selection_params.m_max_tx_weight > (TRUC_CHILD_MAX_VSIZE * WITNESS_SCALE_FACTOR)) {\n+                    temp_selection_params.m_max_tx_weight = TRUC_CHILD_MAX_VSIZE * WITNESS_SCALE_FACTOR;",
      "path": "src/wallet/spend.cpp",
      "position": 58,
      "original_position": 10,
      "commit_id": "a2c43c3b9447377d2f2635e23c9043e40b769dd4",
      "original_commit_id": "84c3c1a117e01bb39b0614b8e1af3a1fa703133b",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing test coverage for this condition I think? Need `user_input_weight_not_overwritten` test for something spending unconfirmed v3",
      "created_at": "2025-08-01T19:31:27Z",
      "updated_at": "2025-08-01T19:38:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32896#discussion_r2248729121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248729121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32896"
        }
      },
      "start_line": 932,
      "original_start_line": 932,
      "start_side": "RIGHT",
      "line": 933,
      "original_line": 933,
      "side": "RIGHT"
    }
  ]
}