{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981",
    "id": 2370462287,
    "node_id": "PR_kwDOABII586NSmJP",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31981",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31981.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31981.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
    "number": 31981,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add checkBlock() to Mining interface",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR adds the IPC equivalent of the `getblocktemplate` RPC in `proposal` mode.\r\n\r\nIn order to do so it has `TestBlockValidity` return error reasons as a string instead of `BlockValidationState`. This avoids complexity in IPC code for handling the latter struct.\r\n\r\nThe new Mining interface method is used in `miner_tests`.\r\n\r\nIt's not used by the `getblocktemplate` and `generateblock` RPC calls, see https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2096473337\r\n\r\nThe `inconclusive-not-best-prevblk` check is moved from RPC\r\ncode to `TestBlockValidity`.\r\n\r\nTest coverage is increased by `mining_template_verification.py`.\r\n\r\nSuperseedes #31564\r\n\r\n## Background\r\n\r\n### Verifying block templates (no PoW)\r\n\r\nStratum v2 allows miners to generate their own block template. Pools may wish (or need) to verify these templates. This typically involves comparing mempools, asking miners to providing missing transactions and then reconstructing the proposed block.[^0] This is not sufficient to ensure a proposed block is actually valid. In some schemes miners could take advantage of incomplete validation[^1].\r\n\r\nThe Stratum Reference Implementation (SRI), currently the only Stratum v2 implementation, collects all missing mempool transactions, but does not yet fully verify the block.[^2]. It could use the `getblocktemplate` RPC in `proposal` mode, but using IPC is more performant, as it avoids serialising up to 4 MB of transaction data as JSON.\r\n\r\n(although SRI could use this PR, the Template Provider role doesn't need it, so this is _not_ part of #31098)\r\n\r\n[^0]: https://github.com/stratum-mining/sv2-spec/blob/main/06-Job-Declaration-Protocol.md  \r\n[^1]: https://delvingbitcoin.org/t/pplns-with-job-declaration/1099/45?u=sjors\r\n[^2]: https://github.com/stratum-mining/stratum/blob/v1.1.0/roles/jd-server/src/lib/job_declarator/message_handler.rs#L196\r\n",
    "labels": [
      {
        "id": 118378960,
        "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
        "name": "Mining",
        "color": "c7def8",
        "default": false
      }
    ],
    "created_at": "2025-03-04T11:04:38Z",
    "updated_at": "2025-06-11T16:08:42Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "14972852c93c5eb0dae652e358c5000e05e795e8",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:2025/03/checkBlock",
      "ref": "2025/03/checkBlock",
      "sha": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 11,
        "stargazers_count": 15,
        "watchers_count": 15,
        "size": 264712,
        "default_branch": "sv2",
        "open_issues_count": 11,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-11T16:07:24Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2025-05-20T16:14:20Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "851f540d0e035c4bcf222c51af9d5a4ce185063d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37350,
        "stargazers_count": 84088,
        "watchers_count": 84088,
        "size": 283624,
        "default_branch": "master",
        "open_issues_count": 749,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-11T15:56:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-11T15:56:06Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 497,
    "deletions": 233,
    "changed_files": 16,
    "commits": 5,
    "review_comments": 33,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 2697111800,
      "node_id": "IC_kwDOABII586gwqj4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2697111800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T11:04:41Z",
      "updated_at": "2025-06-11T16:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31981.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2837265952), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2870950393) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2878980302) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32317](https://github.com/bitcoin/bitcoin/pull/32317) (kernel: Separate UTXO set access from validation functions by TheCharlatan)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- /*=check_merkle_root=*/ -> /*check_merkle_root=*/ [extra '=' makes the inline comment inconsistent with the other parameter comment]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2697111800",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "commented",
      "id": 2697242642,
      "node_id": "IC_kwDOABII586gxKgS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2697242642",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T11:39:40Z",
      "updated_at": "2025-03-04T11:39:40Z",
      "author_association": "MEMBER",
      "body": "I also salvaged the functional tests from 15d841e41bb61f435dd3e60e99fa4db47d34a3a6.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2697242642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "labeled",
      "id": 16557252929,
      "node_id": "LE_lADOABII586sfKwPzwAAAAPa46FB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16557252929",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T12:20:16Z",
      "label": {
        "name": "Mining",
        "color": "c7def8"
      }
    },
    {
      "event": "labeled",
      "id": 16720765497,
      "node_id": "LE_lADOABII586sfKwPzwAAAAPkoqI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16720765497",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T20:30:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16728598400,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAPlGieA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728598400",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a5ef400c4c2c3de620a1fe6d1bd3996acd53f5ed",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/a5ef400c4c2c3de620a1fe6d1bd3996acd53f5ed",
      "created_at": "2025-03-13T08:29:52Z"
    },
    {
      "event": "commented",
      "id": 2720368885,
      "node_id": "IC_kwDOABII586iJYj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720368885",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:30:59Z",
      "updated_at": "2025-03-13T08:30:59Z",
      "author_association": "MEMBER",
      "body": "Rebased after #31283.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2720368885",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "unlabeled",
      "id": 16730521528,
      "node_id": "UNLE_lADOABII586sfKwPzwAAAAPlN3-4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16730521528",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T09:39:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 16752116439,
      "node_id": "LE_lADOABII586sfKwPzwAAAAPmgQLX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16752116439",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T01:17:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16767754028,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAPnb58s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16767754028",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "created_at": "2025-03-14T09:03:10Z"
    },
    {
      "event": "commented",
      "id": 2724057711,
      "node_id": "IC_kwDOABII586iXdJv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2724057711",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T09:03:12Z",
      "updated_at": "2025-03-14T09:03:12Z",
      "author_association": "MEMBER",
      "body": "Rebased after #31974 (trivial conflict with 3b33fd9424a2b4edbdc1745339e3541ab4b90af5).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2724057711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "unlabeled",
      "id": 16769582853,
      "node_id": "UNLE_lADOABII586sfKwPzwAAAAPni4cF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16769582853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T10:03:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 17177643451,
      "node_id": "RRE_lADOABII586sfKwPzwAAAAP_3gm7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17177643451",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T20:39:33Z",
      "requested_reviewer": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2751334428,
      "node_id": "PRR_kwDOABII586j_ggc",
      "url": null,
      "actor": null,
      "commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "\n\nCopilot reviewed 13 out of 15 changed files in this pull request and generated 1 comment.\n\n<details>\n<summary>Files not reviewed (2)</summary>\n\n* **src/ipc/capnp/mining.capnp**: Language not supported\n* **src/test/ipc_test.capnp**: Language not supported\n</details>\n\n<details>\n<summary>Comments suppressed due to low confidence (1)</summary>\n\n**src/node/interfaces.cpp:1098**\n* Correct the comment formatting by removing the '=' in '/*=check_merkle_root=*/' to read '/*check_merkle_root=*/' for clarity.\n```\nreturn chainman().TestBlockValidity(block, reason, /*check_pow=*/options.check_pow, /*=check_merkle_root=*/options.check_merkle_root);\n```\n</details>\n\n",
      "user": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2751334428",
      "submitted_at": "2025-04-08T20:40:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "reviewed",
      "id": 2754001889,
      "node_id": "PRR_kwDOABII586kJrvh",
      "url": null,
      "actor": null,
      "commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b. Change is nicely implemented and background in the PR description is very helpful. Am a little concerned about possible changes in RPC behavior though and left some comments below.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2754001889",
      "submitted_at": "2025-04-09T17:00:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "commented",
      "id": 2820550469,
      "node_id": "IC_kwDOABII586oHi9F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2820550469",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T08:22:38Z",
      "updated_at": "2025-04-22T08:22:38Z",
      "author_association": "MEMBER",
      "body": "Note to self, figure out if the sigops check needs to be fixed here or in another PR: https://github.com/bitcoin/bitcoin/pull/31624/files#r2053597806",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2820550469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17405593083,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQNdEX7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17405593083",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ab6869324959d0396aa0620297f6d4b3e4a9d1e6",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/ab6869324959d0396aa0620297f6d4b3e4a9d1e6",
      "created_at": "2025-04-25T12:16:04Z"
    },
    {
      "event": "commented",
      "id": 2830264751,
      "node_id": "IC_kwDOABII586osmmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830264751",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T12:16:07Z",
      "updated_at": "2025-04-25T12:32:19Z",
      "author_association": "MEMBER",
      "body": "Rebased, fixed typo found by LLM, clarified non behavior change for `proposal` mode.\r\n\r\nI added a `debug` argument to pass along more detailed failure reasons.\r\n\r\nI'm a bit on the fence regarding this suggestion: https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035713597\r\n\r\n> figure out if the sigops check needs to be fixed here \r\n\r\nNo it doesn't. `TestBlockValidity` first calls `CheckBlock` which performs the limited sigops check documented in #31624. Later it calls `ConnectBlock()` which does the thorough check.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2830264751",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "commented",
      "id": 2830342567,
      "node_id": "IC_kwDOABII586os5mn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830342567",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T12:49:43Z",
      "updated_at": "2025-04-25T12:49:43Z",
      "author_association": "MEMBER",
      "body": "I've implemented a typo check in DrahtBot and there are more, see https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2697111800\r\n\r\nAlso, the CI is failing.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2830342567",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "labeled",
      "id": 17406053276,
      "node_id": "LE_lADOABII586sfKwPzwAAAAQNe0uc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17406053276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T12:50:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2830345160,
      "node_id": "IC_kwDOABII586os6PI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830345160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T12:50:49Z",
      "updated_at": "2025-04-25T12:50:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/41155656918</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2830345160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17406585641,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQNg2sp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17406585641",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "977357133970f35a32c03f798667262f6d254d6f",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/977357133970f35a32c03f798667262f6d254d6f",
      "created_at": "2025-04-25T13:27:32Z"
    },
    {
      "event": "commented",
      "id": 2830435612,
      "node_id": "IC_kwDOABII586otQUc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830435612",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T13:27:37Z",
      "updated_at": "2025-04-25T13:42:42Z",
      "author_association": "MEMBER",
      "body": "Forgot to adjust the capnp file. Fixed more typos.\r\n\r\nI moved `TestBlockValidity` out of `ChainstateManager` again, and pass in a `chainstate` parameter as suggested in https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035713597.\r\n\r\n> Probably also better for it not to `LOCK(cs_main)` to avoid unnecessary recursive mutex locking.\r\n\r\nCan you elaborate on this?\r\n\r\n---\r\n\r\nI also moved the `TestBlockValidity` arguments around a bit to reduce churn.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2830435612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17406817487,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQNhvTP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17406817487",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/c1939c43c3addb17c4316d49580762a1e0ec4504",
      "created_at": "2025-04-25T13:42:42Z"
    },
    {
      "event": "unlabeled",
      "id": 17408948666,
      "node_id": "UNLE_lADOABII586sfKwPzwAAAAQNp3m6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17408948666",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T16:09:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2807792687,
      "node_id": "PRR_kwDOABII586nW4Qv",
      "url": null,
      "actor": null,
      "commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2807792687",
      "submitted_at": "2025-04-30T16:56:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "reviewed",
      "id": 2808014093,
      "node_id": "PRR_kwDOABII586nXuUN",
      "url": null,
      "actor": null,
      "commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2808014093",
      "submitted_at": "2025-04-30T18:12:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "reviewed",
      "id": 2837265952,
      "node_id": "PRR_kwDOABII586pHT4g",
      "url": null,
      "actor": null,
      "commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK after https://bitcoincore.reviews/31981",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2837265952",
      "submitted_at": "2025-05-13T15:33:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "commented",
      "id": 2877028785,
      "node_id": "IC_kwDOABII586re_mx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2877028785",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T15:43:56Z",
      "updated_at": "2025-05-13T15:43:56Z",
      "author_association": "MEMBER",
      "body": "Thanks. I still need to address the questions by @stringintech.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2877028785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "mentioned",
      "id": 17638276033,
      "node_id": "MEE_lADOABII586sfKwPzwAAAAQbUrvB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638276033",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T15:43:57Z"
    },
    {
      "event": "subscribed",
      "id": 17638276059,
      "node_id": "SE_lADOABII586sfKwPzwAAAAQbUrvb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638276059",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T15:43:57Z"
    },
    {
      "event": "reviewed",
      "id": 2837626300,
      "node_id": "PRR_kwDOABII586pIr28",
      "url": null,
      "actor": null,
      "commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c1939c43c3addb17c4316d49580762a1e0ec4504. Since last review changes were improving error handling adding many comments, and making TestBlockValidity a standalone method again accepting a chainstate.\r\n\r\nI left another suggestion (and a diff) below to make TestBlockValidity return a BlockValidationState instead of a bool and strings, which I think would be better, but feel free to keep current approach if you prefer.\r\n\r\nMight also be nice to link to the review club discussion in the description (https://bitcoincore.reviews/31981)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2837626300",
      "submitted_at": "2025-05-13T19:40:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "review_requested",
      "id": 17641576573,
      "node_id": "RRE_lADOABII586sfKwPzwAAAAQbhRh9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17641576573",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T19:40:26Z",
      "requested_reviewer": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17655844787,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQcXs-z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17655844787",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28d9d8892a8c1a8cede3042fb1eda4313b02a113",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/28d9d8892a8c1a8cede3042fb1eda4313b02a113",
      "created_at": "2025-05-14T15:12:32Z"
    },
    {
      "event": "commented",
      "id": 2880617674,
      "node_id": "IC_kwDOABII586rsrzK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2880617674",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T15:12:37Z",
      "updated_at": "2025-05-14T15:12:37Z",
      "author_association": "MEMBER",
      "body": "I took @ryanofsky's patch to keep BlockValidationState in the interface _implementation_ and validation code.\r\n\r\nAlso split the test into multiple functions.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2880617674",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "mentioned",
      "id": 17655846809,
      "node_id": "MEE_lADOABII586sfKwPzwAAAAQcXteZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17655846809",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T15:12:39Z"
    },
    {
      "event": "subscribed",
      "id": 17655846844,
      "node_id": "SE_lADOABII586sfKwPzwAAAAQcXte8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17655846844",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T15:12:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17657680469,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQcetJV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17657680469",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c759ec1256a5cdc02b6eef1f4c0935c693bb8087",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/c759ec1256a5cdc02b6eef1f4c0935c693bb8087",
      "created_at": "2025-05-14T17:09:26Z"
    },
    {
      "event": "commented",
      "id": 2880958368,
      "node_id": "IC_kwDOABII586rt--g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2880958368",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-14T17:09:39Z",
      "updated_at": "2025-05-16T07:17:19Z",
      "author_association": "MEMBER",
      "body": "Rebased to include the new comment added in #31624.\r\n\r\nThe tests I added don't cover the difference in sigops counting. Suggestions are welcome, it could look for \"CheckBlock failed\" vs \"ConnectBlock failed\". In any case this could be a followup.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2880958368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "reviewed",
      "id": 2840680200,
      "node_id": "PRR_kwDOABII586pUVcI",
      "url": null,
      "actor": null,
      "commit_id": "c759ec1256a5cdc02b6eef1f4c0935c693bb8087",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c759ec1256a5cdc02b6eef1f4c0935c693bb8087. Since last review just rebased, applied some suggested changes to use BlockValidationState, and split the new python test into functions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2840680200",
      "submitted_at": "2025-05-19T21:03:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "labeled",
      "id": 17730630849,
      "node_id": "LE_lADOABII586sfKwPzwAAAAQg0_TB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17730630849",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T09:40:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17731235009,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQg3SzB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17731235009",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "975991571de3f11399ca01753e41753e0008b5a0",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/975991571de3f11399ca01753e41753e0008b5a0",
      "created_at": "2025-05-20T10:13:18Z"
    },
    {
      "event": "commented",
      "id": 2893793850,
      "node_id": "IC_kwDOABII586se8o6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2893793850",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T10:13:20Z",
      "updated_at": "2025-05-20T10:13:20Z",
      "author_association": "MEMBER",
      "body": "Trivial rebase after #32562, dropped changes in RPC code and added a comment in the test.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2893793850",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31981"
    },
    {
      "event": "unlabeled",
      "id": 17732947623,
      "node_id": "UNLE_lADOABII586sfKwPzwAAAAQg906n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17732947623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T12:02:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2854605689,
      "node_id": "PRR_kwDOABII586qJdN5",
      "url": null,
      "actor": null,
      "commit_id": "975991571de3f11399ca01753e41753e0008b5a0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 975991571de3f11399ca01753e41753e0008b5a0. Since last review just dropped some RPC changes which were not strictly necessary and added test comments",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2854605689",
      "submitted_at": "2025-05-20T15:07:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "reviewed",
      "id": 2870950393,
      "node_id": "PRR_kwDOABII586rHzn5",
      "url": null,
      "actor": null,
      "commit_id": "975991571de3f11399ca01753e41753e0008b5a0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2870950393",
      "submitted_at": "2025-05-27T12:52:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2YTc1M2Q0OGQxODVlNzYwMDg3MjM2NmU0NzUzYTcwZGIxMGNkNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86a753d48d185e7600872366e4753a70db10cd49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/86a753d48d185e7600872366e4753a70db10cd49",
      "tree": {
        "sha": "4a14c0219ec7a08273d86211518614d4cc4068bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a14c0219ec7a08273d86211518614d4cc4068bb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4a14c0219ec7a08273d86211518614d4cc4068bb\nparent af65fd1a333011137dafd3df9a51704fd319feb4\nauthor Sjors Provoost <sjors@sprovoost.nl> 1745587545 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1748354090 +0200\n\nvalidation: refactor TestBlockValidity\n\nComments are expanded.\n\nReturn BlockValidationState instead of passing a reference.\nLock Chainman mutex instead of cs_main.\nRemove redundant chainparams and pindexPrev arguments.\nDrop defaults for checking proof-of-work and merkle root.\n\nThe ContextualCheckBlockHeader check is moved to after CheckBlock,\nwhich is more similar to normal validation where context-free checks\nare done first.\n\nValidation failure reasons are no longer printed through LogError(),\nsince it depends on the caller whether this implies an actual bug\nin the node, or an externally sourced block that happens to be invalid.\nWhen called from getblocktemplate, via BlockAssembler::CreateNewBlock(),\nthis method already throws an std::runtime_error if validation fails.\n\nAdditionally it moves the inconclusive-not-best-prevblk check from RPC\ncode to TestBlockValidity.\n\nThere is no behavior change when callling getblocktemplate with proposal.\nPreviously this would return a BIP22ValidationResult which can throw for\nstate.IsError(). But CheckBlock() and the functions it calls only use\nstate.IsValid().\n\nThe final assert is changed into Assume, with a LogError.\n\nCo-authored-by: <Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmg1xCoACgkQV/+b28ww\nEAkQRRAAo+7dSofExFaMc/HGG2CECeISRo97X5kQfVodSovj/YPE9oNMtZyOJoMF\nllzhpB5j0ERZ+ourh9OeQDjnXdV6p1Xxs6l+9CEhkyUy9gf5MP1B4/hA9kGVZ8RG\n/S+ge/ieElkHKFcMw2P9w+4y+n6oR8rodYWlzQY+Ob/rvLKJ5v3cYdQWjQLa+M9C\n1MnSSUax6LK4lTC9ad8OEYQEqq4ToixNya97iOrcQolNoRxGtU1lw5nKNE2dMFIY\nk0RDYomOIzCckGwIMsNoGUS11l7UXyNHivXIkP28+FlAVaUWyGeSF8XE9hhCXe4V\nBzpS8OK+LfNdrjOrhXf8tt6yJtVG3W+vGg4DjMP57TnROlx8zqcrkVN6j2DiNToP\n1yfAe0xTMRV+UIqYrjtLLeRLT11l51sGcIhkSOUUK1B/yU06UheJgsVNOUHEBtdK\nMUSZ9KkHsl989mJQo59y97lBQ6nI4a5HzEBhOv18H7Dq13/cTviUkesn6Cw2zqne\nKmaXMh+apAAliubaYdXYXmEUSQNbEYDMkTKyVH5AsO7c6WtsWV69TRjV+D5ct7CI\nSV8AQSR05Y/wdoaTLbrlJeMlelMleQdqDZ5OzONlVKka/CpCCM+rP0W2LXS/Jbui\nKEYOBsTKgEAL6QyNDXdZvEXQE8aIuEQUBbbHYaOVfJoGfKAtyNw=\n=fVtv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af65fd1a333011137dafd3df9a51704fd319feb4",
          "sha": "af65fd1a333011137dafd3df9a51704fd319feb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af65fd1a333011137dafd3df9a51704fd319feb4"
        }
      ],
      "message": "validation: refactor TestBlockValidity\n\nComments are expanded.\n\nReturn BlockValidationState instead of passing a reference.\nLock Chainman mutex instead of cs_main.\nRemove redundant chainparams and pindexPrev arguments.\nDrop defaults for checking proof-of-work and merkle root.\n\nThe ContextualCheckBlockHeader check is moved to after CheckBlock,\nwhich is more similar to normal validation where context-free checks\nare done first.\n\nValidation failure reasons are no longer printed through LogError(),\nsince it depends on the caller whether this implies an actual bug\nin the node, or an externally sourced block that happens to be invalid.\nWhen called from getblocktemplate, via BlockAssembler::CreateNewBlock(),\nthis method already throws an std::runtime_error if validation fails.\n\nAdditionally it moves the inconclusive-not-best-prevblk check from RPC\ncode to TestBlockValidity.\n\nThere is no behavior change when callling getblocktemplate with proposal.\nPreviously this would return a BIP22ValidationResult which can throw for\nstate.IsError(). But CheckBlock() and the functions it calls only use\nstate.IsValid().\n\nThe final assert is changed into Assume, with a LogError.\n\nCo-authored-by: <Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-05-27T13:54:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-04-25T13:25:45Z"
      },
      "sha": "86a753d48d185e7600872366e4753a70db10cd49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwMjZhMDE4MDhlOTBlZTdkN2QwYTE0YTE4MGFmNWU4NjhlOWIxODk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0026a01808e90ee7d7d0a14a180af5e868e9b189",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0026a01808e90ee7d7d0a14a180af5e868e9b189",
      "tree": {
        "sha": "47002f820b34478dd90764e16d1f6549cb765ddd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47002f820b34478dd90764e16d1f6549cb765ddd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 47002f820b34478dd90764e16d1f6549cb765ddd\nparent 86a753d48d185e7600872366e4753a70db10cd49\nauthor Sjors Provoost <sjors@sprovoost.nl> 1737633594 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1748354090 +0200\n\nipc: drop BlockValidationState special handling\n\nThe Mining interface avoids using BlockValidationState.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmg1xCoACgkQV/+b28ww\nEAnglQ/+JPvmHOXu0tIj+Bv1n6fyCtjpJL9s8hKW7uA516Qcn+O6vo47AmtAqAHp\nlhRzrUyRt22IBdOKl9zYslYPVPR8jf1POPAnbY19zDUGN44J+sveCTonbSprHjCT\nM7lY4mPqdcCdIZvDj6VxL9cpo0uEVkiZp5d6UiVo5+uQYp0neIzURU0k07rQ9EhB\nHn3SKCpu0nBAuwdhMgTjvjDe4jjR+aTjBIXaMwjc5DyniOhaV8HgRx9H2PJTdEqC\n1QyUNyyIvom+0zHh8dChP16NkYL1heUuuLHjoTVuyjZ1II3AYEIBY/qy8s6smW7d\neyfkXiXTxl7kw3VubQSTV6DH+oPAMCKVYO+u/Z/nZVfkn8k21j58USHBrFGbrTxb\nkvkVtXg4RTctn37LL1nyP+rNyryhFaBH+cKT3fdpLTKiGG6HjMug+eoDPfwOISAI\np3vzlT54jqqJVaXJIQd3V2eSoOGzL52AL/j+fWK88GZTIcldo//3cdblHXKmgl8L\nccM0/FkJt03RIY+DaDwcTL0F+UL+WHZQC/bUoBxeg8AhBGVxqtGi6CnE04kcD4vk\nJ7+vI7asf/xC1h3AnuttQQpj32Y4KbTx0YaRr2hWOHLWXoJEuJukG9sT4MewcduN\nzPZHFjYfC11ooNWlSxuQxFvXnkfS3ImeGhTpX6oSmzPdLAoShmU=\n=RrTO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86a753d48d185e7600872366e4753a70db10cd49",
          "sha": "86a753d48d185e7600872366e4753a70db10cd49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86a753d48d185e7600872366e4753a70db10cd49"
        }
      ],
      "message": "ipc: drop BlockValidationState special handling\n\nThe Mining interface avoids using BlockValidationState.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-05-27T13:54:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-01-23T11:59:54Z"
      },
      "sha": "0026a01808e90ee7d7d0a14a180af5e868e9b189"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwNmU3YzMxMDVkN2UwMTNhYzk2NDU1NGEzNDg4YWJjNmI0ZGUwYmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/706e7c3105d7e013ac964554a3488abc6b4de0bf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/706e7c3105d7e013ac964554a3488abc6b4de0bf",
      "tree": {
        "sha": "55ea8cd945fbf9e8c3a7c88e22d128c1ad3ddc7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55ea8cd945fbf9e8c3a7c88e22d128c1ad3ddc7a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 55ea8cd945fbf9e8c3a7c88e22d128c1ad3ddc7a\nparent 0026a01808e90ee7d7d0a14a180af5e868e9b189\nauthor Sjors Provoost <sjors@sprovoost.nl> 1747725903 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1748354090 +0200\n\nAdd checkBlock to Mining interface\n\nUse it in miner_tests.\n\nThe getblocktemplate and generateblock RPC calls don't use this,\nbecause it would make the code more verbose.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmg1xCoACgkQV/+b28ww\nEAlR6g/+LXX6cvF8MvwfcP64CsLnjRdCFVT/jCvPLgjvHx1SoksNz+eJQLofXQkE\nqzy12wvjBM4rqSHnyfu+FvSXzs/TuAYio7KZ5cl6wQDiED6kad1crNF2Wag4OY1e\n1QkKmLvv/es8/Vb+q5fPpIsu1otPIt/FDDOfNI0Ph2b/ZbD+yY1T5YU0AliQqlcU\n65RhSpoM0va+4asE1kaNuNnL4uNpFV8+2X89ULRu8+5e/DX2YuQ3IO1Eb/YPt2az\n8gyahPOgsc9m46nP3P8g6nLJMEGuQJw5AM9SJe1IPQ1mpL19SFiZK6PeP7fF+XjZ\n9RF+Rxnaduutf+4R1Xjny94eyAlhspi0a3W93m/XL+5+59R78jQFvhWPAu4hNHvG\nK3rA3WHn1L6i3ckE388TznX9ky1as1ae9WHUCKIwloQQBaDMkdg0SmpbFXR8E5/Q\nAl/yMdYrxeYPkrejG9RbM1cQDoLJMOinq0T386UtwLGOdFI95UZPlW6jzuKqucQJ\nWEMhHhLM3ift/EE7L7tQApLVBQRhWsyCN3wJRQXCODCROWrNTFFMjuezyAeUSWWP\nNIHQQz7sSHKi062qh+sJx4QKzLEO1sTXBECPAcyn4w45MjSjP1ShdYKqFxejJoY+\nom6jEeFTSmxH4arAFFzCsVSgkRSK6Lmd9sZQiJMMkSe2z+obxQ0=\n=EFzf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0026a01808e90ee7d7d0a14a180af5e868e9b189",
          "sha": "0026a01808e90ee7d7d0a14a180af5e868e9b189",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0026a01808e90ee7d7d0a14a180af5e868e9b189"
        }
      ],
      "message": "Add checkBlock to Mining interface\n\nUse it in miner_tests.\n\nThe getblocktemplate and generateblock RPC calls don't use this,\nbecause it would make the code more verbose.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-05-27T13:54:50Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-05-20T07:25:03Z"
      },
      "sha": "706e7c3105d7e013ac964554a3488abc6b4de0bf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17831412519,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQm1cMn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17831412519",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/1def3bc3773b3013a92f54daa75acb82c30beaac",
      "created_at": "2025-05-27T14:01:45Z"
    },
    {
      "event": "reviewed",
      "id": 2878980302,
      "node_id": "PRR_kwDOABII586rmcDO",
      "url": null,
      "actor": null,
      "commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 1def3bc3773b3013a92f54daa75acb82c30beaac. Only change since previous review is implementing a previous suggestion and passing a single cache temporary coinsview instead of a double cache to ConnectBlock.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2878980302",
      "submitted_at": "2025-05-29T17:14:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "review_requested",
      "id": 17872182768,
      "node_id": "RRE_lADOABII586sfKwPzwAAAAQpQ93w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17872182768",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T17:15:01Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2917006320,
      "node_id": "PRR_kwDOABII586t3fvw",
      "url": null,
      "actor": null,
      "commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#pullrequestreview-2917006320",
      "submitted_at": "2025-06-11T12:50:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
    },
    {
      "event": "review_requested",
      "id": 18093794795,
      "node_id": "RRE_lADOABII586sfKwPzwAAAAQ2eWXr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18093794795",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T12:50:49Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlMmU5MjRlMmVmYmYyMTFlOTE1ZDA4NDEwZDkwMGJiZDExOGIyZTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2e924e2efbf211e915d08410d900bbd118b2e0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2e924e2efbf211e915d08410d900bbd118b2e0",
      "tree": {
        "sha": "0f28c7c958191718c78e87a48a01d294f31dc3e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f28c7c958191718c78e87a48a01d294f31dc3e6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0f28c7c958191718c78e87a48a01d294f31dc3e6\nparent 706e7c3105d7e013ac964554a3488abc6b4de0bf\nauthor Sjors Provoost <sjors@sprovoost.nl> 1749656453 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1749658006 +0200\n\ntest: move gbt proposal mode tests to new file\n\nAdditionally this commit gives each test its\nown function.\n\nThe assert_submitblock helper is absorbed into\nassert_template.\n\nReview hint:\ngit show --color-moved=dimmed-zebra\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmhJqa8ACgkQV/+b28ww\nEAm1mxAAxTTkID9Yp83qYgQ+PDNbYr/MvDAWDXxMBNuYz2EnaP+8d1JpPrlj5NP4\nDNSS+Qn2Nj2d7UEhVjUUQzuIpjKfD9NYg6bbAdlFQlRKgLBp5CzYQ1BVIgbcd7lr\nrTaIr2hiWO6ldiLxWVsS2hzehvYXs3fs+EbciLrEdThXKFWFhfETfoQOMafQXROx\nwoW1349MYPzyH9TYUjh8SLQDWRZaKxJHu1gAcW7Qn6f/LLnyba0ODRVaWv/70seS\nsQgGlzTD4osHVNGZsOpgjiCdNOCLwP/RM3SpPe/vJ+D9f7q55F39ezP0tjPojBEs\nWVqhRFwyruf/qRr5FT4K2pl7/JfbSibS829sKipBEMez7vWlg1GP5BH7qi980yQz\nAmfzPykTdE2wa8xWRhZdJjXPNh8RpyCiusOMWZdFgdFAx5MWZV9mzMFp2gRZ1qwX\npnIgtOyl31s5vRTdHOG1vI3AtntJ2W+1x5b66c8viS4PGCDl1QmsOqCddyHUKZo+\n2joCyt2k+lzlJXMz89JekFL99WPd8N9GL3jvIVaVMLN/LC4iCu6vwp7d2z7G1RUU\nnM7UwOiIRguAZ/cpfKrALp3sH4iiZHcAajUxKWOFaU7WJK9krdZDCM8/pLPiOvrW\nYzsJVRfjvNR/fH74FOwISQuJGkTSYHzMUvZ9mjN71Eg6MuM3RT8=\n=6ZKM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/706e7c3105d7e013ac964554a3488abc6b4de0bf",
          "sha": "706e7c3105d7e013ac964554a3488abc6b4de0bf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/706e7c3105d7e013ac964554a3488abc6b4de0bf"
        }
      ],
      "message": "test: move gbt proposal mode tests to new file\n\nAdditionally this commit gives each test its\nown function.\n\nThe assert_submitblock helper is absorbed into\nassert_template.\n\nReview hint:\ngit show --color-moved=dimmed-zebra",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-06-11T16:06:46Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-06-11T15:40:53Z"
      },
      "sha": "4e2e924e2efbf211e915d08410d900bbd118b2e0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiNWViZmVkNTg1NmNmMDRkMGI4YTNiNmRiYjA5YWQ5OWFiNDc4Mjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "tree": {
        "sha": "4581d3bc55775f66a6b424d2e765f843c48730c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4581d3bc55775f66a6b424d2e765f843c48730c3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4581d3bc55775f66a6b424d2e765f843c48730c3\nparent 4e2e924e2efbf211e915d08410d900bbd118b2e0\nauthor Sjors Provoost <sjors@sprovoost.nl> 1749657853 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1749658032 +0200\n\ntest: more template verification tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmhJqbAACgkQV/+b28ww\nEAndDg//T5fmLbdjWx9GE6N+RLurHoEtFSGT68RBlpfDnffpGsqxrAz8XjMwe0c1\ny4a7sTWny1KPr4hwg1IgY/ws0+4dNgxTgAvS19VVIZQJz73NWYz04QYiPi2r96a4\n6prN8Sv2gx1Pf+9qU/TGzrPbAShXzjzHs7xMAtJZ56oIWRhoJGF/olJzN9QmLTc1\nhuRXms4qc5bv6NmdA76ExHUkyxBl6MbLGz3TNYv0Nbzdf5MboN81ZWq1o671WFJ+\nI6tBgz0hLGypgh95HFLCao68k/QxapmZKsaXPgmol926nhgc1VL9jn2LRu6tiJb5\nitF14TwOe/OpCQMhFD3oR9hTaCPXfJY0hVhnTiu0ysTP8k3Mm5mBEcntToFM+dHp\nxsu1uOiBLppbjBdT8lsyk5IIkuGvlo6niKTBsIALNF/yVCcbFoBtEgbKagsbMv61\nE1++49q/2Y3el7tlBJ/aXXmptpbfooHDonr0XmPjJNyqdJUW881suJDD2hSL8kG9\nnbHFH/+W9fvmuCSoIkQ8iZTJ1h1d9CPP+VaIHZQkJGbaEbYeRx3J37vB9qK9bD7C\nBOnfQUvcMAvAK6fyPyGa1uhh8fTWwb6GGfWaivGa88j2Q7Z4bTbALkJAt/ofb0e+\nIJiuH7fWtIc+HYNh/eHL8CNRTiuaYaW8bAC8WAfScstHFExqM4E=\n=gYWp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2e924e2efbf211e915d08410d900bbd118b2e0",
          "sha": "4e2e924e2efbf211e915d08410d900bbd118b2e0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2e924e2efbf211e915d08410d900bbd118b2e0"
        }
      ],
      "message": "test: more template verification tests",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-06-11T16:07:12Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-06-11T16:04:13Z"
      },
      "sha": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18097666230,
      "node_id": "HRFPE_lADOABII586sfKwPzwAAAAQ2tHi2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18097666230",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "created_at": "2025-06-11T16:07:27Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033987571",
      "pull_request_review_id": 2751334428,
      "id": 2033987571,
      "node_id": "PRRC_kwDOABII5855PC_z",
      "diff_hunk": "@@ -85,6 +86,17 @@ struct BlockWaitOptions {\n     CAmount fee_threshold{MAX_MONEY};\n };\n \n+struct BlockCheckOptions {\n+    /**\n+     * Set false to omit the merkle root heck",
      "path": "src/node/types.h",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "in_reply_to_id": null,
      "user": {
        "login": "Copilot",
        "id": 175728472,
        "node_id": "BOT_kgDOCnlnWA",
        "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Copilot",
        "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
        "followers_url": "https://api.github.com/users/Copilot/followers",
        "following_url": "https://api.github.com/users/Copilot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Copilot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Copilot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
        "organizations_url": "https://api.github.com/users/Copilot/orgs",
        "repos_url": "https://api.github.com/users/Copilot/repos",
        "events_url": "https://api.github.com/users/Copilot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Copilot/received_events",
        "type": "Bot",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Typo in the comment: change 'heck' to 'check'.\n```suggestion\n     * Set false to omit the merkle root check\n```",
      "created_at": "2025-04-08T20:40:10Z",
      "updated_at": "2025-04-08T20:40:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2033987571",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033987571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033995107",
      "pull_request_review_id": 2751344619,
      "id": 2033995107,
      "node_id": "PRRC_kwDOABII5855PE1j",
      "diff_hunk": "@@ -85,6 +86,17 @@ struct BlockWaitOptions {\n     CAmount fee_threshold{MAX_MONEY};\n };\n \n+struct BlockCheckOptions {\n+    /**\n+     * Set false to omit the merkle root heck",
      "path": "src/node/types.h",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "in_reply_to_id": 2033987571,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we turn this off?",
      "created_at": "2025-04-08T20:42:53Z",
      "updated_at": "2025-04-08T20:42:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2033995107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033995107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2034562301",
      "pull_request_review_id": 2752220894,
      "id": 2034562301,
      "node_id": "PRRC_kwDOABII5855RPT9",
      "diff_hunk": "@@ -85,6 +86,17 @@ struct BlockWaitOptions {\n     CAmount fee_threshold{MAX_MONEY};\n };\n \n+struct BlockCheckOptions {\n+    /**\n+     * Set false to omit the merkle root heck",
      "path": "src/node/types.h",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "in_reply_to_id": 2033987571,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Can we turn this off?\r\n\r\nProbably best discussed in a separate brainstorming issue, but if this can find typos without false positives before real review and before merge, it seems acceptable. Obviously it can't do any real review and  this is the first time I've seen it used, so I am likely missing downsides. ",
      "created_at": "2025-04-09T06:38:19Z",
      "updated_at": "2025-04-09T06:38:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2034562301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2034562301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035684403",
      "pull_request_review_id": 2754001889,
      "id": 2035684403,
      "node_id": "PRRC_kwDOABII5855VhQz",
      "diff_hunk": "@@ -740,13 +740,9 @@ static RPCHelpMan getblocktemplate()\n                 return \"duplicate-inconclusive\";\n             }\n \n-            // TestBlockValidity only supports blocks built on the current Tip\n-            if (block.hashPrevBlock != tip) {\n-                return \"inconclusive-not-best-prevblk\";\n-            }\n-            BlockValidationState state;\n-            TestBlockValidity(state, chainman.GetParams(), chainman.ActiveChainstate(), block, chainman.m_blockman.LookupBlockIndex(block.hashPrevBlock), /*fCheckPOW=*/false, /*fCheckMerkleRoot=*/true);\n-            return BIP22ValidationResult(state);\n+            std::string reason;\n+            bool res{chainman.TestBlockValidity(block, reason, /*check_pow=*/false, /*check_merkle_root=*/true)};",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: refactor TestBlockValidity\" (1d029c23a143f1b9110377967a7c4a20ee75058d)\r\n\r\nit seems like there could be change in behavior here since BIP22ValidationResult would previously throw an exception on error and now it will just return an error string.",
      "created_at": "2025-04-09T16:01:47Z",
      "updated_at": "2025-04-09T17:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035684403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035684403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035698811",
      "pull_request_review_id": 2754001889,
      "id": 2035698811,
      "node_id": "PRRC_kwDOABII5855Vkx7",
      "diff_hunk": "@@ -386,9 +386,9 @@ static RPCHelpMan generateblock()\n         block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n         RegenerateCommitments(block, chainman);\n \n-        BlockValidationState state;\n-        if (!TestBlockValidity(state, chainman.GetParams(), chainman.ActiveChainstate(), block, chainman.m_blockman.LookupBlockIndex(block.hashPrevBlock), /*fCheckPOW=*/false, /*fCheckMerkleRoot=*/false)) {\n-            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\n+        std::string reason;\n+        if (!chainman.TestBlockValidity(block, reason, /*check_pow=*/false, /*check_merkle_root=*/false)) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", reason));",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: refactor TestBlockValidity\" (1d029c23a143f1b9110377967a7c4a20ee75058d)\r\n\r\nThere seems to be a change in behavior here if `ValidationState::m_debug_message` is set because now it would previous be included in `ToString` output but now will be dropped.",
      "created_at": "2025-04-09T16:10:56Z",
      "updated_at": "2025-04-09T17:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035698811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035698811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035713597",
      "pull_request_review_id": 2754001889,
      "id": 2035713597,
      "node_id": "PRRC_kwDOABII5855VoY9",
      "diff_hunk": "@@ -4641,40 +4641,86 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n-                       const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+bool ChainstateManager::TestBlockValidity(const CBlock& block, std::string& reason, const bool check_pow, const bool check_merkle_root)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: refactor TestBlockValidity\" (1d029c23a143f1b9110377967a7c4a20ee75058d)\r\n\r\nMost of the changes here seem good, but there are a few things I think could be improved:\r\n\r\n- It seems better to me if this would return a `BlockValidationState` object instead of a string and a bool, so the valid/invalid/error states could be clearly distinguished, debug information could be returned, and this would fit in better with other `validation.h` functions using `BlockValidationState`. Returning `BlockValidationState` would also let callers use the `BIP22ValidationResult` univalue conversion function so we could reduce inconsistencies in how RPCs return validation information.\r\n- Also think it would be good if this function still took a `chainstate` parameter, since it shouldn't care about which chainstate is active and could work on any chainstate.\r\n- I think it would be better if this remained a standalone function instead of becoming a ChainstateManager method since it shouldn't need access to private ChainstateManager state and we might want to move it out of `validation.cpp` at some point to someplace like `node/miner.cpp` since it is only used by mining code.\r\n- Probably also better for it not to `LOCK(cs_main)` to avoid unnecessary recursive mutex locking.\r\n- Using `Assert()` consistently here would seem better than using a mix of `Assert` and `Assume`. Or if `Assume()` should be used it would be better to check return value and return an error status, instead of the ignoring failures in release builds.\r\n\r\nMade a commit with all these changes which looks like: bf15692ab9b5f8d68cb84e925c067caebe03efba ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/review.31981.1-edit))",
      "created_at": "2025-04-09T16:20:41Z",
      "updated_at": "2025-04-09T17:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035713597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035713597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035761129",
      "pull_request_review_id": 2754001889,
      "id": 2035761129,
      "node_id": "PRRC_kwDOABII5855Vz_p",
      "diff_hunk": "@@ -85,6 +86,17 @@ struct BlockWaitOptions {\n     CAmount fee_threshold{MAX_MONEY};\n };\n \n+struct BlockCheckOptions {\n+    /**\n+     * Set false to omit the merkle root heck",
      "path": "src/node/types.h",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "in_reply_to_id": 2033987571,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2033995107\r\n\r\nI actually requested the review since I was curious what it would do. It seems a bit afraid to be opinionated though and might be more useful if we added guidelines https://docs.github.com/en/enterprise-cloud@latest/copilot/using-github-copilot/code-review/configuring-coding-guidelines",
      "created_at": "2025-04-09T16:47:58Z",
      "updated_at": "2025-04-09T17:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035761129",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2035761129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060028571",
      "pull_request_review_id": 2793760280,
      "id": 2060028571,
      "node_id": "PRRC_kwDOABII5856yYqb",
      "diff_hunk": "@@ -740,13 +740,9 @@ static RPCHelpMan getblocktemplate()\n                 return \"duplicate-inconclusive\";\n             }\n \n-            // TestBlockValidity only supports blocks built on the current Tip\n-            if (block.hashPrevBlock != tip) {\n-                return \"inconclusive-not-best-prevblk\";\n-            }\n-            BlockValidationState state;\n-            TestBlockValidity(state, chainman.GetParams(), chainman.ActiveChainstate(), block, chainman.m_blockman.LookupBlockIndex(block.hashPrevBlock), /*fCheckPOW=*/false, /*fCheckMerkleRoot=*/true);\n-            return BIP22ValidationResult(state);\n+            std::string reason;\n+            bool res{chainman.TestBlockValidity(block, reason, /*check_pow=*/false, /*check_merkle_root=*/true)};",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": 2035684403,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point. The original code would return a string in some cases and throw an error in others. Although it's possible nobody uses the `getblocktemplate` RPC in `proposal` mode at all, there could be (unmaintained) proprietary software out there using it. So the safest option is to maintain the behavior.\r\n\r\nHowever it seems there's no change in behavior: `BIP22ValidationResult` only throws for `state.IsError()`, not for `state.IsInvalid()`. I looked through `CheckBlock` and the functions it calls and none of those can set `state.IsError()`.\r\n\r\nI expanded the commit message to explain this.",
      "created_at": "2025-04-25T11:04:12Z",
      "updated_at": "2025-04-25T11:04:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2060028571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060028571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 744,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060028715",
      "pull_request_review_id": 2793760564,
      "id": 2060028715,
      "node_id": "PRRC_kwDOABII5856yYsr",
      "diff_hunk": "@@ -85,6 +86,17 @@ struct BlockWaitOptions {\n     CAmount fee_threshold{MAX_MONEY};\n };\n \n+struct BlockCheckOptions {\n+    /**\n+     * Set false to omit the merkle root heck",
      "path": "src/node/types.h",
      "position": null,
      "original_position": 14,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "e6e170cf6c67a56b9c14cece66fdc4fab5f3ec6b",
      "in_reply_to_id": 2033987571,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed typo since I had to retouch anyway.",
      "created_at": "2025-04-25T11:04:20Z",
      "updated_at": "2025-04-25T11:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2060028715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060028715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060045258",
      "pull_request_review_id": 2793788516,
      "id": 2060045258,
      "node_id": "PRRC_kwDOABII5856ycvK",
      "diff_hunk": "@@ -4641,40 +4641,86 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n-                       const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+bool ChainstateManager::TestBlockValidity(const CBlock& block, std::string& reason, const bool check_pow, const bool check_merkle_root)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": 2035713597,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Making this return a `BlockValidationState` means we have to pass it over the interface, which means we can't drop the special handling, see cca5993b26e6223af31fe1ef5bf8a319cb87cf93.",
      "created_at": "2025-04-25T11:15:30Z",
      "updated_at": "2025-04-25T11:15:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2060045258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060045258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060128901",
      "pull_request_review_id": 2793927446,
      "id": 2060128901,
      "node_id": "PRRC_kwDOABII5856yxKF",
      "diff_hunk": "@@ -386,9 +386,9 @@ static RPCHelpMan generateblock()\n         block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n         RegenerateCommitments(block, chainman);\n \n-        BlockValidationState state;\n-        if (!TestBlockValidity(state, chainman.GetParams(), chainman.ActiveChainstate(), block, chainman.m_blockman.LookupBlockIndex(block.hashPrevBlock), /*fCheckPOW=*/false, /*fCheckMerkleRoot=*/false)) {\n-            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\n+        std::string reason;\n+        if (!chainman.TestBlockValidity(block, reason, /*check_pow=*/false, /*check_merkle_root=*/false)) {\n+            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", reason));",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": 2035698811,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I changed `TestBlockValidity` to also take a `debug` argument.",
      "created_at": "2025-04-25T12:14:05Z",
      "updated_at": "2025-04-25T12:14:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2060128901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060128901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060244002",
      "pull_request_review_id": 2794128437,
      "id": 2060244002,
      "node_id": "PRRC_kwDOABII5856zNQi",
      "diff_hunk": "@@ -4641,40 +4641,86 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n-                       const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+bool ChainstateManager::TestBlockValidity(const CBlock& block, std::string& reason, const bool check_pow, const bool check_merkle_root)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": 2035713597,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "None of the `Assume` checks seem problematic in production. They would just be inconsistent with (my understanding of) previous behavior. I dropped them, since none of the tests and fuzzers tripped over them.\r\n\r\nI dropped the `!block.fChecked `Assert`. The remaining `Assert`s are where we would crash anyway.\r\n\r\nFinally I changed the pre-existing `assert` at the end into an Assume along with a LogError.\r\n",
      "created_at": "2025-04-25T13:27:22Z",
      "updated_at": "2025-04-25T13:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2060244002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2060244002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2069106692",
      "pull_request_review_id": 2807792687,
      "id": 2069106692,
      "node_id": "PRRC_kwDOABII5857VBAE",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    CCoinsViewCache view_dummy(&chainstate.CoinsTip());\r\n```\r\n",
      "created_at": "2025-04-30T16:56:17Z",
      "updated_at": "2025-04-30T16:56:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2069106692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2069106692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2069214844",
      "pull_request_review_id": 2808014093,
      "id": 2069214844,
      "node_id": "PRRC_kwDOABII5857VbZ8",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()",
      "path": "src/validation.cpp",
      "position": 33,
      "original_position": 31,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "in_reply_to_id": null,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `TestBlockValidity` is typically called with a fresh block instance, I'm not seeing how the race condition with `fChecked` could occur. Could you elaborate on this please?",
      "created_at": "2025-04-30T18:12:26Z",
      "updated_at": "2025-04-30T18:12:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2069214844",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2069214844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4610,
      "original_line": 4610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087339443",
      "pull_request_review_id": 2837626300,
      "id": 2087339443,
      "node_id": "PRRC_kwDOABII5858akWz",
      "diff_hunk": "@@ -4641,40 +4641,86 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n-                       const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+bool ChainstateManager::TestBlockValidity(const CBlock& block, std::string& reason, const bool check_pow, const bool check_merkle_root)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1d029c23a143f1b9110377967a7c4a20ee75058d",
      "in_reply_to_id": 2035713597,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2035713597\r\n\r\n> Making this return a `BlockValidationState` means we have to pass it over the interface, which means we can't drop the special handling\r\n\r\nAgree it's not good to pass `BlockValidationState` over the IPC interface (and the earlier change I posted didn't do that). I just think it it's best if validation.h/cpp uses BlockValidationState to be internally consistent and return the most information to callers.\r\n\r\n> None of the Assume checks seem problematic in production. \r\n\r\nThanks, I should have been clear my issue was just with *unchecked* Assume statements, not Assume statements in general. If unexpected states occur in releases I think it's best to report them or return them to callers, not ignore them.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31981#issuecomment-2830435612\r\n\r\n> > Probably also better for it not to `LOCK(cs_main)` to avoid unnecessary recursive mutex locking.\r\n> \r\n> Can you elaborate on this?\r\n\r\nNot too important but there's an effort to replace recursive mutexes with nonrecursive ones in #19303. Suggestion is just to replace the lock with a lock annotation.\r\n\r\n---\r\n\r\nI do think current code as of c1939c43c3addb17c4316d49580762a1e0ec4504 is ok but that it would be nice to keep using BlockValidationState in validation code and return more complete error information. Here are the changes I'd suggest:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -1112,7 +1112,11 @@ public:\r\n \r\n     bool checkBlock(const CBlock& block, const node::BlockCheckOptions& options, std::string& reason, std::string& debug) override\r\n     {\r\n-        return TestBlockValidity(chainman().ActiveChainstate(), block, /*check_pow=*/options.check_pow, /*=check_merkle_root=*/options.check_merkle_root, reason, debug);\r\n+        LOCK(chainman().GetMutex());\r\n+        BlockValidationState state{TestBlockValidity(chainman().ActiveChainstate(), block, /*check_pow=*/options.check_pow, /*=check_merkle_root=*/options.check_merkle_root)};\r\n+        reason = state.GetRejectReason();\r\n+        debug = state.GetDebugMessage();\r\n+        return state.IsValid();\r\n     }\r\n \r\n     NodeContext* context() override { return &m_node; }\r\n--- a/src/node/miner.cpp\r\n+++ b/src/node/miner.cpp\r\n@@ -173,10 +173,10 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock()\r\n     pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock, chainparams.GetConsensus());\r\n     pblock->nNonce         = 0;\r\n \r\n-    std::string reason;\r\n-    std::string debug;\r\n-    if (m_options.test_block_validity && !TestBlockValidity(m_chainstate, *pblock, /*check_pow=*/false, /*check_merkle_root=*/false, reason, debug)) {\r\n-        throw std::runtime_error(strprintf(\"TestBlockValidity failed: %s - %s\", reason, debug));\r\n+    if (m_options.test_block_validity) {\r\n+        if (BlockValidationState state{TestBlockValidity(m_chainstate, *pblock, /*check_pow=*/false, /*check_merkle_root=*/false)}; !state.IsValid()) {\r\n+            throw std::runtime_error(strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\r\n+        }\r\n     }\r\n     const auto time_2{SteadyClock::now()};\r\n \r\n--- a/src/rpc/mining.cpp\r\n+++ b/src/rpc/mining.cpp\r\n@@ -387,10 +387,8 @@ static RPCHelpMan generateblock()\r\n         block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\r\n         RegenerateCommitments(block, chainman);\r\n \r\n-        std::string reason;\r\n-        std::string debug;\r\n-        if (!miner.checkBlock(block, {.check_merkle_root = false, .check_pow = false}, reason, debug)) {\r\n-            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s - %s\", reason, debug));\r\n+        if (BlockValidationState state{TestBlockValidity(chainman.ActiveChainstate(), block, /*check_pow=*/false, /*check_merkle_root=*/false)}; !state.IsValid()) {\r\n+            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\r\n         }\r\n     }\r\n \r\n@@ -742,12 +740,7 @@ static RPCHelpMan getblocktemplate()\r\n                 return \"duplicate-inconclusive\";\r\n             }\r\n \r\n-            std::string reason;\r\n-            std::string debug;\r\n-            bool res{miner.checkBlock(block, {.check_pow = false}, reason, debug)};\r\n-            if (res) return UniValue::VNULL;\r\n-            LogDebug(BCLog::RPC, \"Invalid block: %s\", debug);\r\n-            return UniValue{reason};\r\n+            return BIP22ValidationResult(TestBlockValidity(chainman.ActiveChainstate(), block, /*check_pow=*/false, /*check_merkle_root=*/true));\r\n         }\r\n \r\n         const UniValue& aClientRules = oparam.find_value(\"rules\");\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4648,31 +4648,30 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\r\n     return result;\r\n }\r\n \r\n-bool TestBlockValidity(Chainstate& chainstate,\r\n-                       const CBlock& block,\r\n-                       const bool check_pow,\r\n-                       const bool check_merkle_root,\r\n-                       std::string& reason,\r\n-                       std::string& debug)\r\n+\r\n+BlockValidationState TestBlockValidity(\r\n+    Chainstate& chainstate,\r\n+    const CBlock& block,\r\n+    const bool check_pow,\r\n+    const bool check_merkle_root)\r\n {\r\n     // Lock must be held throughout this function for two reasons:\r\n     // 1. We don't want the tip to change during several of the validation steps\r\n     // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\r\n-    LOCK(chainstate.m_chainman.GetMutex());\r\n+    AssertLockHeld(chainstate.m_chainman.GetMutex());\r\n \r\n     BlockValidationState state;\r\n     CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\r\n \r\n     if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\r\n-        reason = \"inconclusive-not-best-prevblk\";\r\n-        return false;\r\n+        state.Invalid({}, \"inconclusive-not-best-prevblk\");\r\n+        return state;\r\n     }\r\n \r\n     // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\r\n     if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\r\n-        reason = state.GetRejectReason();\r\n-        debug = state.GetDebugMessage();\r\n-        return false;\r\n+        if (state.IsValid()) state.Error(\"CheckBlock failed\");\r\n+        return state;\r\n     }\r\n \r\n     /**\r\n@@ -4691,15 +4690,13 @@ bool TestBlockValidity(Chainstate& chainstate,\r\n      */\r\n \r\n     if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\r\n-        reason = state.GetRejectReason();\r\n-        debug = state.GetDebugMessage();\r\n-        return false;\r\n+        if (state.IsValid()) state.Error(\"ContextualCheckBlockHeader failed\");\r\n+        return state;\r\n     }\r\n \r\n     if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\r\n-        reason = state.GetRejectReason();\r\n-        debug = state.GetDebugMessage();\r\n-        return false;\r\n+        if (state.IsValid()) state.Error(\"ContextualCheckBlock failed\");\r\n+        return state;\r\n     }\r\n \r\n     // We don't want ConnectBlock to update the actual chainstate, so create\r\n@@ -4716,16 +4713,17 @@ bool TestBlockValidity(Chainstate& chainstate,\r\n \r\n     // Set fJustCheck to true in order to update, and not clear, validation caches.\r\n     if(!chainstate.ConnectBlock(block, state, &index_dummy, view, /*fJustCheck=*/true)) {\r\n-        reason = state.GetRejectReason();\r\n-        debug = state.GetDebugMessage();\r\n-        return false;\r\n-    }\r\n-    if (!Assume(state.IsValid())) {\r\n-        LogError(\"Unexpected invalid validation state\");\r\n-        return false;\r\n+        if (state.IsValid()) state.Error(\"ConnectBlock failed\");\r\n+        return state;\r\n     }\r\n \r\n-    return true;\r\n+    // Ensure no check returned successfully while also setting an invalid state.\r\n+    if (!Assume(state.IsValid())) {\r\n+        LogError(\"Unexpected invalid state in TestBlockValidity: %s\", state.ToString());\r\n+        state.Error(\"TestBlockValidity failed\");\r\n+    }\r\n+\r\n+    return state;\r\n }\r\n \r\n /* This function is called from the RPC code for pruneblockchain */\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -388,21 +388,23 @@ bool CheckBlock(const CBlock& block, BlockValidationState& state, const Consensu\r\n  *\r\n  * @param[in]   block       The block we want to process. Must connect to the\r\n  *                          current tip.\r\n- * @param[in]   chainstate    The chainstate to connect to.\r\n- * @param[out]  reason      rejection reason (BIP22)\r\n- * @param[out]  debug       more detailed rejection reason\r\n+ * @param[in]   chainstate  The chainstate to connect to.\r\n  * @param[in]   check_pow   perform proof-of-work check, nBits in the header\r\n  *                          is always checked\r\n  * @param[in]   check_merkle_root check the merkle root\r\n  *\r\n+ * @return Valid or Invalid state. This doesn't currently return an Error state,\r\n+ *         and shouldn't unless there is something wrong with the existing\r\n+ *         chainstate. (This is different from functions like AcceptBlock which\r\n+ *         can fail trying to save new data.)\r\n+ *\r\n  * For signets the challenge verification is skipped when check_pow is false.\r\n  */\r\n-bool TestBlockValidity(Chainstate& chainstate,\r\n-                       const CBlock& block,\r\n-                       const bool check_pow,\r\n-                       const bool check_merkle_root,\r\n-                       std::string& reason,\r\n-                       std::string& debug);\r\n+BlockValidationState TestBlockValidity(\r\n+    Chainstate& chainstate,\r\n+    const CBlock& block,\r\n+    bool check_pow,\r\n+    bool check_merkle_root) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n /** Check with the proof of work on each blockheader matches the value in nBits */\r\n bool HasValidProofOfWork(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams);\r\n```\r\n</p>\r\n</details>\r\n\r\n\r\n",
      "created_at": "2025-05-13T17:37:38Z",
      "updated_at": "2025-05-13T19:40:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2087339443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087339443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087500872",
      "pull_request_review_id": 2837626300,
      "id": 2087500872,
      "node_id": "PRRC_kwDOABII5858bLxI",
      "diff_hunk": "@@ -0,0 +1,274 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):",
      "path": "test/functional/mining_template_verification.py",
      "position": null,
      "original_position": 41,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: more template verification tests\" (c1939c43c3addb17c4316d49580762a1e0ec4504)\r\n\r\nMight be nice to split this test up into different methods since most of the checks seem independent. (Could pass in any objects they are sharing in common as arguments)",
      "created_at": "2025-05-13T19:35:02Z",
      "updated_at": "2025-05-13T19:40:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2087500872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087500872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089083910",
      "pull_request_review_id": 2840429676,
      "id": 2089083910,
      "node_id": "PRRC_kwDOABII5858hOQG",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()",
      "path": "src/validation.cpp",
      "position": 33,
      "original_position": 31,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "in_reply_to_id": 2069214844,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think you're right that this can't happen in the current codebase. `TestBlockValidity` is only called by `checkBlock()`. When this is called via the IPC interface, it will have a fresh `CBlock` each time (unless we start supporting shared memory between processes). Simiarly when called by the `generateblock` RPC or `getblocktemplate` in `proposal` mode it will have a fresh instance.\r\n\r\nThe code in `miner_tests.cpp` does reuse the same `CBlock` across multiple calls, though not in parallel.\r\n\r\nStill, it seems like a good precaution against (perhaps unlikely) future regressions.",
      "created_at": "2025-05-14T14:25:21Z",
      "updated_at": "2025-05-14T14:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2089083910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089083910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4610,
      "original_line": 4610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089101819",
      "pull_request_review_id": 2840459901,
      "id": 2089101819,
      "node_id": "PRRC_kwDOABII5858hSn7",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": 2069106692,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm confused about what you're suggesting here.",
      "created_at": "2025-05-14T14:33:42Z",
      "updated_at": "2025-05-14T14:33:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2089101819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089101819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089185404",
      "pull_request_review_id": 2840599149,
      "id": 2089185404,
      "node_id": "PRRC_kwDOABII5858hnB8",
      "diff_hunk": "@@ -0,0 +1,274 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def run_test(self):",
      "path": "test/functional/mining_template_verification.py",
      "position": null,
      "original_position": 41,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "in_reply_to_id": 2087500872,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done (though I didn't put too much effort into making them actually independent).",
      "created_at": "2025-05-14T15:13:17Z",
      "updated_at": "2025-05-14T15:13:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2089185404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089185404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089235016",
      "pull_request_review_id": 2840680200,
      "id": 2089235016,
      "node_id": "PRRC_kwDOABII5858hzJI",
      "diff_hunk": "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def current_tip_test(self, node, block_2):\n+        block_0_hash = node.getblockhash(0)\n+\n+        # Block must build on the current tip\n+        bad_block_2 = copy.deepcopy(block_2)\n+        bad_block_2.hashPrevBlock = int(block_0_hash, 16)\n+        bad_block_2.solve()\n+\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": bad_block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"inconclusive-not-best-prevblk\",\n+        )\n+\n+    def nbits_test(self, node, block_2):\n+        self.log.info(\"Lowering nBits should make the block invalid\")\n+        bad_block_2 = copy.deepcopy(block_2)\n+        bad_block_2.nBits = bad_block_2.nBits - 1\n+        bad_block_2.solve()\n+\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": bad_block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-diffbits\",\n+        )\n+\n+    def pow_test(self, node, block_2):\n+        self.log.info(\"Generate a block\")\n+        target = uint256_from_compact(block_2.nBits)\n+        # Ensure that it doesn't meet the target by coincidence\n+        while block_2.sha256 <= target:\n+            block_2.nNonce += 1\n+            block_2.rehash()\n+\n+        self.log.info(\"A block template doesn't need PoW\")\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+        self.log.info(\"Add proof of work\")\n+        block_2.solve()\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+    def submit_test(self, node, block_0_height, block_2):\n+        self.log.info(\"getblocktemplate call in previous tests did not submit the block\")\n+        assert_equal(node.getblockcount(), block_0_height + 1)\n+\n+        self.log.info(\"Submitting this block should succeed\")\n+        assert_equal(node.submitblock(block_2.serialize().hex()), None)\n+        node.waitforblockheight(2)\n+\n+    def transaction_test(self, node, block_0_height, tx):\n+        self.log.info(\"make block template with a transaction\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[tx[\"hex\"]],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        block_3.solve()\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+        self.log.info(\"checking block validity did not update the UTXO set\")\n+        # Call again to ensure the UTXO set wasn't updated\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+    def invalid_transaction_test(self, node, block_0_height, tx):\n+        self.log.info(\"Add an invalid transaction\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        bad_tx = copy.deepcopy(tx)\n+        bad_tx[\"tx\"].vout[0].nValue = 10000000000\n+        bad_tx_hex = bad_tx[\"tx\"].serialize().hex()\n+        assert_equal(\n+            node.testmempoolaccept([bad_tx_hex])[0][\"reject-reason\"],\n+            \"bad-txns-in-belowout\",\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[bad_tx_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        block_3.solve()\n+\n+        self.log.info(\"This can't be submitted\")\n+        assert_equal(\n+            node.submitblock(block_3.serialize().hex()), \"bad-txns-in-belowout\"\n+        )\n+\n+        self.log.info(\"And should also not pass getblocktemplate\")\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"duplicate-invalid\",\n+        )\n+\n+    def inflation_test(self, node, block_0_height, tx):\n+        self.log.info(\"Can't spend coins out of thin air\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        bad_tx = copy.deepcopy(tx)\n+        bad_tx[\"tx\"].vin[0] = CTxIn(\n+            outpoint=COutPoint(hash=int(\"aa\" * 32, 16), n=0), scriptSig=b\"\"\n+        )\n+        bad_tx_hex = bad_tx[\"tx\"].serialize().hex()\n+        assert_equal(\n+            node.testmempoolaccept([bad_tx_hex])[0][\"reject-reason\"], \"missing-inputs\"\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[bad_tx_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-txns-inputs-missingorspent\",\n+        )\n+\n+        self.log.info(\"Can't spend coins twice\")\n+        tx_hex = tx[\"tx\"].serialize().hex()\n+        tx_2 = copy.deepcopy(tx)\n+        tx_2_hex = tx_2[\"tx\"].serialize().hex()\n+        # Nothing wrong with these transactions individually\n+        assert_equal(node.testmempoolaccept([tx_hex])[0][\"allowed\"], True)\n+        assert_equal(node.testmempoolaccept([tx_2_hex])[0][\"allowed\"], True)\n+        # But can't be combined\n+        assert_equal(\n+            node.testmempoolaccept([tx_hex, tx_2_hex])[0][\"package-error\"],\n+            \"package-contains-duplicates\",\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[tx_hex, tx_2_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 3)\n+        add_witness_commitment(block_3)\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-txns-inputs-missingorspent\",\n+        )\n+\n+        return block_3\n+\n+    def parallel_test(self, node, block_3):\n+        # Ensure that getblocktemplate can be called concurrently by many threads.\n+        self.log.info(\"Check blocks in parallel\")\n+        check_50_blocks = lambda n: [\n+            assert_equal(\n+                n.getblocktemplate(\n+                    template_request={\n+                        \"data\": block_3.serialize().hex(),\n+                        \"mode\": \"proposal\",\n+                        \"rules\": [\"segwit\"],\n+                    }\n+                ),\n+                \"bad-txns-inputs-missingorspent\",\n+            )\n+            for _ in range(50)\n+        ]\n+        rpcs = [node.cli for _ in range(6)]\n+        with ThreadPoolExecutor(max_workers=len(rpcs)) as threads:\n+            list(threads.map(check_50_blocks, rpcs))\n+\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        block_0_height = node.getblockcount()\n+        self.generate(node, sync_fun=self.no_op, nblocks=1)\n+        block_1 = node.getblock(node.getbestblockhash())\n+        block_2 = create_block(\n+            int(block_1[\"hash\"], 16),\n+            create_coinbase(block_0_height + 2),\n+            block_1[\"mediantime\"] + 1,\n+        )\n+\n+        self.current_tip_test(node, block_2)\n+        self.nbits_test(node, block_2)\n+        self.pow_test(node, block_2)",
      "path": "test/functional/mining_template_verification.py",
      "position": 292,
      "original_position": 298,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "28d9d8892a8c1a8cede3042fb1eda4313b02a113",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: more template verification tests\" (c759ec1256a5cdc02b6eef1f4c0935c693bb8087)\r\n\r\nMaybe add comment `# solve block_2` if that would clarify dependency between pow_test and later tests.\r\n\r\n(Alternately could change `pow_test` to return a different variable like `block_2_solved`)",
      "created_at": "2025-05-14T15:38:21Z",
      "updated_at": "2025-05-19T21:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2089235016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2089235016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 292,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091754628",
      "pull_request_review_id": 2844650931,
      "id": 2091754628,
      "node_id": "PRRC_kwDOABII5858raSE",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()",
      "path": "src/validation.cpp",
      "position": 33,
      "original_position": 31,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "c1939c43c3addb17c4316d49580762a1e0ec4504",
      "in_reply_to_id": 2069214844,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for the clarification.",
      "created_at": "2025-05-15T18:28:41Z",
      "updated_at": "2025-05-15T18:28:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2091754628",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091754628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4610,
      "original_line": 4610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2096473337",
      "pull_request_review_id": 2840680200,
      "id": 2096473337,
      "node_id": "PRRC_kwDOABII58589aT5",
      "diff_hunk": "@@ -387,8 +387,10 @@ static RPCHelpMan generateblock()\n         block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n         RegenerateCommitments(block, chainman);\n \n-        if (BlockValidationState state{TestBlockValidity(chainman.ActiveChainstate(), block, /*check_pow=*/false, /*check_merkle_root=*/false)}; !state.IsValid()) {\n-            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\n+        std::string reason;",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "116a9d2daced606e5f35896372da39fd914d3da1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Add checkBlock to Mining interface\" (116a9d2daced606e5f35896372da39fd914d3da1)\r\n\r\nJust a thought, but it doesn't seem to me that the changes to rpc/mining.cpp here and below in getblocktemplate are really improvements. They are making code more verbose and changing behavior in ways that don't necessarily seem better (producing an error message with a trailing \" - \" if debug string is empty here, adding a new LogDebug statement below with only the debug string, not the reason string).\r\n\r\nIt seems like the motivation for changing this code is to use the mining interface instead of the mining functions in these RPCs, and while that is ok, it can add some costs like we see in #32547 and should also be less necessary after #32378. No strong opinion, but I think it could be good to stop trying to use the mining interface as much in these RPCs.\r\n\r\n(For testing purposes it seems like it should be sufficient to keep the mining interface a thin wrapper over other functions that doesn't implement much functionality, and call it from some unit tests.)",
      "created_at": "2025-05-19T20:55:22Z",
      "updated_at": "2025-05-19T21:03:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2096473337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2096473337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2097179087",
      "pull_request_review_id": 2852985496,
      "id": 2097179087,
      "node_id": "PRRC_kwDOABII5859AGnP",
      "diff_hunk": "@@ -0,0 +1,311 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def current_tip_test(self, node, block_2):\n+        block_0_hash = node.getblockhash(0)\n+\n+        # Block must build on the current tip\n+        bad_block_2 = copy.deepcopy(block_2)\n+        bad_block_2.hashPrevBlock = int(block_0_hash, 16)\n+        bad_block_2.solve()\n+\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": bad_block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"inconclusive-not-best-prevblk\",\n+        )\n+\n+    def nbits_test(self, node, block_2):\n+        self.log.info(\"Lowering nBits should make the block invalid\")\n+        bad_block_2 = copy.deepcopy(block_2)\n+        bad_block_2.nBits = bad_block_2.nBits - 1\n+        bad_block_2.solve()\n+\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": bad_block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-diffbits\",\n+        )\n+\n+    def pow_test(self, node, block_2):\n+        self.log.info(\"Generate a block\")\n+        target = uint256_from_compact(block_2.nBits)\n+        # Ensure that it doesn't meet the target by coincidence\n+        while block_2.sha256 <= target:\n+            block_2.nNonce += 1\n+            block_2.rehash()\n+\n+        self.log.info(\"A block template doesn't need PoW\")\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+        self.log.info(\"Add proof of work\")\n+        block_2.solve()\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_2.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+    def submit_test(self, node, block_0_height, block_2):\n+        self.log.info(\"getblocktemplate call in previous tests did not submit the block\")\n+        assert_equal(node.getblockcount(), block_0_height + 1)\n+\n+        self.log.info(\"Submitting this block should succeed\")\n+        assert_equal(node.submitblock(block_2.serialize().hex()), None)\n+        node.waitforblockheight(2)\n+\n+    def transaction_test(self, node, block_0_height, tx):\n+        self.log.info(\"make block template with a transaction\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[tx[\"hex\"]],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        block_3.solve()\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+        self.log.info(\"checking block validity did not update the UTXO set\")\n+        # Call again to ensure the UTXO set wasn't updated\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            None,\n+        )\n+\n+    def invalid_transaction_test(self, node, block_0_height, tx):\n+        self.log.info(\"Add an invalid transaction\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        bad_tx = copy.deepcopy(tx)\n+        bad_tx[\"tx\"].vout[0].nValue = 10000000000\n+        bad_tx_hex = bad_tx[\"tx\"].serialize().hex()\n+        assert_equal(\n+            node.testmempoolaccept([bad_tx_hex])[0][\"reject-reason\"],\n+            \"bad-txns-in-belowout\",\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[bad_tx_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        block_3.solve()\n+\n+        self.log.info(\"This can't be submitted\")\n+        assert_equal(\n+            node.submitblock(block_3.serialize().hex()), \"bad-txns-in-belowout\"\n+        )\n+\n+        self.log.info(\"And should also not pass getblocktemplate\")\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"duplicate-invalid\",\n+        )\n+\n+    def inflation_test(self, node, block_0_height, tx):\n+        self.log.info(\"Can't spend coins out of thin air\")\n+\n+        block_1 = node.getblock(node.getblockhash(block_0_height + 1))\n+        block_2_hash = node.getblockhash(block_0_height + 2)\n+\n+        bad_tx = copy.deepcopy(tx)\n+        bad_tx[\"tx\"].vin[0] = CTxIn(\n+            outpoint=COutPoint(hash=int(\"aa\" * 32, 16), n=0), scriptSig=b\"\"\n+        )\n+        bad_tx_hex = bad_tx[\"tx\"].serialize().hex()\n+        assert_equal(\n+            node.testmempoolaccept([bad_tx_hex])[0][\"reject-reason\"], \"missing-inputs\"\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[bad_tx_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 2)\n+        add_witness_commitment(block_3)\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-txns-inputs-missingorspent\",\n+        )\n+\n+        self.log.info(\"Can't spend coins twice\")\n+        tx_hex = tx[\"tx\"].serialize().hex()\n+        tx_2 = copy.deepcopy(tx)\n+        tx_2_hex = tx_2[\"tx\"].serialize().hex()\n+        # Nothing wrong with these transactions individually\n+        assert_equal(node.testmempoolaccept([tx_hex])[0][\"allowed\"], True)\n+        assert_equal(node.testmempoolaccept([tx_2_hex])[0][\"allowed\"], True)\n+        # But can't be combined\n+        assert_equal(\n+            node.testmempoolaccept([tx_hex, tx_2_hex])[0][\"package-error\"],\n+            \"package-contains-duplicates\",\n+        )\n+        block_3 = create_block(\n+            int(block_2_hash, 16),\n+            create_coinbase(block_0_height + 3),\n+            block_1[\"mediantime\"] + 1,\n+            txlist=[tx_hex, tx_2_hex],\n+        )\n+        assert_equal(len(block_3.vtx), 3)\n+        add_witness_commitment(block_3)\n+        assert_equal(\n+            node.getblocktemplate(\n+                template_request={\n+                    \"data\": block_3.serialize().hex(),\n+                    \"mode\": \"proposal\",\n+                    \"rules\": [\"segwit\"],\n+                }\n+            ),\n+            \"bad-txns-inputs-missingorspent\",\n+        )\n+\n+        return block_3\n+\n+    def parallel_test(self, node, block_3):\n+        # Ensure that getblocktemplate can be called concurrently by many threads.\n+        self.log.info(\"Check blocks in parallel\")\n+        check_50_blocks = lambda n: [\n+            assert_equal(\n+                n.getblocktemplate(\n+                    template_request={\n+                        \"data\": block_3.serialize().hex(),\n+                        \"mode\": \"proposal\",\n+                        \"rules\": [\"segwit\"],\n+                    }\n+                ),\n+                \"bad-txns-inputs-missingorspent\",\n+            )\n+            for _ in range(50)\n+        ]\n+        rpcs = [node.cli for _ in range(6)]\n+        with ThreadPoolExecutor(max_workers=len(rpcs)) as threads:\n+            list(threads.map(check_50_blocks, rpcs))\n+\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        block_0_height = node.getblockcount()\n+        self.generate(node, sync_fun=self.no_op, nblocks=1)\n+        block_1 = node.getblock(node.getbestblockhash())\n+        block_2 = create_block(\n+            int(block_1[\"hash\"], 16),\n+            create_coinbase(block_0_height + 2),\n+            block_1[\"mediantime\"] + 1,\n+        )\n+\n+        self.current_tip_test(node, block_2)\n+        self.nbits_test(node, block_2)\n+        self.pow_test(node, block_2)",
      "path": "test/functional/mining_template_verification.py",
      "position": 292,
      "original_position": 298,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "28d9d8892a8c1a8cede3042fb1eda4313b02a113",
      "in_reply_to_id": 2089235016,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems Python doesn't believe in `const`, so I ended up just documenting the test and its call site.",
      "created_at": "2025-05-20T07:23:14Z",
      "updated_at": "2025-05-20T07:23:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2097179087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2097179087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 292,
      "original_line": 292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2097200882",
      "pull_request_review_id": 2853018299,
      "id": 2097200882,
      "node_id": "PRRC_kwDOABII5859AL7y",
      "diff_hunk": "@@ -387,8 +387,10 @@ static RPCHelpMan generateblock()\n         block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n         RegenerateCommitments(block, chainman);\n \n-        if (BlockValidationState state{TestBlockValidity(chainman.ActiveChainstate(), block, /*check_pow=*/false, /*check_merkle_root=*/false)}; !state.IsValid()) {\n-            throw JSONRPCError(RPC_VERIFY_ERROR, strprintf(\"TestBlockValidity failed: %s\", state.ToString()));\n+        std::string reason;",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "116a9d2daced606e5f35896372da39fd914d3da1",
      "in_reply_to_id": 2096473337,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I dropped the changes to `rpc/mining.cpp` and explained why they're untouched in the commit message. Indeed `checkBlock` is already covered by the unit tests, and the meat and potatoes is in `TestBlockValidity`, which both IPC and RPC call.",
      "created_at": "2025-05-20T07:30:56Z",
      "updated_at": "2025-05-20T07:30:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2097200882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2097200882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109107660",
      "pull_request_review_id": 2870950393,
      "id": 2109107660,
      "node_id": "PRRC_kwDOABII5859tm3M",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": 2069106692,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit 981853ab25dc6f967f393ecba57965afb8a822f3\r\n\r\nI would have suggested the same. It is not clear to me why you are introducing a new `blockCoins` (camel case?) view here. Maybe do some of these `TestBlockValidity` refactors and documentation in a separate commit. It is not quite clear to me why this should be changed.",
      "created_at": "2025-05-27T12:51:20Z",
      "updated_at": "2025-05-27T12:52:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2109107660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109107660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109284630",
      "pull_request_review_id": 2871224121,
      "id": 2109284630,
      "node_id": "PRRC_kwDOABII5859uSEW",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": 2069106692,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This doesn't compile, but I assume you also meant to pass `view_dummy` into the `ConnectBlock` call below? I don't remember what the original was based on, so took the suggestion.",
      "created_at": "2025-05-27T14:01:46Z",
      "updated_at": "2025-05-27T14:01:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2109284630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2109284630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114374015",
      "pull_request_review_id": 2878980302,
      "id": 2114374015,
      "node_id": "PRRC_kwDOABII585-Bsl_",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": 2069106692,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2109284630\r\n\r\n> I don't remember what the original was based on, so took the suggestion.\r\n\r\nSuggestion seems like a good change since it reduces complexity and makes new code more similar to existing code.\r\n\r\nBut maybe one possible motivation or advantage of passing `ConnectBlock` a `CCoinsViewCache` on top of another `CCoinsViewCache` on top of `chainstate.CoinsTip()` instead of passing a single `CCoinsViewCache` on top of `chainstate.CoinsTip()` is that this would have ensured that `ConnectBlock` is only able to read from `chainstate.CoinsTip()` without modifying it.\r\n\r\nWith only a single cache, `ConnectBlock` could potentially call `CCoinsViewCache::Flush()` or `CCoinsViewCache::Sync()` and modify the base UTXO set, which would be bad. But probably a bug like that is unlikely, and there could be better ways of preventing it like adding a read-only option to `CCoinsViewCache` that disables writing to the base UTXO set.",
      "created_at": "2025-05-29T16:58:27Z",
      "updated_at": "2025-05-29T17:14:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2114374015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114374015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115179447",
      "pull_request_review_id": 2880232640,
      "id": 2115179447,
      "node_id": "PRRC_kwDOABII585-ExO3",
      "diff_hunk": "@@ -4648,40 +4648,82 @@ MempoolAcceptResult ChainstateManager::ProcessTransaction(const CTransactionRef&\n     return result;\n }\n \n-bool TestBlockValidity(BlockValidationState& state,\n-                       const CChainParams& chainparams,\n-                       Chainstate& chainstate,\n+bool TestBlockValidity(Chainstate& chainstate,\n                        const CBlock& block,\n-                       CBlockIndex* pindexPrev,\n-                       bool fCheckPOW,\n-                       bool fCheckMerkleRoot)\n+                       const bool check_pow,\n+                       const bool check_merkle_root,\n+                       std::string& reason,\n+                       std::string& debug)\n {\n-    AssertLockHeld(cs_main);\n-    assert(pindexPrev && pindexPrev == chainstate.m_chain.Tip());\n-    CCoinsViewCache viewNew(&chainstate.CoinsTip());\n-    uint256 block_hash(block.GetHash());\n-    CBlockIndex indexDummy(block);\n-    indexDummy.pprev = pindexPrev;\n-    indexDummy.nHeight = pindexPrev->nHeight + 1;\n-    indexDummy.phashBlock = &block_hash;\n-\n-    // NOTE: CheckBlockHeader is called by CheckBlock\n-    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlockHeader: %s\\n\", __func__, state.ToString());\n+    // Lock must be held throughout this function for two reasons:\n+    // 1. We don't want the tip to change during several of the validation steps\n+    // 2. To prevent a CheckBlock() race condition for fChecked, see ProcessNewBlock()\n+    LOCK(chainstate.m_chainman.GetMutex());\n+\n+    BlockValidationState state;\n+    CBlockIndex* tip{Assert(chainstate.m_chain.Tip())};\n+\n+    if (block.hashPrevBlock != *Assert(tip->phashBlock)) {\n+        reason = \"inconclusive-not-best-prevblk\";\n         return false;\n     }\n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot)) {\n-        LogError(\"%s: Consensus::CheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    // For signets CheckBlock() verifies the challenge iff fCheckPow is set.\n+    if (!CheckBlock(block, state, chainstate.m_chainman.GetConsensus(), /*fCheckPow=*/check_pow, /*fCheckMerkleRoot=*/check_merkle_root)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    /**\n+     * At this point ProcessNewBlock would call AcceptBlock(), but we\n+     * don't want to store the block or its header. Run individual checks\n+     * instead:\n+     * - skip AcceptBlockHeader() because:\n+     *   - we don't want to update the block index\n+     *   - we do not care about duplicates\n+     *   - we already ran CheckBlockHeader() via CheckBlock()\n+     *   - we already checked for prev-blk-not-found\n+     *   - we know the tip is valid, so no need to check bad-prevblk\n+     * - we already ran CheckBlock()\n+     * - do run ContextualCheckBlockHeader()\n+     * - do run ContextualCheckBlock()\n+     */\n+\n+    if (!ContextualCheckBlockHeader(block, state, chainstate.m_blockman, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n         return false;\n     }\n-    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, pindexPrev)) {\n-        LogError(\"%s: Consensus::ContextualCheckBlock: %s\\n\", __func__, state.ToString());\n+\n+    if (!ContextualCheckBlock(block, state, chainstate.m_chainman, tip)) {\n+        reason = state.GetRejectReason();\n+        debug = state.GetDebugMessage();\n+        return false;\n+    }\n+\n+    // We don't want ConnectBlock to update the actual chainstate, so create\n+    // a cache on top of it, along with a dummy block index.\n+    CBlockIndex index_dummy{block};\n+    uint256 block_hash(block.GetHash());\n+    index_dummy.pprev = tip;\n+    index_dummy.nHeight = tip->nHeight + 1;\n+    index_dummy.phashBlock = &block_hash;\n+    CCoinsViewCache tip_view(&chainstate.CoinsTip());\n+    CCoinsView blockCoins;\n+    CCoinsViewCache view(&blockCoins);\n+    view.SetBackend(tip_view);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "a0a6dbbe75a535e606b4768e737a80483b36a6ab",
      "in_reply_to_id": 2069106692,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "At least we have a test that checks the UTXO set isn't updated: https://github.com/bitcoin/bitcoin/blob/1def3bc3773b3013a92f54daa75acb82c30beaac/test/functional/mining_template_verification.py#L145-L156\r\n\r\nBut that doesn't cover all conceivable future ways that we might accidentally flush.\r\n\r\nIf we do want to add a belt-and-suspenders way to prevent such a flush, it seems better for a followup.\r\n\r\n> there could be better ways of preventing it like adding a read-only option to `CCoinsViewCache` that disables writing to the base UTXO set\r\n\r\nThat seems like the best approach.",
      "created_at": "2025-05-30T05:42:46Z",
      "updated_at": "2025-05-30T05:42:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2115179447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115179447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": 4712,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140050478",
      "pull_request_review_id": 2917006320,
      "id": 2140050478,
      "node_id": "PRRC_kwDOABII585_jpQu",
      "diff_hunk": "@@ -0,0 +1,313 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):",
      "path": "test/functional/mining_template_verification.py",
      "position": 55,
      "original_position": 36,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure about adding all these tests. Are they actually improving coverage? I see some extra coverage in the corecheck report for the duplicate case, but that does not seem to warrant this entire test, which I guess is trying to cover a broad selection of possible failure cases, though there seems to be a large overlap with `mining_basic.py`. Maybe I am missing something? The existing `mining_basic.py` test is also already documented as being intended to exercise template proposals.",
      "created_at": "2025-06-11T12:50:46Z",
      "updated_at": "2025-06-11T12:50:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2140050478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140050478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140085665",
      "pull_request_review_id": 2917069992,
      "id": 2140085665,
      "node_id": "PRRC_kwDOABII585_jx2h",
      "diff_hunk": "@@ -0,0 +1,313 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):",
      "path": "test/functional/mining_template_verification.py",
      "position": 55,
      "original_position": 36,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "in_reply_to_id": 2140050478,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The existing coverage probably stems from the standard check after we generate our own block? But those are always valid. The checks here are for block templates from untrusted sources.\r\n\r\nI would imagine we'll expand them later once sv2 pools start actually receiving things from users in the wild. And perhaps we'll need to add additional rejection reasons like a max validation time, that don't apply to our own blocks.",
      "created_at": "2025-06-11T13:05:59Z",
      "updated_at": "2025-06-11T13:05:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2140085665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140085665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140091166",
      "pull_request_review_id": 2917080826,
      "id": 2140091166,
      "node_id": "PRRC_kwDOABII585_jzMe",
      "diff_hunk": "@@ -0,0 +1,313 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):",
      "path": "test/functional/mining_template_verification.py",
      "position": 55,
      "original_position": 36,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "in_reply_to_id": 2140050478,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It could make sense to depulicate things by moving a few things out of `mining_basic.py` here.",
      "created_at": "2025-06-11T13:08:27Z",
      "updated_at": "2025-06-11T13:08:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2140091166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140091166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140143326",
      "pull_request_review_id": 2917170788,
      "id": 2140143326,
      "node_id": "PRRC_kwDOABII585_j_7e",
      "diff_hunk": "@@ -0,0 +1,313 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):",
      "path": "test/functional/mining_template_verification.py",
      "position": 55,
      "original_position": 36,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "in_reply_to_id": 2140050478,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Most of the cases tested here are also triggered in `mining_basic.py`, so maybe add the few extra ones here to over there? There is also a valid block test right at the beginning there, which implicitly checks that no state change happened.",
      "created_at": "2025-06-11T13:31:06Z",
      "updated_at": "2025-06-11T13:31:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2140143326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140143326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140574687",
      "pull_request_review_id": 2917859731,
      "id": 2140574687,
      "node_id": "PRRC_kwDOABII585_lpPf",
      "diff_hunk": "@@ -0,0 +1,313 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2024-Present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate RPC in proposal mode\n+\n+Generate several blocks and test them against the getblocktemplate RPC.\n+\"\"\"\n+\n+from concurrent.futures import ThreadPoolExecutor\n+\n+import copy\n+\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+    add_witness_commitment,\n+)\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+from test_framework.messages import (\n+    COutPoint,\n+    CTxIn,\n+    uint256_from_compact,\n+)\n+\n+from test_framework.wallet import (\n+    MiniWallet,\n+)\n+\n+\n+class MiningTemplateVerificationTest(BitcoinTestFramework):",
      "path": "test/functional/mining_template_verification.py",
      "position": 55,
      "original_position": 36,
      "commit_id": "2b5ebfed5856cf04d0b8a3b6dbb09ad99ab47828",
      "original_commit_id": "1def3bc3773b3013a92f54daa75acb82c30beaac",
      "in_reply_to_id": 2140050478,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ended moving all template tests out of `mining_basic.py` to the new file, giving each test its own function. And then in a separate commit I added additional coverage.\r\n\r\n`mining_basic.py` is still 500 lines after this, and quite slow. So I think a separate file for this is justifiable.",
      "created_at": "2025-06-11T16:08:41Z",
      "updated_at": "2025-06-11T16:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31981#discussion_r2140574687",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140574687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31981"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    }
  ]
}