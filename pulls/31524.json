{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524",
    "id": 2241852668,
    "node_id": "PR_kwDOABII586Fn_T8",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31524",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31524.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31524.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa83bec78ef3e86445e522afa396c97b58eb1902",
    "number": 31524,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor: Allow std::byte in (Read/Write)(LE/BE)",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Starting with C++17, `std::byte` is often (not always) a better choice over `uint8_t` for new code.\r\n\r\nHowever, the existing codebase discourages the use of `std::byte`, when helpers such as `ReadLE32` are used. This is because calling code will be cluttered with byte-casts.\r\n\r\nFix it by allowing `std::byte` pointers in `ReadLE32` (and friends).",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-12-18T10:09:07Z",
    "updated_at": "2025-01-04T12:24:19Z",
    "closed_at": "2025-01-03T14:29:14Z",
    "mergeable_state": "unknown",
    "merged_at": "2025-01-03T14:29:14Z",
    "merged_by": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "6aa0e70ccbd5491ec9d7c81892820f3341ccd631",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "maflcko:2412-more-byte",
      "ref": "2412-more-byte",
      "sha": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 27,
        "watchers_count": 27,
        "size": 242973,
        "default_branch": "master",
        "open_issues_count": 18,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-03T15:17:06Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2024-12-10T11:58:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "477b357460743a9304cccfb672e5445f364891ae",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36474,
        "stargazers_count": 81047,
        "watchers_count": 81047,
        "size": 273906,
        "default_branch": "master",
        "open_issues_count": 690,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-03T18:58:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-04T12:32:32Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 39,
    "deletions": 22,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 28,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhODNiZWM3OGVmM2U4NjQ0NWU1MjJhZmEzOTZjOTdiNThlYjE5MDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa83bec78ef3e86445e522afa396c97b58eb1902",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa83bec78ef3e86445e522afa396c97b58eb1902",
      "tree": {
        "sha": "aee7c197fd71d128fd69ee6b1e236c517c19b351",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aee7c197fd71d128fd69ee6b1e236c517c19b351"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree aee7c197fd71d128fd69ee6b1e236c517c19b351\nparent 477b357460743a9304cccfb672e5445f364891ae\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734516123 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734515965 +0100\n\nrefactor: Allow std::byte in Read(LE/BE)\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQIz7tw15/RuYGGXt87Tt4d4WHezejHrNbKoWGcjAHxEwVqYnE/xbbipEYAHJ7qAKIL\nm6a38sXXtuu6V8tdsY6As=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/477b357460743a9304cccfb672e5445f364891ae",
          "sha": "477b357460743a9304cccfb672e5445f364891ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/477b357460743a9304cccfb672e5445f364891ae"
        }
      ],
      "message": "refactor: Allow std::byte in Read(LE/BE)",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-18T09:59:25Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-18T10:02:03Z"
      },
      "sha": "fa83bec78ef3e86445e522afa396c97b58eb1902"
    },
    {
      "event": "commented",
      "id": 2550911155,
      "node_id": "IC_kwDOABII586YC9Cz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2550911155",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T10:09:11Z",
      "updated_at": "2024-12-31T19:14:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31524.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2551682772), [theuni](https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2512335234), [fjahr](https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2566590949), [l0rinc](https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2526656628) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2550911155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524"
    },
    {
      "event": "labeled",
      "id": 15700840558,
      "node_id": "LE_lADOABII586jwZ4WzwAAAAOn19Bu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15700840558",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T10:09:14Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 2551682772,
      "node_id": "IC_kwDOABII586YF5bU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2551682772",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T15:51:08Z",
      "updated_at": "2024-12-18T15:51:08Z",
      "author_association": "MEMBER",
      "body": "utACK fa83bec78ef3e86445e522afa396c97b58eb1902",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2551682772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524"
    },
    {
      "event": "reviewed",
      "id": 2512335234,
      "node_id": "PRR_kwDOABII586VvzGC",
      "url": null,
      "actor": null,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice use of concepts.\r\n\r\nutACK fa83bec78ef3e86445e522afa396c97b58eb1902",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2512335234",
      "submitted_at": "2024-12-18T16:33:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
    },
    {
      "event": "commented",
      "id": 2566590949,
      "node_id": "IC_kwDOABII586Y-xHl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2566590949",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-31T16:55:52Z",
      "updated_at": "2024-12-31T16:55:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fa83bec78ef3e86445e522afa396c97b58eb1902",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2566590949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524"
    },
    {
      "event": "reviewed",
      "id": 2526656628,
      "node_id": "PRR_kwDOABII586Wmbh0",
      "url": null,
      "actor": null,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fa83bec78ef3e86445e522afa396c97b58eb1902\r\n\r\nPlease see if any of the simplification suggestions apply, but I'm fine with it as is",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2526656628",
      "submitted_at": "2024-12-31T19:14:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
    },
    {
      "event": "reviewed",
      "id": 2527322612,
      "node_id": "PRR_kwDOABII586Wo-H0",
      "url": null,
      "actor": null,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2527322612",
      "submitted_at": "2025-01-02T10:19:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
    },
    {
      "event": "reviewed",
      "id": 2527558849,
      "node_id": "PRR_kwDOABII586Wp3zB",
      "url": null,
      "actor": null,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#pullrequestreview-2527558849",
      "submitted_at": "2025-01-02T13:20:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
    },
    {
      "event": "renamed",
      "id": 15807653792,
      "node_id": "RTE_lADOABII586jwZ4WzwAAAAOuNaeg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15807653792",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T13:44:56Z",
      "rename": {
        "from": "refactor: Allow std::byte in Read(LE/BE)",
        "to": "    refactor: Allow std::byte in (Read/Write)(LE/BE)"
      }
    },
    {
      "event": "renamed",
      "id": 15807654164,
      "node_id": "RTE_lADOABII586jwZ4WzwAAAAOuNakU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15807654164",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T13:44:59Z",
      "rename": {
        "from": "    refactor: Allow std::byte in (Read/Write)(LE/BE)",
        "to": "refactor: Allow std::byte in (Read/Write)(LE/BE)"
      }
    },
    {
      "event": "merged",
      "id": 15808033357,
      "node_id": "ME_lADOABII586jwZ4WzwAAAAOuO3JN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15808033357",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6aa0e70ccbd5491ec9d7c81892820f3341ccd631",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aa0e70ccbd5491ec9d7c81892820f3341ccd631",
      "created_at": "2025-01-03T14:29:14Z"
    },
    {
      "event": "closed",
      "id": 15808033383,
      "node_id": "CE_lADOABII586jwZ4WzwAAAAOuO3Jn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15808033383",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T14:29:15Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 15808378855,
      "node_id": "HRDE_lADOABII586jwZ4WzwAAAAOuQLfn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15808378855",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T15:04:58Z"
    },
    {
      "event": "commented",
      "id": 2571273109,
      "node_id": "IC_kwDOABII586ZQoOV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2571273109",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-04T12:24:18Z",
      "updated_at": "2025-01-04T12:24:18Z",
      "author_association": "MEMBER",
      "body": "Post-merge ACK fa83bec78ef3e86445e522afa396c97b58eb1902",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#issuecomment-2571273109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31524"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900234707",
      "pull_request_review_id": 2526656628,
      "id": 1900234707,
      "node_id": "PRRC_kwDOABII585xQ0fT",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);",
      "path": "src/crypto/common.h",
      "position": 23,
      "original_position": 23,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: given the simplicity of this PR, if you edit again, consider if it would be simpler to use `sizeof` expressions instead of the constants:\r\n```suggestion\r\n    memcpy(&x, ptr, sizeof(uint16_t));\r\n```",
      "created_at": "2024-12-31T18:54:13Z",
      "updated_at": "2024-12-31T19:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900234707",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900234707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900235081",
      "pull_request_review_id": 2526656628,
      "id": 1900235081,
      "node_id": "PRRC_kwDOABII585xQ0lJ",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as far as I can tell inline templates are redundant here (`constexpr` also compiles, but not sure it's valid):\r\n```suggestion\r\ntemplate <ByteType B>\r\nuint16_t ReadLE16(const B* ptr)\r\n```",
      "created_at": "2024-12-31T18:55:20Z",
      "updated_at": "2024-12-31T19:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900235081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900235081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900235591",
      "pull_request_review_id": 2526656628,
      "id": 1900235591,
      "node_id": "PRRC_kwDOABII585xQ0tH",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;",
      "path": "src/crypto/common.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Byte type means that size is 1, right? If you edit again, consider simplifying to something like:\r\n```suggestion\r\ntemplate <typename B>\r\nconcept ByteType = (sizeof(B) == 1);\r\n```\r\n\r\nOr if you don't like it, to the mentioned `uint8_t`\r\n```suggestion\r\ntemplate <typename B>\r\nconcept ByteType = std::same_as<B, uint8_t> || std::same_as<B, std::byte>;\r\n```",
      "created_at": "2024-12-31T18:57:07Z",
      "updated_at": "2024-12-31T19:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900235591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900235591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 15,
      "original_start_line": 15,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900236190",
      "pull_request_review_id": 2526656628,
      "id": 1900236190,
      "node_id": "PRRC_kwDOABII585xQ02e",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);\n     return le16toh_internal(x);\n }\n \n-uint32_t static inline ReadLE32(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint32_t ReadLE32(const B* ptr)\n {\n     uint32_t x;\n     memcpy(&x, ptr, 4);\n     return le32toh_internal(x);\n }\n \n-uint64_t static inline ReadLE64(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint64_t ReadLE64(const B* ptr)\n {\n     uint64_t x;\n     memcpy(&x, ptr, 8);\n     return le64toh_internal(x);\n }\n \n-void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n+template <ByteType B>\n+inline void WriteLE16(B* ptr, uint16_t x)\n {\n     uint16_t v = htole16_internal(x);\n     memcpy(ptr, &v, 2);\n }",
      "path": "src/crypto/common.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We could const the parameter and locals to obviate which one we're writing:\r\n```suggestion\r\ntemplate <ByteType B>\r\nvoid WriteLE16(B* ptr, const uint16_t x)\r\n{\r\n    const uint16_t v{htole16_internal(x)};\r\n    memcpy(ptr, &v, 2);\r\n}\r\n```",
      "created_at": "2024-12-31T18:59:33Z",
      "updated_at": "2024-12-31T19:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900236190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900236190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 42,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900238844",
      "pull_request_review_id": 2526656628,
      "id": 1900238844,
      "node_id": "PRRC_kwDOABII585xQ1f8",
      "diff_hunk": "@@ -25,14 +25,14 @@\n void ChaCha20Aligned::SetKey(Span<const std::byte> key) noexcept\n {\n     assert(key.size() == KEYLEN);\n-    input[0] = ReadLE32(UCharCast(key.data() + 0));\n-    input[1] = ReadLE32(UCharCast(key.data() + 4));\n-    input[2] = ReadLE32(UCharCast(key.data() + 8));\n-    input[3] = ReadLE32(UCharCast(key.data() + 12));\n-    input[4] = ReadLE32(UCharCast(key.data() + 16));\n-    input[5] = ReadLE32(UCharCast(key.data() + 20));\n-    input[6] = ReadLE32(UCharCast(key.data() + 24));\n-    input[7] = ReadLE32(UCharCast(key.data() + 28));\n+    input[0] = ReadLE32(key.data() + 0);\n+    input[1] = ReadLE32(key.data() + 4);\n+    input[2] = ReadLE32(key.data() + 8);\n+    input[3] = ReadLE32(key.data() + 12);\n+    input[4] = ReadLE32(key.data() + 16);\n+    input[5] = ReadLE32(key.data() + 20);\n+    input[6] = ReadLE32(key.data() + 24);\n+    input[7] = ReadLE32(key.data() + 28);",
      "path": "src/crypto/chacha20.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "maybe we can roll back the loop now to something like:\r\n```C++\r\nvoid ChaCha20Aligned::SetKey(Span<const std::byte> key) noexcept\r\n{\r\n    assert(key.size() == KEYLEN);\r\n    constexpr int words{KEYLEN / sizeof(uint32_t)};\r\n    for (int i{0}; i < words; ++i) input[i] = ReadLE32(key.data() + i * sizeof(uint32_t));\r\n    std::memset(&input[words], 0, (std::size(input) - words) * sizeof(uint32_t));\r\n}\r\n```",
      "created_at": "2024-12-31T19:10:12Z",
      "updated_at": "2024-12-31T19:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900238844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900238844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 28,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900726674",
      "pull_request_review_id": 2527322612,
      "id": 1900726674,
      "node_id": "PRRC_kwDOABII585xSsmS",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);\n     return le16toh_internal(x);\n }\n \n-uint32_t static inline ReadLE32(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint32_t ReadLE32(const B* ptr)\n {\n     uint32_t x;\n     memcpy(&x, ptr, 4);\n     return le32toh_internal(x);\n }\n \n-uint64_t static inline ReadLE64(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint64_t ReadLE64(const B* ptr)\n {\n     uint64_t x;\n     memcpy(&x, ptr, 8);\n     return le64toh_internal(x);\n }\n \n-void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n+template <ByteType B>\n+inline void WriteLE16(B* ptr, uint16_t x)\n {\n     uint16_t v = htole16_internal(x);\n     memcpy(ptr, &v, 2);\n }\n \n-void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n+template <ByteType B>",
      "path": "src/crypto/common.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The title claims that only reads were changed, but since we have also adapted the writes, would it make sense to modify them in the example `ChaCha` as well to demonstrate their correctness?\r\n\r\n```patch\r\ndiff --git a/src/crypto/chacha20.cpp b/src/crypto/chacha20.cpp\r\n--- a/src/crypto/chacha20.cpp\t(revision fa83bec78ef3e86445e522afa396c97b58eb1902)\r\n+++ b/src/crypto/chacha20.cpp\t(date 1735812552447)\r\n@@ -59,7 +59,7 @@\r\n \r\n inline void ChaCha20Aligned::Keystream(Span<std::byte> output) noexcept\r\n {\r\n-    unsigned char* c = UCharCast(output.data());\r\n+    std::byte* c = output.data();\r\n     size_t blocks = output.size() / BLOCKLEN;\r\n     assert(blocks * BLOCKLEN == output.size());\r\n \r\n@@ -161,8 +161,8 @@\r\n inline void ChaCha20Aligned::Crypt(Span<const std::byte> in_bytes, Span<std::byte> out_bytes) noexcept\r\n {\r\n     assert(in_bytes.size() == out_bytes.size());\r\n-    const unsigned char* m = UCharCast(in_bytes.data());\r\n-    unsigned char* c = UCharCast(out_bytes.data());\r\n+    const std::byte* m = in_bytes.data();\r\n+    std::byte* c = out_bytes.data();\r\n     size_t blocks = out_bytes.size() / BLOCKLEN;\r\n     assert(blocks * BLOCKLEN == out_bytes.size());\r\n```",
      "created_at": "2025-01-02T10:19:26Z",
      "updated_at": "2025-01-02T10:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900726674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900726674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822246",
      "pull_request_review_id": 2527477519,
      "id": 1900822246,
      "node_id": "PRRC_kwDOABII585xTD7m",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);\n     return le16toh_internal(x);\n }\n \n-uint32_t static inline ReadLE32(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint32_t ReadLE32(const B* ptr)\n {\n     uint32_t x;\n     memcpy(&x, ptr, 4);\n     return le32toh_internal(x);\n }\n \n-uint64_t static inline ReadLE64(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint64_t ReadLE64(const B* ptr)\n {\n     uint64_t x;\n     memcpy(&x, ptr, 8);\n     return le64toh_internal(x);\n }\n \n-void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n+template <ByteType B>\n+inline void WriteLE16(B* ptr, uint16_t x)\n {\n     uint16_t v = htole16_internal(x);\n     memcpy(ptr, &v, 2);\n }\n \n-void static inline WriteLE32(unsigned char* ptr, uint32_t x)\n+template <ByteType B>",
      "path": "src/crypto/common.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900726674,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, may do if I have to re-touch, or in a follow-up",
      "created_at": "2025-01-02T12:16:24Z",
      "updated_at": "2025-01-02T12:16:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822308",
      "pull_request_review_id": 2527477619,
      "id": 1900822308,
      "node_id": "PRRC_kwDOABII585xTD8k",
      "diff_hunk": "@@ -25,14 +25,14 @@\n void ChaCha20Aligned::SetKey(Span<const std::byte> key) noexcept\n {\n     assert(key.size() == KEYLEN);\n-    input[0] = ReadLE32(UCharCast(key.data() + 0));\n-    input[1] = ReadLE32(UCharCast(key.data() + 4));\n-    input[2] = ReadLE32(UCharCast(key.data() + 8));\n-    input[3] = ReadLE32(UCharCast(key.data() + 12));\n-    input[4] = ReadLE32(UCharCast(key.data() + 16));\n-    input[5] = ReadLE32(UCharCast(key.data() + 20));\n-    input[6] = ReadLE32(UCharCast(key.data() + 24));\n-    input[7] = ReadLE32(UCharCast(key.data() + 28));\n+    input[0] = ReadLE32(key.data() + 0);\n+    input[1] = ReadLE32(key.data() + 4);\n+    input[2] = ReadLE32(key.data() + 8);\n+    input[3] = ReadLE32(key.data() + 12);\n+    input[4] = ReadLE32(key.data() + 16);\n+    input[5] = ReadLE32(key.data() + 20);\n+    input[6] = ReadLE32(key.data() + 24);\n+    input[7] = ReadLE32(key.data() + 28);",
      "path": "src/crypto/chacha20.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900238844,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, I don't want to affect performance in one way or another on some compiler (optimization level)s",
      "created_at": "2025-01-02T12:16:28Z",
      "updated_at": "2025-01-02T12:16:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 28,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822388",
      "pull_request_review_id": 2527477764,
      "id": 1900822388,
      "node_id": "PRRC_kwDOABII585xTD90",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);\n     return le16toh_internal(x);\n }\n \n-uint32_t static inline ReadLE32(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint32_t ReadLE32(const B* ptr)\n {\n     uint32_t x;\n     memcpy(&x, ptr, 4);\n     return le32toh_internal(x);\n }\n \n-uint64_t static inline ReadLE64(const unsigned char* ptr)\n+template <ByteType B>\n+inline uint64_t ReadLE64(const B* ptr)\n {\n     uint64_t x;\n     memcpy(&x, ptr, 8);\n     return le64toh_internal(x);\n }\n \n-void static inline WriteLE16(unsigned char* ptr, uint16_t x)\n+template <ByteType B>\n+inline void WriteLE16(B* ptr, uint16_t x)\n {\n     uint16_t v = htole16_internal(x);\n     memcpy(ptr, &v, 2);\n }",
      "path": "src/crypto/common.h",
      "position": 51,
      "original_position": 51,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900236190,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am not touching this line of code, and don't want to, so maybe a separate issue or pull request seems more appropriate?",
      "created_at": "2025-01-02T12:16:36Z",
      "updated_at": "2025-01-02T12:16:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822388",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 42,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822444",
      "pull_request_review_id": 2527477862,
      "id": 1900822444,
      "node_id": "PRRC_kwDOABII585xTD-s",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;",
      "path": "src/crypto/common.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235591,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, signed chars are explicitly disallowed. See also: `git grep delete ./src/serialize.h`\r\n\r\n```\r\nsrc/serialize.h:template <typename Stream, CharNotInt8 V> void Serialize(Stream&, V) = delete; // char serialization forbidden. Use uint8_t or int8_t\r\nsrc/serialize.h:template <typename Stream, CharNotInt8 V> void Unserialize(Stream&, V) = delete; // char serialization forbidden. Use uint8_t or int8_t\r\n",
      "created_at": "2025-01-02T12:16:41Z",
      "updated_at": "2025-01-02T12:16:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 15,
      "original_start_line": 15,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822481",
      "pull_request_review_id": 2527477937,
      "id": 1900822481,
      "node_id": "PRRC_kwDOABII585xTD_R",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235081,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, std::memcpy is not `constexpr`, so adding it serves no purpose.",
      "created_at": "2025-01-02T12:16:45Z",
      "updated_at": "2025-01-02T12:16:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822539",
      "pull_request_review_id": 2527478055,
      "id": 1900822539,
      "node_id": "PRRC_kwDOABII585xTEAL",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);",
      "path": "src/crypto/common.h",
      "position": 23,
      "original_position": 23,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900234707,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am not touching this line of code, and don't want to, so maybe a separate issue or pull request seems more appropriate?",
      "created_at": "2025-01-02T12:16:51Z",
      "updated_at": "2025-01-02T12:16:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900822539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900822539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900842605",
      "pull_request_review_id": 2527511273,
      "id": 1900842605,
      "node_id": "PRRC_kwDOABII585xTI5t",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)\n {\n     uint16_t x;\n     memcpy(&x, ptr, 2);",
      "path": "src/crypto/common.h",
      "position": 23,
      "original_position": 23,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900234707,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure, I don't have a strong preference either way (while this reflects the method-name-to-size connection better, I admit it's more verbose), please resolve the comment",
      "created_at": "2025-01-02T12:44:00Z",
      "updated_at": "2025-01-02T12:44:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900842605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900842605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900843215",
      "pull_request_review_id": 2527512411,
      "id": 1900843215,
      "node_id": "PRRC_kwDOABII585xTJDP",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235081,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That was my understanding as well, what I suggested was just to remove the redundant `inline`",
      "created_at": "2025-01-02T12:44:54Z",
      "updated_at": "2025-01-02T12:44:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900843215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900843215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900844439",
      "pull_request_review_id": 2527514480,
      "id": 1900844439,
      "node_id": "PRRC_kwDOABII585xTJWX",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;",
      "path": "src/crypto/common.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235591,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I saw, but is this the level where it should be disallowed (since this would technically work with signed char, disallowing it seems like a different abstraction level)? But if it is, please resolve the comment",
      "created_at": "2025-01-02T12:46:40Z",
      "updated_at": "2025-01-02T12:46:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900844439",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900844439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 15,
      "original_start_line": 15,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900848028",
      "pull_request_review_id": 2527520304,
      "id": 1900848028,
      "node_id": "PRRC_kwDOABII585xTKOc",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;",
      "path": "src/crypto/common.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235591,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If there is a use-case for this, it can be added, but I think limiting to \"unsigned\" bytes seems fine and preferable  for now.",
      "created_at": "2025-01-02T12:51:21Z",
      "updated_at": "2025-01-02T12:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900848028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900848028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 15,
      "original_start_line": 15,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900850994",
      "pull_request_review_id": 2527525382,
      "id": 1900850994,
      "node_id": "PRRC_kwDOABII585xTK8y",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900235081,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't have a strong feeling, see https://github.com/bitcoin/bitcoin/pull/30933#discussion_r1874382161.\r\n\r\nMy preference would be to have a clang-tidy (plugin) rule for this, instead of using human review resources.",
      "created_at": "2025-01-02T12:55:00Z",
      "updated_at": "2025-01-02T12:55:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900850994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900850994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900870464",
      "pull_request_review_id": 2527558849,
      "id": 1900870464,
      "node_id": "PRRC_kwDOABII585xTPtA",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Allow std::byte in Read(LE/BE)\" (fa83bec78ef3e86445e522afa396c97b58eb1902)\r\n\r\nThere is a shorter syntax for this that I think would make code easier to read (thoughout this file):\r\n\r\n```diff\r\n-template <ByteType B>\r\n-inline uint16_t ReadLE16(const B* ptr)\r\n+inline uint16_t ReadLE16(const ByteType auto* ptr)\r\n```\r\n\r\n\r\n\r\n",
      "created_at": "2025-01-02T13:20:54Z",
      "updated_at": "2025-01-02T13:20:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900870464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900870464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900881285",
      "pull_request_review_id": 2527575904,
      "id": 1900881285,
      "node_id": "PRRC_kwDOABII585xTSWF",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No strong opinion from my side. I'll leave as-is for now, but other reviewers are encouraged to chime in with up/down votes.",
      "created_at": "2025-01-02T13:31:26Z",
      "updated_at": "2025-01-02T13:31:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900881285",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900881285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900895399",
      "pull_request_review_id": 2527600815,
      "id": 1900895399,
      "node_id": "PRRC_kwDOABII585xTVyn",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Personally, I find the `ByteType auto` construct slightly more confusing than the more verbose template.",
      "created_at": "2025-01-02T13:47:47Z",
      "updated_at": "2025-01-02T13:47:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1900895399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1900895399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901027110",
      "pull_request_review_id": 2527826888,
      "id": 1901027110,
      "node_id": "PRRC_kwDOABII585xT18m",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Personally, I find the `ByteType auto` construct slightly more confusing than the more verbose template.\r\n\r\nOk, resolving for now.\r\n\r\nIf there is a preference about the style, my preference would be to have a clang-tidy (plugin) rule for this, instead of using human review resources.",
      "created_at": "2025-01-02T16:03:53Z",
      "updated_at": "2025-01-02T16:03:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901027110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901027110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901379737",
      "pull_request_review_id": 2528427184,
      "id": 1901379737,
      "node_id": "PRRC_kwDOABII585xVMCZ",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think it's necessary to change this, but the principle here is to avoid having unnecessary template functions and unnecessary template parameters when it is possible to use concepts directly. In this case there's no point in defining a type `B` to stand in for `ByteType` and then using `B` one time when you can just use `ByteType` directly.\r\n\r\nI don't think it would be possible to write a clang-tidy plugin to check for these cases because the check would need to scan the codebase and ensure there were no calls to these functions that were passed explicit template arguments. Clang-tidy can't know if if a function is intended to be used as template function, or if it is just intended to be a generic function that references a few concepts. The point of writing more direct code is to reflect this intent.",
      "created_at": "2025-01-02T23:53:56Z",
      "updated_at": "2025-01-02T23:53:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901379737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901379737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901384725",
      "pull_request_review_id": 2528433871,
      "id": 1901384725,
      "node_id": "PRRC_kwDOABII585xVNQV",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky I don't think that's right; these are all just different notations for the same thing:\r\n\r\n* `void func(ByteType auto b)`\r\n* `template<ByteType T> void func(T b)`\r\n* `template<typename T> requires ByteType<T> void func(T b)`\r\n\r\nSo even the shortest version can be invoked with explicitly template arguments (`func<unsigned char>(5)` for example).\r\n\r\nNo opinion on whether the usage of `Concept auto` arguments should be encouraged, and/or the long version of it outlawed. But I do believe it's possible to write a tidy rule for it in theory.",
      "created_at": "2025-01-03T00:09:10Z",
      "updated_at": "2025-01-03T00:54:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901384725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901384725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901686821",
      "pull_request_review_id": 2528914800,
      "id": 1901686821,
      "node_id": "PRRC_kwDOABII585xWXAl",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I don't think it would be possible to write a clang-tidy plugin to check for these cases\r\n\r\nI haven't tried it, so I am not sure if it is possible. However, looking at the AST, it should be trivial to detect those functions. Matching any `FunctionTemplateDecl` whose `FunctionDecl` does not have any `TemplateTypeParm` in the AST should be sufficient to find those that can be written without `template<...>`.\r\n\r\nExample: https://godbolt.org/z/4rre4rPT6",
      "created_at": "2025-01-03T11:14:06Z",
      "updated_at": "2025-01-03T11:14:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901686821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901686821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901862936",
      "pull_request_review_id": 2529221464,
      "id": 1901862936,
      "node_id": "PRRC_kwDOABII585xXCAY",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks sipa and maflcko. I didn't realize you were allowed to pass explicit template arguments to functions declared without template parameters, but it makes sense given the equivalence shown. It is also interesting to see ASTs of these functions in godbolt, even though I did understand that clang-tidy could see when template parameters were referenced.\r\n\r\nUpshot seems to be that it would be possible to write a clang-tidy linter that would not force you to write broken code (because template arguments can be passed to functions not written with template parameters). But this linter could still force you to write code that does not reflect your intent, if you are are intending for a function to accept template arguments and the linter forces you to drop the parameters.\r\n\r\nI have to say, I don't actually understand why 3 experienced c++ developers (maflcko, l0rinc, sipa) would be on the fence in this case about whether functions not intended to accept template parameters should be written as function templates, but vive la difference.",
      "created_at": "2025-01-03T14:57:14Z",
      "updated_at": "2025-01-03T14:57:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901862936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901862936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901896336",
      "pull_request_review_id": 2529276521,
      "id": 1901896336,
      "node_id": "PRRC_kwDOABII585xXKKQ",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky I was just commenting on (lack of) semantic difference between the different syntaxes. Personally I have a slight preference for the shorter notations, but no opinion on whether the project should adopt/encourage/enforce that.",
      "created_at": "2025-01-03T15:32:43Z",
      "updated_at": "2025-01-03T15:32:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901896336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901896336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901989166",
      "pull_request_review_id": 2529426076,
      "id": 1901989166,
      "node_id": "PRRC_kwDOABII585xXg0u",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just haven't really seen this being used in the project, but I don't mind if we do.",
      "created_at": "2025-01-03T17:06:31Z",
      "updated_at": "2025-01-03T17:06:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1901989166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901989166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902054044",
      "pull_request_review_id": 2529532646,
      "id": 1902054044,
      "node_id": "PRRC_kwDOABII585xXwqc",
      "diff_hunk": "@@ -7,82 +7,99 @@\n \n #include <compat/endian.h>\n \n+#include <concepts>\n+#include <cstddef>\n #include <cstdint>\n #include <cstring>\n \n-uint16_t static inline ReadLE16(const unsigned char* ptr)\n+template <typename B>\n+concept ByteType = std::same_as<B, unsigned char> || std::same_as<B, std::byte>;\n+\n+template <ByteType B>\n+inline uint16_t ReadLE16(const B* ptr)",
      "path": "src/crypto/common.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "original_commit_id": "fa83bec78ef3e86445e522afa396c97b58eb1902",
      "in_reply_to_id": 1900870464,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The more I looked at it, the more I actually liked it.\r\nI’ve pushed a follow-up to https://github.com/bitcoin/bitcoin/pull/31601 - let's discuss it there",
      "created_at": "2025-01-03T18:25:56Z",
      "updated_at": "2025-01-04T12:37:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31524#discussion_r1902054044",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902054044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31524"
        }
      },
      "start_line": 18,
      "original_start_line": 18,
      "start_side": "RIGHT",
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    }
  ]
}