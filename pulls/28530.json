{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530",
    "id": 1529098919,
    "node_id": "PR_kwDOABII585bJDKn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28530",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28530.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28530.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9b3da70bd06b45482e7211aa95637a72bd115553",
    "number": 28530,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "tests, bug fix: DisconnectedBlockTransactions rewrite followups",
    "user": {
      "login": "ismaelsadeeq",
      "id": 48946461,
      "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ismaelsadeeq",
      "html_url": "https://github.com/ismaelsadeeq",
      "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
      "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
      "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
      "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
      "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is a follow-up to fix review comments and a bugfix from #28385\r\n\r\nThe PR\r\n\r\n- Updated `DisconnectedBlockTransactions`'s `MAX_DISCONNECTED_TX_POOL` from kb to bytes.\r\n- Moved `DisconnectedBlockTransactions` implementation code to `kernel/disconnected_transactions.cpp`.\r\n- `AddTransactionsFromBlock` now assume duplicate transactions are not passed by asserting after inserting each transaction to `iters_by_txid`.\r\n- Included a Bug fix: In the current master we are underestimating the memory usage of `DisconnectedBlockTransactions`.\r\n\r\n    * When adding and subtracting `cachedInnerUsage` we call `RecursiveDynamicUsage` with `CTransaction` which invokes this [`RecursiveDynamicUsage(const CTransaction& tx)`](https://github.com/bitcoin/bitcoin/blob/6e721c923c87abdb8d99674093d08d8c17bc52c2/src/core_memusage.h#L32) version of `RecursiveDynamicUsage`, the output of that call only account for the memory usage of the inputs and outputs of the `CTransaction`, this omits the memory usage of the `CTransaction` object and the control block.\r\n    * This PR fixes this bug by calling `RecursiveDynamicUsage` with `CTransactionRef` when adding and subtracting `cachedInnerUsage` which invokes [`RecursiveDynamicUsage(const std::shared_ptr<X>& p)`](https://github.com/bitcoin/bitcoin/blob/6e721c923c87abdb8d99674093d08d8c17bc52c2/src/core_memusage.h#L67) version of `RecursiveDynamicUsage` the output of the calculation accounts for the` CTransaction` object, the control blocks, inputs and outputs memory usage. \r\n    * see  [comment ](https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1322948452)\r\n- Added test for DisconnectedBlockTransactions memory limit.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-09-25T15:51:47Z",
    "updated_at": "2025-06-27T11:33:46Z",
    "closed_at": "2023-11-02T11:13:04Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2023-11-02T11:13:04Z",
    "merged_by": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "023418a140b05b788b45fcb66bdd4832c08db751",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "ismaelsadeeq:09-2023-follow-up-28385",
      "ref": "09-2023-follow-up-28385",
      "sha": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 577730599,
        "node_id": "R_kgDOIm94Jw",
        "name": "bitcoin",
        "full_name": "ismaelsadeeq/bitcoin",
        "owner": {
          "login": "ismaelsadeeq",
          "id": 48946461,
          "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
          "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ismaelsadeeq",
          "html_url": "https://github.com/ismaelsadeeq",
          "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
          "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
          "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
          "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
          "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ismaelsadeeq/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ismaelsadeeq/bitcoin",
        "archive_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ismaelsadeeq/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ismaelsadeeq/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ismaelsadeeq/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/hooks",
        "svn_url": "https://github.com/ismaelsadeeq/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 278890,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-26T06:15:47Z",
        "created_at": "2022-12-13T11:54:34Z",
        "updated_at": "2023-03-10T09:46:26Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6e721c923c87abdb8d99674093d08d8c17bc52c2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37425,
        "stargazers_count": 84331,
        "watchers_count": 84331,
        "size": 284456,
        "default_branch": "master",
        "open_issues_count": 747,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-27T11:07:39Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-27T11:07:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 204,
    "deletions": 77,
    "changed_files": 8,
    "commits": 5,
    "review_comments": 54,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 1734024910,
      "node_id": "IC_kwDOABII585nWx7O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734024910",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T15:51:50Z",
      "updated_at": "2023-11-02T11:07:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28530).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1688509183), [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1689711485), [glozow](https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1709976459) |\n| Concept ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1762037778) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1734024910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "labeled",
      "id": 10464642641,
      "node_id": "LE_lADOABII585x9AjyzwAAAAJvvcZR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10464642641",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-25T15:51:53Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 1642526595,
      "node_id": "PRR_kwDOABII585h5veD",
      "url": null,
      "actor": null,
      "commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "0xETHengineer",
        "id": 134366104,
        "node_id": "U_kgDOCAJDmA",
        "avatar_url": "https://avatars.githubusercontent.com/u/134366104?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xETHengineer",
        "html_url": "https://github.com/0xETHengineer",
        "followers_url": "https://api.github.com/users/0xETHengineer/followers",
        "following_url": "https://api.github.com/users/0xETHengineer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xETHengineer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xETHengineer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xETHengineer/subscriptions",
        "organizations_url": "https://api.github.com/users/0xETHengineer/orgs",
        "repos_url": "https://api.github.com/users/0xETHengineer/repos",
        "events_url": "https://api.github.com/users/0xETHengineer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xETHengineer/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1642526595",
      "submitted_at": "2023-09-25T16:03:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "reviewed",
      "id": 1642517394,
      "node_id": "PRR_kwDOABII585h5tOS",
      "url": null,
      "actor": null,
      "commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for opening a followup! Did you want to pick up the memusage unit test too? (https://github.com/bitcoin/bitcoin/commit/9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d or a new one)",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1642517394",
      "submitted_at": "2023-09-26T12:59:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10477767762,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJwhgxS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10477767762",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2517862abb2c2e111c259ad2a6498e352f026c92",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/2517862abb2c2e111c259ad2a6498e352f026c92",
      "created_at": "2023-09-26T16:45:41Z"
    },
    {
      "event": "reviewed",
      "id": 1645987781,
      "node_id": "PRR_kwDOABII585iG8fF",
      "url": null,
      "actor": null,
      "commit_id": "2517862abb2c2e111c259ad2a6498e352f026c92",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 2517862abb2c2e111c259ad2a6498e352f026c92\r\n\r\nGreat job on moving the implementation code from the header file to disconnected_transactions.cpp. This was a necessary step, especially considering how significantly the code had grown.",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1645987781",
      "submitted_at": "2023-09-27T09:06:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10562007665,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ1i3Jx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10562007665",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "436f53fd5b2ac1b3d9e11634d7f690dd32598844",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/436f53fd5b2ac1b3d9e11634d7f690dd32598844",
      "created_at": "2023-10-05T10:56:23Z"
    },
    {
      "event": "commented",
      "id": 1748661730,
      "node_id": "IC_kwDOABII585oOnXi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1748661730",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-05T11:01:20Z",
      "updated_at": "2023-10-05T11:01:20Z",
      "author_association": "MEMBER",
      "body": "Added a commit to address review comment https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1346498993\r\n\r\nAnd rebased due to #28567  being merged for CI to be green",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1748661730",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10604644586,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ4Fgjq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10604644586",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "created_at": "2023-10-10T13:33:31Z"
    },
    {
      "event": "commented",
      "id": 1755448427,
      "node_id": "IC_kwDOABII585oogRr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1755448427",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-10T13:38:17Z",
      "updated_at": "2023-10-10T13:38:17Z",
      "author_association": "MEMBER",
      "body": "> Thanks for opening a followup! Did you want to pick up the memusage unit test too? ([9dcef47](https://github.com/bitcoin/bitcoin/commit/9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d) or a new one)\r\n\r\nAdded the the test.\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1755448427",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "reviewed",
      "id": 1667756758,
      "node_id": "PRR_kwDOABII585jZ_LW",
      "url": null,
      "actor": null,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1667756758",
      "submitted_at": "2023-10-10T13:40:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "labeled",
      "id": 10615607071,
      "node_id": "LE_lADOABII585x9AjyzwAAAAJ4vU8f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615607071",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:03:16Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "renamed",
      "id": 10615611866,
      "node_id": "RTE_lADOABII585x9AjyzwAAAAJ4vWHa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615611866",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:03:41Z",
      "rename": {
        "from": "Refactor: move DisconnectedBlockTransactions implementation code to disconnected_transactions.cpp",
        "to": "tests, refactor: DisconnectedBlockTransactions rewrite followups"
      }
    },
    {
      "event": "commented",
      "id": 1757204566,
      "node_id": "IC_kwDOABII585ovNBW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1757204566",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:05:13Z",
      "updated_at": "2023-10-11T09:05:13Z",
      "author_association": "MEMBER",
      "body": "cc @theuni @stickies-v who made some of the suggestions being addressed and reviewed the test previously",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1757204566",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "mentioned",
      "id": 10615629632,
      "node_id": "MEE_lADOABII585x9AjyzwAAAAJ4vadA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615629632",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:05:14Z"
    },
    {
      "event": "subscribed",
      "id": 10615629653,
      "node_id": "SE_lADOABII585x9AjyzwAAAAJ4vadV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615629653",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:05:14Z"
    },
    {
      "event": "mentioned",
      "id": 10615629675,
      "node_id": "MEE_lADOABII585x9AjyzwAAAAJ4vadr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615629675",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:05:14Z"
    },
    {
      "event": "subscribed",
      "id": 10615629687,
      "node_id": "SE_lADOABII585x9AjyzwAAAAJ4vad3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10615629687",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T09:05:14Z"
    },
    {
      "event": "reviewed",
      "id": 1674135076,
      "node_id": "PRR_kwDOABII585jyUYk",
      "url": null,
      "actor": null,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272\r\n\r\nEven though they're both correct and an improvement, I'd drop 6f5768d81272aeb81fd3660a26318be4e34ddd5e and 89c994acb1c12d02b072b66c7041b144fc65a6b4. For both, the fixups are arbitrary and incomplete (e.g. there are plenty of other places where we don't use list initialization in `validation.cpp`, so why are only these two being fixed? \"It's a follow-up\" is a bit of a wonky rationale. I'd say let's not do it, or do it consistently and ideally enforce it (which I don't think is suitable for this PR). Likewise for the clang-format fixes. Inconsistent style-only refactors are generally a hard sell.\r\n\r\nnote: I reviewed 72ebef1677a0ae61a1ca9dcde576553fb6e99fa6 with `--color-moved=zebra --color-moved-ws=\"allow-indentation-change\"` (always useful to mention those things in PR description to help reviewers be more productive)",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1674135076",
      "submitted_at": "2023-10-12T15:54:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "commented",
      "id": 1759978996,
      "node_id": "IC_kwDOABII585o5yX0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1759978996",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T16:40:34Z",
      "updated_at": "2023-10-12T16:40:34Z",
      "author_association": "MEMBER",
      "body": "Thanks for your review @stickies-v, will drop the commits as you suggested and address comments.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1759978996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "mentioned",
      "id": 10634103287,
      "node_id": "MEE_lADOABII585x9AjyzwAAAAJ514n3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10634103287",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T16:40:34Z"
    },
    {
      "event": "subscribed",
      "id": 10634103338,
      "node_id": "SE_lADOABII585x9AjyzwAAAAJ514oq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10634103338",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-12T16:40:34Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxZGZlZGRlYTcwYWU1ZmVlYWY3OTA2MjU4NWMyZmY5ZjMzYzBjYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81dfeddea70ae5feeaf79062585c2ff9f33c0ca3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81dfeddea70ae5feeaf79062585c2ff9f33c0ca3",
      "tree": {
        "sha": "5300ff3ddeeed52557c1d261d3b54f98dab9dba4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5300ff3ddeeed52557c1d261d3b54f98dab9dba4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4478418b24422885ae4d5c9a41a45455a72618",
          "sha": "5b4478418b24422885ae4d5c9a41a45455a72618",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4478418b24422885ae4d5c9a41a45455a72618"
        }
      ],
      "message": "refactor: update `MAX_DISCONNECTED_TX_POOL` from kb to bytes",
      "committer": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-13T13:25:37Z"
      },
      "author": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-09-25T12:00:52Z"
      },
      "sha": "81dfeddea70ae5feeaf79062585c2ff9f33c0ca3"
    },
    {
      "event": "reviewed",
      "id": 1671289917,
      "node_id": "PRR_kwDOABII585jndw9",
      "url": null,
      "actor": null,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1671289917",
      "submitted_at": "2023-10-13T13:54:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10645907876,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ6i6mk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10645907876",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d922c349a526c979ef613e5d36bb309b2299f29",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/6d922c349a526c979ef613e5d36bb309b2299f29",
      "created_at": "2023-10-13T15:50:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10646144916,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ6j0eU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10646144916",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8faa9800891c8b3eaef051ad9f0dc4d61475cebe",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/8faa9800891c8b3eaef051ad9f0dc4d61475cebe",
      "created_at": "2023-10-13T16:15:58Z"
    },
    {
      "event": "commented",
      "id": 1761790362,
      "node_id": "IC_kwDOABII585pAsma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1761790362",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-13T16:29:57Z",
      "updated_at": "2023-10-13T16:34:03Z",
      "author_association": "MEMBER",
      "body": "Force pushed https://github.com/bitcoin/bitcoin/commit/225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272 to 8faa980089\r\n- Dropped the first two commits.\r\n- Added missing include in `kernel/disconnected_transactions.cpp`.\r\n- Updated  https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1346498993 to destructure and capture the result of the emplace then assert.\r\n- Move the `kernel/disconnected_transactions.cpp` constructor back to header.\r\n- Removed the early return in [src/test/disconnected_transactions.cpp](https://github.com/bitcoin/bitcoin/pull/28530/files#diff-3cd57ed0ff682b234d9991ad80eaf492edd9f4b01f9ea822d6344fee0eac183f) since it passes on 32 bit.\r\n- Added a comment https://github.com/bitcoin/bitcoin/pull/28530/files#diff-3cd57ed0ff682b234d9991ad80eaf492edd9f4b01f9ea822d6344fee0eac183f to explain how `ENTRY_USAGE_OVERESTIMATE` is calculated.\r\n- Updated PR OP.\r\n\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1761790362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "commented",
      "id": 1762037778,
      "node_id": "IC_kwDOABII585pBpAS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1762037778",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-13T18:52:53Z",
      "updated_at": "2023-10-13T18:52:53Z",
      "author_association": "MEMBER",
      "body": "ACK the first 3 commits. I'll pass on re-reviewing the test commit and confusing myself about memory accounting again :)",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1762037778",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "reviewed",
      "id": 1679965520,
      "node_id": "PRR_kwDOABII585kIj1Q",
      "url": null,
      "actor": null,
      "commit_id": "8faa9800891c8b3eaef051ad9f0dc4d61475cebe",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1679965520",
      "submitted_at": "2023-10-18T12:23:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5ZWIyMTljMTI0Nzk5MzM3OGZjZTA2YzhmNzFhYWIyMDczNmMyMzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29eb219c1247993378fce06c8f71aab20736c237",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29eb219c1247993378fce06c8f71aab20736c237",
      "tree": {
        "sha": "f229fdcf6e095ee67a128c55990f07b0298a272e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f229fdcf6e095ee67a128c55990f07b0298a272e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81dfeddea70ae5feeaf79062585c2ff9f33c0ca3",
          "sha": "81dfeddea70ae5feeaf79062585c2ff9f33c0ca3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/81dfeddea70ae5feeaf79062585c2ff9f33c0ca3"
        }
      ],
      "message": "move only: move implementation code to disconnected_transactions.cpp",
      "committer": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-18T14:26:19Z"
      },
      "author": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-09-25T12:27:34Z"
      },
      "sha": "29eb219c1247993378fce06c8f71aab20736c237"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY0MjU0ZTIwOTgwMWQ2YTc5MGI1ZjBjMjUxYzBiMzIxNTRhNGUzY2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4254e209801d6a790b5f0c251c0b32154a4e3cc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f4254e209801d6a790b5f0c251c0b32154a4e3cc",
      "tree": {
        "sha": "3a31b352e054cb7d2b6c8eb7918ce85c74880231",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a31b352e054cb7d2b6c8eb7918ce85c74880231"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29eb219c1247993378fce06c8f71aab20736c237",
          "sha": "29eb219c1247993378fce06c8f71aab20736c237",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29eb219c1247993378fce06c8f71aab20736c237"
        }
      ],
      "message": "assume duplicate transactions are not added to `iters_by_txid`\n\nIn `AddTransactionsToBlock` description comment we have the asuumption\nthat callers will never pass multiple transactions with the same txid\nWe are asserting to assume that does not happen.",
      "committer": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-18T14:31:51Z"
      },
      "author": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-05T10:45:07Z"
      },
      "sha": "f4254e209801d6a790b5f0c251c0b32154a4e3cc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10695774091,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ9hI-L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10695774091",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3c00943bb7c3b7dcb7fb5485a9b4ef6a04221fa0",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/3c00943bb7c3b7dcb7fb5485a9b4ef6a04221fa0",
      "created_at": "2023-10-18T16:16:41Z"
    },
    {
      "event": "reviewed",
      "id": 1685593150,
      "node_id": "PRR_kwDOABII585keBw-",
      "url": null,
      "actor": null,
      "commit_id": "3c00943bb7c3b7dcb7fb5485a9b4ef6a04221fa0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1685593150",
      "submitted_at": "2023-10-18T16:40:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10696680867,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ9kmWj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10696680867",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "created_at": "2023-10-18T17:05:49Z"
    },
    {
      "event": "reviewed",
      "id": 1687744024,
      "node_id": "PRR_kwDOABII585kmO4Y",
      "url": null,
      "actor": null,
      "commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e9906c105dffbb864e8c5f7680334480cdd19cd9\r\n\r\nJust 2 nits, happy to quickly re-ack since no other acks yet.\r\n\r\nedit: PR description needs updating, would change title to `tests, bugfix` and add the bugfix in the description, as well as the \"assume duplicate transactions are not added to `iters_by_txid`\" commit",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1687744024",
      "submitted_at": "2023-10-19T13:32:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "review_requested",
      "id": 10712107720,
      "node_id": "RRE_lADOABII585x9AjyzwAAAAJ-fcrI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712107720",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:32:10Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10712107939,
      "node_id": "RRE_lADOABII585x9AjyzwAAAAJ-fcuj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712107939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:32:11Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10712108477,
      "node_id": "RRRE_lADOABII585x9AjyzwAAAAJ-fc29",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712108477",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:32:13Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10712108616,
      "node_id": "RRE_lADOABII585x9AjyzwAAAAJ-fc5I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712108616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:32:14Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10712134158,
      "node_id": "RRRE_lADOABII585x9AjyzwAAAAJ-fjIO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712134158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:34:06Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10712134320,
      "node_id": "RRE_lADOABII585x9AjyzwAAAAJ-fjKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10712134320",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T13:34:07Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10713314216,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ-kDOo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10713314216",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c4089559196e8263fa16d55bd85a920530eb382",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/2c4089559196e8263fa16d55bd85a920530eb382",
      "created_at": "2023-10-19T14:55:56Z"
    },
    {
      "event": "renamed",
      "id": 10713365024,
      "node_id": "RTE_lADOABII585x9AjyzwAAAAJ-kPog",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10713365024",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T14:59:23Z",
      "rename": {
        "from": "tests, refactor: DisconnectedBlockTransactions rewrite followups",
        "to": "tests, bug fix: DisconnectedBlockTransactions rewrite followups"
      }
    },
    {
      "event": "reviewed",
      "id": 1688005954,
      "node_id": "PRR_kwDOABII585knO1C",
      "url": null,
      "actor": null,
      "commit_id": "2c4089559196e8263fa16d55bd85a920530eb382",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1688005954",
      "submitted_at": "2023-10-19T15:07:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyZDA0NDc5NjQ3YWY2NGFkN2NmNWViZmI2MTc1MjUxYjJmNmI3MmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2d04479647af64ad7cf5ebfb6175251b2f6b72e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b2d04479647af64ad7cf5ebfb6175251b2f6b72e",
      "tree": {
        "sha": "15591e1ee910e98892801574264bbbd753df50e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15591e1ee910e98892801574264bbbd753df50e5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4254e209801d6a790b5f0c251c0b32154a4e3cc",
          "sha": "f4254e209801d6a790b5f0c251c0b32154a4e3cc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f4254e209801d6a790b5f0c251c0b32154a4e3cc"
        }
      ],
      "message": "bugfix: correct DisconnectedBlockTransactions memory usage\n\nWith `queuedTx` owning the `CTransactionRef` shared ptrs, they (and\nthe managed objects) are entirely allocated on the heap. In\n`DisconnectedBlockTransactions::DynamicMemoryUsage`, we account for\nthe 2 pointers that make up the shared_ptr, but not for the managed\nobject (CTransaction) or the control block.\n\nPrior to this commit, by calculating the `RecursiveDynamicUsage` on\na `CTransaction` whenever modifying `cachedInnerUsage`, we account\nfor the dynamic usage of the `CTransaction`, i.e. the `vins` and\n`vouts` vectors, but we do not account for the `CTransaction`\nobject itself, nor for the `CTransactionRef` control block.\n\nThis means prior to this commit, `DynamicMemoryUsage` underestimates\ndynamic memory usage by not including the `CTransaction` objects and\nthe shared ptr control blocks.\n\nFix this by calculating `RecursiveDynamicUsage` on the\n`CTransactionRef` instead of the `CTransaction` whenever modifying\n`cachedInnerUsage`.",
      "committer": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-19T15:14:36Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2023-10-18T10:38:45Z"
      },
      "sha": "b2d04479647af64ad7cf5ebfb6175251b2f6b72e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliM2RhNzBiZDA2YjQ1NDgyZTcyMTFhYTk1NjM3YTcyYmQxMTU1NTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b3da70bd06b45482e7211aa95637a72bd115553",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b3da70bd06b45482e7211aa95637a72bd115553",
      "tree": {
        "sha": "7cac8e13c0c65f07f9eebbca0f41ba2ef7f23194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cac8e13c0c65f07f9eebbca0f41ba2ef7f23194"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2d04479647af64ad7cf5ebfb6175251b2f6b72e",
          "sha": "b2d04479647af64ad7cf5ebfb6175251b2f6b72e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b2d04479647af64ad7cf5ebfb6175251b2f6b72e"
        }
      ],
      "message": "[test] DisconnectedBlockTransactions::DynamicMemoryUsage",
      "committer": {
        "name": "ismaelsadeeq",
        "email": "ask4ismailsadiq@gmail.com",
        "date": "2023-10-19T15:14:36Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-09-07T07:40:34Z"
      },
      "sha": "9b3da70bd06b45482e7211aa95637a72bd115553"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10713584184,
      "node_id": "HRFPE_lADOABII585x9AjyzwAAAAJ-lFI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10713584184",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/9b3da70bd06b45482e7211aa95637a72bd115553",
      "created_at": "2023-10-19T15:15:32Z"
    },
    {
      "event": "commented",
      "id": 1771360048,
      "node_id": "IC_kwDOABII585plM8w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1771360048",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T16:44:56Z",
      "updated_at": "2023-10-19T16:44:56Z",
      "author_association": "MEMBER",
      "body": "\r\n> edit: PR description needs updating, would change title to `tests, bugfix` and add the bugfix in the description, as well as the \"assume duplicate transactions are not added to `iters_by_txid`\" commit\r\n\r\nThank you @stickies-v , I updated the PR description and address review comments.\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#issuecomment-1771360048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28530"
    },
    {
      "event": "mentioned",
      "id": 10714662280,
      "node_id": "MEE_lADOABII585x9AjyzwAAAAJ-pMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10714662280",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T16:44:56Z"
    },
    {
      "event": "subscribed",
      "id": 10714662293,
      "node_id": "SE_lADOABII585x9AjyzwAAAAJ-pMWV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10714662293",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T16:44:56Z"
    },
    {
      "event": "reviewed",
      "id": 1688509183,
      "node_id": "PRR_kwDOABII585kpJr_",
      "url": null,
      "actor": null,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9b3da70bd06b45482e7211aa95637a72bd115553 - nice work!",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1688509183",
      "submitted_at": "2023-10-19T19:33:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "review_request_removed",
      "id": 10716213589,
      "node_id": "RRRE_lADOABII585x9AjyzwAAAAJ-vHFV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10716213589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T19:33:42Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10716213674,
      "node_id": "RRE_lADOABII585x9AjyzwAAAAJ-vHGq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10716213674",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T19:33:43Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1689711485,
      "node_id": "PRR_kwDOABII585ktvN9",
      "url": null,
      "actor": null,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ACK 9b3da70bd06b45482e7211aa95637a72bd115553",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1689711485",
      "submitted_at": "2023-10-20T10:18:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "reviewed",
      "id": 1709976459,
      "node_id": "PRR_kwDOABII585l7CuL",
      "url": null,
      "actor": null,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 9b3da70bd06b45482e7211aa95637a72bd115553",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#pullrequestreview-1709976459",
      "submitted_at": "2023-11-02T11:07:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
    },
    {
      "event": "merged",
      "id": 10842560958,
      "node_id": "ME_lADOABII585x9AjyzwAAAAKGRFm-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10842560958",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "023418a140b05b788b45fcb66bdd4832c08db751",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/023418a140b05b788b45fcb66bdd4832c08db751",
      "created_at": "2023-11-02T11:13:04Z"
    },
    {
      "event": "closed",
      "id": 10842560982,
      "node_id": "CE_lADOABII585x9AjyzwAAAAKGRFnW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10842560982",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-02T11:13:04Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 13315617723,
      "node_id": "HRDE_lADOABII585x9AjyzwAAAAMZrDO7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13315617723",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T11:16:31Z"
    },
    {
      "event": "locked",
      "id": 18355663957,
      "node_id": "LOE_lADOABII585x9AjyzwAAAARGFTRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18355663957",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-27T11:33:46Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336094386",
      "pull_request_review_id": 1642517394,
      "id": 1336094386,
      "node_id": "PRRC_kwDOABII585Poy6y",
      "diff_hunk": "@@ -36,50 +34,27 @@ static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n  * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n  * list to the front without running into missing inputs.\n  */\n-class DisconnectedBlockTransactions {\n+class DisconnectedBlockTransactions\n+{\n private:",
      "path": "src/kernel/disconnected_transactions.h",
      "position": 23,
      "original_position": 27,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can delete this too, since it's a class",
      "created_at": "2023-09-25T15:58:09Z",
      "updated_at": "2023-09-26T12:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1336094386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336094386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336095581",
      "pull_request_review_id": 1642517394,
      "id": 1336095581,
      "node_id": "PRRC_kwDOABII585PozNd",
      "diff_hunk": "@@ -36,50 +34,27 @@ static const unsigned int MAX_DISCONNECTED_TX_POOL_SIZE = 20'000;\n  * of the list. After trimming, transactions can be re-added to the mempool from the back of the\n  * list to the front without running into missing inputs.\n  */\n-class DisconnectedBlockTransactions {\n+class DisconnectedBlockTransactions\n+{\n private:\n     /** Cached dynamic memory usage for the CTransactions (memory for the shared pointers is\n      * included in the container calculations). */\n-    uint64_t cachedInnerUsage = 0;\n+    uint64_t cachedInnerUsage{0};\n+    /* Maximum memory usage in bytes of the transactions stored  */",
      "path": "src/kernel/disconnected_transactions.h",
      "position": null,
      "original_position": 32,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A bit more accurate:\r\n```suggestion\r\n    /* Maximum allowed total DynamicMemoryUsage, in bytes. To be enforced in AddTransactionsFromBlock.  */\r\n```",
      "created_at": "2023-09-25T15:59:06Z",
      "updated_at": "2023-09-26T12:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1336095581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336095581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336128164",
      "pull_request_review_id": 1642517394,
      "id": 1336128164,
      "node_id": "PRRC_kwDOABII585Po7Kk",
      "diff_hunk": "",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "original_commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Question: what's the benefit of moving to cpp file? I thought maybe it saves users from including some things, but it seems about the same.",
      "created_at": "2023-09-25T16:25:12Z",
      "updated_at": "2023-09-26T12:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1336128164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336128164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337400713",
      "pull_request_review_id": 1644579236,
      "id": 1337400713,
      "node_id": "PRRC_kwDOABII585Ptx2J",
      "diff_hunk": "",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "original_commit_id": "8c315c754137f491b2ec63de86393d20eeaaf7c3",
      "in_reply_to_id": 1336128164,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Motivation is from @stickies-v  review comment https://github.com/bitcoin/bitcoin/pull/28385#pullrequestreview-1629400522\r\nIts a better practice to have interfaces in a `.h` and implementation code in `.cpp` file, allows for more efficient compilation by preventing redundant recompilation of unchanged code, ensuring faster build times I think.\r\n\r\nI dont think there will be need to have implementation code in the header files.\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization",
      "created_at": "2023-09-26T15:24:40Z",
      "updated_at": "2023-09-26T15:24:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1337400713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337400713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352548693",
      "pull_request_review_id": 1667756758,
      "id": 1352548693,
      "node_id": "PRRC_kwDOABII585QnkFV",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@glozow \r\nthe `ENTRY_USAGE_OVERESTIMATE` in https://github.com/bitcoin/bitcoin/commit/9dcef47e4d52b15ffe88be7ddf5ea626121e5f0d is a bit much and two transaction are being added to `disconnectpool` for the first  test that check that its big enough for one transaction.\r\nSo reduced the overestimate to `TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*)`",
      "created_at": "2023-10-10T13:40:32Z",
      "updated_at": "2023-10-10T13:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1352548693",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352548693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352583664",
      "pull_request_review_id": 1667812094,
      "id": 1352583664,
      "node_id": "PRRC_kwDOABII585Qnsnw",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1352548693,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Makes sense to me - the numbers were a little bit off when I originally wrote that test. Thanks for fixing :+1: ",
      "created_at": "2023-10-10T14:04:17Z",
      "updated_at": "2023-10-10T14:04:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1352583664",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352583664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355039645",
      "pull_request_review_id": 1671289917,
      "id": 1355039645,
      "node_id": "PRRC_kwDOABII585QxEOd",
      "diff_hunk": "",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "original_commit_id": "436f53fd5b2ac1b3d9e11634d7f690dd32598844",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit on 436f53fd5b2ac1b3d9e11634d7f690dd32598844 commit message: it's not \"ensure\" so much as \"assume\"",
      "created_at": "2023-10-11T13:46:47Z",
      "updated_at": "2023-10-13T13:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1355039645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355039645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355050588",
      "pull_request_review_id": 1671289917,
      "id": 1355050588,
      "node_id": "PRRC_kwDOABII585QxG5c",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        cachedInnerUsage += RecursiveDynamicUsage(**block_it);\n+    }\n+    return LimitMemoryUsage();\n+}\n+\n+void DisconnectedBlockTransactions::removeForBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    // Short-circuit in the common case of a block being added to the tip\n+    if (queuedTx.empty()) {\n+        return;\n+    }\n+    for (const auto& tx : vtx) {\n+        auto iter{iters_by_txid.find(tx->GetHash())};\n+        if (iter != iters_by_txid.end()) {\n+            auto list_iter{iter->second};\n+            iters_by_txid.erase(iter);\n+            cachedInnerUsage -= RecursiveDynamicUsage(**list_iter);\n+            queuedTx.erase(list_iter);\n+        }\n+    }\n+}\n+\n+void DisconnectedBlockTransactions::clear()\n+{\n+    cachedInnerUsage = 0;\n+    iters_by_txid.clear();\n+    queuedTx.clear();\n+}\n+\n+std::list<CTransactionRef> DisconnectedBlockTransactions::take()\n+{\n+    std::list<CTransactionRef> ret{std::move(queuedTx)};\n+    clear();\n+    return ret;\n+}",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "72ebef1677a0ae61a1ca9dcde576553fb6e99fa6",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "72ebef1677a0ae61a1ca9dcde576553fb6e99fa6 newline?",
      "created_at": "2023-10-11T13:54:22Z",
      "updated_at": "2023-10-13T13:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1355050588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1355050588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356794101",
      "pull_request_review_id": 1674135076,
      "id": 1356794101,
      "node_id": "PRRC_kwDOABII585Q3wj1",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "iwyu [says](https://api.cirrus-ci.com/v1/task/6063597319618560/logs/ci.log):\r\n\r\n\r\n```\r\nkernel/disconnected_transactions.cpp should add these lines:\r\n#include <assert.h>                  // for assert\r\n#include <algorithm>                 // for max\r\n#include <memory>                    // for __shared_ptr_access, shared_ptr\r\n#include <utility>                   // for move, pair\r\n#include \"memusage.h\"                // for DynamicUsage\r\n#include \"primitives/transaction.h\"  // for CTransactionRef, CTransaction\r\n#include \"util/hasher.h\"             // for SaltedTxidHasher\r\n```",
      "created_at": "2023-10-12T13:09:12Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356794101",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356794101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356806566",
      "pull_request_review_id": 1674135076,
      "id": 1356806566,
      "node_id": "PRRC_kwDOABII585Q3zmm",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        auto emplace_result = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(emplace_result.second);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\r\n        assert(inserted);  // callers may never pass multiple transactions with the same txid\r\n```",
      "created_at": "2023-10-12T13:15:51Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356806566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356806566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356827417",
      "pull_request_review_id": 1674135076,
      "id": 1356827417,
      "node_id": "PRRC_kwDOABII585Q34sZ",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure this is worth moving, would just leave in the header",
      "created_at": "2023-10-12T13:28:46Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356827417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356827417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356847691",
      "pull_request_review_id": 1674135076,
      "id": 1356847691,
      "node_id": "PRRC_kwDOABII585Q39pL",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We're not actually exiting though?\r\n\r\n```suggestion\r\n        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\r\n        return;\r\n```",
      "created_at": "2023-10-12T13:42:24Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356847691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356847691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356863523",
      "pull_request_review_id": 1674135076,
      "id": 1356863523,
      "node_id": "PRRC_kwDOABII585Q4Bgj",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think these numbers need to be better documented. I think this means that we're overestimating by 8 pointers? Why 8? Why do we need a safety margin? Labeling assumptions would be helpful to (future) reviewers.\r\n\r\nAlternatively, would it make sense to use a relative safety margin (i.e. TX_USAGE * 1.1) instead of an absolute one?",
      "created_at": "2023-10-12T13:51:34Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356863523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356863523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356866786",
      "pull_request_review_id": 1674135076,
      "id": 1356866786,
      "node_id": "PRRC_kwDOABII585Q4CTi",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit (in other places too):\r\n```suggestion\r\n        auto evicted_txns{disconnectpool.AddTransactionsFromBlock(two_txns)};\r\n```",
      "created_at": "2023-10-12T13:53:08Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356866786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356866786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356870250",
      "pull_request_review_id": 1674135076,
      "id": 1356870250,
      "node_id": "PRRC_kwDOABII585Q4DJq",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't really understand this docstring, what does it mean?",
      "created_at": "2023-10-12T13:55:06Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1356870250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1356870250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357025332",
      "pull_request_review_id": 1674135076,
      "id": 1357025332,
      "node_id": "PRRC_kwDOABII585Q4pA0",
      "diff_hunk": "",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note for other reviewers: these are the memory allocation numbers I'm getting on my machine:\r\n\r\n```\r\n(lldb) p MAP_1\r\n(const size_t) 32\r\n(lldb) p MAP_100\r\n(const size_t) 832\r\n(lldb) p TX_USAGE\r\n(const size_t) 640\r\n(lldb) p ENTRY_USAGE_OVERESTIMATE\r\n(const size_t) 896\r\n```",
      "created_at": "2023-10-12T15:44:11Z",
      "updated_at": "2023-10-18T14:06:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1357025332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357025332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357036001",
      "pull_request_review_id": 1674135076,
      "id": 1357036001,
      "node_id": "PRRC_kwDOABII585Q4rnh",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_1 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+        // Transactions are added from back to front and eviction is FIFO.\n+        BOOST_CHECK_EQUAL(block_vtx.at(1), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\n+    // Record usage so we can check size limiting in the next test.\n+    size_t usage_full{0};\n+    {\n+        const size_t USAGE_100_OVERESTIMATE{MAP_100 + ENTRY_USAGE_OVERESTIMATE * 100};\n+        DisconnectedBlockTransactions disconnectpool{USAGE_100_OVERESTIMATE};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= USAGE_100_OVERESTIMATE);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a good test to have but arguably not a `disconnectpool_memory_limits`. I think this could be a separate test case (and i also wouldn't be opposed to unit testing the rest of the interface, i.e. `AddTransactionsFromBlock`, `removeForBlock`, `take`, `clear`.",
      "created_at": "2023-10-12T15:52:57Z",
      "updated_at": "2023-10-12T15:54:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1357036001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1357036001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": 87,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358293479",
      "pull_request_review_id": 1671289917,
      "id": 1358293479,
      "node_id": "PRRC_kwDOABII585Q9enn",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356847691,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Well the good news is it looks like it passes on 32bit, so maybe just remove this block?",
      "created_at": "2023-10-13T13:48:09Z",
      "updated_at": "2023-10-13T13:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358293479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358293479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358298767",
      "pull_request_review_id": 1671289917,
      "id": 1358298767,
      "node_id": "PRRC_kwDOABII585Q9f6P",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356870250,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant don't pass in all 100 transactions because the memory usage won't be what we expect and iirc all of them will be evicted. The function works by first allocating 100 buckets, adding all of the transactions, and then trimming. If we add all 100, there's much more overhead and we end up not having room for anything.",
      "created_at": "2023-10-13T13:51:56Z",
      "updated_at": "2023-10-13T13:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358298767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358298767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358301740",
      "pull_request_review_id": 1671289917,
      "id": 1358301740,
      "node_id": "PRRC_kwDOABII585Q9gos",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356863523,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The 8 pointers isn't to create an overestimation margin, it's to account for the approximate usage of the data structures (pointers in the list nodes, etc.)",
      "created_at": "2023-10-13T13:54:25Z",
      "updated_at": "2023-10-13T13:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358301740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358301740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358347902",
      "pull_request_review_id": 1676636051,
      "id": 1358347902,
      "node_id": "PRRC_kwDOABII585Q9r5-",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356863523,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe a comment like this would suffice?\r\n```\r\n// Our overall formula is unordered map overhead + usage per entry.\r\n// Implementations may vary, but we're trying to guess the usage of data structures:\r\n// list: per entry x (2 pointers + element itself, which is a CTransactionRef)\r\n// unordered map: hashtable overhead + per entry x (3 pointers + value itself, which is an iterator)\r\n// Usage per entry is thus approximately `TX_USAGE` + 6 pointers. Add another 2 pointers as a safety margin.\r\n```",
      "created_at": "2023-10-13T14:31:58Z",
      "updated_at": "2023-10-13T14:31:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358347902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358347902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358440407",
      "pull_request_review_id": 1676784440,
      "id": 1358440407,
      "node_id": "PRRC_kwDOABII585Q-CfX",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        auto emplace_result = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(emplace_result.second);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356806566,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed but Ive used used, `already_exist`  instead since that what the boolean represent and what cpp reference describe the boolean",
      "created_at": "2023-10-13T15:51:21Z",
      "updated_at": "2023-10-13T15:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358440407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358440407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358440629",
      "pull_request_review_id": 1676784829,
      "id": 1358440629,
      "node_id": "PRRC_kwDOABII585Q-Ci1",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356847691,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2023-10-13T15:51:36Z",
      "updated_at": "2023-10-13T15:51:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358440629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358440629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358443133",
      "pull_request_review_id": 1676788845,
      "id": 1358443133,
      "node_id": "PRRC_kwDOABII585Q-DJ9",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356863523,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added the comment but I think, its word to also explain whats the pointers represent\r\n```\r\n// Our overall formula is unordered map overhead + usage per entry.\r\n// Implementations may vary, but we're trying to guess the usage of data structures:\r\n// list: per entry x (2 pointers (prev, next) + element itself, which is a CTransactionRef)\r\n// unordered map: hashtable overhead + per entry x (3 pointers (key, value, internal structure for book keeping) + value itself, which is an iterator)\r\n// Usage per entry is thus approximately `TX_USAGE` + 6 pointers. Add another 2 pointers as a safety margin.\r\n```\r\nBut not so sure if its correct for unordered map, I added as you suggested, if you think the explanation is worth it happy to repush",
      "created_at": "2023-10-13T15:54:11Z",
      "updated_at": "2023-10-13T16:10:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358443133",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358443133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358443450",
      "pull_request_review_id": 1676789372,
      "id": 1358443450,
      "node_id": "PRRC_kwDOABII585Q-DO6",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356866786,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed thank you",
      "created_at": "2023-10-13T15:54:27Z",
      "updated_at": "2023-10-13T15:54:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358443450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358443450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358446052",
      "pull_request_review_id": 1676793255,
      "id": 1358446052,
      "node_id": "PRRC_kwDOABII585Q-D3k",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        auto emplace_result = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(emplace_result.second);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356806566,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[I don't think so](https://en.cppreference.com/w/cpp/container/unordered_map/emplace)?\r\n\r\n> Returns a pair consisting of an iterator to the inserted element, or the already-existing element if no insertion happened, and a bool denoting whether the insertion took place (true if insertion happened, false if it did not).\r\n\r\nConceptually, we exactly want to ensure that the txid does _not_ exist yet, which is the opposite of what you're stating now.",
      "created_at": "2023-10-13T15:55:53Z",
      "updated_at": "2023-10-13T15:55:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358446052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358446052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447526",
      "pull_request_review_id": 1676795657,
      "id": 1358447526,
      "node_id": "PRRC_kwDOABII585Q-EOm",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_1 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+        // Transactions are added from back to front and eviction is FIFO.\n+        BOOST_CHECK_EQUAL(block_vtx.at(1), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\n+    // Record usage so we can check size limiting in the next test.\n+    size_t usage_full{0};\n+    {\n+        const size_t USAGE_100_OVERESTIMATE{MAP_100 + ENTRY_USAGE_OVERESTIMATE * 100};\n+        DisconnectedBlockTransactions disconnectpool{USAGE_100_OVERESTIMATE};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= USAGE_100_OVERESTIMATE);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1357036001,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this checks the order in which transaction are evicted, do you think it should be in its own commit?",
      "created_at": "2023-10-13T15:57:22Z",
      "updated_at": "2023-10-13T16:17:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358447526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": 87,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447666",
      "pull_request_review_id": 1676795901,
      "id": 1358447666,
      "node_id": "PRRC_kwDOABII585Q-EQy",
      "diff_hunk": "",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "original_commit_id": "436f53fd5b2ac1b3d9e11634d7f690dd32598844",
      "in_reply_to_id": 1355039645,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks updated",
      "created_at": "2023-10-13T15:57:32Z",
      "updated_at": "2023-10-13T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358447666",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447931",
      "pull_request_review_id": 1676796319,
      "id": 1358447931,
      "node_id": "PRRC_kwDOABII585Q-EU7",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        cachedInnerUsage += RecursiveDynamicUsage(**block_it);\n+    }\n+    return LimitMemoryUsage();\n+}\n+\n+void DisconnectedBlockTransactions::removeForBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    // Short-circuit in the common case of a block being added to the tip\n+    if (queuedTx.empty()) {\n+        return;\n+    }\n+    for (const auto& tx : vtx) {\n+        auto iter{iters_by_txid.find(tx->GetHash())};\n+        if (iter != iters_by_txid.end()) {\n+            auto list_iter{iter->second};\n+            iters_by_txid.erase(iter);\n+            cachedInnerUsage -= RecursiveDynamicUsage(**list_iter);\n+            queuedTx.erase(list_iter);\n+        }\n+    }\n+}\n+\n+void DisconnectedBlockTransactions::clear()\n+{\n+    cachedInnerUsage = 0;\n+    iters_by_txid.clear();\n+    queuedTx.clear();\n+}\n+\n+std::list<CTransactionRef> DisconnectedBlockTransactions::take()\n+{\n+    std::list<CTransactionRef> ret{std::move(queuedTx)};\n+    clear();\n+    return ret;\n+}",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "72ebef1677a0ae61a1ca9dcde576553fb6e99fa6",
      "in_reply_to_id": 1355050588,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added 💯 ",
      "created_at": "2023-10-13T15:57:48Z",
      "updated_at": "2023-10-13T15:57:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358447931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358447931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358449113",
      "pull_request_review_id": 1676798141,
      "id": 1358449113,
      "node_id": "PRRC_kwDOABII585Q-EnZ",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356827417,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "its now in the header thanks",
      "created_at": "2023-10-13T15:58:34Z",
      "updated_at": "2023-10-13T15:58:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358449113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358449113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358463515",
      "pull_request_review_id": 1676818773,
      "id": 1358463515,
      "node_id": "PRRC_kwDOABII585Q-IIb",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>\n+\n+DisconnectedBlockTransactions::DisconnectedBlockTransactions(size_t max_mem_usage)\n+    : m_max_mem_usage{max_mem_usage} {}\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};\n+        auto emplace_result = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(emplace_result.second);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356806566,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes you are right, my bad.\r\nupdated",
      "created_at": "2023-10-13T16:07:16Z",
      "updated_at": "2023-10-13T16:16:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358463515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358463515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358476196",
      "pull_request_review_id": 1676836228,
      "id": 1358476196,
      "node_id": "PRRC_kwDOABII585Q-LOk",
      "diff_hunk": "@@ -0,0 +1,86 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <core_memusage.h>",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356794101,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added Thanks",
      "created_at": "2023-10-13T16:16:28Z",
      "updated_at": "2023-10-13T16:16:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1358476196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1358476196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360652324",
      "pull_request_review_id": 1679965520,
      "id": 1360652324,
      "node_id": "PRRC_kwDOABII585RGegk",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <assert.h> // for assert",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "8faa9800891c8b3eaef051ad9f0dc4d61475cebe",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we don't mention these `// for ...` usage statements because they are cumbersome to maintain manually",
      "created_at": "2023-10-16T13:16:32Z",
      "updated_at": "2023-10-18T12:23:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1360652324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360652324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360656141",
      "pull_request_review_id": 1679965520,
      "id": 1360656141,
      "node_id": "PRRC_kwDOABII585RGfcN",
      "diff_hunk": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <assert.h> // for assert",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "8faa9800891c8b3eaef051ad9f0dc4d61475cebe",
      "in_reply_to_id": 1360652324,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also, we generally first include the \"own\" header, then the project headers, then the stdlib headers, so that would mean:\r\n\r\n```cpp\r\n#include <kernel/disconnected_transactions.h>\r\n\r\n#include <assert.h>\r\n#include <core_memusage.h>\r\n#include <memusage.h>\r\n#include <primitives/transaction.h>\r\n#include <util/hasher.h>\r\n\r\n#include <memory>\r\n#include <utility>\r\n```",
      "created_at": "2023-10-16T13:19:34Z",
      "updated_at": "2023-10-18T12:23:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1360656141",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360656141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360662329",
      "pull_request_review_id": 1679965520,
      "id": 1360662329,
      "node_id": "PRRC_kwDOABII585RGg85",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <assert.h> // for assert\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <memory>     // for __shared_ptr_access, shared_ptr\n+#include <memusage.h> // for DynamicUsage\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+#include <utility> // for move, pair\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "6d1948a08cc1a4792d77e3de6820754e5dc67698",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is not a move-only change (list initialization). Same [here](https://github.com/bitcoin/bitcoin/pull/28530/commits/6d1948a08cc1a4792d77e3de6820754e5dc67698#diff-c453a52b2f97617d542ca32879371edc366fbef85d4e9cbc39bea1762959bce9R84) and [here](https://github.com/bitcoin/bitcoin/pull/28530/commits/6d1948a08cc1a4792d77e3de6820754e5dc67698#diff-c453a52b2f97617d542ca32879371edc366fbef85d4e9cbc39bea1762959bce9R65-R67). You can check this yourself by inspecting the commit with `--color-moved=zebra  --color-moved-ws=\"allow-indentation-change\"`. Would revert the list initialization change.",
      "created_at": "2023-10-16T13:24:20Z",
      "updated_at": "2023-10-18T12:23:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1360662329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360662329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363744503",
      "pull_request_review_id": 1679965520,
      "id": 1363744503,
      "node_id": "PRRC_kwDOABII585RSRb3",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356863523,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In combination with [the fix suggested here](https://github.com/bitcoin/bitcoin/pull/28385#discussion_r1363659227), what do you think about this?\r\n\r\nIt makes all the assumptions explicit in code (except for the pointers which are documented in docstring). It also removes the safety margin. I think we can leave that out until/if we observe it causing issues, e.g. on certain platforms?\r\n\r\n<details>\r\n<summary>git diff on 8faa9800891c8b3eaef051ad9f0dc4d61475cebe</summary>\r\n\r\n```diff\r\ndiff --git a/src/test/disconnected_transactions.cpp b/src/test/disconnected_transactions.cpp\r\nindex b488866a37..bae9850de9 100644\r\n--- a/src/test/disconnected_transactions.cpp\r\n+++ b/src/test/disconnected_transactions.cpp\r\n@@ -34,10 +34,14 @@ BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\r\n \r\n     // Our overall formula is unordered map overhead + usage per entry.\r\n     // Implementations may vary, but we're trying to guess the usage of data structures:\r\n-    // list: per entry x (2 pointers (next pointer and prev pointer) + element itself, which is a CTransactionRef)\r\n-    // unordered map: hashtable overhead + per entry x (3 pointers + value itself, which is an iterator)\r\n-    // Usage per entry is thus approximately `TX_USAGE` + 6 pointers. Add another 2 pointers as a safety margin.\r\n-    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\r\n+    const size_t ENTRY_USAGE_OVERESTIMATE{\r\n+        TX_USAGE\r\n+        // list entry: 2 pointers (next pointer and prev pointer) + element itself\r\n+        + memusage::MallocUsage((2 * sizeof(void*)) + sizeof(decltype(block_vtx)::value_type))\r\n+        // unordered map: 1 pointer for the hashtable + key and value\r\n+        + memusage::MallocUsage(sizeof(void*) + sizeof(decltype(temp_map)::key_type)\r\n+                                + sizeof(decltype(temp_map)::value_type))\r\n+    };\r\n \r\n     // DisconnectedBlockTransactions that's just big enough for 1 transaction.\r\n     {\r\n\r\n```\r\n<details>",
      "created_at": "2023-10-18T12:02:38Z",
      "updated_at": "2023-10-18T12:23:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1363744503",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363744503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363785879",
      "pull_request_review_id": 1679965520,
      "id": 1363785879,
      "node_id": "PRRC_kwDOABII585RSbiX",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356870250,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Okay, that makes sense. I didn't understand what the alternative was or what the allocation referred to exactly, so here's a suggestion to make this more explicit:\r\n```\r\n        // Add just 2 (and not all 100) transactions to keep the unordered map's hashtable overhead\r\n        // to a minimum and avoid all (instead of all but 1) transactions getting evicted\r\n```",
      "created_at": "2023-10-18T12:22:02Z",
      "updated_at": "2023-10-18T12:23:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1363785879",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363785879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363790049",
      "pull_request_review_id": 1679965520,
      "id": 1363790049,
      "node_id": "PRRC_kwDOABII585RScjh",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_1 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+        // Transactions are added from back to front and eviction is FIFO.\n+        BOOST_CHECK_EQUAL(block_vtx.at(1), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\n+    // Record usage so we can check size limiting in the next test.\n+    size_t usage_full{0};\n+    {\n+        const size_t USAGE_100_OVERESTIMATE{MAP_100 + ENTRY_USAGE_OVERESTIMATE * 100};\n+        DisconnectedBlockTransactions disconnectpool{USAGE_100_OVERESTIMATE};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= USAGE_100_OVERESTIMATE);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1357036001,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's fine to have just a single test commit here. Testing the interface just could use a separate test from the memory management test.",
      "created_at": "2023-10-18T12:23:35Z",
      "updated_at": "2023-10-18T12:23:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1363790049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1363790049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": 87,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364161799",
      "pull_request_review_id": 1685532670,
      "id": 1364161799,
      "node_id": "PRRC_kwDOABII585RT3UH",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356863523,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added together with a clarification comment that we should overestimate if their is issues on other platform",
      "created_at": "2023-10-18T16:18:51Z",
      "updated_at": "2023-10-18T16:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364161799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364161799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364164143",
      "pull_request_review_id": 1685536155,
      "id": 1364164143,
      "node_id": "PRRC_kwDOABII585RT34v",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1356870250,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added thank you.",
      "created_at": "2023-10-18T16:19:57Z",
      "updated_at": "2023-10-18T16:19:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364164143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364164143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364166193",
      "pull_request_review_id": 1685539305,
      "id": 1364166193,
      "node_id": "PRRC_kwDOABII585RT4Yx",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_1 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+        // Transactions are added from back to front and eviction is FIFO.\n+        BOOST_CHECK_EQUAL(block_vtx.at(1), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\n+    // Record usage so we can check size limiting in the next test.\n+    size_t usage_full{0};\n+    {\n+        const size_t USAGE_100_OVERESTIMATE{MAP_100 + ENTRY_USAGE_OVERESTIMATE * 100};\n+        DisconnectedBlockTransactions disconnectpool{USAGE_100_OVERESTIMATE};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= USAGE_100_OVERESTIMATE);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1357036001,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the test, I will like to limit this to `disconnectpool_memory_limits` test.",
      "created_at": "2023-10-18T16:21:11Z",
      "updated_at": "2023-10-18T16:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364166193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364166193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": 87,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364167270",
      "pull_request_review_id": 1685541032,
      "id": 1364167270,
      "node_id": "PRRC_kwDOABII585RT4pm",
      "diff_hunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <assert.h> // for assert\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <memory>     // for __shared_ptr_access, shared_ptr\n+#include <memusage.h> // for DynamicUsage\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+#include <utility> // for move, pair\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it{vtx.rbegin()}; block_it != vtx.rend(); ++block_it) {\n+        auto it{queuedTx.insert(queuedTx.end(), *block_it)};",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "6d1948a08cc1a4792d77e3de6820754e5dc67698",
      "in_reply_to_id": 1360662329,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks removed",
      "created_at": "2023-10-18T16:21:45Z",
      "updated_at": "2023-10-18T16:21:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364167270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364167270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364195945",
      "pull_request_review_id": 1685593150,
      "id": 1364195945,
      "node_id": "PRRC_kwDOABII585RT_pp",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    // Our overall formula is unordered map overhead + usage per entry.\n+    // Implementations may vary, but we're trying to guess the usage of data structures.\n+    // No safety margin is added. It is assumed that this is an accurate guess. If this\n+    // estimate causes issues on other platforms, then we may consider adding an additional\n+    // pointer as safety margin.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "3c00943bb7c3b7dcb7fb5485a9b4ef6a04221fa0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't know how useful this comment is. For `ENTRY_USAGE_ESTIMATE`, we're just hardcoding how we calculate things in `memusage`, so this should always match, I think? I'd be fine removing it tbh.",
      "created_at": "2023-10-18T16:36:53Z",
      "updated_at": "2023-10-18T16:40:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364195945",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364195945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364196987",
      "pull_request_review_id": 1685593150,
      "id": 1364196987,
      "node_id": "PRRC_kwDOABII585RT_57",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    if (sizeof(void*) != 8) {\n+        BOOST_TEST_MESSAGE(\"Exiting disconnected_transactions memory usage test early due to unsupported arch\");\n+    }\n+\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    const size_t ENTRY_USAGE_OVERESTIMATE{TX_USAGE + 8 * memusage::MallocUsage(sizeof(void*))};\n+\n+    // DisconnectedBlockTransactions that's just big enough for 1 transaction.\n+    {\n+        DisconnectedBlockTransactions disconnectpool{MAP_1 + ENTRY_USAGE_OVERESTIMATE};\n+        // Just 2 transactions because the allocation depends on the number of txns passed in.\n+        std::vector<CTransactionRef> two_txns({block_vtx.at(0), block_vtx.at(1)});\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(two_txns);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAP_1 + ENTRY_USAGE_OVERESTIMATE);\n+\n+        // Only 1 transaction can be kept\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+        // Transactions are added from back to front and eviction is FIFO.\n+        BOOST_CHECK_EQUAL(block_vtx.at(1), evicted_txns.front());\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions with a comfortable maximum memory usage so that nothing is evicted.\n+    // Record usage so we can check size limiting in the next test.\n+    size_t usage_full{0};\n+    {\n+        const size_t USAGE_100_OVERESTIMATE{MAP_100 + ENTRY_USAGE_OVERESTIMATE * 100};\n+        DisconnectedBlockTransactions disconnectpool{USAGE_100_OVERESTIMATE};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK_EQUAL(evicted_txns.size(), 0);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= USAGE_100_OVERESTIMATE);\n+\n+        usage_full = disconnectpool.DynamicMemoryUsage();\n+\n+        disconnectpool.clear();\n+    }\n+\n+    // DisconnectedBlockTransactions that's just a little too small for all of the transactions.\n+    {\n+        const size_t MAX_MEMUSAGE_99{usage_full - sizeof(void*)};\n+        DisconnectedBlockTransactions disconnectpool{MAX_MEMUSAGE_99};\n+        auto evicted_txns = disconnectpool.AddTransactionsFromBlock(block_vtx);\n+        BOOST_CHECK(disconnectpool.DynamicMemoryUsage() <= MAX_MEMUSAGE_99);\n+\n+        // Only 1 transaction needed to be evicted\n+        BOOST_CHECK_EQUAL(1, evicted_txns.size());\n+\n+        // Transactions are added from back to front and eviction is FIFO.\n+        // The last transaction of block_vtx should be the first to be evicted.\n+        BOOST_CHECK_EQUAL(block_vtx.back(), evicted_txns.front());",
      "path": "src/test/disconnected_transactions.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "225c9c3b25d24d0f8e7730fc17ae6a7b49a2b272",
      "in_reply_to_id": 1357036001,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you're not adding it in a new test, I would leave it in here, it's a useful check.",
      "created_at": "2023-10-18T16:37:33Z",
      "updated_at": "2023-10-18T16:40:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364196987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364196987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": 87,
      "original_start_line": 82,
      "start_side": "RIGHT",
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364202305",
      "pull_request_review_id": 1685593150,
      "id": 1364202305,
      "node_id": "PRRC_kwDOABII585RUBNB",
      "diff_hunk": "@@ -51,9 +51,8 @@ size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n     iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n     for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n         auto it = queuedTx.insert(queuedTx.end(), *block_it);\n-        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n-        assert(inserted); // callers may never pass multiple transactions with the same txid",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "73ed6fc0537650731cbf7c27636b3aaf8b6fec0c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think you meant to remove this? It reverts f4254e209801d6a790b5f0c251c0b32154a4e3cc",
      "created_at": "2023-10-18T16:40:29Z",
      "updated_at": "2023-10-18T16:40:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364202305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364202305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 54,
      "start_side": "LEFT",
      "line": null,
      "original_line": 55,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364240492",
      "pull_request_review_id": 1685667792,
      "id": 1364240492,
      "node_id": "PRRC_kwDOABII585RUKhs",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    // Our overall formula is unordered map overhead + usage per entry.\n+    // Implementations may vary, but we're trying to guess the usage of data structures.\n+    // No safety margin is added. It is assumed that this is an accurate guess. If this\n+    // estimate causes issues on other platforms, then we may consider adding an additional\n+    // pointer as safety margin.",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "3c00943bb7c3b7dcb7fb5485a9b4ef6a04221fa0",
      "in_reply_to_id": 1364195945,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "removed",
      "created_at": "2023-10-18T17:06:43Z",
      "updated_at": "2023-10-18T17:06:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364240492",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364240492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364241363",
      "pull_request_review_id": 1685668921,
      "id": 1364241363,
      "node_id": "PRRC_kwDOABII585RUKvT",
      "diff_hunk": "@@ -51,9 +51,8 @@ size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n     iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n     for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n         auto it = queuedTx.insert(queuedTx.end(), *block_it);\n-        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n-        assert(inserted); // callers may never pass multiple transactions with the same txid",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "73ed6fc0537650731cbf7c27636b3aaf8b6fec0c",
      "in_reply_to_id": 1364202305,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "interactive rebase mistake, fixed in latest push.",
      "created_at": "2023-10-18T17:07:23Z",
      "updated_at": "2023-10-18T17:07:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1364241363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364241363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": 54,
      "start_side": "LEFT",
      "line": null,
      "original_line": 55,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365538646",
      "pull_request_review_id": 1687744024,
      "id": 1365538646,
      "node_id": "PRRC_kwDOABII585RZHdW",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <assert.h>\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+        auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(inserted);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: f4254e209801d6a790b5f0c251c0b32154a4e3cc has a docstring but 070f172a877a7c03fec5c9b1a032106b9a80b329 removes it:\r\n\r\n```suggestion\r\n        assert(inserted); // callers may never pass multiple transactions with the same txid\r\n```\r\n\r\ntip to avoid these issues is to run through your commits one-by-one especially after doing rebase operations etc, it's a pretty common mistake",
      "created_at": "2023-10-19T13:28:03Z",
      "updated_at": "2023-10-19T13:32:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365538646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365538646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365542799",
      "pull_request_review_id": 1687744024,
      "id": 1365542799,
      "node_id": "PRRC_kwDOABII585RZIeP",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    // Our overall formula is unordered map overhead + usage per entry.\n+    // Implementations may vary, but we're trying to guess the usage of data structures.\n+    const size_t ENTRY_USAGE_ESTIMATE{\n+        TX_USAGE\n+        // list entry: 2 pointers (next pointer and prev pointer) + element itself\n+        + memusage::MallocUsage((2 * sizeof(void*)) + sizeof(decltype(block_vtx)::value_type))\n+        // unordered map: 1 pointer for the hashtable + key and value\n+        + memusage::MallocUsage(sizeof(void*) + sizeof(decltype(temp_map)::key_type) + sizeof(decltype(temp_map)::value_type))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: exceeds line length",
      "created_at": "2023-10-19T13:30:29Z",
      "updated_at": "2023-10-19T13:32:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365542799",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365542799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365694028",
      "pull_request_review_id": 1687982436,
      "id": 1365694028,
      "node_id": "PRRC_kwDOABII585RZtZM",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <assert.h>\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+        auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(inserted);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "in_reply_to_id": 1365538646,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, will avoid.",
      "created_at": "2023-10-19T14:57:18Z",
      "updated_at": "2023-10-19T14:57:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365694028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365694028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365695297",
      "pull_request_review_id": 1687984250,
      "id": 1365695297,
      "node_id": "PRRC_kwDOABII585RZttB",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <boost/test/unit_test.hpp>\n+#include <core_memusage.h>\n+#include <kernel/disconnected_transactions.h>\n+#include <test/util/setup_common.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(disconnected_transactions, TestChain100Setup)\n+\n+//! Tests that DisconnectedBlockTransactions limits its own memory properly\n+BOOST_AUTO_TEST_CASE(disconnectpool_memory_limits)\n+{\n+    // Use the coinbase transactions from TestChain100Setup. It doesn't matter whether these\n+    // transactions would realistically be in a block together, they just need distinct txids and\n+    // uniform size for this test to work.\n+    std::vector<CTransactionRef> block_vtx(m_coinbase_txns);\n+    BOOST_CHECK_EQUAL(block_vtx.size(), 100);\n+\n+    // Roughly estimate sizes to sanity check that DisconnectedBlockTransactions::DynamicMemoryUsage\n+    // is within an expected range.\n+\n+    // Overhead for the hashmap depends on number of buckets\n+    std::unordered_map<uint256, CTransaction*, SaltedTxidHasher> temp_map;\n+    temp_map.reserve(1);\n+    const size_t MAP_1{memusage::DynamicUsage(temp_map)};\n+    temp_map.reserve(100);\n+    const size_t MAP_100{memusage::DynamicUsage(temp_map)};\n+\n+    const size_t TX_USAGE{RecursiveDynamicUsage(block_vtx.front())};\n+    for (const auto& tx : block_vtx)\n+        BOOST_CHECK_EQUAL(RecursiveDynamicUsage(tx), TX_USAGE);\n+\n+    // Our overall formula is unordered map overhead + usage per entry.\n+    // Implementations may vary, but we're trying to guess the usage of data structures.\n+    const size_t ENTRY_USAGE_ESTIMATE{\n+        TX_USAGE\n+        // list entry: 2 pointers (next pointer and prev pointer) + element itself\n+        + memusage::MallocUsage((2 * sizeof(void*)) + sizeof(decltype(block_vtx)::value_type))\n+        // unordered map: 1 pointer for the hashtable + key and value\n+        + memusage::MallocUsage(sizeof(void*) + sizeof(decltype(temp_map)::key_type) + sizeof(decltype(temp_map)::value_type))};",
      "path": "src/test/disconnected_transactions.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "e9906c105dffbb864e8c5f7680334480cdd19cd9",
      "in_reply_to_id": 1365542799,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin-core-review-club/bitcoin/tree/pr28368/contrib/devtools#clang-format-diffpy\r\nIt was short before but contributor guide clang format e9906c105dffbb864e8c5f7680334480cdd19cd9\r\nmade the line longer?",
      "created_at": "2023-10-19T14:58:03Z",
      "updated_at": "2023-10-19T14:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365695297",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365695297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365709045",
      "pull_request_review_id": 1688005954,
      "id": 1365709045,
      "node_id": "PRRC_kwDOABII585RZxD1",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <assert.h>\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+        auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(inserted); // callers may never pass multiple transactions with the same txid\n+        cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+    }\n+    return LimitMemoryUsage();\n+}\n+\n+void DisconnectedBlockTransactions::removeForBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    // Short-circuit in the common case of a block being added to the tip\n+    if (queuedTx.empty()) {\n+        return;\n+    }\n+    for (const auto& tx : vtx) {\n+        auto iter = iters_by_txid.find(tx->GetHash());\n+        if (iter != iters_by_txid.end()) {\n+            auto list_iter = iter->second;\n+            iters_by_txid.erase(iter);\n+            cachedInnerUsage -= RecursiveDynamicUsage(**list_iter);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "2c4089559196e8263fa16d55bd85a920530eb382",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm this didn't get cherry-picked properly from https://github.com/stickies-v/bitcoin/commit/87f3f28b3acfc329eaed0b0cce6ff589271bfefd#diff-daf5057c112d6ec1338dd535558cd0f4e21e9a3e0241b610d88068fe2baba362R113 , probably because of rebase?",
      "created_at": "2023-10-19T15:07:32Z",
      "updated_at": "2023-10-19T15:07:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365709045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365709045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365722351",
      "pull_request_review_id": 1688027402,
      "id": 1365722351,
      "node_id": "PRRC_kwDOABII585RZ0Tv",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <kernel/disconnected_transactions.h>\n+\n+#include <assert.h>\n+#include <core_memusage.h>\n+#include <memusage.h>\n+#include <primitives/transaction.h>\n+#include <util/hasher.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+// It's almost certainly a logic bug if we don't clear out queuedTx before\n+// destruction, as we add to it while disconnecting blocks, and then we\n+// need to re-process remaining transactions to ensure mempool consistency.\n+// For now, assert() that we've emptied out this object on destruction.\n+// This assert() can always be removed if the reorg-processing code were\n+// to be refactored such that this assumption is no longer true (for\n+// instance if there was some other way we cleaned up the mempool after a\n+// reorg, besides draining this object).\n+DisconnectedBlockTransactions::~DisconnectedBlockTransactions()\n+{\n+    assert(queuedTx.empty());\n+    assert(iters_by_txid.empty());\n+    assert(cachedInnerUsage == 0);\n+}\n+\n+std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n+{\n+    std::vector<CTransactionRef> evicted;\n+\n+    while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n+        evicted.emplace_back(queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());\n+        iters_by_txid.erase(queuedTx.front()->GetHash());\n+        queuedTx.pop_front();\n+    }\n+    return evicted;\n+}\n+\n+size_t DisconnectedBlockTransactions::DynamicMemoryUsage() const\n+{\n+    return cachedInnerUsage + memusage::DynamicUsage(iters_by_txid) + memusage::DynamicUsage(queuedTx);\n+}\n+\n+[[nodiscard]] std::vector<CTransactionRef> DisconnectedBlockTransactions::AddTransactionsFromBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    iters_by_txid.reserve(iters_by_txid.size() + vtx.size());\n+    for (auto block_it = vtx.rbegin(); block_it != vtx.rend(); ++block_it) {\n+        auto it = queuedTx.insert(queuedTx.end(), *block_it);\n+        auto [_, inserted] = iters_by_txid.emplace((*block_it)->GetHash(), it);\n+        assert(inserted); // callers may never pass multiple transactions with the same txid\n+        cachedInnerUsage += RecursiveDynamicUsage(*block_it);\n+    }\n+    return LimitMemoryUsage();\n+}\n+\n+void DisconnectedBlockTransactions::removeForBlock(const std::vector<CTransactionRef>& vtx)\n+{\n+    // Short-circuit in the common case of a block being added to the tip\n+    if (queuedTx.empty()) {\n+        return;\n+    }\n+    for (const auto& tx : vtx) {\n+        auto iter = iters_by_txid.find(tx->GetHash());\n+        if (iter != iters_by_txid.end()) {\n+            auto list_iter = iter->second;\n+            iters_by_txid.erase(iter);\n+            cachedInnerUsage -= RecursiveDynamicUsage(**list_iter);",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "2c4089559196e8263fa16d55bd85a920530eb382",
      "in_reply_to_id": 1365709045,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, fixed.",
      "created_at": "2023-10-19T15:17:20Z",
      "updated_at": "2023-10-19T15:17:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1365722351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365722351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1379932340",
      "pull_request_review_id": 1709976459,
      "id": 1379932340,
      "node_id": "PRRC_kwDOABII585SQBi0",
      "diff_hunk": "@@ -34,7 +34,7 @@ std::vector<CTransactionRef> DisconnectedBlockTransactions::LimitMemoryUsage()\n \n     while (!queuedTx.empty() && DynamicMemoryUsage() > m_max_mem_usage) {\n         evicted.emplace_back(queuedTx.front());\n-        cachedInnerUsage -= RecursiveDynamicUsage(*queuedTx.front());\n+        cachedInnerUsage -= RecursiveDynamicUsage(queuedTx.front());",
      "path": "src/kernel/disconnected_transactions.cpp",
      "position": 37,
      "original_position": 5,
      "commit_id": "9b3da70bd06b45482e7211aa95637a72bd115553",
      "original_commit_id": "b2d04479647af64ad7cf5ebfb6175251b2f6b72e",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For future reference for b2d04479647af64ad7cf5ebfb6175251b2f6b72e \r\n\r\nImagining `DynamicMemoryUsage` for a `DisconnectedBlockTransactions` with 1 transaction (ignoring the `iters_by_txid` part since that doesn't change),\r\n\r\nbefore\r\n```\r\nDynamicUsage(queuedTx) + cachedInnerUsage\r\n=MallocUsage(sizeof(list_node<CTransactionRef>) + cachedInnerUsage\r\n=MallocUsage(sizeof(4 pointers) + RecursiveDynamicUsage(CTransaction)\r\n=MallocUsage(sizeof(4 pointers) + DynamicUsage(vin) + DynamicUsage(vout) + sum([RecursiveDynamicUsage(input) for input in vin]) + sum([RecursiveDynamicUsage(output) for output in vout])\r\n```\r\nafter\r\n```\r\nDynamicUsage(queuedTx) + cachedInnerUsage\r\n=MallocUsage(sizeof(list_node<CTransactionRef>) + cachedInnerUsage\r\n=MallocUsage(sizeof(4 pointers) + RecursiveDynamicUsage(CTransactionRef)\r\n=MallocUsage(sizeof(4 pointers) + DynamicUsage(CTransactionRef) + RecursiveDynamicUsage(CTransaction)\r\n=MallocUsage(sizeof(4 pointers) + MallocUsage(sizeof(CTransaction)) + MallocUsage(sizeof(stl_shared_counter)) + RecursiveDynamicUsage(CTransaction)\r\n=MallocUsage(sizeof(4 pointers) + MallocUsage(sizeof(CTransaction)) + MallocUsage(sizeof(stl_shared_counter)) + DynamicUsage(vin) + DynamicUsage(vout) + sum([RecursiveDynamicUsage(input) for input in vin]) + sum([RecursiveDynamicUsage(output) for output in vout])\r\n```\r\n\r\nSo we account for\r\n- each list node, which is 2 pointers + a shared pointer object (2 pointers)\r\n- each shared pointer's dynamically allocated memory i.e. the `CTransaction` object + its always dynamically allocated stuff (the vectors) + the control block",
      "created_at": "2023-11-02T11:01:39Z",
      "updated_at": "2023-11-02T11:07:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28530#discussion_r1379932340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1379932340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28530"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    }
  ]
}