{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454",
    "id": 1971770528,
    "node_id": "PR_kwDOABII5851htSg",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30454",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30454.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30454.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/41051290ab3b6c36312cec26a27f787cea9961b4",
    "number": 30454,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "build: Introduce CMake-based build system",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR introduces a new CMake-based build system, which is a drop-in replacement for the current Autotools-based build system.\r\n\r\nML announcement: https://groups.google.com/g/bitcoindev/c/hgKkfQWzrTo\r\n\r\nAs discussed during the recent CoreDev meetup in April, the switch from Autotools to CMake is intended to happen as soon as possible after branching 28.x off, which means that 29.0 will be built using CMake.\r\n\r\nThis PR branch is essentially the [staging branch](https://github.com/hebasto/bitcoin/tree/cmake-staging), with every change reviewed and tested by a group of contributors, including (in alphabetical order):\r\n- [**achow101**](https://github.com/achow101)\r\n- [**fanquake**](https://github.com/fanquake)\r\n- [**maflcko**](https://github.com/maflcko)\r\n- [**m3dwards**](https://github.com/m3dwards)\r\n- [**pablomartin4btc**](https://github.com/pablomartin4btc)\r\n- [**real-or-random**](https://github.com/real-or-random)\r\n- [**ryanofsky**](https://github.com/ryanofsky)\r\n- [**sipsorcery**](https://github.com/sipsorcery)\r\n- [**TheCharlatan**](https://github.com/TheCharlatan)\r\n- [**theStack**](https://github.com/theStack)\r\n- [**theuni**](https://github.com/theuni)\r\n- [**vasild**](https://github.com/vasild)\r\n\r\nReviewing in a separate staging repo was suggested in https://github.com/bitcoin/bitcoin/pull/27060#issuecomment-1431798320.\r\n\r\nThe accompanying changes to the OSS-Fuzz project are available in https://github.com/hebasto/oss-fuzz/pull/8.\r\n\r\nPlease refer to the [build options parity table](https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e). The \"auto\" value is no longer available; non-default values must be specified explicitly. Additionally, the new default values have been chosen to suit the everyday build experience for the majority of developers.\r\n\r\nSystem requirements for using the CMake-based build system:\r\n- CMake >= 3.22 (if not available in your system's repository, it can be downloaded from https://cmake.org/download/)\r\n- a build tool of your choice:\r\n\t- any Make (GNU Make is no longer a requirement); GNU Make is still required to build depends\r\n\t- Ninja (https://ninja-build.org/)\r\n\t- MSBuild\r\n\t- Xcode\r\n\r\nA note for Windows users: The default installation of the latest version of MSVC 17.10.4 includes both CMake 3.28.3 and the vcpkg package manager).\r\n\r\n---\r\n\r\nWe, the build system developers, kindly ask reviewers to refrain from making suggestions that are not directly related to the migration process or can be implemented separately. Bugs in the scripts and errors in the updated documentation should be the focus of this PR. Please be advised that comments not aligned with this PR's goal may be ignored.\r\n\r\nThank you all for your understanding.",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 493267104,
        "node_id": "MDU6TGFiZWw0OTMyNjcxMDQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20release%20note",
        "name": "Needs release note",
        "description": "",
        "color": "d2db6d",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/69",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/69",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/69/labels",
      "id": 11324346,
      "node_id": "MI_kwDOABII584ArMu6",
      "number": 69,
      "state": "open",
      "title": "29.0",
      "description": "",
      "creator": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "open_issues": 14,
      "closed_issues": 106,
      "created_at": "2024-07-17T08:47:56Z",
      "updated_at": "2025-03-06T18:00:35Z"
    },
    "created_at": "2024-07-16T14:55:55Z",
    "updated_at": "2025-03-07T07:05:53Z",
    "closed_at": "2024-08-28T09:51:36Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-08-28T09:51:36Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "338bc2cd261ba3daf7fb494f8cb4a534762e292c",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "hebasto:240716-cmake",
      "ref": "240716-cmake",
      "sha": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 22,
        "watchers_count": 22,
        "size": 302776,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-07T06:34:10Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2025-03-07T06:34:30Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ee367170cb2acf82b6ff8e0ccdbc1cce09730662",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36892,
        "stargazers_count": 82359,
        "watchers_count": 82359,
        "size": 276235,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-06T18:00:33Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-07T07:36:51Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 5872,
    "deletions": 518,
    "changed_files": 113,
    "commits": 68,
    "review_comments": 228,
    "comments": 68
  },
  "events": [
    {
      "event": "commented",
      "id": 2231129173,
      "node_id": "IC_kwDOABII586E_FRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231129173",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T14:55:58Z",
      "updated_at": "2024-08-28T09:45:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30454).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2244976481), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2254019496), [maflcko](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2305438162), [sipsorcery](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2306583830), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2257577490), [i-am-yuvi](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2259369009), [theuni](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2264222354), [fanquake](https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2265730991) |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2296430206) |\n| Stale ACK | [whitslack](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294461104) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30717](https://github.com/bitcoin/bitcoin/pull/30717) (rpc: Add test-only RPCs under `-test=<option>` flag by Prabhat1308)\n* [#30685](https://github.com/bitcoin/bitcoin/pull/30685) (build: Mark `x86_64-linux-gnu` release binaries as CET-enabled by hebasto)\n* [#30634](https://github.com/bitcoin/bitcoin/pull/30634) (ci: Use clang-19 from apt.llvm.org by maflcko)\n* [#30619](https://github.com/bitcoin/bitcoin/pull/30619) (doc: Change `nproc` in docs to `getconf _NPROCESSORS_ONLN` by l0rinc)\n* [#30527](https://github.com/bitcoin/bitcoin/pull/30527) (Bump python minimum supported version to 3.10 by maflcko)\n* [#30465](https://github.com/bitcoin/bitcoin/pull/30465) (depends: Set `CMAKE_SYSTEM_VERSION` for CMake builds by hebasto)\n* [#30043](https://github.com/bitcoin/bitcoin/pull/30043) (net: Replace libnatpmp with built-in PCP+NATPMP implementation by laanwj)\n* [#29881](https://github.com/bitcoin/bitcoin/pull/29881) (guix: use GCC 13 to builds releases by fanquake)\n* [#29868](https://github.com/bitcoin/bitcoin/pull/29868) (Reintroduce external signer support for Windows by hebasto)\n* [#25573](https://github.com/bitcoin/bitcoin/pull/25573) ([POC] guix: produce a fully `-static-pie` bitcoind by fanquake)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231129173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13522636397,
      "node_id": "LE_lADOABII586PurnmzwAAAAMmAw5t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522636397",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T14:56:00Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 13522779532,
      "node_id": "LE_lADOABII586PurnmzwAAAAMmBT2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522779532",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:05:28Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "unlabeled",
      "id": 13522780674,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMmBUIC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13522780674",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:05:32Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "commented",
      "id": 2231166194,
      "node_id": "IC_kwDOABII586E_OTy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231166194",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:08:44Z",
      "updated_at": "2024-07-16T15:08:44Z",
      "author_association": "MEMBER",
      "body": "> The only differences from the staging branch are:\r\n\r\nI'd say the section can be removed (or moved to a separate comment), because when this will be merged, I presume many more differences will accumulate. Even looking at the outstanding ports (https://github.com/bitcoin/bitcoin/issues?q=label%3A%22Needs+CMake+port%22+is%3Aclosed) right now, there are some.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231166194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2231205319,
      "node_id": "IC_kwDOABII586E_X3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231205319",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:18:15Z",
      "updated_at": "2024-07-16T15:18:15Z",
      "author_association": "MEMBER",
      "body": "> Please refer to the build options parity table.\r\n\r\nMissing link/reference?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231205319",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2231220385,
      "node_id": "IC_kwDOABII586E_bih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231220385",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T15:23:13Z",
      "updated_at": "2024-07-16T15:23:13Z",
      "author_association": "MEMBER",
      "body": "> > Please refer to the build options parity table.\r\n> \r\n> Missing link/reference?\r\n\r\nThanks! Added.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231220385",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2180684965,
      "node_id": "PRR_kwDOABII586B-pyl",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180684965",
      "submitted_at": "2024-07-16T15:52:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2180746661,
      "node_id": "PRR_kwDOABII586B-42l",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180746661",
      "submitted_at": "2024-07-16T16:21:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2180748015,
      "node_id": "PRR_kwDOABII586B-5Lv",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2180748015",
      "submitted_at": "2024-07-16T16:22:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2231754276,
      "node_id": "IC_kwDOABII586FBd4k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231754276",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:19Z",
      "updated_at": "2024-07-16T20:16:19Z",
      "author_association": "MEMBER",
      "body": "A couple of functional tests-related commits have been split to https://github.com/bitcoin/bitcoin/pull/30463, as suggested by @fanquake offline.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2231754276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13526623986,
      "node_id": "MEE_lADOABII586PurnmzwAAAAMmP-by",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13526623986",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:20Z"
    },
    {
      "event": "subscribed",
      "id": 13526623994,
      "node_id": "SE_lADOABII586PurnmzwAAAAMmP-b6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13526623994",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T20:16:20Z"
    },
    {
      "event": "commented",
      "id": 2232743499,
      "node_id": "IC_kwDOABII586FFPZL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2232743499",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:32:56Z",
      "updated_at": "2024-07-17T08:32:56Z",
      "author_association": "MEMBER",
      "body": "> which means that 29.0 will be built using CMake.\r\n\r\nCould add the 29.0 milestone?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2232743499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2182285671,
      "node_id": "PRR_kwDOABII586CEwln",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2182285671",
      "submitted_at": "2024-07-17T08:39:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "milestoned",
      "id": 13533192406,
      "node_id": "MIE_lADOABII586PurnmzwAAAAMmpCDW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13533192406",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:48:25Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "commented",
      "id": 2232775166,
      "node_id": "IC_kwDOABII586FFXH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2232775166",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T08:48:38Z",
      "updated_at": "2024-07-17T08:48:38Z",
      "author_association": "MEMBER",
      "body": "> > which means that 29.0 will be built using CMake.\r\n> \r\n> Could add the 29.0 milestone?\r\n\r\nDone.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2232775166",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "referenced",
      "id": 13554503090,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMn6U2y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13554503090",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9c8b36eba6581ce10458b847cb3f3abd94a2e6a9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8b36eba6581ce10458b847cb3f3abd94a2e6a9",
      "created_at": "2024-07-18T11:59:36Z"
    },
    {
      "event": "labeled",
      "id": 13554873157,
      "node_id": "LE_lADOABII586PurnmzwAAAAMn7vNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13554873157",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T12:30:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2236884983,
      "node_id": "IC_kwDOABII586FVCf3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2236884983",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:29Z",
      "updated_at": "2024-07-18T15:49:27Z",
      "author_association": "MEMBER",
      "body": "## Our plan for the next few weeks:\r\n\r\nThis PR has already pointed out some very helpful high-level issues.\r\n\r\nDuring today's working-group call, we agreed on the following plan:\r\n\r\nBecause we don't want to create too much noise (yet) in this PR, we're going to maintain the staging workflow for another ~two weeks. This means discussing and merging into @hebasto's repo, then occasionally syncing with the upstream PR. More specifically:\r\n\r\n### Goals for week 1:\r\n  - Upstream (and hopefully get merged) all outstanding issues/prerequisites pointed out by review so far (#30464, #30463, #30477, others?)\r\n  - Ensure that the staging branch [can be built successfully with autotools and cmake](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517) by reverting some CMake-specific changes that aren't strictly necessary for the port\r\n  - Try to make the staging branch contain no actual code/test changes (qt plugins as the exception), only build-system changes.\r\n  - Sync the upstream PR with staging when the above is complete\r\n  - Announce at next week's IRC meeting that this PR is ready for review/scrutiny\r\n\r\n### Goals for week 2:\r\n\r\nAt this point, reviewers may still point out more chunks that can be merged ahead-of-time, low-level complaints that require build-specific discussion, differences with autotools, and other boring details that aren't worth polluting the main PR. During week two we'll address this feedback on hebasto's staging repo to keep the discussion/PR noise out of the mainline PR. Hopefully this will be minor stuff. At the end of week two, we'll aim to sync the staging repo with this PR for the last time, EOL the staging repo, and have all remaining discussion/arguing here from that point on.\r\n\r\n### Plan for removing autotools:\r\n\r\nBecause it's useful to test Autotools/CMake on the same commit, we've decided _not_ to remove Autotools as part of the CMake PR. Additionally, it will be useful for posterity to have a point in time (even if only a single commit) where both were present, so that it's obvious what before/after behavior was intended.\r\n\r\nHowever, as maintaining both systems is not a goal, we intend to remove Autotools _directly_ after CMake's merge. There should be no expectation of it hanging around for more than a day or two.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2236884983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13558452863,
      "node_id": "MEE_lADOABII586PurnmzwAAAAMoJZJ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558452863",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:31Z"
    },
    {
      "event": "subscribed",
      "id": 13558452886,
      "node_id": "SE_lADOABII586PurnmzwAAAAMoJZKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558452886",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:38:31Z"
    },
    {
      "event": "convert_to_draft",
      "id": 13558701268,
      "node_id": "CTDE_lADOABII586PurnmzwAAAAMoKVzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558701268",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T15:56:44Z"
    },
    {
      "event": "referenced",
      "id": 13562476545,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMoYvgB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13562476545",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "945d5c6f2453f06e9892e21f120bd92d7bef1e97",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/945d5c6f2453f06e9892e21f120bd92d7bef1e97",
      "created_at": "2024-07-18T19:58:58Z"
    },
    {
      "event": "reviewed",
      "id": 2188923226,
      "node_id": "PRR_kwDOABII586CeFFa",
      "url": null,
      "actor": null,
      "commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2188923226",
      "submitted_at": "2024-07-19T18:26:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2189569755,
      "node_id": "PRR_kwDOABII586Cgi7b",
      "url": null,
      "actor": null,
      "commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2189569755",
      "submitted_at": "2024-07-20T00:02:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "renamed",
      "id": 13588153434,
      "node_id": "RTE_lADOABII586PurnmzwAAAAMp6sRa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13588153434",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T07:14:25Z",
      "rename": {
        "from": "build: Introduce CMake-based buid system",
        "to": "build: Introduce CMake-based build system"
      }
    },
    {
      "event": "referenced",
      "id": 13589495347,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMp_z4z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589495347",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "efeb39785aeee9130584b865d886c6b46e59f147",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efeb39785aeee9130584b865d886c6b46e59f147",
      "created_at": "2024-07-20T12:26:12Z"
    },
    {
      "event": "referenced",
      "id": 13589730677,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMqAtV1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589730677",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d573611575c3fa66f08407aa9b02f91b29a94c3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d573611575c3fa66f08407aa9b02f91b29a94c3",
      "created_at": "2024-07-20T13:50:17Z"
    },
    {
      "event": "referenced",
      "id": 13599626196,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMqmdPU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599626196",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3a29ff5deadc385b3be7ebecf73504fd9a2af20d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a29ff5deadc385b3be7ebecf73504fd9a2af20d",
      "created_at": "2024-07-22T11:12:27Z"
    },
    {
      "event": "referenced",
      "id": 13603198044,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMq0FRc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13603198044",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ad996126d3e0ca25d4916eb5e862ca7948da8dc7",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/ad996126d3e0ca25d4916eb5e862ca7948da8dc7",
      "created_at": "2024-07-22T15:32:22Z"
    },
    {
      "event": "referenced",
      "id": 13604271533,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMq4LWt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13604271533",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b927a39c633b0a3513f07f7bcb17132db972fb49",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b927a39c633b0a3513f07f7bcb17132db972fb49",
      "created_at": "2024-07-22T16:59:51Z"
    },
    {
      "event": "referenced",
      "id": 13613444725,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMrbK51",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13613444725",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "77da79f7d2390bbbe7d90d6e6847babb141bba68",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/77da79f7d2390bbbe7d90d6e6847babb141bba68",
      "created_at": "2024-07-23T10:15:15Z"
    },
    {
      "event": "referenced",
      "id": 13621061612,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMr4Ofs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13621061612",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d3a10e6aedffa38b3f0d2de63bb925a97121ebf0",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/d3a10e6aedffa38b3f0d2de63bb925a97121ebf0",
      "created_at": "2024-07-23T20:16:58Z"
    },
    {
      "event": "referenced",
      "id": 13627860272,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMsSKUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13627860272",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7a59ed6910942811f55c2ec612c2b086c912b061",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/7a59ed6910942811f55c2ec612c2b086c912b061",
      "created_at": "2024-07-24T09:47:35Z"
    },
    {
      "event": "referenced",
      "id": 13628221145,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMsTibZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13628221145",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d2391552149d8173ae25a6da0105882289fe9ad",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/6d2391552149d8173ae25a6da0105882289fe9ad",
      "created_at": "2024-07-24T10:14:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13630102829,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAMsat0t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13630102829",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/dcd411eba701808519adf72328c19597fd5a187c",
      "created_at": "2024-07-24T12:52:44Z"
    },
    {
      "event": "unlabeled",
      "id": 13630518767,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMscTXv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13630518767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T13:21:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2248232775,
      "node_id": "IC_kwDOABII586GAU9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2248232775",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T14:56:27Z",
      "updated_at": "2024-07-24T15:13:43Z",
      "author_association": "MEMBER",
      "body": "Rebased. This PR branch is the current `cmake-staging` [branch](https://github.com/hebasto/bitcoin/commit/dc490dae00d66b8e7b07158d1fc7adf53b4cce43) with 2 top commits dropped.\r\n\r\nAlso some comments have been addressed.\r\n\r\nTasks from https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2236884983:\r\n- [x] Ensure that the staging branch [can be built successfully with autotools and cmake](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517) by reverting some CMake-specific changes that aren't strictly necessary for the port\r\n- [x] Try to make the staging branch contain no actual code/test changes (qt plugins as the exception), only build-system changes\r\n- [x] Sync the upstream PR with staging when the above is complete",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2248232775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2198548041,
      "node_id": "PRR_kwDOABII586DCy5J",
      "url": null,
      "actor": null,
      "commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2198548041",
      "submitted_at": "2024-07-25T07:43:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "labeled",
      "id": 13643323800,
      "node_id": "LE_lADOABII586PurnmzwAAAAMtNJmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13643323800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T10:04:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2250774928,
      "node_id": "IC_kwDOABII586GKBmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2250774928",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T15:55:03Z",
      "updated_at": "2024-07-25T15:55:03Z",
      "author_association": "NONE",
      "body": "Loaded this branch into CLion Nova (the latest C/C++ focused jetbrains IDE) and it was able to correctly load the project, and set up a Debug profile for 63 build targets with no additional configuration. Build and debugging seems to work out of the box (tested for bitcoin-cli and bitcoind). This is awesome!",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2250774928",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251018894,
      "node_id": "IC_kwDOABII586GK9KO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251018894",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T17:18:01Z",
      "updated_at": "2024-07-25T17:18:34Z",
      "author_association": "MEMBER",
      "body": "Trying to build the benchmarks:\r\n* Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n* If a specify something weird like `cmake -B build -DBUILD_BENCH=ab123`, I get as configure output `bench_bitcoin ....................... ab123` (and it builds the `bench` binary). I would expect an error when specifying anything but `OFF` or `ON` or equivalent.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251018894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251037482,
      "node_id": "IC_kwDOABII586GLBsq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251037482",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T17:28:44Z",
      "updated_at": "2024-07-25T17:28:44Z",
      "author_association": "MEMBER",
      "body": "> Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n\r\nYes, according to https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e (the parity table, linked in OP). I presume developer (not users) are encouraged to set `-DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DBUILD_UTIL_CHAINSTATE=ON -DBUILD_GUI=ON ` on all of their builds, if they want to catch compile errors before opening a pull request.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251037482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251181234,
      "node_id": "IC_kwDOABII586GLkyy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251181234",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T18:47:01Z",
      "updated_at": "2024-07-25T19:22:02Z",
      "author_association": "MEMBER",
      "body": "> Trying to build the benchmarks:\r\n> \r\n>    * Is it expected that the default for `BUILD_BENCH` is `OFF`? (the default with autoconf is on)\r\n\r\nRegarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work. This means, for instance, that `-DBUILD_BENCH` and `-DBUILD_GUI` are `OFF` by default.\r\n\r\n>    * If a specify something weird like `cmake -B build -DBUILD_BENCH=ab123`, I get as configure output `bench_bitcoin ....................... ab123` (and it builds the `bench` binary). I would expect an error when specifying anything but `OFF` or `ON` or equivalent.\r\n\r\nThe current implementation uses the standard CMake's boolean [options](https://cmake.org/cmake/help/latest/command/option.html) without any extra checks. Provided constants are evaluated according to the CMake [rules](https://cmake.org/cmake/help/latest/command/if.html#constant). Usually, boolean values are represented as `ON`/`OFF`, `TRUE`/`FALSE`, `YES`/`NO`, `1`/`0`.\r\n\r\n> I presume developer (not users) are encouraged to set `-DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DBUILD_UTIL_CHAINSTATE=ON -DBUILD_GUI=ON ` on all of their builds, if they want to catch compile errors before opening a pull request.\r\n\r\nUser [presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) are most suitable and convenient for that.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251181234",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2251236729,
      "node_id": "IC_kwDOABII586GLyV5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251236729",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:07Z",
      "updated_at": "2024-07-25T19:19:07Z",
      "author_association": "MEMBER",
      "body": "> Yes, according to https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e (the parity table, linked in OP).\r\n\r\nRight, I saw that. I should have phrased my question as \"is it intentional that the default changed\".\r\n\r\n> Regarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work.\r\n\r\nThanks, that answers my question.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251236729",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2202007732,
      "node_id": "PRR_kwDOABII586DP_i0",
      "url": null,
      "actor": null,
      "commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "It seems that the bitcoin-qt `qrencode` dependency default value deviates from the one in autotools. I don't have the qrencode library available in my system and I'm able to compile the gui out of the box through autotools but not through cmake due to the missing dependency.\r\nIt would be nice to use the same default value for now. And discuss any possible default value change (if needed) in a follow-up.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2202007732",
      "submitted_at": "2024-07-26T14:30:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13709841797,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAMxK5WF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13709841797",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "created_at": "2024-07-31T13:11:56Z"
    },
    {
      "event": "commented",
      "id": 2260498863,
      "node_id": "IC_kwDOABII586GvHmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2260498863",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T13:14:33Z",
      "updated_at": "2024-07-31T13:14:33Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. This PR branch is the current [staging branch](https://github.com/hebasto/bitcoin/commit/19d4d920d97aa7fc4675eb4ac4ecf744e9ec8613) with the top 3 commits dropped.\r\n\r\nAlso some feedback has been addressed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2210190130,
      "node_id": "PRR_kwDOABII586DvNMy",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left two nits. Feel free to ignore",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2210190130",
      "submitted_at": "2024-07-31T13:37:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2210311726,
      "node_id": "PRR_kwDOABII586Dvq4u",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2210311726",
      "submitted_at": "2024-07-31T14:15:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "unlabeled",
      "id": 13711298160,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAMxQc5w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13711298160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T14:47:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13740016483,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMy-ANj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13740016483",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "357f19539129fae31bbc87275fa0935fc33cade4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/357f19539129fae31bbc87275fa0935fc33cade4",
      "created_at": "2024-08-02T10:31:36Z"
    },
    {
      "event": "labeled",
      "id": 13740473394,
      "node_id": "LE_lADOABII586PurnmzwAAAAMy_vwy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13740473394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T11:14:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13742534149,
      "node_id": "LE_lADOABII586PurnmzwAAAAMzHm4F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13742534149",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T14:19:48Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "referenced",
      "id": 13754497152,
      "node_id": "REFE_lADOABII586PurnmzwAAAAMz1PiA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13754497152",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a68701662e2ee0e5e71d1e0f8f13c418f75804a4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/a68701662e2ee0e5e71d1e0f8f13c418f75804a4",
      "created_at": "2024-08-04T09:19:19Z"
    },
    {
      "event": "commented",
      "id": 2267493946,
      "node_id": "IC_kwDOABII586HJzY6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2267493946",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-04T10:35:01Z",
      "updated_at": "2024-08-04T20:21:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "I can barely contain my excitement about this change, finally the whole project came alive for me in [CLion](https://youtrack.jetbrains.com/issue/CPP-193/Support-Autotools-based-projects#focus=Comments-27-10265733.0-0) - a few of the features that are working with cmake that didn't work before:\r\n* right click to run boost test + debug:\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/ab8c93f8-58e0-435f-b834-51e245a26468\">\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/d2042477-6475-4bb0-a5db-bbcb89946e7c\">\r\n\r\n* built-in code coverage (and partially the profiler) is working:\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/d9f634df-889b-4f47-bbba-57e6244493ad\">\r\n\r\n* extract method and field rename refactoring (still extremely slow, but at least it's working - will see if it's faster after it finishes indexing):\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/3acd177a-b0a3-4bb0-a479-81d336b01e20\">\r\n\r\n---------\r\n\r\nEdit: I checked the speed of compilation before & after with:\r\n```bash\r\nbuild_and_run() {\r\n  echo \"Building commit: $COMMIT with parallelism: $PARALLEL\"\r\n  if [ -f CMakeLists.txt ]; then\r\n    cmake -B build -DWITH_CCACHE=OFF && cmake --build build -j$PARALLEL\r\n    BITCOIND=\"./build/src/bitcoind\"\r\n  else\r\n    ./autogen.sh && ./configure --disable-ccache && make -j$PARALLEL\r\n    BITCOIND=\"./src/bitcoind\"\r\n  fi\r\n  $BITCOIND --version | head -n 1\r\n}\r\nexport -f build_and_run\r\n\r\nhyperfine \\\r\n  --warmup 1 --runs 5 \\\r\n  --shell=bash \\\r\n  --parameter-list COMMIT 2ed820,80073c \\\r\n  --parameter-list PARALLEL $(nproc),1 \\\r\n  --prepare 'git checkout {COMMIT} && git clean -fxd && git reset --hard' \\\r\n  --export-json ~/final_results.json \\\r\n  --style full \\\r\n  'COMMIT={COMMIT} PARALLEL={PARALLEL} build_and_run'\r\n```\r\nwhich resulted in\r\n```python\r\nBenchmark 1: COMMIT=2ed820 PARALLEL=8 build_and_run\r\n  Time (mean ± σ):     678.382 s ±  1.707 s    [User: 4860.119 s, System: 286.087 s]\r\n  Range (min … max):   675.542 s … 680.083 s    5 runs\r\n\r\nBenchmark 2: COMMIT=80073c PARALLEL=8 build_and_run\r\n  Time (mean ± σ):     458.423 s ±  0.498 s    [User: 3043.589 s, System: 172.502 s]\r\n  Range (min … max):   457.940 s … 458.967 s    5 runs\r\n\r\nBenchmark 3: COMMIT=2ed820 PARALLEL=1 build_and_run\r\n  Time (mean ± σ):     2815.758 s ±  1.076 s    [User: 2627.491 s, System: 187.484 s]\r\n  Range (min … max):   2814.468 s … 2816.904 s    5 runs\r\n\r\nBenchmark 4: COMMIT=80073c PARALLEL=1 build_and_run\r\n  Time (mean ± σ):     1791.808 s ±  1.458 s    [User: 1675.999 s, System: 115.596 s]\r\n  Range (min … max):   1790.071 s … 1793.572 s    5 runs\r\n```\r\nSpeedup with 8x parallelism: 1.48 times faster\r\nSpeedup with 1x parallelism: 1.57 times faster\r\n\r\nWhile this doesn't fully reflect the cached states (which I'm not sure how to test), I think this is really impressive change.\r\n\r\n---\r\n\r\nEdit2: CLion generated `cmake-build-debug` and `cmake-build-debug-coverage` to separate the builds corresponding to different run configs, could we add `/cmake-*/` to `.gitignore`?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2267493946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2208656646,
      "node_id": "PRR_kwDOABII586DpW0G",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Left a few question - ignore if they don't make sense in this context, it's not my area of expertise",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2208656646",
      "submitted_at": "2024-08-05T08:34:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2218631348,
      "node_id": "PRR_kwDOABII586EPaC0",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2218631348",
      "submitted_at": "2024-08-05T10:25:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2268754162,
      "node_id": "IC_kwDOABII586HOnDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2268754162",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:53Z",
      "updated_at": "2024-08-05T10:37:53Z",
      "author_association": "MEMBER",
      "body": "@paplorinc \r\n> Edit2: CLion generated `cmake-build-debug` and `cmake-build-debug-coverage` to separate the builds corresponding to different run configs, could we add `/cmake-*/` to `.gitignore`?\r\n\r\nAddressed in https://github.com/hebasto/bitcoin/pull/302.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2268754162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13762217582,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM0SsZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762217582",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:55Z"
    },
    {
      "event": "subscribed",
      "id": 13762217589,
      "node_id": "SE_lADOABII586PurnmzwAAAAM0SsZ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762217589",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:37:55Z"
    },
    {
      "event": "referenced",
      "id": 13763170530,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM0WVDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13763170530",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "874e21ea1a3a3a07c4ce94035ee23f102aa3444a",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/874e21ea1a3a3a07c4ce94035ee23f102aa3444a",
      "created_at": "2024-08-05T11:58:02Z"
    },
    {
      "event": "referenced",
      "id": 13763263683,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM0WrzD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13763263683",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2feccd4d96aef819ce205a80d3f6f4dbaf46fbb5",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/2feccd4d96aef819ce205a80d3f6f4dbaf46fbb5",
      "created_at": "2024-08-05T12:05:48Z"
    },
    {
      "event": "reviewed",
      "id": 2219112695,
      "node_id": "PRR_kwDOABII586ERPj3",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219112695",
      "submitted_at": "2024-08-05T14:09:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2219450044,
      "node_id": "PRR_kwDOABII586ESh68",
      "url": null,
      "actor": null,
      "commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219450044",
      "submitted_at": "2024-08-05T16:41:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13768134179,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM0pQ4j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768134179",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "created_at": "2024-08-05T18:25:04Z"
    },
    {
      "event": "commented",
      "id": 2269654936,
      "node_id": "IC_kwDOABII586HSC-Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2269654936",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:26:24Z",
      "updated_at": "2024-08-05T18:32:54Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. This PR branch is the current [staging branch](https://github.com/hebasto/bitcoin/commit/2a96e31e600dd90a73591f31852893cb0e7def60) with the top 3 commits dropped.\r\n\r\nSome feedback has been addressed including @furszy's https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2202007732.\r\n\r\nAlso the staging branch contains no actual code/test changes (previously, there was an exception for qt plugins), only build-system changes.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2269654936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13768155066,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM0pV-6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768155066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:26:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "mentioned",
      "id": 13768180686,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM0pcPO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768180686",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:29:21Z"
    },
    {
      "event": "subscribed",
      "id": 13768180706,
      "node_id": "SE_lADOABII586PurnmzwAAAAM0pcPi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768180706",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:29:21Z"
    },
    {
      "event": "reviewed",
      "id": 2219811588,
      "node_id": "PRR_kwDOABII586ET6ME",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2219811588",
      "submitted_at": "2024-08-05T20:29:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "labeled",
      "id": 13770536723,
      "node_id": "LE_lADOABII586PurnmzwAAAAM0ybcT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13770536723",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T22:56:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2220439371,
      "node_id": "PRR_kwDOABII586EWTdL",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2220439371",
      "submitted_at": "2024-08-06T06:58:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2220440443,
      "node_id": "PRR_kwDOABII586EWTt7",
      "url": null,
      "actor": null,
      "commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2220440443",
      "submitted_at": "2024-08-06T06:58:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13777441738,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM1MxPK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13777441738",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "755e34f580116665f11ed87572da7186c36b35a1",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/755e34f580116665f11ed87572da7186c36b35a1",
      "created_at": "2024-08-06T11:50:19Z"
    },
    {
      "event": "referenced",
      "id": 13777926142,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM1Onf-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13777926142",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d8471379cd220c87855d7e22aa52fef0eba3621d",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/d8471379cd220c87855d7e22aa52fef0eba3621d",
      "created_at": "2024-08-06T12:29:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13782976008,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM1h4YI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13782976008",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/ec5d1c372b20d49147813aa0392195a3642b86a1",
      "created_at": "2024-08-06T19:18:32Z"
    },
    {
      "event": "commented",
      "id": 2271981040,
      "node_id": "IC_kwDOABII586Ha63w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2271981040",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T19:19:38Z",
      "updated_at": "2024-08-06T19:19:38Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. More feedback has been addressed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13783408068,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM1jh3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13783408068",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T20:04:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2223676631,
      "node_id": "PRR_kwDOABII586EipzX",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2223676631",
      "submitted_at": "2024-08-07T09:27:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2225688525,
      "node_id": "PRR_kwDOABII586EqU_N",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2225688525",
      "submitted_at": "2024-08-07T16:39:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13796812911,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM2Wqhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13796812911",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ad2140d4d8cccec82fdad07bdc7532e202282306",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/ad2140d4d8cccec82fdad07bdc7532e202282306",
      "created_at": "2024-08-07T19:18:02Z"
    },
    {
      "event": "reviewed",
      "id": 2226017520,
      "node_id": "PRR_kwDOABII586ErlTw",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226017520",
      "submitted_at": "2024-08-07T19:26:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2226022459,
      "node_id": "PRR_kwDOABII586Ermg7",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226022459",
      "submitted_at": "2024-08-07T19:29:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2226100409,
      "node_id": "PRR_kwDOABII586Er5i5",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2226100409",
      "submitted_at": "2024-08-07T20:13:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "ready_for_review",
      "id": 13804827386,
      "node_id": "RFRE_lADOABII586PurnmzwAAAAM21PL6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13804827386",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T10:39:59Z"
    },
    {
      "event": "reviewed",
      "id": 2227399035,
      "node_id": "PRR_kwDOABII586Ew2l7",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Checked a few more scenarios on mac",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2227399035",
      "submitted_at": "2024-08-08T11:36:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2276410668,
      "node_id": "IC_kwDOABII586Hr0Us",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2276410668",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T18:22:16Z",
      "updated_at": "2024-08-08T18:22:16Z",
      "author_association": "MEMBER",
      "body": "An [announcement](https://groups.google.com/g/bitcoindev/c/hgKkfQWzrTo) about the migration to the CMake build system was made on the mailing list. Therefore, more comments from fellow reviewers and testers are expected.\r\n\r\nTo let us maintain focus on making progress, the following statement has been add to the PR description:\r\n\r\nWe, the build system developers, kindly ask reviewers to refrain from making suggestions that are not directly related to the migration process or can be implemented separately. Bugs in the scripts and errors in the updated documentation should be the focus of this PR. Please be advised that comments not aligned with this PR's goal may be ignored.\r\n\r\nThank you all for your understanding and cooperation.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2276410668",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277136975,
      "node_id": "IC_kwDOABII586HulpP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277136975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T04:37:05Z",
      "updated_at": "2024-08-09T04:37:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit 27a770b34b8f1dbb84760f442edb3e23a0c2420b<br>(master) | commit 2c5f22560b4b203f14bc64fd41bf42345cb0ba81<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`cc61b98f761ae0d2...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/SHA256SUMS.part) |  |\n| *-aarch64-linux-gnu-debug.tar.gz | [`8520aad18b834d92...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-aarch64-linux-gnu-debug.tar.gz) |  |\n| *-aarch64-linux-gnu.tar.gz | [`b4981c155eff7bcb...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-aarch64-linux-gnu.tar.gz) |  |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`abc05bea90c911f2...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm-linux-gnueabihf-debug.tar.gz) |  |\n| *-arm-linux-gnueabihf.tar.gz | [`9afabfd5f1348c88...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm-linux-gnueabihf.tar.gz) |  |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`a2f045d4d370e511...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin-unsigned.tar.gz) |  |\n| *-arm64-apple-darwin-unsigned.zip | [`570ec3c274a76cc4...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin-unsigned.zip) |  |\n| *-arm64-apple-darwin.tar.gz | [`0289dbfde1855827...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-arm64-apple-darwin.tar.gz) |  |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`88bdbb314e5a7bf1...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-powerpc64-linux-gnu-debug.tar.gz) |  |\n| *-powerpc64-linux-gnu.tar.gz | [`a22b2be3f32a37ee...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-powerpc64-linux-gnu.tar.gz) |  |\n| *-riscv64-linux-gnu-debug.tar.gz | [`e405c6dac4299122...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-riscv64-linux-gnu-debug.tar.gz) |  |\n| *-riscv64-linux-gnu.tar.gz | [`89df8a8fb8316c45...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-riscv64-linux-gnu.tar.gz) |  |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`f8e5a8ab26dc2c8c...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin-unsigned.tar.gz) |  |\n| *-x86_64-apple-darwin-unsigned.zip | [`7ee3a84b21371065...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin-unsigned.zip) |  |\n| *-x86_64-apple-darwin.tar.gz | [`d8991ce1e625ea73...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-apple-darwin.tar.gz) |  |\n| *-x86_64-linux-gnu-debug.tar.gz | [`7e73078d515a706a...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-linux-gnu-debug.tar.gz) |  |\n| *-x86_64-linux-gnu.tar.gz | [`dbd36be395769a40...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f-x86_64-linux-gnu.tar.gz) |  |\n| *.tar.gz | [`ce196c8f7dc80175...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/bitcoin-27a770b34b8f.tar.gz) | [`87318cf6abea41dd...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/bitcoin-2c5f22560b4b.tar.gz) |\n| guix_build.log | [`b1c81e8b50991225...`](https://drahtbot.space/guix/bitcoin/bitcoin/27a770b34b8f1dbb84760f442edb3e23a0c2420b/guix_build.log) | [`f1d169a82935b789...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/guix_build.log) |\n| guix_build.log.diff |  | [`e986565f30dc297a...`](https://drahtbot.space/guix/bitcoin/bitcoin/2c5f22560b4b203f14bc64fd41bf42345cb0ba81/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277136975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13815541094,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM3eG1m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13815541094",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T04:37:06Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2277190642,
      "node_id": "IC_kwDOABII586Huyvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277190642",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T05:42:10Z",
      "updated_at": "2024-08-09T05:42:10Z",
      "author_association": "MEMBER",
      "body": "(The drahtbot guix build failed due to a silent merge conflict, I presume)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277190642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277722262,
      "node_id": "IC_kwDOABII586Hw0iW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277722262",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T11:17:57Z",
      "updated_at": "2024-08-09T11:17:57Z",
      "author_association": "MEMBER",
      "body": "Had a look at a Guix build. Stripping the macOS binaries is broken:\r\n```bash\r\n-- Installing: /distsrc-base/distsrc-ad2140d4d8cc-arm64-apple-darwin/installed/bitcoin-ad2140d4d8cc/bin/bitcoind\r\n/root/.guix-profile/bin/llvm-strip: error: unknown argument '-u'\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277722262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277886777,
      "node_id": "IC_kwDOABII586Hxcs5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277886777",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T12:57:04Z",
      "updated_at": "2024-08-09T12:57:04Z",
      "author_association": "MEMBER",
      "body": "I think we can improve the output when `-DWITH_CCACHE=OFF` is used. Depending on the system, that output might be:\r\n```bash\r\ncmake -B build -DWITH_CCACHE=OFF\r\n< snip >\r\nUse ccache for compiling .............. ccache masquerades as the compiler\r\n```\r\nWe should probably at least indicate that the option was respected by the build-system.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277886777",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2277997375,
      "node_id": "IC_kwDOABII586Hx3s_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277997375",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T13:52:57Z",
      "updated_at": "2024-08-09T13:52:57Z",
      "author_association": "MEMBER",
      "body": "> (The drahtbot guix build failed due to a silent merge conflict, I presume)\r\n\r\nShould be fixed after porting https://github.com/bitcoin/bitcoin/pull/30051.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277997375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2230464760,
      "node_id": "PRR_kwDOABII586E8jD4",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2230464760",
      "submitted_at": "2024-08-09T15:17:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2278737425,
      "node_id": "IC_kwDOABII586H0sYR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2278737425",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T20:49:15Z",
      "updated_at": "2024-08-09T20:49:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28425222462</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2278737425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13825514361,
      "node_id": "LE_lADOABII586PurnmzwAAAAM4EJt5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13825514361",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T20:49:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2231402133,
      "node_id": "PRR_kwDOABII586FAH6V",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2231402133",
      "submitted_at": "2024-08-10T10:44:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2231417621,
      "node_id": "PRR_kwDOABII586FALsV",
      "url": null,
      "actor": null,
      "commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "👍 left a few things I've noticed, ignore the nits if out of scope",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2231417621",
      "submitted_at": "2024-08-10T10:45:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13827622778,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM4MMd6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827622778",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "created_at": "2024-08-10T11:02:36Z"
    },
    {
      "event": "labeled",
      "id": 13827642616,
      "node_id": "LE_lADOABII586PurnmzwAAAAM4MRT4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827642616",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T11:15:27Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2281111100,
      "node_id": "IC_kwDOABII586H9v48",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2281111100",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T11:17:11Z",
      "updated_at": "2024-08-10T11:17:11Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the [conflicts](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277190642). More feedback has been addressed.\r\n\r\n> (The drahtbot guix build failed due to a silent merge conflict, I presume)\r\n\r\nFixed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13827843274,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM4NCTK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13827843274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T13:19:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2282276144,
      "node_id": "IC_kwDOABII586ICMUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2282276144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T20:59:27Z",
      "updated_at": "2024-08-10T20:59:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit c2d15d993ef06d97d4c117012bda6efa3dcbac45<br>(master) | commit 9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`32718731b66fa579...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/SHA256SUMS.part) | [`1fab9153bcd288be...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`5f7e9224081d972f...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-aarch64-linux-gnu-debug.tar.gz) | [`4f2ebfc23ddceda5...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`a93bc3fa935dfadf...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-aarch64-linux-gnu.tar.gz) | [`3cc2ff8948fa899d...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`99730a0c004bc3db...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm-linux-gnueabihf-debug.tar.gz) | [`a0d150805cd81152...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`5a12c90fb5d29dba...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm-linux-gnueabihf.tar.gz) | [`08e992a21f2bf799...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`c8ea2e5320c64f1e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin-unsigned.tar.gz) | [`61b2f96edc6a038d...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin-unsigned.zip | [`d1e09bf51603721c...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin-unsigned.zip) | [`17e1e1f520a91602...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin-unsigned.zip) |\n| *-arm64-apple-darwin.tar.gz | [`ece8050e1f74be5e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-arm64-apple-darwin.tar.gz) | [`9e3cf103f511cde7...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`cf7ad7592957fefc...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-powerpc64-linux-gnu-debug.tar.gz) | [`ea2c4b11cf2f88fd...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`f2b5b501f220b3ed...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-powerpc64-linux-gnu.tar.gz) | [`deb853798eb19d31...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-powerpc64-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`1f77b7981aebf7e7...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-riscv64-linux-gnu-debug.tar.gz) | [`3226082b3c39a8cf...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`b6d59d74103eaaef...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-riscv64-linux-gnu.tar.gz) | [`b1c42ee17321f910...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`c3035c4a841bbd6b...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin-unsigned.tar.gz) | [`84c25afd2415e35b...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.zip | [`6b2cef38732b59bd...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin-unsigned.zip) | [`d080ade93e33fed0...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin-unsigned.zip) |\n| *-x86_64-apple-darwin.tar.gz | [`610f7ff43cd32e87...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-apple-darwin.tar.gz) | [`8f25211c18f59873...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`460af85bfd9e7a29...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-linux-gnu-debug.tar.gz) | [`b2679e869fa8187e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`48d02aa0e3f4a6cd...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0-x86_64-linux-gnu.tar.gz) | [`bf1a6e0864f5cc0e...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`d017f099a0a35f8e...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/bitcoin-c2d15d993ef0.tar.gz) | [`e346a2a4572d2af3...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/bitcoin-9e1d4f3ad4c5.tar.gz) |\n| guix_build.log | [`6643a4e45f91d3aa...`](https://drahtbot.space/guix/bitcoin/bitcoin/c2d15d993ef06d97d4c117012bda6efa3dcbac45/guix_build.log) | [`931faed9c884d257...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/guix_build.log) |\n| guix_build.log.diff |  | [`7a8d0b3925122c0f...`](https://drahtbot.space/guix/bitcoin/bitcoin/9e1d4f3ad4c5e2e6e13d613ce2f85c6fe4741fe9/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2282276144",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13829260816,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM4ScYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829260816",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T20:59:27Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2282278895,
      "node_id": "IC_kwDOABII586ICM_v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2282278895",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:25Z",
      "updated_at": "2024-08-10T21:13:25Z",
      "author_association": "MEMBER",
      "body": "@fanquake in  https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277722262:\r\n> Had a look at a Guix build. Stripping the macOS binaries is broken:\r\n> \r\n> ```shell\r\n> -- Installing: /distsrc-base/distsrc-ad2140d4d8cc-arm64-apple-darwin/installed/bitcoin-ad2140d4d8cc/bin/bitcoind\r\n> /root/.guix-profile/bin/llvm-strip: error: unknown argument '-u'\r\n> ```\r\n\r\nFixed in https://github.com/hebasto/bitcoin/pull/321.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2282278895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13829333131,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM4SuCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829333131",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:26Z"
    },
    {
      "event": "subscribed",
      "id": 13829333138,
      "node_id": "SE_lADOABII586PurnmzwAAAAM4SuCS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13829333138",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-10T21:13:26Z"
    },
    {
      "event": "referenced",
      "id": 13833876799,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM4kDU_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13833876799",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eff463b85e33c712d2d0c0ee9f80c46f930a10f4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/eff463b85e33c712d2d0c0ee9f80c46f930a10f4",
      "created_at": "2024-08-11T10:29:07Z"
    },
    {
      "event": "labeled",
      "id": 13847738907,
      "node_id": "LE_lADOABII586PurnmzwAAAAM5Y7ob",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13847738907",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T12:23:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2284184677,
      "node_id": "IC_kwDOABII586IJeRl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2284184677",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:11Z",
      "updated_at": "2024-08-12T14:46:11Z",
      "author_association": "MEMBER",
      "body": "@fanquake [wrote](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277886777):\r\n> I think we can improve the output when `-DWITH_CCACHE=OFF` is used. Depending on the system, that output might be:\r\n> \r\n> ```shell\r\n> cmake -B build -DWITH_CCACHE=OFF\r\n> < snip >\r\n> Use ccache for compiling .............. ccache masquerades as the compiler\r\n> ```\r\n> \r\n> We should probably at least indicate that the option was respected by the build-system.\r\n\r\nThe issue, along with another bug I've noticed, is fixed in https://github.com/hebasto/bitcoin/pull/325.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2284184677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13850398930,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM5jFDS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13850398930",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:13Z"
    },
    {
      "event": "subscribed",
      "id": 13850398947,
      "node_id": "SE_lADOABII586PurnmzwAAAAM5jFDj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13850398947",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T14:46:13Z"
    },
    {
      "event": "reviewed",
      "id": 2233879918,
      "node_id": "PRR_kwDOABII586FJk1u",
      "url": null,
      "actor": null,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2233879918",
      "submitted_at": "2024-08-12T19:41:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2234121687,
      "node_id": "PRR_kwDOABII586FKf3X",
      "url": null,
      "actor": null,
      "commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 67b1e236334f38ec4e4d2251dbdfb790f20ed88b\r\n\r\nBuilt with `GUI` on macOS 14.4 following the instructions in `/doc/build-osx.md` (part of this PR) and run `./build/qt/bitcoin-qt` successfully.\r\n\r\nA few observations:\r\n\r\n- Regarding the configuration: in the documentation says:\r\n  \"_If `berkeley-db@4` is installed, then legacy wallet support will be built_.\"\r\n  But I have to use `-DWITH_BDB=ON` in order to get that functionality.\r\n- After I compile with `cmake` I get this warning (`test_bitcoin`):\r\n  `ld: warning: ignoring duplicate libraries: '../secp256k1/src/libsecp256k1.a'`\r\n",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2234121687",
      "submitted_at": "2024-08-12T22:27:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "referenced",
      "id": 13864956555,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM6anKL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13864956555",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7c23041d058b278213ba0a7e2ad9732a4216ec83",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/7c23041d058b278213ba0a7e2ad9732a4216ec83",
      "created_at": "2024-08-13T14:57:53Z"
    },
    {
      "event": "commented",
      "id": 2288437679,
      "node_id": "IC_kwDOABII586IZsmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288437679",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T10:52:41Z",
      "updated_at": "2024-08-14T10:52:41Z",
      "author_association": "MEMBER",
      "body": "Is CMake meant to know about/be able to figure build-time dependencies?\r\n\r\nFor example, on master, if I `./configure`, and then call `make check`, `make` will compile and then run the tests; or, if I `./configure` for macOS, and call `make deploy`, `make` will build `bitcoin-qt`, and then pacakge it.\r\n\r\nHowever, with CMake, it doesn't seem to figure out what order to do things in. i.e it just tries to run the tests, without compiling them:\r\n```bash\r\ncmake -B build\r\ncmake --build build --target test\r\nRunning tests...\r\nTest project /bitcoin/build\r\nConnected to MAKE jobserver\r\n        Start   1: util_test_runner\r\n  1/133 Test   #1: util_test_runner .....................***Failed    0.13 sec\r\n<snip>\r\n\t133 - walletload_tests (Not Run)\r\nErrors while running CTest\r\nOutput from these tests are in: /bitcoin/build/Testing/Temporary/LastTest.log\r\nUse \"--rerun-failed --output-on-failure\" to re-run the failed cases verbosely.\r\n```\r\n and it tries to package `bitcoin-qt`, even though it hasn't built it:\r\n```bash\r\ncmake -B build -DBUILD_GUI=ON\r\ncmake --build build --target deploy     \r\n[100%] Generating Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt\r\nCMake Error at src/qt/cmake_install.cmake:41 (file):\r\n  file INSTALL cannot find\r\n  \"/bitcoin/build/src/qt/bitcoin-qt\": No such file or\r\n  directory.\r\nCall Stack (most recent call first):\r\n  src/cmake_install.cmake:67 (include)\r\n  cmake_install.cmake:52 (include)\r\n\r\n\r\ngmake[3]: *** [CMakeFiles/deploy.dir/build.make:77: Bitcoin-Qt.app/Contents/MacOS/Bitcoin-Qt] Error 1\r\ngmake[2]: *** [CMakeFiles/Makefile2:606: CMakeFiles/deploy.dir/all] Error 2\r\ngmake[1]: *** [CMakeFiles/Makefile2:613: CMakeFiles/deploy.dir/rule] Error 2\r\ngmake: *** [Makefile:283: deploy] Error 2\r\n```\r\n\r\nAre these just bugs with the implementation here, or an issue with CMake?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288437679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2288502723,
      "node_id": "IC_kwDOABII586IZ8fD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288502723",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T11:31:32Z",
      "updated_at": "2024-08-14T11:31:32Z",
      "author_association": "MEMBER",
      "body": "> Are these just bugs with the implementation here, or an issue with CMake?\r\n\r\nThat's by CMake design.\r\n\r\n> However, with CMake, it doesn't seem to figure out what order to do things in. i.e it just tries to run the tests, without compiling them:\r\n> \r\n> ```shell\r\n> cmake -B build\r\n> cmake --build build --target test\r\n> Running tests...\r\n> Test project /bitcoin/build\r\n> Connected to MAKE jobserver\r\n>         Start   1: util_test_runner\r\n>   1/133 Test   #1: util_test_runner .....................***Failed    0.13 sec\r\n> <snip>\r\n> \t133 - walletload_tests (Not Run)\r\n> Errors while running CTest\r\n> Output from these tests are in: /bitcoin/build/Testing/Temporary/LastTest.log\r\n> Use \"--rerun-failed --output-on-failure\" to re-run the failed cases verbosely.\r\n> ```\r\n\r\nThe `test` target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n\r\nThe CMake's way to handle this is to use [workflow presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html#workflow-preset).\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288502723",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2288526278,
      "node_id": "IC_kwDOABII586IaCPG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2288526278",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-14T11:44:37Z",
      "updated_at": "2024-08-14T11:44:37Z",
      "author_association": "MEMBER",
      "body": "> The test target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n\r\nOk. So what about `deploy`? If it's a custom target of ours, it should know to build `bitcoin-qt` first?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288526278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "referenced",
      "id": 13894651060,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM8L4y0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13894651060",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a68171413e0a4ad327f4e00295c9d0af900c299e",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/a68171413e0a4ad327f4e00295c9d0af900c299e",
      "created_at": "2024-08-15T11:15:45Z"
    },
    {
      "event": "commented",
      "id": 2291509848,
      "node_id": "IC_kwDOABII586IlapY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2291509848",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T15:20:36Z",
      "updated_at": "2024-08-15T15:20:36Z",
      "author_association": "MEMBER",
      "body": "> > The test target is generated by CMake. Such targets [cannot](https://cmake.org/cmake/help/latest/command/add_dependencies.html) be subject to top-level target dependencies.\r\n> \r\n> Ok. So what about `deploy`? If it's a custom target of ours, it should know to build `bitcoin-qt` first?\r\n\r\nFixed in https://github.com/hebasto/bitcoin/pull/330.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2291509848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2292561601,
      "node_id": "IC_kwDOABII586IpbbB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2292561601",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T01:33:14Z",
      "updated_at": "2024-08-16T01:39:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Built and ran tests successfully with 67b1e236334f38ec4e4d2251dbdfb790f20ed88b\r\nMore details:\r\n\r\nDebian 12.6\r\ncmake version 3.25.1\r\ngcc/g++ (Debian 12.2.0-14) 12.2.0\r\n\r\n```\r\ncmake -B build\r\ncmake --build build -j18\r\nctest --test-dir build\r\n```\r\nAlso sanity checked by running bitcoind, creating a wallet, and generating 101 blocks on regtest. ",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2292561601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 13906585599,
      "node_id": "LE_lADOABII586PurnmzwAAAAM85af_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13906585599",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T06:13:03Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "referenced",
      "id": 13908740695,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM9BopX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13908740695",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3c200d5d1a17636416c7b7382a2ae44d5fda59b3",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/3c200d5d1a17636416c7b7382a2ae44d5fda59b3",
      "created_at": "2024-08-16T09:46:49Z"
    },
    {
      "event": "referenced",
      "id": 13911865353,
      "node_id": "REFE_lADOABII586PurnmzwAAAAM9NjgJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13911865353",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "71384dae3495c10611b7fc124e3aebba077b9e71",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/71384dae3495c10611b7fc124e3aebba077b9e71",
      "created_at": "2024-08-16T14:46:55Z"
    },
    {
      "event": "commented",
      "id": 2293782491,
      "node_id": "IC_kwDOABII586IuFfb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2293782491",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T16:11:51Z",
      "updated_at": "2024-08-16T16:11:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tested with 67b1e236334f38ec4e4d2251dbdfb790f20ed88b that I'm able to do a nix build of the `bitcoind` (no GUI) and `bitcoin` (GUI) nix packages with the following modifications to the current nix package: https://github.com/0xB10C/nixpkgs/commit/fb77e0cf5194e48563e58eb418de8c2f9e0b48de. I also tested doing a development build with https://github.com/0xB10C/nix-bitcoin-core. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2293782491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyMzE3ZTI3YjdmYjg2ZGY0ZTMyY2QxNjc0YzA2ZTA5Y2I4MDgyNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "tree": {
        "sha": "2215ff127b25ea3877b81cd988eb87058b8e254e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2215ff127b25ea3877b81cd988eb87058b8e254e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2215ff127b25ea3877b81cd988eb87058b8e254e\nparent ee367170cb2acf82b6ff8e0ccdbc1cce09730662\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1713259994 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832533 +0100\n\ncmake: Add root `CMakeLists.txt` file\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mNUACgkQQQEIES5+\nqB/+nQ/+ILWAzym8WIZhMKG5SbE58QRPgG+o2IhYTZd5HRTHztxfwLbXHPUM6MCD\nayyo5BKGv/X1sTht05fjG+fUOyejNSgo7N4mqo5eaybEviu6rUKNl4ET8YztfjIQ\nTCaK7dYIFuHsabhx9XMscUQUJlpaSlp4PYWufnxt7U+zQjocohb+V7BVj+9sun4/\n4VQhEkr+9Y1fGZT0ZRYm2klIPSFpVApPCvgd+shlSM1TJF9i7frEOH8DaNKMJPCj\niDIzAtlv/mf7kniiF5qR4ynb/sqcmZ7GmI7raQvFntfWujeCdwpNfsIBbTTgy4MO\nOdb1dx38630iDrSmFRxDnxspNOGtH9vaDocQMISuvdZMOSwEe0K9XocCdXm3U/U1\nmStV9VqRMWG7kV4sVSWAEOwmTQan1KdO4YFJo8ztMWzwp83LNvwLAkFYgSgHGMpl\nFZ+/zbP7fhlHkBGecO2tDgGS0Xznl0oRlI514ryfpY6rZJgovG/+bKfoXJYCH1MN\nwmaOAG4oT7TLVo3SvYxL+md9os4EltRhHTp0jaqZ1JPEkdw9w6qj7djUSpZBn2S/\nZM4Y8K2wLJ1ArH+VjfRCPQAu9ObNJqk0SAZ61Wz/g0yKufZinKZqsC+5ksFJLDeP\ncVYuYUWkO9uTMp+EdaFE2ZVibudHjUx/PAsns7+Ww2DF02Dlt7o=\n=K7E8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee367170cb2acf82b6ff8e0ccdbc1cce09730662",
          "sha": "ee367170cb2acf82b6ff8e0ccdbc1cce09730662",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee367170cb2acf82b6ff8e0ccdbc1cce09730662"
        }
      ],
      "message": "cmake: Add root `CMakeLists.txt` file",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:22:13Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-16T09:33:14Z"
      },
      "sha": "a2317e27b7fb86df4e32cd1674c06e09cb808248"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwNjgzODg0YzVmZDc4ZGJmNzgxNjQzNDQ2NGU2NTExYjlkNGU0ODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70683884c5fd78dbf7816434464e6511b9d4e486",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70683884c5fd78dbf7816434464e6511b9d4e486",
      "tree": {
        "sha": "3ff54bbd3b7455276605d90d45b183d7064e6b8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ff54bbd3b7455276605d90d45b183d7064e6b8a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3ff54bbd3b7455276605d90d45b183d7064e6b8a\nparent a2317e27b7fb86df4e32cd1674c06e09cb808248\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832854 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832854 +0100\n\ncmake: Introduce interface libraries to encapsulate common flags\n\nAlso add a sanity check for non-encapsulated (directory-wide) build\nproperties.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhYACgkQQQEIES5+\nqB9b2w//QZuR8c0PTuOdBiy5EeQLV+TnKLHHaLhOWrJc/HbC9zMYNz3Hcry4nHZg\nYSDvUnZh+IdYLx+hUl+s3MW0lUX93kTk3wjWys9tM+g+9UukisVh7QJKvaXVd5B3\n6jpmpYSmJI10y7DfAWtqFXDZlN2EOXXBM/uz4vxzr+LCNCtNXXfO/zMv32+9jr7G\nMxSZ8dLeIksJe2l9Om95SAP2wQA9fB9UlIeaCUdedV4JvrPtHWYvcVDaLWnJqsQI\nAiESofs+NgY3rusR0iUTdeFCrklFqkeJleSslKZiOYcmbebtOr3dJADdTIM9MW/z\nA6HifcRJKYgLNdCnB1NbhPoxhneK81aUMIxVKLoWsCD7wl/80ur4JLQgD/s6zb0F\not8TxL31MoR71V2ZfoIfn6orlrtch5I4vqoIE/0e8pv/OZrx4aQE2einDjKMTvru\nYIAL2NbSjUTO81ZfingfVAyLwaVBag3emyCwEvsTjzZLHEUXtlxOGklpB4i9mbj0\n8K0uzH0mqf8uxA/9yVg9tWc7dlxOfKSKK2acZx0NKTzS3j8Z4C85pp5xP33DwT2r\niXiXos/37YDE9sofCPe4E6Cdg7R8rku+GwR4rtYi+uT6F/enASWWqV5JJo1hYjS6\n1gc33cEbfdaoXt7VxGn/ircD1X/GYskAYOo/J6PKm39LPCWh3k0=\n=UcEf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2317e27b7fb86df4e32cd1674c06e09cb808248",
          "sha": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a2317e27b7fb86df4e32cd1674c06e09cb808248"
        }
      ],
      "message": "cmake: Introduce interface libraries to encapsulate common flags\n\nAlso add a sanity check for non-encapsulated (directory-wide) build\nproperties.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:34Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:34Z"
      },
      "sha": "70683884c5fd78dbf7816434464e6511b9d4e486"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZlNWNkYWNlNWZmYmE0NmZiNzk4MWVmYjgxNjYyMTk2MmQzODczZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe5cdace5ffba46fb7981efb816621962d3873e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5cdace5ffba46fb7981efb816621962d3873e3",
      "tree": {
        "sha": "231aa43075990cdc304d45e79ac80b3b1e2814f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/231aa43075990cdc304d45e79ac80b3b1e2814f9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 231aa43075990cdc304d45e79ac80b3b1e2814f9\nparent 70683884c5fd78dbf7816434464e6511b9d4e486\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720047607 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Print compiler and linker flags in summary\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB/RoxAAmThUGrMoPBb1ai9ehFXfbzZI4oj5e+v4+aoH4AjtWKzhIJaivjQnk3Qn\nX0+5qdlXDVn/jh74NdwZO7fW960mTazv7udhQZXgtQqd4PHW9Nh3kmPRzII1aVzk\nrI7rLIuRAkZgtqwp3Ny+KqgeUi3e6e3iVe5fVBaVhB11RXnsQ0AmBGAJx06sx4AO\nleSUHCLwerZ1lhkL3AmWWbCi6jeSecmW/rjA82itDwfgZ1FcosQPyWrkv3MjVm4J\n0uCw7D9hMqevr3L1QxwRwcv+lM6+w5uqCkDHgswSXtq8DpxYPzF74aUsid5n/QBq\nB5Ujen484FoORQwR1oNeWa0mSlsRcJkhJmMYCgSpz353wBP6BhQa/XWwthju2wre\n82y0Et7sUiRUFWnLnse5HYdTcgLjpPHrGqhrpvAMQGCuorzqyVR71KdbKRzyrBGV\nJfbpuX4XSZ7s/x14w/dh4FqsqDt7ajbdQ4gM5C0FTf46KhqyEvyZmz1TXs9KEaUJ\nPOYjgpJ7QVDbztjJnj5Ie6CzBMJogkWfbBimYcHxzTKhaeFB9jZOOex0ql1Rq6QG\nDnvSdb+6hz/2e1ITVbRj440hbipTHQsHq0xrfP6DqmrxhR3f2KG+sns2d7o8FqKh\n0ibV5jr5oZBY3UBLXw5M1solP0OcFHn/dF4rCJXoo+0iqRaI1F4=\n=EUdH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70683884c5fd78dbf7816434464e6511b9d4e486",
          "sha": "70683884c5fd78dbf7816434464e6511b9d4e486",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/70683884c5fd78dbf7816434464e6511b9d4e486"
        }
      ],
      "message": "cmake: Print compiler and linker flags in summary",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:00:07Z"
      },
      "sha": "fe5cdace5ffba46fb7981efb816621962d3873e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3ZDY4N2ZjMWY2YWNlYWVkNzcyNWUxZTkwNGEwOTNlYWQ2OGQ2ZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27d687fc1f6aceaed7725e1e904a093ead68d6e6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27d687fc1f6aceaed7725e1e904a093ead68d6e6",
      "tree": {
        "sha": "eede9185e49d2a5c3090ca1680788e09836f557e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eede9185e49d2a5c3090ca1680788e09836f557e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree eede9185e49d2a5c3090ca1680788e09836f557e\nparent fe5cdace5ffba46fb7981efb816621962d3873e3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964607 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Add `config/bitcoin-config.h` support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB8/jxAAvifj7v5UzXaWo6e+RcgAYf6WgnOFlmhCBDR3EDvDtn/hSSyycDtI6nD0\ntH+1LoIdSYRpcU+lYc/aGg8BAVmGtN3zdueV5bKof1aXV/LrFh99yOnJXMsRB/iV\nA16AnzZ7CwPPGTYI6uJD/1xnkYJdSqlxId5Zvs1NfbBcGWWCBo9i4yhTiBOfxdXH\nf63LJ72BLTSnaKRnS6IUcvA49OdyRNDfym5xeBmGFKKCoNuZt5FPdjwgj019NRrh\njpFU6EDwnoML4wAN6nmKFnp0NHqcFnaNtH+L8Yw5F2pjT2nfkJzQFXT3+s+Wm7d/\njeca980FmDG58SKV5YASg95AaqH4TGumQZ7WS8PBFdFMpHwjUdggGVxqJq0LLnia\ngoCNnYw6zMiB8HRq5InTwRZL6/IX3pjZIrdbSUGafp8nZsT8vkz0riOkNBtbh+7w\nBc0tO4WuAzhBht+JkzIiYZB6ffCrDOzHgEEdWGnyIu61IgKhbLJ7ar+o2/xyG6H7\novrS6cXY1Fp8o96e9tDuP1TpY1yKMcXXB9UOD2tFGsN7DEQBo1HrSLZLcwVkYZNI\nVK1kgFRJlC5HsOiNriM/ASkGwJxfGx4LcuX6Ez2FqRWaVpGzRx8r3jCKMYjIzwxz\nd3i0gApzR6zdAdEtGpX6i5xJHBiBf7izBUxikQTbdHc9csf0b0M=\n=jFti\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe5cdace5ffba46fb7981efb816621962d3873e3",
          "sha": "fe5cdace5ffba46fb7981efb816621962d3873e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5cdace5ffba46fb7981efb816621962d3873e3"
        }
      ],
      "message": "cmake: Add `config/bitcoin-config.h` support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:16:47Z"
      },
      "sha": "27d687fc1f6aceaed7725e1e904a093ead68d6e6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3MDY5ZTJiYjBiYmRhY2YxNmNmMzRlZmQzYTMzMzkwZGUwMzAyMTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07069e2bb0bbdacf16cf34efd3a33390de030217",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/07069e2bb0bbdacf16cf34efd3a33390de030217",
      "tree": {
        "sha": "c578e1feefa8518d5c62ba045594b8bcef9baa2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c578e1feefa8518d5c62ba045594b8bcef9baa2e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c578e1feefa8518d5c62ba045594b8bcef9baa2e\nparent 27d687fc1f6aceaed7725e1e904a093ead68d6e6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1711212657 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Add introspection module\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB/xHQ/+Ld8slY9RzMaUXf/YHVn/qAzp7KREADJ5imi5j1KQ5XBqaQws1YU1S1DR\n6B9BzVxQPW72IbhI0v+TQU2dG41tHo9fl33J0sFvU8+8To1B2nSafmITVhoSP8NE\nXcHXaIcS3a4MyHL0WUnQMTc5144yGmMlq5p6UmZGabAfoDUp8QKPXa3TVE80wY4S\n7xhzem89WaPiAQBIFs5mxQ6DP1EU2rH19AggsKNHSGZSCMUsFmFkJI6hANvPcKNg\nA+ONvxkzACcDjheIQA9thtNLbHyudKx6qcYlkEWNqfSqkM5MnBtkfSb3DS352Xg5\np4h3hvAv/TcYgtSu/wSsFpxrXJU7UaJjTYMvQFL67BScUTq48dlbsAYilghijC6J\nyLD8Z2d1deiTWiUhfVfNpoPItr5hFuickd4q/VlomCGnuH6AGrG9PjbkuU5405Nm\nqGmiUJjFBlrHeE/3EK8DRZpidZ5f4yWuylh+bXfdwFURjI7Vov6fjiPTiKasg/9C\nJJGuz2MK15VIAziKqCrgtPcU9NGMr2/5ZHRx1SFi2t7/TkgbsSlEHwhEJTG+5OK5\nlvNfdti/HImbk3jMFLMHbp6pZrrMioRnEQky8DtQKn+g8RCDMa7TLxDa3gGaG+P8\n2GTRYyyD8IUSjcsmiG62HBJSlBU7vPS2iUtzxj+KA4XA/sTcS5Y=\n=ZBxl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27d687fc1f6aceaed7725e1e904a093ead68d6e6",
          "sha": "27d687fc1f6aceaed7725e1e904a093ead68d6e6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27d687fc1f6aceaed7725e1e904a093ead68d6e6"
        }
      ],
      "message": "cmake: Add introspection module\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-03-23T16:50:57Z"
      },
      "sha": "07069e2bb0bbdacf16cf34efd3a33390de030217"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkNzJkMDBmZmUzNGM4NGUyOTJiMzA1ZjY3OTcyMDEwNDBkMzFhNzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd72d00ffe34c84e292b305f6797201040d31a72",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd72d00ffe34c84e292b305f6797201040d31a72",
      "tree": {
        "sha": "3ce00aebe4de37172df06085c43105c883d5eda2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ce00aebe4de37172df06085c43105c883d5eda2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3ce00aebe4de37172df06085c43105c883d5eda2\nparent 07069e2bb0bbdacf16cf34efd3a33390de030217\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704821147 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Add position independent code support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB/m7A/+JP+6fvpzFAI/vLT+7LhFPJEC1hs4F/0qNYQ5gDHngrTIv/FbmLGd9sNE\nLUKeK11GP3bVR+kZVlC5wWMlbie50ezvj0BgRRA25R3tS8iUV2wOCScITwQErjoV\nekGnkhwqmSnlCfzl0b+WEi8Ojt2aN7xYLe5f+TPwiEtu3WSCkiF51xanrNBRh3L6\nBQOML/yHBZ14Z0VCiSmhqcFJrFFWQd5bSsnicH0vifuFxndmxhXHKfDGqmENRi7B\nuqCaz3Ao7oCmhpVxKiO5EWFBaxUKIFJ9Z8jqbdxrq/hslkZXTeOJQmy70JHq4FCV\nt6Og2NFx2OpQuC5DUCJb4uHBucv0yP5hh5JlbgQkwePyMf1XUAApu0Zdnx4iA3xI\np7ez1ApgaKQQ/T5Hz5VKiR6LfrVmXDEEYpRshB2MV5Vv5cabEEEtkmUFrIMx+esS\nX4ZcgVfGKz5uuAusUV+lyp+CnikPAgB3+Ot6AbDsU6DXDS3C2DSQYxDfD0YCHAs3\nfNqDsAZhTaxYmQZW9cmQXHXkSzWJkvLPUm7QkmDY0uW2CUwWtHMElhvRhB/TwmCj\nBtntNkbk27OwpTvchxMesxCDV02thSq3cTzfn+k9aJizJgJM+HdUrjjdPSaeyg5w\nJe5TH6kdN7WocQSJChWqY+lruxrJaFWwTm5d12gXQdzyuNPsKcM=\n=DUEs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07069e2bb0bbdacf16cf34efd3a33390de030217",
          "sha": "07069e2bb0bbdacf16cf34efd3a33390de030217",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/07069e2bb0bbdacf16cf34efd3a33390de030217"
        }
      ],
      "message": "cmake: Add position independent code support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T17:25:47Z"
      },
      "sha": "fd72d00ffe34c84e292b305f6797201040d31a72"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM1Y2ZmYzQ5N2Q4ZGIzY2YzZWVlMzVjMTUxM2UzNDM1NTU4ZjA1NmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35cffc497d8db3cf3eee35c1513e3435558f056b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/35cffc497d8db3cf3eee35c1513e3435558f056b",
      "tree": {
        "sha": "95e0b1c0641796c2b7a626ee3847ecbf9c6206e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95e0b1c0641796c2b7a626ee3847ecbf9c6206e5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 95e0b1c0641796c2b7a626ee3847ecbf9c6206e5\nparent fd72d00ffe34c84e292b305f6797201040d31a72\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719738831 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Add POSIX threads support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB/iOhAAmiF+f1/elI4lxTcMe9Dc0nJBW3rtuN+RwvO2UhKwj2Hq9qY67fMeLQZT\ne7MML/7BXXbtcyALafdN+Nxd5y3oyltoiDWIukVLMVHa2BrJhHwryT6JGyxeDUXk\n2/3i/ZqofIPlxpblDrA/aG6PlkmnsmLYPIZFOlgJ399WZVj/aV/MQvpNGiYi2PZB\n/Pza99V7n23Mmy20r4aW0kGwiMbJQbutNguELTQj2EuM7LZVTnNSGfPxyBSCshER\nbepGn6dddMxa7bbIDFMe2ptEu+IPqEGtecgJtRKRuLDoj+9RiQ3uJFBebd5v2+yN\nOHJVcSMeuwXtf0p+EzudBa3sy/E1126bEJfxottvfQv2cHvprVsBvYLRACmUq1UY\nVmC+YBRwSeMeTK1d4Id0nQxRt+ANoF/nav9NG6OI6/v4/166nifck1sJRO7tJOQE\ns5OdyguDZtO+O1OEMRQSnaIId6laUQU+MYCqC/RVdzKSw7vo6nXhdRIabrwRJAqY\np311KPR1WgHrObhgcmfHIJPGvVn3j1z4hXCDdQ59ystIQCnyTRVfPnHIF1UVS+3F\n8XFfEL5pT0OxlCuAU10mOecM+0FZ5YASA0iBr7Wk8BwQbo4iGLe/EQ4PbkdtOkrO\nmzF/ylimcPzu23jrh5242d5SA0zwQW5ea6RCpGYK8svtnO83R9k=\n=8abL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd72d00ffe34c84e292b305f6797201040d31a72",
          "sha": "fd72d00ffe34c84e292b305f6797201040d31a72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd72d00ffe34c84e292b305f6797201040d31a72"
        }
      ],
      "message": "cmake: Add POSIX threads support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:13:51Z"
      },
      "sha": "35cffc497d8db3cf3eee35c1513e3435558f056b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhMGFmMjk2OTdiNjJkMzJhZjZmNjBkM2VjNzBjZDJlZDRkNzI0M2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
      "tree": {
        "sha": "d0a714a777c2484acd7c374fa15c79a25477395b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0a714a777c2484acd7c374fa15c79a25477395b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d0a714a777c2484acd7c374fa15c79a25477395b\nparent 35cffc497d8db3cf3eee35c1513e3435558f056b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832826 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832856 +0100\n\ncmake: Add `TryAppendCXXFlags` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhgACgkQQQEIES5+\nqB+vEBAAvTwXgmxuea2/bMZ2jUxvyX8W7OScRakHImsxnZ64se+yQuozTLzeG0GQ\nYtwl3aKhz+yY2i+nJnhuehqRpbffXpXEo+KyyqATCkahXD9a2zwtXmuU1upq1LdM\ncBdvgxsq4Y1M58vlnGdGrXhnReNGcTb+41j2Hq75Bx74riz3iy4FfYTH3Nn5CWs0\nU/6d8JfdTf2giW9A7NT/YM/I20r/a9H22WDPvngumB3vhs5LM/FW5nt/PqOOIJGo\nBuSSd5AtvXxCrhz03i0wTJBq1Ei09NFI73YwtqmY7Vcl6wBhVQz0DUpVIXfmdNWN\nQu/I/dSfS37NUgqquGkavNkFTz9fwjPpSqjTTWnke9yf4Qyft0M0LL/JeUuBbXrc\na45HC8Aw2BHShoA80dpMQlwxquYDTrNpeG18qxlE5h/tQxrH4CoBjOETi6i8TgO0\njoaMZv6bp4j+ZCDhNTa96d2reEk1bu6Bb9K2+XC/hsUMIIHWbKzG3mWET29l2Ghg\ngYna6mNQ2MKRdF+dA2MgQTGd38cQdE2+BMABmk34g9xFjbttZvEcKivNi2Gjh72l\nhpwT9ZNudpXo2RtQ4YXVWdkATDUHhrFzcwz9tK7GzZRM2b2JejAO9Tf8y4Ndyoe0\nzuJ63T4bW6n/9vqZ5gzoGAgmM8IC0mBg1s2+U+HtAVMtO+B0mao=\n=LAEs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35cffc497d8db3cf3eee35c1513e3435558f056b",
          "sha": "35cffc497d8db3cf3eee35c1513e3435558f056b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/35cffc497d8db3cf3eee35c1513e3435558f056b"
        }
      ],
      "message": "cmake: Add `TryAppendCXXFlags` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:36Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:40:26Z"
      },
      "sha": "4a0af29697b62d32af6f60d3ec70cd2ed4d7243c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5ODMyNzkzMWJkMGI1ZDkwNjc4ZGRkMTc3MGU5ODYyMjY2YjM5NmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f98327931bd0b5d90678ddd1770e9862266b396e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f98327931bd0b5d90678ddd1770e9862266b396e",
      "tree": {
        "sha": "4799a86d98655319b12f1821779eb77d0237c5e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4799a86d98655319b12f1821779eb77d0237c5e7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4799a86d98655319b12f1821779eb77d0237c5e7\nparent 4a0af29697b62d32af6f60d3ec70cd2ed4d7243c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832843 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Add `TryAppendLinkerFlag` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB/IBxAAjuGaaqqsLD62J3RA7qIrJz2j67ESoOvuDOOclUuEZJ3w3Hi3F3he7Fx0\nOLAydJHYD0vxfbvCdDFLUeIQUxr0zRuE2beS2QvJYPZpyH9UYDU9IQHcNgNAYfCc\nL0X9yQ5r+MSNMRyrxAd9Bglc71071I6XfxLy8kVZyiwUEW9cEbDQ51u0MZZ2xCll\n8hOPMpkOfI39PQLN9qTIt5xV3swLskLdHFJZnM37OTejB2qwWHKvQG+TrEiD1kU7\no8VW0LH3JxWbFlYTmgGP9fyUAfnrF4oPBUKzNKRCaqik0cwq1PGWqO7s1JZMI4Bc\npFc0qeB2qaE81950rWAU7ylW/cNgLn4phAH1E4rcvyOB0QxjnCOHiJMEYxUlSLPE\nvwRXGdwA+kMgTOI84uHyy9JjEWlFU5S8aD+yxB942UKODc8buj8iWS5zyodpyXG/\nB1RuC5RNbCU+zZtpmY1vOVldluJt6VRANVC9ulnIygKlVsYNJNlvyeFm2hSbxFV9\nvgqVt5KFgIfBw6DGGhTamG61Y4Grzkc1anpeN/2SYYAhar+Rsd4gPKVGriOjAIA1\nZFaIyqcTGvKPwCmM73oGlyVniBZ928XScDFH6kOtWjhU4WK/1faAPDGXMVf8K3Nc\nUDnBi8q8TlOuAut6+M1TkuUpVbMf/lXuDbfMmNTUY9dn8aTO6JA=\n=aKza\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
          "sha": "4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a0af29697b62d32af6f60d3ec70cd2ed4d7243c"
        }
      ],
      "message": "cmake: Add `TryAppendLinkerFlag` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:40:43Z"
      },
      "sha": "f98327931bd0b5d90678ddd1770e9862266b396e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2YjVlNzMyYzhiNDlhMmNjMTRmMzRhYzcyYjIxODkzODljNmIyN2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6b5e732c8b49a2cc14f34ac72b2189389c6b27d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6b5e732c8b49a2cc14f34ac72b2189389c6b27d",
      "tree": {
        "sha": "b5bf52181105b5e50174b9fe11233c8e4ac7be3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5bf52181105b5e50174b9fe11233c8e4ac7be3b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b5bf52181105b5e50174b9fe11233c8e4ac7be3b\nparent f98327931bd0b5d90678ddd1770e9862266b396e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818707 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Add global compiler and linker flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB+jVQ/+J4HDG6dlG97T9gCllrOAwSbgq4186bpHUTkkkZReQMZGgioqjgc/0Cnc\n+ITKH5Wuhb27QJTpxC5PfVK/yU0PV77CDnB4/RNIOZgABlfXCjBieoqePcEhgHEJ\nUwqThn7+6iKEk3HMBqZ6T1hjk+avQpxUrbq7nVG0TUI8ih6jZa840GLdYqxAW/HI\nYm77exS6VhBAbYECqV/vkx8MlWsvI9VO3uWY8b50R3ShlNnPTi7vlRSGQUJOcA53\nWzd809XC+quLb7ouD1Oe7KlZBL4WH1lugnRmGQOEl6fcgECZc/f9Z4BcX6N2YHCk\npGNK2f1i7N/qAXBnSve5D+PBhTkJo5/wis97UnTyn20p5dbBW6q7vzuDK+AqGeTC\nZ/tCeY7AVMnJUBU9QsmaXQDAlgg0Qmm6cs5Thh3+PTU7hqPrdc0D74pCpOycKBH3\nI7iFbc6KDWQO3DPPzmDCd+1AUMISLF0N6tpbNdqCT16C+nqRGMGryfK5I7RH2Asv\nHj1SCktTL7yYkiBhq83M1Wdfegru0qUsUwm6bRop81VJj0rsDgYcTm/BuvgMk/Ot\nW5n/UuC1BtBsyLEtMb0Z4Ax4KgidOPEdQvrn5FCOqHIlEWYow6oqtSlB3lqZQ9Ov\n9jBCM25I9kR/mv7Pom+gG+smua5+cAJ2r9CJziUe10Z4kfO58y0=\n=eij4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f98327931bd0b5d90678ddd1770e9862266b396e",
          "sha": "f98327931bd0b5d90678ddd1770e9862266b396e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f98327931bd0b5d90678ddd1770e9862266b396e"
        }
      ],
      "message": "cmake: Add global compiler and linker flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:58:27Z"
      },
      "sha": "b6b5e732c8b49a2cc14f34ac72b2189389c6b27d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlZGZkZjZjNzI1MzVkMDc5N2EyNzFjNmJiOWQ4NGM0YjQwNmE4ZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cedfdf6c72535d0797a271c6bb9d84c4b406a8ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cedfdf6c72535d0797a271c6bb9d84c4b406a8ea",
      "tree": {
        "sha": "1b0682f4a02bb6edf37852ba3b7f573f8d2f4fda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b0682f4a02bb6edf37852ba3b7f573f8d2f4fda"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1b0682f4a02bb6edf37852ba3b7f573f8d2f4fda\nparent b6b5e732c8b49a2cc14f34ac72b2189389c6b27d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722860337 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Redefine/adjust per-configuration flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB9P7A/+NGaUro9dH4YkIsD39t8rAJEDc6Yug7yzXaxL/1tkin2rDDZNhHHSuF5u\n+5M7WFL8DbN7p0IRgQpFy9VxZE63Od5JxsMEfJij2X/7v20QV1dTR9EqOvsJMIql\n7e64ESx0CQQu+e5yFQXIT4JOSlFs6rIS+QYkw46cj28/bingoc36vKYJ5bUycWyO\nmR2m9SQ32vrpdG6qyUoDV1PMdEXvX6uS6D9XD+9fmewJ9iwK4TbhvKqU9BPqzO92\nlO5mqXo8862JN1Er4FdKU3pPm+nIfUOXfzFRMK0/J4adp1/KSXVTKLL7B7NgyDgZ\nQHOO9Uk0zFGQo+iVTJZ5nTuIY5pRROp6WNm/nVC0+bm0rr1Ey48u5x9KFg9LGKjJ\nijzIh1jSLTE+JL/2oLiriyVZrlrkj//pS8rlzcqyfWMN4lYmJyufmqoye5DTssfr\nxxf8vQJVXhoXEQdRpHRUl5crPkXOYbuaWIftOWrnemhNUXBvNuLQuA8ABwtMabt7\nknwXUFbOvAgc041RnPuvffI0EiRvSGgnMkEo9TEX2qQonIgAYa4/9dYrw66uy0LP\n4RgPRoOFdY29NzTws5b/7yYdYQF90huDHeGl9j9jCaXKK9oHmCCLDHHbTtPFdqE8\nydVcTPXCmWLkR8nbB15Bl0Xv5yZnqXtbducEH7DSL8mM6K2bWnE=\n=ZG/4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6b5e732c8b49a2cc14f34ac72b2189389c6b27d",
          "sha": "b6b5e732c8b49a2cc14f34ac72b2189389c6b27d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6b5e732c8b49a2cc14f34ac72b2189389c6b27d"
        }
      ],
      "message": "cmake: Redefine/adjust per-configuration flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T12:18:57Z"
      },
      "sha": "cedfdf6c72535d0797a271c6bb9d84c4b406a8ea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiYjdlZDE0ZTg1NjI0MzkyMzhlZWM3MGIyMDJjNTBmMTcyZTNkZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbb7ed14e8562439238eec70b202c50f172e3def",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dbb7ed14e8562439238eec70b202c50f172e3def",
      "tree": {
        "sha": "7f09b3ad1ae3b46a63ae86591f43963db27abea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f09b3ad1ae3b46a63ae86591f43963db27abea1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f09b3ad1ae3b46a63ae86591f43963db27abea1\nparent cedfdf6c72535d0797a271c6bb9d84c4b406a8ea\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719741725 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Add `ccache` support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB89IRAAtPKzrPDfd+ZrzJDpSTOI6/V+/87VgvM1vi0kuPcXk5n5mP9qv5Wnwbub\nz5FQpNAqqvUkPgPLagvFr+LkLkd54Cgfhgi8x9rT8r/4cnTm3g2IQPdBY/kcQ9AS\nVweRG3IRJp1O8snZWw1XLtFml8rN90yykDRtXQy4Udf7g9pFEgV4b8lEWh+XEZer\nIc14ZUy0FaDcFNoiXj+uAtXWelHokSfLLCNTxu9YAyBS4/3ku8aq0s2q251eCCHl\nBaN7ziLcO787KViJzVqnPJwl0Pg29ctSRVkprqNdlPdau7ds21IozJmeQGqdxjFn\ntoN5yHyBAslnFP1vrj3AqNNqOKesY1Fif7MV4Vp8o8mmTAQLLvXM+Fpd/d68D8Ga\n9BGeR+y+dwnZftEFkFGFdQ/B6UHdjhTNESI0++7WIUuLQvth1PlB/PNKKAuV6p6u\nq5hsnYD6g5EdPEup8FX7t6yuTOFf2IGvG7QK/VoxXoDDjeeBiyH2zz60I2NYKj0v\nUqj5VLmhG5oP70CxJRZ7f0eNp5MMxrn5N+ZXhBYE/e9H98P3X3iuQKDNv8mWkGKE\nORMdGs4gnwjrHV60qFjIXBkUJYYUBJ74UAFFJf3MxKLeoupX4JjyXGyC2s0PmAXV\nd93xymBuU30+J+DneHoF6GvASuAtl65m3Wzat3zkPESxR94hk0I=\n=ihKv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cedfdf6c72535d0797a271c6bb9d84c4b406a8ea",
          "sha": "cedfdf6c72535d0797a271c6bb9d84c4b406a8ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cedfdf6c72535d0797a271c6bb9d84c4b406a8ea"
        }
      ],
      "message": "cmake: Add `ccache` support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T10:02:05Z"
      },
      "sha": "dbb7ed14e8562439238eec70b202c50f172e3def"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiN2ExOThmMjljNjJjNWY3NjJlYWEyNWQxZDgzYzU3ZTJmMWUyMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db7a198f29c62c5f762eaa25d1d83c57e2f1e211",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/db7a198f29c62c5f762eaa25d1d83c57e2f1e211",
      "tree": {
        "sha": "07e0553effcea3f29a4db91671726e6436ddbf1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07e0553effcea3f29a4db91671726e6436ddbf1e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 07e0553effcea3f29a4db91671726e6436ddbf1e\nparent dbb7ed14e8562439238eec70b202c50f172e3def\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720047876 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Build `secp256k1` subtree\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB+PUw//Z4S7NoxjUIJnGWoOpqPxxm0ZlSLzG55L93iUvq9p+GqCjdK5vYNiqKzd\nTsgo/Mht3Zaqd0GILamEXR9gS/FNl4LHxIMssjXh1mygXFzoxZX4gjVhGCqtFOWX\ne7VfVqQhCuJkXo2AMrOCV/OtiLA99722GfYP+tbMLn9/0g2hxpcMjWFxOin0oJU0\nZUcWAvofUvvcwT+c6Mc6xXg36eaaFCucsI88p4GdFkpQ8z+hDVvd6UuneQGULryv\n8BiNuobB2Jy/0VsozuF98cV68p77v8R5TUzpo7+bZ9QXVzyCXac+g6e0L22pjgPg\nndDjMzvy91ljCUP44ohR59NRWKor7Bs170DcvlV3pPze3bDOCJsDRKPf0G08vB3w\np1oGa2B3D+qak1ZpgU5/krnNwlt9fsPKijGJ+I0WGABJFzEXB3HerQcs9P0EduBa\nrJErKf4+TDn8lAs9o/h1yFDn3mn6JuoAWYWxn43y6Ps2EaOoi1v8pW3IwBB3wjC3\n85N2bolZ03mXu2N9RnjGVGBNpjXsCkjnV5oMU4FHbxsnlQ1tXQxByxKJqM4XFrH3\n+A6kGIW3IGNwTGg4evcVKlICAz8+StGKdI0B8gJyU4BOPwbxgf//mzPJlXOVjqLM\nWuUr3TB/LMjP6au1inr2OIC3IcjSXwOJHFUuUfYLXyhJywVX5z0=\n=jSLD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbb7ed14e8562439238eec70b202c50f172e3def",
          "sha": "dbb7ed14e8562439238eec70b202c50f172e3def",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dbb7ed14e8562439238eec70b202c50f172e3def"
        }
      ],
      "message": "cmake: Build `secp256k1` subtree",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:04:36Z"
      },
      "sha": "db7a198f29c62c5f762eaa25d1d83c57e2f1e211"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxOTg1YzUzMDRkZmM1MmJkNDVmNTA1YjMxMTU5ODk2MzdkNzlmZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51985c5304dfc52bd45f505b3115989637d79ff5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51985c5304dfc52bd45f505b3115989637d79ff5",
      "tree": {
        "sha": "067e3462d349204b51394984862b86ae5a3f55a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/067e3462d349204b51394984862b86ae5a3f55a1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 067e3462d349204b51394984862b86ae5a3f55a1\nparent db7a198f29c62c5f762eaa25d1d83c57e2f1e211\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720877197 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832857 +0100\n\ncmake: Build `crc32c` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhkACgkQQQEIES5+\nqB8YexAAtBh5MPF9pMJCtnIB7B0Nyaow4joIKXVJLbFo9z2uNhPrc1oNmkUsUbUJ\nwCRIwMmbH/iSZSexd0u54imdLthw6qMehjQoaawVpQxWggKClNkpZUgMsDW9yikV\nOwd/PYSGauXdslSoWDRlKp5PAH4NjsCOEhsnBjS0tl1NxT/2UuPToHlV1LTwCKNY\nwdFMxFsiHZqCGNobbssbLusQpah0g7G1vjRyGRsZO0hkl89YrFlmZRGASYrikuoP\nRO+WsDVTzSoNdeW06Ti1cCFBrSlwvJZu39LOb+FfiDm9DWszhsENMvu0FTSvWPT3\npKmRESPCe1LrGKLJBqMlO6owORne57m696/Hzc7hB4CaWLT8xh4PsBvQI6fMKOIA\naBRrSet2Dt6e2WUZyuxw/j7Uo8KkjOnLPGXC/b9msoZAYiIC8Ay5p4LkA2gOdBWD\nHntjOaswdSyUvaj+qTjXtHc5cVN2g4QOzk+dqtiztM47xmzDFdJ16Pa+wkyCu0lH\nUWP7/MFoP/uWVQDrX7CITq29xe9tIS89J1JHGc3WnFijHHp2aXI72u6RBHkL7CsM\nl4Vc4TrCopHIwNIxuhpoJCUVGz+SHgatNhEU1bW2Kmmrd9yyTlAXSHDnF+qpr5Rw\nU4+shoYdN4yxWWlZDnTT7FtO1KskTQ0oV9lTvL049L+Y/zp1YG8=\n=Wfzv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db7a198f29c62c5f762eaa25d1d83c57e2f1e211",
          "sha": "db7a198f29c62c5f762eaa25d1d83c57e2f1e211",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/db7a198f29c62c5f762eaa25d1d83c57e2f1e211"
        }
      ],
      "message": "cmake: Build `crc32c` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:37Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T13:26:37Z"
      },
      "sha": "51985c5304dfc52bd45f505b3115989637d79ff5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyYmZiYzgxNTQwZjAzN2M5NWU3Nzk2YWUwYjlmMDVjZTNmYjFiNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a",
      "tree": {
        "sha": "5162695d150fd4b3ebf0915013adf2a8187bd960",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5162695d150fd4b3ebf0915013adf2a8187bd960"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5162695d150fd4b3ebf0915013adf2a8187bd960\nparent 51985c5304dfc52bd45f505b3115989637d79ff5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049260 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Build `leveldb` static library\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB8UpxAAvbLBvRMn8ZA6YLoADVL9A0YQbAGqMFLTnP4ld9lZX61XdHn7lBK3vdIw\nkZAJHKYwOZY3oUkb+UqL+frDDqnfUTaiZR62EP3bVeB2eQnwDRdvvjDewh8/JpCV\natOrgyeRFW8MUvUIoxQDDOyfcqFLSoMxtZdQ+Y6cux8K0fXyhyTqKhC5Ot3OAWvl\nOnMlZa5xdZefKeT0smGlIZGC2jJDzQ0MEaKGh+NN/tctAWF8/9fdpoxbb/LF0tbc\nRGoDKtVCymKYIDaKaKOyvaV9HMZr4T5gQlN+Tkas2Xt085zU2EVgIxpb7dEdb2Wd\nqnAXrUH38J7Lf+PpDYyDzrAgPsl3oTnJv9tOaMXH2YeF3I6MKYVbVypryQZ9N1my\n4wTYuJQXVf7t95RpWNY6bb7r/eT1N24J9rXAYJBx/Ie2Lp376+d86MI/TXx23rOt\na9LDC0689BE3aXfHtrZnJ6p/YpHnO8QjCWsA1QeyU+ZlvKX+5rIo31/STTxsuFLi\nwGH7UysyUxUeMJ/a5vmCRuykETBl+pAQDRbkUjd2puxNbrIQdIoIztzJzilcpks5\n0vcipt0qg5q+74iCf3Drd/KB0ahZE5Kg2g8mBf9BjFMMZi1sb9aRgXOL7aOQzOVS\nwZ2n25GNksnuUr0dxaLlqj0B7TA8I2BeF3JpN5QNnH0dAST9/DQ=\n=YDVA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51985c5304dfc52bd45f505b3115989637d79ff5",
          "sha": "51985c5304dfc52bd45f505b3115989637d79ff5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51985c5304dfc52bd45f505b3115989637d79ff5"
        }
      ],
      "message": "cmake: Build `leveldb` static library\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:27:40Z"
      },
      "sha": "12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmMGE3OGVkZjNjZDJjMjQyMzZhYzUxMmFjZjQyMGViOWVkODZhYjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f0a78edf3cd2c24236ac512acf420eb9ed86ab3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f0a78edf3cd2c24236ac512acf420eb9ed86ab3",
      "tree": {
        "sha": "ec823b15e33c1e9dcfbe5e1269b01eabc9e6a24a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec823b15e33c1e9dcfbe5e1269b01eabc9e6a24a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ec823b15e33c1e9dcfbe5e1269b01eabc9e6a24a\nparent 12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049373 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Build `minisketch` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB8VgQ/9FdaOWBEmT7D5p9cuHbH7S00FwKePAfl624fjP1GRMxkNGWMAZcbNniVB\nkqgfDgyBSdusvRq/BrEiQY7mqX82wkvqa/rSUUpK6jAQ26LhDpKXS+unNEntswQC\nnmv6xyVqeX76UREEcp2AzcKhOjyP44eBCDghWS5ZX8c3sMh5kGBM0b2mEKj9qVW8\n/AHZB2xMy4DGw1nXSfyEcaI3c0uTFa5ZOqO5d9UjH1rLgOxnWLo3PhFHqa4+vHO0\nVkglwXzo/yfA5/TvNtMOZbEsigsJyuLoFM1BdvwBsIlcfOTHuu0O0HsZMtPzfZ+q\nz7u+apZX/fhcWiQMCi18Ppzjzx4254mCMh3COO0ZU3XoDeeYv1zRYOsjlLpXb+w6\nw97koY81Gj5xF3qx8IZ4D8WqFcCvE7u0SSrtL3oO5HctQ/A9RZOuxPACfdvJoHl9\ntY52m2VwrIDtmo2tImd3/wnw+CoarZoMi7D6C2jIseBpiPcfOjgPe1t88OqRo+xf\nrSW/4SAH15LkqODYt9MkSp5uzCGgAlUTm53Q2in55p+u5puID6+jJKeo/Zw6B3vZ\n75ZjlGI/FKviGtAW1vyBXP2YWMfTAnsXhk7QNyUni4XPEfcbIxE6i09PPlf3HuNK\nPcTR3qdnLDya9QLoIdzprkWzuYRitfz4fFIgYUnRaA2A/HcjpbE=\n=rqly\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a",
          "sha": "12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12bfbc81540f037c95e7796ae0b9f05ce3fb1b4a"
        }
      ],
      "message": "cmake: Build `minisketch` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:29:33Z"
      },
      "sha": "1f0a78edf3cd2c24236ac512acf420eb9ed86ab3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1Mjc0N2ZkYTgwMWYyYzBlY2NlOTFjOTZiY2M5ZWY5M2UyNzQ2MmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/752747fda801f2c0ecce91c96bcc9ef93e27462b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/752747fda801f2c0ecce91c96bcc9ef93e27462b",
      "tree": {
        "sha": "ecabfaee0e9fa84b84086b849a4a4b5e23133314",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecabfaee0e9fa84b84086b849a4a4b5e23133314"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ecabfaee0e9fa84b84086b849a4a4b5e23133314\nparent 1f0a78edf3cd2c24236ac512acf420eb9ed86ab3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832672 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Generate `obj/build.h` header\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB8N6Q/+KgXk+oXhSlu+GeRZ0zhF4Au0GOhTwHro3RV4sqzCJBX4I51YHVFxerMS\nCs4PaQb9hsmrj0risNuGlcD3wOrIabbcO/zi7IjRPGqYpSwbF0SkxwVwV8ULv6We\noDohfbDazGnTkqauu8jQapjDzz5MRlnnZDOrX0GXxO1zsIFNqUYXUbSt3isczueN\ntjHK1SD2K+cfQuhphum4yPeJXinhEDEOPy/cqy/Z4lAyZp/YYsQ+rAm9aGti3tr8\ncK1EOTr5Ii671M4EgiFgWwoDSftTbAvhF1HiEC+8JuVzx4htN4F2kasiUh3eZl/H\n+iRAdDTHcBkWai9JKn+nd037013CH1HZvuDQ8IBc90plbDVbhm4EaXyfDoQToDQF\n7yjQosJU7vTeOp7zdD11rmjogbNhrQqdkPa7vZj7KwZV6BjpcUgy0TbQbrdDdfcl\n1AbPNJxTlPMOl2S3aFdvh2Du2BO7HZmYTSZlvjPL1gNpl4TW+nJ6hFMOOpybtiL4\nooUgX3mbA+bcaXxLRLH4dYD9KXpkDz+ASQ4d0IBSyXTkG6mQXvWT1A6gH0NIM7sE\nFmq1JQfppTV0/Li8w6jd2j14wKz1819CygJqmPGwxHnV3gJVrxVUYfqMpyLNqJhh\nKocRBiybkA4oJE325lNWIDRuxoPAR2xY564tY1UpJJ7v3bDyrSg=\n=OPDz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f0a78edf3cd2c24236ac512acf420eb9ed86ab3",
          "sha": "1f0a78edf3cd2c24236ac512acf420eb9ed86ab3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f0a78edf3cd2c24236ac512acf420eb9ed86ab3"
        }
      ],
      "message": "cmake: Generate `obj/build.h` header",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:24:32Z"
      },
      "sha": "752747fda801f2c0ecce91c96bcc9ef93e27462b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1ODk3MWY0NzZhMjljYjViYjc2ZjNhZTgwYWU5NjgzMTdjYTE5MzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/958971f476a29cb5bb76f3ae80ae968317ca1930",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/958971f476a29cb5bb76f3ae80ae968317ca1930",
      "tree": {
        "sha": "21b381f95e852afba68901861302b3edb5a50cf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21b381f95e852afba68901861302b3edb5a50cf3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21b381f95e852afba68901861302b3edb5a50cf3\nparent 752747fda801f2c0ecce91c96bcc9ef93e27462b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704823258 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Build `univalue` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB9IrQ/8CYPIHqOwXDtQJmd6tF8Amu9eakbAmNc0bO3sLKwUW6uuiMyNGsTSWBK3\n9S+1s/oysno+Imv1bpDWiWoUzxXlW0vXLrr0cIVFE188NIYOPE3mEcajUpFwn9ZB\nnzZOJmU7MyLT36rwxXi9y7oovi2DFyjagvLvO90ZvbNbYN+YSAnLdRYfL371cdU2\nKNJKKYdOVGNFCQkp7+YvcqIa4ORojl1RkWNf+Ty6ywCq4MN4MR1I+B05qnT+orlc\nL5CN7Mg/H5XGHhbyiZPd+/qhNUAvvBUnGHPPgp/jat9A+dld+1OJRiPs3yXHTlJn\nOwidF/Ce3wM8P6kYh36t3ZUqaDBsqYev7o2NYIv1qsR/tMlDpu/z3sI7KHQAMdzW\n8jlNIskkxkLFA4SwpnpIQZoDWQk825ocs6BI4dPWyR+FqTieYI5cczbIGX11+6D+\ncLNj4XtJjaU87fAv/uoUgs9pYDmgSS9X89YAaCx6P7573XUhyvR4dwO+5J7NW4Gx\n8EE/PIpS71LUSHiXCc+0IxT0dTq7EZge/LAcbpJ51DXcSSISsjzH+YeyeRPX9FeN\nprmKs4OsgF3JKKocBCmfmDpdLBTRaH2xm+pUdLPb+jPXUxjA90WgSGavmzAxwHyr\ntuc0RfpmzM/xz67ztR13tFjNihebNAHeG4Vh7k8sTKCl+tS/xxI=\n=29Np\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/752747fda801f2c0ecce91c96bcc9ef93e27462b",
          "sha": "752747fda801f2c0ecce91c96bcc9ef93e27462b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/752747fda801f2c0ecce91c96bcc9ef93e27462b"
        }
      ],
      "message": "cmake: Build `univalue` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T18:00:58Z"
      },
      "sha": "958971f476a29cb5bb76f3ae80ae968317ca1930"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBhOWE1MjFhNzA0Y2E4YTI3MTI0YzE0OThhODZlODdhZDQ2ZDRjMzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a9a521a704ca8a27124c1498a86e87ad46d4c34",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0a9a521a704ca8a27124c1498a86e87ad46d4c34",
      "tree": {
        "sha": "aad217e3cdc17a7a2d90fd137dd67ee80c69dbad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aad217e3cdc17a7a2d90fd137dd67ee80c69dbad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aad217e3cdc17a7a2d90fd137dd67ee80c69dbad\nparent 958971f476a29cb5bb76f3ae80ae968317ca1930\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822679 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Build `bitcoin_crypto` library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB9xihAAg5ZNOPlgc1OzyW4ozEQfirLGa0/6mhlKDXla40I7Dz+fuKrFk3Jjzgsd\nVd4pbX8UzUjPZ+zPq1O7lhOb9JOHzytN6vShu6Msm7PxdZ4ovW7NgwXlRaUZnZrB\nRJPNdGH3E8GaACa+3g95IM0r5OeQRji83/yWO0rK/neowOkqtuCjXYJnjQ1St+Oq\ny+CLOnyce5FtTgYUpZA3svoXp+Z5hc+0amII+lcpuTafJxBCOTmrTyWnifU5lym9\nlchZbaAsscg7TyGyiGlufvSkf4bWo0GVZFCyImylAmtzrn90ec3Wv14OF/5HVTmv\nnpfIki7N5+K7wdnAG2/s1D/mkxDg1NaTPg2+UOsc3kTYpjbkvnoMfB/KKYuVHuAm\nGPUZJeWpVnLzpm5aooyH+DrHFVUMSPrLn+Kmp2vy71F3Quf82DXRiKZ/ZdPg4+TN\nqAQ7klU3k5ccIYne3VkLJiECfs32QMq/hNEvckk25GJ44fbqqNMIiV3jKdnm2yY/\njYV29IGN7RRbjqgyNkYuP8JcJyUjL2nxiHmcuxv8SDt7G1DEjXBLdbvimLnMX4n3\ne1bB138Orq6h6FNve+jTJCHnfM4fAPprM9au6OqaMOYqAQ1d5rM9iU3GAgyi95Y+\n0cd/ZmMhgZQrdzIqyO6ef+M7rKSxeG1MsCzWMoHHXExkqlD9uGw=\n=wZXV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/958971f476a29cb5bb76f3ae80ae968317ca1930",
          "sha": "958971f476a29cb5bb76f3ae80ae968317ca1930",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/958971f476a29cb5bb76f3ae80ae968317ca1930"
        }
      ],
      "message": "cmake: Build `bitcoin_crypto` library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:04:39Z"
      },
      "sha": "0a9a521a704ca8a27124c1498a86e87ad46d4c34"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwOWEyZjE5MjkwMzE0NWY4OGYzMGJjMTBkM2NmMWFiOWVkMDY4ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/809a2f192903145f88f30bc10d3cf1ab9ed06881",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/809a2f192903145f88f30bc10d3cf1ab9ed06881",
      "tree": {
        "sha": "f4d267db40a56b48c250d5c5252b2bbdbb45e9ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4d267db40a56b48c250d5c5252b2bbdbb45e9ef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f4d267db40a56b48c250d5c5252b2bbdbb45e9ef\nparent 0a9a521a704ca8a27124c1498a86e87ad46d4c34\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719740066 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832858 +0100\n\ncmake: Build `bitcoin_util` static library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhoACgkQQQEIES5+\nqB8nqg//W8/5C5rmxX6ToZGiRYeP0nwdBq/RDK2gdElDfY6NvXB6xg/mdA3mvUty\nTLfRUmlg03NJDVYR/DnL6MHtyI/0PRodYtmz2L6mA7xemCbmLF4LuP0LuDRUaZ+r\nz+Dpmg0Jh4gTueF7mYNJxjvwXiEUalg6wdaNBj+YuOEPVGzYCYZvVKMd5jwSr+bT\nj0i56utbbMHoX1tAReKqScMbJt4UIYCUXxTX/46Sna2osi8VBj8pA2nQp7w5Bnan\nriMvuOrbyXYY+v2sQ+wQZv6S5mK2IXT+rnMho0PsrRhI7kF0C1vfltfcZG/1RWa5\nkJQhxj1K+LKrsj8/2J8VM+/oInpxCVuogrF9Z0WakiI0EN6oFvCSYnQ2Ra7nWTEJ\nZScyesCh8B6/uHewbxT0+0uCYyhj/cinkHKfqe3Urn4zzEajxA/IDCFnUcceibf7\n1YNDAipEY29vt5ABsmFeqhE79M2xMXkFF+gmINPUf2OsS9HEqnvsyoc1UETvtxrZ\nNCRYZgSqH+lcyb2gMyIx7g+qAZMlcnbArss4JI2mKGkOxIJJ2m+5MPPF3qHj9AGf\n4otTwkPo3NmFuoWZsy8mizbH+rjgntH/gPH8t9t280dBHA5oSJXUA8kWa2xQjHFZ\nlvCc+BCfVEQes9bYHhuSkB3HVAgM82N8e3Jnn/Pj9q+YK+v+vb0=\n=6KXY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a9a521a704ca8a27124c1498a86e87ad46d4c34",
          "sha": "0a9a521a704ca8a27124c1498a86e87ad46d4c34",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0a9a521a704ca8a27124c1498a86e87ad46d4c34"
        }
      ],
      "message": "cmake: Build `bitcoin_util` static library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:38Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:34:26Z"
      },
      "sha": "809a2f192903145f88f30bc10d3cf1ab9ed06881"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxMThlNDBjNjE1N2M4YWI5ZTI2NDUxOGQxMDY1ZDJiMGZjMDc3OTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "tree": {
        "sha": "bed7eb062ef7e7c885a7ffa8eb9c3e3da10e789e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bed7eb062ef7e7c885a7ffa8eb9c3e3da10e789e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bed7eb062ef7e7c885a7ffa8eb9c3e3da10e789e\nparent 809a2f192903145f88f30bc10d3cf1ab9ed06881\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719740810 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Build `bitcoin_consensus` library\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB/edw/45dATImR70aII5PkfeQWMSpnpNlvEXN4Td9oj0CLnE+sIJ9K8FSKeU16V\nFS04hM24zTX03KXOiD8oCcVFKSTxMYR+DDIeMSGJVD11jGSlsdAj4c4zmDRN9ak9\nbUuKdyTsopsCm7/mlIYiYyl6mxfwcyqdx3W1/lCWsOgGAaqKVoeZLK+cuKujRDGu\nmHyOOxVC4tGk1PMuAmqLtHZRWcrnnFEACD9dTIJHHjDEVis+DcdWpIbm3IQdJrMd\nPlDVPsMawjDg4Ea3D1DflBSR0LPcvchuhLRb2GjwLv/c8+9719xoJqeIdrgSEk+i\nG/bBqrSAxmfC7q4FNfTdE4Ek/LVG1W8cui3gonnnGtwv32iEIVY/EelHigxx+RoA\nxkBJMqe0/oCEqZFn46Xldu/HvHCK0lXPyCEQOAHZndEsC9cSH9xuXc8hz1PJb+nq\nDAZZR+ViZjzg1R+A7lACAkUJDxuAZiPD8tTR/cXGa+VDmGJXu4O4+4AjUBAFFLIj\n2AzJy8/bM7mejdtShTq0o2C2wuq5AXVcWWFbsPgSawkvZu/3zREnZS6IIB/DRyor\n9rl/LU8AxsnPTMvtvO66ea5qvtX3W2Aeps6CqwCMULQQvZf2tl048JWd4P13QQGi\n8l9JMW5rQC4HfWJyfX/CaVYBbulyISSNkUH3baOuZaCW+SuXZQ==\n=n5Ha\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/809a2f192903145f88f30bc10d3cf1ab9ed06881",
          "sha": "809a2f192903145f88f30bc10d3cf1ab9ed06881",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/809a2f192903145f88f30bc10d3cf1ab9ed06881"
        }
      ],
      "message": "cmake: Build `bitcoin_consensus` library",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T09:46:50Z"
      },
      "sha": "3118e40c6157c8ab9e264518d1065d2b0fc07795"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ODI5Y2UyZDVhOGRjM2IwMzA3YjVkNTdjNjY4NmI5NmI3Y2Y4NTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97829ce2d5a8dc3b0307b5d57c6686b96b7cf850",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97829ce2d5a8dc3b0307b5d57c6686b96b7cf850",
      "tree": {
        "sha": "dc35d0f5674410dd3c848ca428adcb3a0abd8526",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc35d0f5674410dd3c848ca428adcb3a0abd8526"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dc35d0f5674410dd3c848ca428adcb3a0abd8526\nparent 3118e40c6157c8ab9e264518d1065d2b0fc07795\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822803 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Add `FindLibevent` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB+JpQ/+MEr6oN8pVjTjNHNLliUwUQv+OIsRj19VVxpT1Xvv6f79Nj5kOeM9fg80\nyq+TaCD5cS+rbXqoCVoBrLgGBpZXZClx/JOWMTClnSKFNQpDTJH2LtRgsI+zdDR4\n4heyu8Yx7Yi4RAAHDDQvEstzPeA0JHca+QU8LYt5uI0c5FDZMQrrJryK0JyRvtqL\njFTbaSPN50p7JEmwQdnzB7l0K5T2iVqmPhtEqj+OfdEzkeeIppLXZ6TQXTDTrCUa\nAltsRQU11luvUGYwQefBb3+iGVBqBEP9mkGHC26CjzdzRZlAb8+UCBmamaD+Z6+g\n7L6jegdomzUutYt8GMddnUJ8EjeRPe4gMPSUjSWR6cqk4ykSVgZ7OcqgqEfN7noS\nfXjwgS4e8r9qGLewYOnLQI/6hf0A/ivgkcILKpmLjYfv3TYGzv+OUHW04SZnxQmr\ny7WPUy5RqO3CAQIUlRCjNF1st6NsF3TvqE42EVqbaYXKP9gQefYebzQBfXDRjO6C\nZGOLxytsS7bYGQLApSIYGmVfGZdGs0GDPC++Buq5RRBnmKqIb/tWuVAYQu95JU0E\nIghfH+sPgfnIPx9seBqVktW8JgfZ7QcjGc+PAj3By3ZXr7/wcZ1HjEvfr2+fsYOI\n2FWPrGuyO7UyRMVWs1cborFmnGTWcTgp18VhpwgGAWgYLpjSMTo=\n=sjDM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3118e40c6157c8ab9e264518d1065d2b0fc07795",
          "sha": "3118e40c6157c8ab9e264518d1065d2b0fc07795",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3118e40c6157c8ab9e264518d1065d2b0fc07795"
        }
      ],
      "message": "cmake: Add `FindLibevent` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:06:43Z"
      },
      "sha": "97829ce2d5a8dc3b0307b5d57c6686b96b7cf850"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5ODEzZGY4MjZjODg1YjE2MDllNTVhODNkODdjZDljYmM5MGFkZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9813df826c885b1609e55a83d87cd9cbc90adfd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a9813df826c885b1609e55a83d87cd9cbc90adfd",
      "tree": {
        "sha": "0f854039d68c0ea8148665fac97b3ccd9bc14e75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f854039d68c0ea8148665fac97b3ccd9bc14e75"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0f854039d68c0ea8148665fac97b3ccd9bc14e75\nparent 97829ce2d5a8dc3b0307b5d57c6686b96b7cf850\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720870772 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Build `bitcoind` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB8MWhAAoLLAhOtne5Nn8epIA49RZ/doHYFq/fRdh7eSLg6OCfYtgUZpEH4GMJc9\nMLr8VsfCMEsGOUzbQHBGrx50fbwacYhZKfdJEvbRlbNywTWbeOeQp4vAn5MgltEn\nJDfPetIG3vWYytlq3pMqlmjlrAayxVLZuL8tfgSFKFEHN0BcyLTb2QogsXlX8/yl\nx/0b1zUxLJph+awrLcp4oEsX43w2Al221Xt4IBZ+Gv18EjCepfEGbCh4lzyN+Tmm\nedmZzoKFoEx5+dUbnpZ8B/8XKRGiWUXFgHZEl0xERZHOsypqH0qcA39RZJY9LW8y\npnfVBu0tvoJt+D50lz/l7+Yxe9MvCvkCY6wBfWrBSppFlwoc9u/obSfYu5fSdD4T\nxsJiRedLJ3DbvCv3al0lQdhYidgeTTGhOHfcg+Jx2fzHPbif7wZPtI7NRVq5RF8O\nHONEoDTbvyZvx32v2dqnLjw8NOdTYD7Wht6kSD/TCmB/6h17bzGRnMDOh2FbilBZ\nCydIw4wP3pAri1LZrfp9HQJmd76Wol4db5miigeo/uZcOvIAW8QpRUL0ZnijHa2Y\n/fz8v4PB33lS7pZ0GW1YbcY8xsOYRmoM7MKRQREY2z0qypO4ED2uNfhxDL+dPSXk\nnWFD4OBRccSWNA3I7HdPvSpKelYhmddtxSWNS5aScdlCTrrI0r4=\n=VH4G\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97829ce2d5a8dc3b0307b5d57c6686b96b7cf850",
          "sha": "97829ce2d5a8dc3b0307b5d57c6686b96b7cf850",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97829ce2d5a8dc3b0307b5d57c6686b96b7cf850"
        }
      ],
      "message": "cmake: Build `bitcoind` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:39:32Z"
      },
      "sha": "a9813df826c885b1609e55a83d87cd9cbc90adfd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyN2JmOTcwMGRiYmZhOWEwMjQzODE1Zjc4YzhiNjJhYmU3OGQ4YmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b27bf9700dbbfa9a0243815f78c8b62abe78d8bc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b27bf9700dbbfa9a0243815f78c8b62abe78d8bc",
      "tree": {
        "sha": "c25291f8a545dbbc672f4ef94112c8c7449dcbc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c25291f8a545dbbc672f4ef94112c8c7449dcbc3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c25291f8a545dbbc672f4ef94112c8c7449dcbc3\nparent a9813df826c885b1609e55a83d87cd9cbc90adfd\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1716235846 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Build `bitcoin-cli` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB8N7Q//S6iRFvWEOJLWa+3A3FbYplM0zWep9ezv3sMEtBQpCLBJWGVcT+v0CtP2\nk2LPu0VyyU8lRtmlAMWJsubZJZsKwYwjMeu/DAe+ARNBm2uEnKj/VY5Kw5OielEn\nGpyxUV8BFBP2uVAhaxepIPQnv5pg1LQo64YUij5hA5IWL0UDCT6f4sMFzDNhr+Zw\nmZ4oan6eWGYjd4a/xh59Eq9BlNs63+iOGt0b3aQliLzitOD/zEMgcuCR89ZQ6WHR\nOnBr74mmdx9H2kZtxtkyq4SA0I5d4aBgkz/akLLnY5z4+ZHJAlC2fTgymqhxEFBe\nBAXFLVI8u6Kq1e81Ef7fJxfQaJfizpa1SMXYnMZUdi6sHPrmKOLAlAYmtk+0cROT\n/tkpEARTz3WhnntMWdXgQ32dS9RHuPWFsSyJfcTVJdj+CMmSdC+8Ng/nJIvzoCZp\nQJ0kxIh/2noZCezDmIjy7F/1LwwW18UdYJwEjRRsdbcg6egpzoGbGWyGErix5tZZ\nepFl020dePTDXtVZA4ehgHGsM/hhtgXUAVot+u2alsb/vM2+B36WBUeKitw5UTpu\nRl4YGleMb47nLDejQojyOMlmojEyOrCGg1rsBwDiY2byuhHp3OL2HHuyhEOHGd6m\nDm5T8ZdxtcNbuo1FGNtXWD3mNxt/NAEVUUCwCUid3M+WDKRkCpM=\n=if3t\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9813df826c885b1609e55a83d87cd9cbc90adfd",
          "sha": "a9813df826c885b1609e55a83d87cd9cbc90adfd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a9813df826c885b1609e55a83d87cd9cbc90adfd"
        }
      ],
      "message": "cmake: Build `bitcoin-cli` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-20T20:10:46Z"
      },
      "sha": "b27bf9700dbbfa9a0243815f78c8b62abe78d8bc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1OTM3MGJkNzZkMzBjZWQzNDIwOGRiNDVmYjRmZDA5N2ZiYWQzMWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/959370bd76d30ced34208db45fb4fd097fbad31b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/959370bd76d30ced34208db45fb4fd097fbad31b",
      "tree": {
        "sha": "449f941724488028bf6d7ce93742febaa6eeef54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/449f941724488028bf6d7ce93742febaa6eeef54"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 449f941724488028bf6d7ce93742febaa6eeef54\nparent b27bf9700dbbfa9a0243815f78c8b62abe78d8bc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723284396 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Build `test_bitcoin` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB+NXA//SLSZwWuEOjrKIkizOkklhYz7JGKA3h97ZD5ldmnuUE7LdPZdIMmUv3p9\n/oG/VevGqSJd9R9VGmmChLo/PCKpznMScanAEHXP3YMEVOOzg4zOUefuMef3gpLz\nYX3fuEiZp13UQTa4HiKUxp92YTOiapyLwTVFJ6kL7NzFoVYOnL4wSfV0T8hZx9yP\nEEk5ceFFWedrQa0XSQTHQ37bdYVHqyMYmpEV3Uu4NTKBzXasEsJqv0EA4/0pt5Io\nW16w5WB/GOVdbaDX0QE5xaxsEU/IL7+jzXrQCMjXO/F0ohXH0MMxVwqi19tGcg4v\nA+jeGPhhWHlc8jy3WNraAl1c2GXwQePOSrV2CWzd/Cc8rJvnilcLO0kvn7xyp5+h\nP6nP5DY04AgnWNmvFRQzBKiU6N0/J9ctDI5sZ1pNSqhf5MoItKXKBqwMVIHFUhra\nKeFvSzQgDUVwZAzncCVdSkcZHnNcMmIRJmcxlJrc5ITKCH4G7GJYY2ravsAAkfmQ\nwvBfhhN0xZA6lm2daB/HcIaKFBQDRENYNIL6gfqoznUmnDaKMTAoLRZbrXDdy69k\nUL7F2Lz5PlLukGB2cqRBBo2U/3z1phzOJ/kE02bu69bho/pPSANaQZzIy9aNN2Z/\nwGqJP4qWEhQnWXxTwpTvCwzI/AtYV6TjCz5/bDgTNcNpGrSrpwo=\n=TyTk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b27bf9700dbbfa9a0243815f78c8b62abe78d8bc",
          "sha": "b27bf9700dbbfa9a0243815f78c8b62abe78d8bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b27bf9700dbbfa9a0243815f78c8b62abe78d8bc"
        }
      ],
      "message": "cmake: Build `test_bitcoin` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-10T10:06:36Z"
      },
      "sha": "959370bd76d30ced34208db45fb4fd097fbad31b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiMmU5OWIwZDk1NzE0ZTE2YTdkMWExMzEzZDdkYTkzOGIwNDg1Y2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
      "tree": {
        "sha": "1e1dfc3d16b5bf4773e890cc1e4c31a141e55f4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e1dfc3d16b5bf4773e890cc1e4c31a141e55f4c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1e1dfc3d16b5bf4773e890cc1e4c31a141e55f4c\nparent 959370bd76d30ced34208db45fb4fd097fbad31b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721820490 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832859 +0100\n\ncmake: Create test suite for `ctest`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhsACgkQQQEIES5+\nqB8m8w//W8RfPhhmm7xST0adDx+b7aoT28AHwvYoeiHUBqXJ7lAkxvAHeLA2gbNJ\nXcZovVL3pqQqZP1rO4GG+J7Wj3Ypnr4UAtWeq4u7HhGaaaYvVhfn8GH6o69dQUpL\nENAlER8VgtvQvRldPH5pGA4ROZJgAvLje59MhFjc4oylaA5srkv8JoAnNnOXKf1z\nFWcur1TQxR1woIfme7kWLTRiyT9jPYHc/jNr29TKX3USjCKOhiENG8OhdE4OIQky\nHnAnANd4hbR4S0K6KtRYPxeQq5id9MXHvonYoQxTvxZ4vEVRGI8IvBym8S2+aGic\noxpwYjv8ys+kR71Scl4FW4DIywpnoPhaE3eiYq8LW4aIjm3PtOiXmJ1aisf2ufEd\nRcISHc+wbOceuCsMsO4a3oTC1rzWziuEjzISIs3NssnX0OzeMis6D1Ntfbh25Z+d\nr8K/5HoOjAnnozGqz68WHVy1SQ0B1HISQSmVGyTt3JRA4LzjBmSfUiEVhiIWxF1G\nR+VVdDvGw75W8MFQaS1rPD5Nf8eJhI4vE34qZV9g6Wu7H5WLvAH5wCa6vi7/bbcM\nlcMFTBt3kkl49XTOCBSVQyxFjdkqznTDr2HWxPbDo7P1ZM7cvT2CefrdU1Xg9xJO\n6BvNJP5zI41hPHAnQbU+FWeXf5mBPNdFm25D/NPefW8ArWSQefE=\n=+5yB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/959370bd76d30ced34208db45fb4fd097fbad31b",
          "sha": "959370bd76d30ced34208db45fb4fd097fbad31b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/959370bd76d30ced34208db45fb4fd097fbad31b"
        }
      ],
      "message": "cmake: Create test suite for `ctest`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:39Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:28:10Z"
      },
      "sha": "ab2e99b0d95714e16a7d1a1313d7da938b0485cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQxMGM1YzM0YzNkODk5ZGI4YmNmZjQ3YWM4YzZiYTM5NmE2ZGE0YjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6",
      "tree": {
        "sha": "e44a35be16d2a4ddb073f1bd078d3e48449176b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e44a35be16d2a4ddb073f1bd078d3e48449176b6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e44a35be16d2a4ddb073f1bd078d3e48449176b6\nparent ab2e99b0d95714e16a7d1a1313d7da938b0485cb\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822015 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Add wallet functionality\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB/XWRAAjVJLyuIXxWVSIr3Di0fPuw5FTNzr8dom+dVF9wmwQo7Ww4NeSdIPzyRp\nzCRhv+lOPGmI+XLcFLpcnJRHUR8BSLN+a4ht0ksKxs/td0Tjo0rV1XingpqdC0P3\nEvIHeRhYiGt10ZItPNlL+6tRUtWPgKB3Q9xepyXYhW8Yd0V2adpKiNN2npl+if6w\ndZZSLgQvhu2P5W4fK9kKQ6JFCrtzhbyziZMD8FiyfJoBnpCwYX98+pH28TDA+Bot\nzJr76/DsdzLR0Km6te89QXap3HWeGoYgJ/M/goMB7HbGZr9qMyM5pd8/dwBeXAwj\n9RCYGFXp090wKXdMsTqc/yQTG+164rUzTDZg9GmxjOV7WDmMsHgmu7npRD0sUZEP\nRM9nTL3C/mQMWliXoz6Y0AxEbq7JA+6KwOe8ZUWoc6vm3Dc1LSuoR7w+kTSb+X3W\nsdegzvqCbBFoujL7UZv15aPK4z0hOC27Fwbau1vjg23r6w0eSbcwbkSDPlEw+sEu\n14ZTL0CVNFTgsMjEdSpvrqBdkfCkLPy6iHFbu2Gs/jOrlStEXBdxjAXHd+jCKyAH\nbyT43fyHehTKDbGRN+Al7ZAkX+owliBpdbSEwYalSqFRFKqN5WDKxkg4uPLmHiFa\nt6rHzIsnwpE6z2O5FE5Ib3umRADKIa8wn3aM9PixOZc8o3JCAG4=\n=u2Vn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
          "sha": "ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2e99b0d95714e16a7d1a1313d7da938b0485cb"
        }
      ],
      "message": "cmake: Add wallet functionality",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:53:35Z"
      },
      "sha": "d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyN2M2ZDdjYWEwMzU1YzM1YjAwZjI2ODllZGRjY2MzZDEyMjdhZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/027c6d7caa0355c35b00f2689eddccc3d1227aef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/027c6d7caa0355c35b00f2689eddccc3d1227aef",
      "tree": {
        "sha": "ececd11426bba5476e842beabfcd5c59c6525f5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ececd11426bba5476e842beabfcd5c59c6525f5f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ececd11426bba5476e842beabfcd5c59c6525f5f\nparent d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719747617 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Build `bitcoin-tx` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB+RLQ//VxNqXm+2K6cUSamTh8cWKQEyB0GemBs/qjFjsJxjLu3WtUZD6gz/lAjl\nzhjMgtrseN+AQVmbM0yPbW+AcNx8K1p7c6LeiAa3CRXGFiWu62gSZ2+fneVAy+F8\ndl5WO5+4RMUH8haWMy4JiYnNMr2VpVWbdlQ/eqqyhgDnv0m79S/kf866GfauTIXu\nyDTWvOsASx++uuS9BYcgnwqgMkD2A2ktfhNqB0CiSgL0N3H+jAnZFB54Ame3RuAd\nrHG3tJHokWibif5v45WPCkD1dt8p98yp4kglCl3NhmG+mICH2ZJdMbVJm5oxhbYA\nnNFfL8H9vxYTHCcvHdh4z5Fl1ujFU3nyIrQ4FSKtt9ruOoiOgdQwM2kZAtYL5F9p\nUao8aITRl5IioRrIkVt2sYELd+KCfeg6PVTZakEEn5bh1U9uMtceSC0IOjQVOQic\nXpy347BJqLeIYL9HfzJ4yNOHa0ct4N0P2lTEq0mTwjLCBHDmDSDCQ6RX6cPr2qHx\n25YaCtl1yF0nwr+jGy5OM5DPGyh2vgdHK1XBYZCwwk0bXE7bMzorI32tHeoFTOfC\naJ1UQjmjsMcVEVmRLXDdeYdmBqQ7Aig1pgDew9tyDsFk9haFK3nbAWSW4ljrnsbQ\nJjEoERLrXeE9dx3SKgjPPniEEVsZBoZNuJ/k8/7RpGxBm+SLJNM=\n=hB+B\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6",
          "sha": "d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d10c5c34c3d899db8bcff47ac8c6ba396a6da4b6"
        }
      ],
      "message": "cmake: Build `bitcoin-tx` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T11:40:17Z"
      },
      "sha": "027c6d7caa0355c35b00f2689eddccc3d1227aef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3M2U5MzA0YTExYWY2NWY5YjA4NjQ2MGZmMzQ5ZjlmNzAwNzA5Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e73e9304a11af65f9b086460ff349f9f700709ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e73e9304a11af65f9b086460ff349f9f700709ce",
      "tree": {
        "sha": "490d933cade75180e070a6e4e85d30e577afdcd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/490d933cade75180e070a6e4e85d30e577afdcd2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 490d933cade75180e070a6e4e85d30e577afdcd2\nparent 027c6d7caa0355c35b00f2689eddccc3d1227aef\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1704832491 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Build `bitcoin-util` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB/DhBAAjlsnGQEqJ6j9PBXK5Tnl1nIIrp2XXiksOCIPLqW+9aTAjWBtBLxTXi3S\ntIjwHOeQiM4gUhQ/7M3O/uH+/Wl3gzqG9lHTXaZJBk2eVS+av5gJRw2m8e0g9DX7\nCaEN+u0/9hnNfquwCNShsJk0v+QwgMMhqZ38/a5xE2hQvR50BYHX+/lz8kMX2ozi\nz/WMkAga8jejTaL02R+4BzOdjNDw70EzksCNH8atZjM4PchHBxWobKdVb/GRXNq1\nnZI6rduZhd1a5DiPRIPocq3r/i3drTOEMreVIelFFMqN9qcDk5h9pyiFRFESf6Kc\nLVv5JWbtvZcoAM4lzH8fv2R0F/uO4yl+LMfd19dbnqINqqZGl5JjDgG22HmEjIEi\n+Yw8lDRfGcL6bqkKE0Bbqi96J5cUVH6kYa+wNUJkk9BGAtrUqPKzWw8u3lInEuFj\n+hQ0Doh3i6p2MiSGi4I8L2T2SBbPJ/xRrp1zapqGPMe6qO3/qsOC1x8BbotaesGT\nBmWZiZVGjsV1iPz+B8R4m2HPcN0e3rZzEowRx7QIMbh6O35WSv6ZVE2e3t3gCtZp\nMxh9RFbB1HhIvmQ5zK+5mCWVBbmNu9OJK2999+L3WBhdcnNhhVi9Pb1YVr8p1U6i\n6oUwDmhba6k3lLnjD8o5x2UWNDSRM4viHmh6At4AbY8oGJ9/LyA=\n=UkMv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/027c6d7caa0355c35b00f2689eddccc3d1227aef",
          "sha": "027c6d7caa0355c35b00f2689eddccc3d1227aef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/027c6d7caa0355c35b00f2689eddccc3d1227aef"
        }
      ],
      "message": "cmake: Build `bitcoin-util` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-09T20:34:51Z"
      },
      "sha": "e73e9304a11af65f9b086460ff349f9f700709ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0ODBlMWRjZGIwM2Y0M2NlM2QwYWFkOTZiODY2OGQwMTdkMTE3NTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6480e1dcdb03f43ce3d0aad96b8668d017d11750",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6480e1dcdb03f43ce3d0aad96b8668d017d11750",
      "tree": {
        "sha": "57683d60ae5a68c54d089694587d2827cddd778d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57683d60ae5a68c54d089694587d2827cddd778d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 57683d60ae5a68c54d089694587d2827cddd778d\nparent e73e9304a11af65f9b086460ff349f9f700709ce\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717505072 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Add `libnatpmp` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB9gcw//eqNwp2vQDyNs05QLKIX1DkBHL1uqrMAExOv5YMnDUG7cwsdTJIPz1ZIt\nYAtpNqcsMYUbwf1tVMzSCqn2DUmMw804AAHPrTmPWu8v8nYqcCiIcIDhh7zY8Ni/\nOMF4jTPtsPyT1hDcWlthd9RxGmn9OaWlCaOq0eILllzIyiHxXFTcdAv+kDIMRahG\nDpiut6LbaU87h7cb7FN/YzOjKSEOm0fb5QtxPKzvoeJffoAV+31oaM8U8y6l1Owi\naj+ulQn9BEzb4M5S5+R+JkXuixrdSBeuE8hde154xE7vdtY69kd5N+ZqxYpNhN2q\nvfbjCfma9mD/fLj26ZohprKpHdEI5cJRsYfCCAUXK5JJQHeGu0MbJyUNl/AhTvj/\n/n5P6RX/sJdJUTSZ8AyxfcPkZexppcEx6uZlSeOVcv+4ze+a0WcVgBqnWfogeB4D\nJZiajBP7E5K8pr9JTMf8+F2249KjRiSUwTIjxBis5JEI3hicztO6OC5I2ZKGTlDP\n0KsTvXxct8fXAlWP6EUAM8x+8Ld7+yhL2mFQpKARw9vnPtT8dgjDF/YOqbKa6LUo\nOZBg/uknD5dznbpYzqvOHzLCf/zWncpZMdQSv6HuHZGp4VtJTwz72GRj9hXUTX4R\nFXK3VuQiSKGXbEtfq/RJCYilUtLHxPyeRPOvQCdhANjgEBYHmLw=\n=hSB0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e73e9304a11af65f9b086460ff349f9f700709ce",
          "sha": "e73e9304a11af65f9b086460ff349f9f700709ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e73e9304a11af65f9b086460ff349f9f700709ce"
        }
      ],
      "message": "cmake: Add `libnatpmp` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T12:44:32Z"
      },
      "sha": "6480e1dcdb03f43ce3d0aad96b8668d017d11750"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlN2IzOWEwZTEwNmQ3OThiNmU5Y2MwM2VlNzgzZDkwODFlNDE0ODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae7b39a0e106d798b6e9cc03ee783d9081e41480",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae7b39a0e106d798b6e9cc03ee783d9081e41480",
      "tree": {
        "sha": "7abf4e117f43bc90345aa6774c20be555281bdea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7abf4e117f43bc90345aa6774c20be555281bdea"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7abf4e117f43bc90345aa6774c20be555281bdea\nparent 6480e1dcdb03f43ce3d0aad96b8668d017d11750\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714421422 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Add `libminiupnpc` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB/Ivg/+N0MHHT7tfY2AFUKpy0uHmjurzjuc5XN5VZAYqxe8nBRR+Olc+3pz1LO2\nOFawNL2VAg8WTrN12sQ8DARqJo8p1YTzcE5fSHlgrLcNjRSadXt7K6q1mqtHJN/z\n3SwfUKdBb044iUgzdVC7AtkLkSUPbwbnbABLu2bec96+zLOjgmYO0L6U6fecGvSS\n9Ku3pl31n4jigqYnzbR8ErUQleUStyjGhnBsJxAkMS7iafhWk/tQ7mGkb/Dij1pp\nyND55OSUWDVxufG58JhrasJJIK8ywoMtBvyJq0W+6VW98oYLWX7OHNN9i8GNjRXp\n1xiLz8Yr82g9aoG94HFWDa4YeRKACfYemNsT81qSTl8TAbk2lpU6PFGJTaNnafSS\nP1h80D06MF93sIPxpa62Y8CE4M1oSoR/LyjsNsKZRSxXSUW0VeQCCC3ccO0h/rGV\nHZ1lIVaobXFlGoKXFlvDZYgKZYGqVH3Ht1et9ZKsh4BF+1NPh+P9/fc3SmGvNgpm\n1dWUFAkpPFxjeQe+Do+E33G+jaDQ2ZXD2InZzyiAaWtwZNSglqHaag2pi6DFE9cf\n9cdua2bhn/Ixp5oHfAqlil7ea9+p3cCLoWSC1+RLerSWmoMn2g8+jAFo5WeQsI8d\nMhdNLyW7RgTlfcUYdfZMPx2GMGMEVUlcOQT5cQ0D2YScMJFCeZ4=\n=KAEJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6480e1dcdb03f43ce3d0aad96b8668d017d11750",
          "sha": "6480e1dcdb03f43ce3d0aad96b8668d017d11750",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6480e1dcdb03f43ce3d0aad96b8668d017d11750"
        }
      ],
      "message": "cmake: Add `libminiupnpc` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-29T20:10:22Z"
      },
      "sha": "ae7b39a0e106d798b6e9cc03ee783d9081e41480"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyZmRhODJiNDk1NGY0YWY3ZTdkMzQwY2Y0MmI5Y2IzNGQ5NmNkZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "tree": {
        "sha": "6666ee655c516be5e013ad4b06ffa05f9a136ed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6666ee655c516be5e013ad4b06ffa05f9a136ed0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6666ee655c516be5e013ad4b06ffa05f9a136ed0\nparent ae7b39a0e106d798b6e9cc03ee783d9081e41480\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714422222 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832860 +0100\n\ncmake: Add `libzmq` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mhwACgkQQQEIES5+\nqB9xOw/+MDr8lGhbszE4xUhjvT6tFwhhFtP9yu5JmWFW8e1B19SvnV7bL3AMxVOV\nlqsKth7J+UwSVlb1D0SI9tikf6nIHwPdpw1nNImprHu9zJoQTyQXnT5TjRIIVyA2\nmIQNBIY1ZsE5Cue9Z3vSLT7lpp9/AsxK8XxvAqSO7AWgd4Pa56O3Eo5xjLkp5uet\nsO40NOgc4BotvCn5j4LpXxw99WFEAr89846WwmUs/+Zl5ALEa4ebl1ZKwUvPyqfZ\nFlk5JMa2aoWahEF1/Tsi3SIX68oy/iFbWYLuvlBq1FRJjull6TYvwq//kP3Fx1F2\nIT9jK9f0R1NY9cCCVMNLomgMVEOy8DlVZyWyxFLvDB3UdXQUZqoOCq+/uwwoH0rh\nDp16d1G7h5FPA6/yoPuzj0nd8H53i35x3xS6itO8yhw80rpBwTuvi0tWvaVue2UU\n7djknKpPJYN3x2OwyTennnJMJ9ff9tVj7GEHFllTCGYGkTr0L3/0ec7eDYATo86J\nIYSvi8t2PSkmhlv1IJJ4CN/KsPZEFDF0eXiLcArxwnlffoWdoh5aNmvDTfaZPVC1\nleytkDB46pH1GylagHvWXeAbAwOsBf1ZXpDaZJKCX3gLvkp49zmz+SONCAqbURQZ\njw+2HOJKfRLFWNrNk6oy1OeJAgUzTT/C4Yk14OGFIrEbQxbLCe8=\n=M2r1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae7b39a0e106d798b6e9cc03ee783d9081e41480",
          "sha": "ae7b39a0e106d798b6e9cc03ee783d9081e41480",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae7b39a0e106d798b6e9cc03ee783d9081e41480"
        }
      ],
      "message": "cmake: Add `libzmq` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:40Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-29T20:23:42Z"
      },
      "sha": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM1M2UwYzllOTY3OTg2NGE3NzdlMTdjMWJiN2M2YmE4YjZlYWM5NmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/353e0c9e9679864a777e17c1bb7c6ba8b6eac96d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/353e0c9e9679864a777e17c1bb7c6ba8b6eac96d",
      "tree": {
        "sha": "b9672644ecba284884af357108138a71f6436bb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9672644ecba284884af357108138a71f6436bb1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b9672644ecba284884af357108138a71f6436bb1\nparent d2fda82b4954f4af7e7d340cf42b9cb34d96cde1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823065 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Add `systemtap-sdt` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB81Hw//eqvbeN2nmAWw6VZVczTj2fx/A5RNTluKsZX/2srRbxOBzcHTYp+Dtcjz\n+kM60qXNeD8BusYM4jo95KuSb71ZMRF3kVfr5xFiuxJW4VPzkVne4yDmFN4VFx/m\nJdzBbKZT+zhnWafCt8jNEcrl4t2k++JLQyLk2iJL3JLdodSlU+8kIvZkN09B9Ewu\nFFSunGt/GDIEWYHG+wrzzJR/E7SPwPWkCcOa6smq4OXyIK3ttTB+4OhlcGLcpBVG\njiLa0qeFAJzPAJMQI2gHePyDUFL1nFajchX8rQ5QW2sss5QohQcUBFFqC9d3Qjy8\nL4ma0eLDump3IroANAdXMs1OZsMm1F0EipL9TqmWlKiv+6tHf6Bk9VAyTeCz0AJ2\na1QK8Qrk12wqn8wM1xqmXoFd/KC/NDzL/vhisjrr4rUgt06mZcTM+wXxslawmAeH\nAbsubqruBcnokYZ1fGBpaR0z2GbRtqGdOXhtc/k0oYa2InZ0aayB712+nRP4wkVk\n3vO1bkjrywQhxzklpAop4XLmUT8jui28txRyxCAPuRCcxhLgVB89+VX+nt/8/zR1\n9XHLou+vE0qZsGcSLjqYDd8kYEC3felp1Ko6y42eSXPw+TbbDUn4iBJu7Q2POHPY\nc69olhN+IuIOCtdBnK0NS5cgoXrKyUq8C+I3HT+u6zYXxA0LJP0=\n=9gxu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
          "sha": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2fda82b4954f4af7e7d340cf42b9cb34d96cde1"
        }
      ],
      "message": "cmake: Add `systemtap-sdt` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:11:05Z"
      },
      "sha": "353e0c9e9679864a777e17c1bb7c6ba8b6eac96d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwMTczNTE2M2E4MTY1MDYxOWE2Yzk1ODdlOGYxZGY5ZWUxODI2OTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801735163a81650619a6c9587e8f1df9ee182694",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/801735163a81650619a6c9587e8f1df9ee182694",
      "tree": {
        "sha": "26c8fdceb1696907326b9227d9bfe51e4e237b37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26c8fdceb1696907326b9227d9bfe51e4e237b37"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 26c8fdceb1696907326b9227d9bfe51e4e237b37\nparent 353e0c9e9679864a777e17c1bb7c6ba8b6eac96d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721822935 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Add external signer support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB+g5w//Q7A+taT5xC36YfXGpD+bY7DOU+ZDO/DbtHBoRI1EjYWXpD5UEj6sWzKe\nGTuRwG1r8bh+L0rvs6PiA94We7IrujKbUL1fu/+nGpt0uqZ9Bf3+npWqLC6kUoT/\n5R7PhrDyq0p6a+gxuoY7bB7YgMoKBbQiyU377JNoaX1ybo3FGAg3u0rypudGZQIk\nBheE75fEqbWv2bEGkvXDQktvSwdh3w6cfudXSDbQgX+6fAvOwxSraH/9Iho+no8f\nP8b3COfp2Gw7F9+ug8+7uR+JsdEwbhm+yUBo+m3wTAuAErpoqKHUtgUFqZbLB63M\nd5XgPq9IGGjaZV0YIb0RAaFrqR1fNYG7bKTsnimGgSYLQxx6AOyDp2rWSah31Edy\ndITV2uMgMa8qheHAf0Tgc5PX27hHKsotD1KftExvMzmV7QfszwjaBUgp7Fy0vTHt\nRs0kfF8/wFsRqXSGaRLxqahOWZ/jlnOIsS2BgQIH5/xHZxVcH7tpR3Jg20ImwoZF\nhU0MU4hHIc/39quP33fzuTC5beu9Je/MBO+GIzpCZOAjYKp/JH5CRvO4ZEa/JhH4\nO1R6WJ7hz0k7I+wuoDr9o81Xj9CK6benqOj1GcEzrjlCIqeSwkI2JscZBHcHNd50\nYDZd4zX6W7XbG1pm2Wrz2KZrfqr5AAqYMEt9HcooaN2+Rdiynag=\n=8B2o\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/353e0c9e9679864a777e17c1bb7c6ba8b6eac96d",
          "sha": "353e0c9e9679864a777e17c1bb7c6ba8b6eac96d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/353e0c9e9679864a777e17c1bb7c6ba8b6eac96d"
        }
      ],
      "message": "cmake: Add external signer support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:08:55Z"
      },
      "sha": "801735163a81650619a6c9587e8f1df9ee182694"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiYjBlODU2MzFlN2MxYmVlMTZlMTM2NDU0YjI0NjY3NzZiZTFkNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bb0e85631e7c1bee16e136454b2466776be1d65",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8bb0e85631e7c1bee16e136454b2466776be1d65",
      "tree": {
        "sha": "14a3292e384d0958dbe41b40ac8dcac46c42ced0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14a3292e384d0958dbe41b40ac8dcac46c42ced0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 14a3292e384d0958dbe41b40ac8dcac46c42ced0\nparent 801735163a81650619a6c9587e8f1df9ee182694\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722418939 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Build `bench_bitcoin` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB+POw/9H+oFsqMeZte6CL2/tCS/+IebXprGL7OuViZy99F+079OKymBv2emVjBz\ns1zS91eNWRHVCAwxuwP+w1XJoDSHfsnx5+fLfsv4Wl4yzMKM5HyPsL4Tn7HYsEH+\nJtH0w+D7D5nm6cX9s7Gkf2C4XyKxLB9S94uCvyfd6tfd5N2YF2oEsFDTgdkpvE5D\nDe2yJpSMj6LT7t4ncRLRu0x0IfOrHTHZJP5bM7ljD2BdWj8J3ETK90EjHtanCyE1\nzmhD/8jLvRM8xONe/engzlnPw0ytgq3QkIVc3mGQsxoZmhhwKAFAn15MEsNkIGa/\n3LNKKjCrbO3sR1soMxqhIbHWodKzvK876OFkRaZxVvrGpWRNRoHIqX8A1SU8XQ8s\nRbjGLljNagI3MMYkPdpqg27hRGk/mB1gHHtctG8VvF48BX10JkGRKd36B76BAnQT\nMOFIRwyszpTnmQe/LbzqU03YnskHbWiAchlTsddMkl9/TiQarRULej8g2KaX88CH\nG6rcjrknY+UBSpcSNn2ZlTd2E9eWERmYTwiNDSzTqDtEypIk4IwM5cXwDGWaO+e+\nRgjZz/9FEu+JfVihwUyIIoPCAQiE7l5hpV8Iv23Baf1f2ei4a2flzUWYGXmvs+P3\nGV3osNZ6b2VSRKx4g4XD87iwN6Buh/AuZiYsCsrhDunZ1prJesQ=\n=ROIe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801735163a81650619a6c9587e8f1df9ee182694",
          "sha": "801735163a81650619a6c9587e8f1df9ee182694",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/801735163a81650619a6c9587e8f1df9ee182694"
        }
      ],
      "message": "cmake: Build `bench_bitcoin` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T09:42:19Z"
      },
      "sha": "8bb0e85631e7c1bee16e136454b2466776be1d65"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwODUzMGUzMTJhM2Q0NTYxZjljMWZlZWIyYTc2Y2U4OTlmMjFjNjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/908530e312a3d4561f9c1feeb2a76ce899f21c68",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/908530e312a3d4561f9c1feeb2a76ce899f21c68",
      "tree": {
        "sha": "7e9fa50d3c8d726ade956000fea72058f7a97313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e9fa50d3c8d726ade956000fea72058f7a97313"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7e9fa50d3c8d726ade956000fea72058f7a97313\nparent 8bb0e85631e7c1bee16e136454b2466776be1d65\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049727 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Add `SANITIZERS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB+Ccw//dKimkoemDviauj8BKLzAKBbHgXSznTwxKaZIVZZXLt2ouqkTRUT4k1oi\nQ5k3dUiQ5bcF12o4dmSJuwshN9YzL0lZK5JtiycEaLK11jf9xe3L6LxDZ+e6Uasz\n1zS0ETsutDUrcc3626IEbN0hdho7racqDcTzuMYXsqgNMdHLxDSauuv4gNpnRL+K\n+rnseMjkp/k9ICaxoCIJEIaItQD04zw0u88YFGJ4WTqL3SMTQ8sn4dySPxTLYFi/\nTpW9Mh3SSnRFv2xStRB4kV82gk0TSvj3zMUX6kKrLZBKrT9lQlh0PYh4061m+ZmL\neyrsBXy4KXYV3rfkGFw98dvq6dmJQkBfUOkpWqw1XYYrHKyLLaqkyXRoiLJvDNMf\n/LR0nA8hxckTHNFtuZLQKAil6EC61kbVxcwb251nh+39fvmkGKHO/wVSGVMepgIr\nWojYj6e1vqpigiTaEV5f4Hhqaa4S/ZKC4jE5R8sZG05fLh+4e194p5nlai/O1ZOe\nxIWEXfRjTzSPtVaouct+ChNgloiMJAewZXjuGiItkNid0cbN6qaeOUqgkpSptp+O\n6XhsIkypz9X0F7mU6fcYU1OIW3mALjHqmW/AGkeonjxfp/cnl3j20faGkD9u8p+6\nAfQHTviIAGOPlGl6K0gWJDx+R/bcVK1PNjhwkquemSG4c9QfnQs=\n=K/iy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bb0e85631e7c1bee16e136454b2466776be1d65",
          "sha": "8bb0e85631e7c1bee16e136454b2466776be1d65",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8bb0e85631e7c1bee16e136454b2466776be1d65"
        }
      ],
      "message": "cmake: Add `SANITIZERS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:35:27Z"
      },
      "sha": "908530e312a3d4561f9c1feeb2a76ce899f21c68"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNkODUzNzk1NzA3YzVhMTgyOGRjZDA5YzFmNjhiYjA3ZGVlNDcyY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "tree": {
        "sha": "35154e60e7942659e68484a48acbd96273a27ba6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35154e60e7942659e68484a48acbd96273a27ba6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 35154e60e7942659e68484a48acbd96273a27ba6\nparent 908530e312a3d4561f9c1feeb2a76ce899f21c68\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832777 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Add fuzzing options\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB/CXxAAovxU9bxeTJ9mAbG7EgYjj5nPPHde8Vn8GYLhx2J2Uyavx5UiTj5vM79B\n6gTmTfDVRyBM+0/RaO6r2HQUgkcOCzPQoPggoXeMiQmdykv4GSjeYPEUQycr5hQ7\nue5DV8lKwQxeNdUGgt5E5AkjInBqCvlEv30y5z4oeko/E8HkSXq24NdmUHZFdTOW\n/DIkyhE74+akGWgKZjy8Q4b5nXfjQUu4sqzqyhDhUofZiJtXintxGCUjowBJoBOM\n5lawsf51XtGuCPO2stpAVvjV/c9sv7HM1loQndQm3x9rYwow62mLzkFJjXdAzqAT\nnHH4abbj0nFrXMdfheJtQ5kNMddTFCsO3ueoqsA5UrddYXAiTxrfVFgYBE+aEODS\nQRxk4l7a7AuF3WCY3C5FoWV5Zz1Fkbu74GPWzfrxdYng+aXYVZ3gAvz8wndIkmZR\ngZE7EbkSX8cQO41T3jhTgZWZn/lRW3f+rzwKwABzaQSsJYykafUr1WZHD08UZ7Yg\nfuBPg6lZF6ct5VMK/7twOPVFjji47ORzbNlvhXjiI3RiF1FdkCY4jQVFwi29sspF\n5f4vFUHjwmg939uJZ9VH5mt50nCBfL2JCtViSei0TxRgOUJfvTAaBKzH3amA28dG\n3+e/WrMPuYcRMxkjc/SqXv2TZzOEov6ZhsGGU6+MjOqlMMkAY0Q=\n=91YH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/908530e312a3d4561f9c1feeb2a76ce899f21c68",
          "sha": "908530e312a3d4561f9c1feeb2a76ce899f21c68",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/908530e312a3d4561f9c1feeb2a76ce899f21c68"
        }
      ],
      "message": "cmake: Add fuzzing options",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:26:17Z"
      },
      "sha": "3d853795707c5a1828dcd09c1f68bb07dee472cd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE4YTJlMzY0YWNmNTViYmUxODQwNGFiMjFmODUyZDUyMjU3YmNiNmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8a2e364acf55bbe18404ab21f852d52257bcb6d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8a2e364acf55bbe18404ab21f852d52257bcb6d",
      "tree": {
        "sha": "ccae05646f7a550b4a50bf1a373a4b12d611e2d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccae05646f7a550b4a50bf1a373a4b12d611e2d7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ccae05646f7a550b4a50bf1a373a4b12d611e2d7\nparent 3d853795707c5a1828dcd09c1f68bb07dee472cd\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722964477 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832861 +0100\n\ncmake: Add Python-based tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh0ACgkQQQEIES5+\nqB8M+hAArzKI9RjfR6nlN/tV4BxfqK9BhZuOjhlO+OpItoapfQAa0Bt+ny5bFq0z\nvVw/+TbhaKihoZOc0DaBJe+xRU3d/aNEjR+x8UtmUQxUW6W64+JcP5x4EzVuW0RQ\n40tl6T01dvPO7E0KKqHZJE2GpS/ZJXtaakpaC3+sZ8TJNZLe7bG2I2OHJsLx5gwB\niBxupL6FvltS8o0IgE9dU3I3LjEtdMxdz8f2bhLWWZOcy8v7mJO9bdLIUZYWcYRL\nT3wNzWGZ0i1SmokcXULc0Yk2FLxkwpKbKwyuqac05iLYrTv0UQoKwDOmDCDhocf7\nLMjGmS7DlcZo4MHyxIHe2YS9u7dXQFuuwumR4pAkAf7fPCDLbVjUeL3Zazf+uOTV\ncL8TE3jefPhlDa508wY0NAtZb8G0ueCVWOii2TmfJnb05fblc4kOXRuuyO58gPRj\nD+opghYKGmVq8YQ6ijmlrCXrc/FnzTbmoT7ehYvBOv9gG3NJu80ZZR2oh2Iur6gL\n0Tng1q8DFUkVnCTGQFICq3DkBY0bf50uNq0N0I2JGfS6HTIrUbZRpFya2HEMwc/A\nIEiZSQdgp1hq0qAtrd4p+IWNb2HRbPf/FsjWXvT4NOxeG16AifRSNWmWMS5J8usw\nFca4Sjt24q+Up0e2QolborQQTFCheRkZDIRKSUMdkoM1tt3lQRY=\n=2vzX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d853795707c5a1828dcd09c1f68bb07dee472cd",
          "sha": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3d853795707c5a1828dcd09c1f68bb07dee472cd"
        }
      ],
      "message": "cmake: Add Python-based tests",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:41Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:14:37Z"
      },
      "sha": "a8a2e364acf55bbe18404ab21f852d52257bcb6d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwMWNiNmU2M2ZmMzk0MGYwNzczYjM3ZTJmZTFlMTQ4ZjE3YWNhZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a01cb6e63ff3940f0773b37e2fe1e148f17acad9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a01cb6e63ff3940f0773b37e2fe1e148f17acad9",
      "tree": {
        "sha": "88913c36f505056ff73c3fca813411926becde1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88913c36f505056ff73c3fca813411926becde1f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 88913c36f505056ff73c3fca813411926becde1f\nparent a8a2e364acf55bbe18404ab21f852d52257bcb6d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719774149 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Add `HARDENING` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB+wBQ//f3bSk4MsVA5fvcUqW1wwUAnrAXHf6nlYbmV6ZYBAiG5KlM9fTAkLm8/x\nr35d4/MqSQlZG4741Ev56nVmAEJ3ZBt/+al4BafmkUu+inqYcbxmN0KHwRbe2mR1\nPf7JDqZlwcKWkXdW+6kJvj37EPqn/9R/apVAq5NU7w/bjnuY4I5gE0wXLLiR9gqZ\nOOuJfblqaxqf2VxEbxZ3v52FKg7vzmeXLvqvULBnWWTUB6O1XvtYpxqt90g4fIdI\nSebPx2tlGEarYJ/BFIHkodJIfALB0I4yDSeF7H7gPQWYWldH7OVNgABJ+QqLzBnR\nkMqnMSBBSmj8rFU5L2RvmFUyU4umeZpLs4jZR32EVYKpeAT6QQ1AWTqn/TO/q+c3\nMfL3oeOu8jH6iHBKBZkRz0BkLJxp0IvAVQv0ypAerFIV+xQM1eok+pj+l/WhlZ6P\nuevC+Y6S5N7iSUfMsUCOk3NQLVC9Igbofu3ce5K0xy0cuVhB4ZuABCynkBo33jwj\nMXZVgRby11U7jrDbLb/v09ph51QcLOFIBl+Py8tcmk/9HJHPj7egE/Lin8nW8xav\nIv+W6wGONzRFmX9BBv0KjukqAs6upTtXc0ZtPrgDnAfrgE//MCn4wVVvMYQALaSu\npXgy2kDIlSV1DMzlysfqGrDL4KGKCA0qNwP3E/wjGnVDpVSYYW4=\n=KTjB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8a2e364acf55bbe18404ab21f852d52257bcb6d",
          "sha": "a8a2e364acf55bbe18404ab21f852d52257bcb6d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8a2e364acf55bbe18404ab21f852d52257bcb6d"
        }
      ],
      "message": "cmake: Add `HARDENING` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T19:02:29Z"
      },
      "sha": "a01cb6e63ff3940f0773b37e2fe1e148f17acad9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5OGQ0YTRjMzQxZTUyNDM0OGQwMzQyZTE0NWQ0Mzk4MTZhNDRjODM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c98d4a4c341e524348d0342e145d439816a44c83",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c98d4a4c341e524348d0342e145d439816a44c83",
      "tree": {
        "sha": "d56a659f8298cda43d259b8713f127599719ba70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d56a659f8298cda43d259b8713f127599719ba70"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d56a659f8298cda43d259b8713f127599719ba70\nparent a01cb6e63ff3940f0773b37e2fe1e148f17acad9\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049037 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Add `REDUCE_EXPORTS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB9F1g/7BsFBxIdVo8Nf+E7x3y6GbAcT1BVAXgzO1Irdhwzk7nu+TM4mvYqbAPzV\nXuFeo3NKrg1gfaRvDyjuAoLhsu2UR2Q/XKalWvhK5XS35/XRpA6VWarxQ1RYllJv\n3fK1A8PYwW2I71yDQS9NnN7ALq5OHVCD9cgD8jWntyevlZ+LBNNSfhSX1tZrTX8u\npksACp8wogdmWMGV/oKq9ZmDpLxBvcLOjzRBg83S4+VfxoEaA30ZReiS2qrOzZUF\nqsbA2hNtkrPCg4Xn/iaC5+i9JzZzECe4u/Ljm0TDMnUCwdC237bzy6HPmQcZXooC\ny1XFqiPeV+9GigKzhpxW/0wBfZMpJyW51MCbzAsagUclt+4xaRTSBcw0KLj2M3f4\nmy8SO7pI5IjwQilhxVcDQ+nsPJfNbYN6XFXh/8ENh2pHfTPS7rI3RMoIfTbfyLXF\nANwHmi+j5EQIWC7xqfgd6rjRzj1nPymrBjLDSTq3496bG2pN52at8Dg2Vb5nruzK\nn3hZ42bwD9GduOs7Q5V6+0ioAsCuUryBMiOQCoM87+ZC+KpMms1OKwoeE/kHSsDs\nOaJfr58hP9Oec7JxrpBgFWI1zmFuc8rlfhe/0cmXFgwCkS7bNC1lC61kfsq6ksVW\n6v0FEsILb1nFi19zYVXE/s11Mq88f/fI1G8o8l8EA7FIfq4gktY=\n=VrLB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a01cb6e63ff3940f0773b37e2fe1e148f17acad9",
          "sha": "a01cb6e63ff3940f0773b37e2fe1e148f17acad9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a01cb6e63ff3940f0773b37e2fe1e148f17acad9"
        }
      ],
      "message": "cmake: Add `REDUCE_EXPORTS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:23:57Z"
      },
      "sha": "c98d4a4c341e524348d0342e145d439816a44c83"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMwZjY0Mjk1MmNiNWJmMzk0NzliZGJlNDY3YjM5NTBmMGQwOTMyNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30f642952cb5bf39479bdbe467b3950f0d09324a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/30f642952cb5bf39479bdbe467b3950f0d09324a",
      "tree": {
        "sha": "56f7918650d3b1c0e8eba8a2a8497ac9e9c9a10d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56f7918650d3b1c0e8eba8a2a8497ac9e9c9a10d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 56f7918650d3b1c0e8eba8a2a8497ac9e9c9a10d\nparent c98d4a4c341e524348d0342e145d439816a44c83\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049089 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Add `WERROR` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB/8Og/9EFtZnM7lH8J4kStrrC9/Q+/s6My8LwTtz9qCcxlv75x+uoTWP4lbiQE5\n3dD5EMpFijMQ4JrMamNTTdxvbBhBYDa1EZnHfhmIeW70vVJLHyGE7ZLmDBBsaYN2\nYf0bNy8Z85HQN4NDoztQ7lCyOOYlOBr53IRB+KFGu9U7XJNkckHavJcvgjMLrUGW\nfsv87pu00gBUJ7kvV/PxI5pKAxUmiOU7oIfdbzFHlplC2fuxse5T4mWsL1+6pIvE\n8mRN4OxH9CDrNFjWT2n/SZLamftVObUBo6wBg97q6p0WA2DP52Sc9CVLAyN/KTW9\nZLK95mf5sDY7uegXeiSIUGDmVKH9IwHWagkDU45altCKefVFoIrKSgVlDxePa7PH\n/QBs0oUpDjsVcS/viT9X9wtHjqUHtjj9Szhx6mnywPslNUGalsldbnQUKsh0WNd1\nv8nP3NpCd9Clx11fxd8hGozzRro/39X428X4GPlTQBidGdjQgIrQe6SO6j+Q+dbg\nbNXhtCSiJku7oVuaVGScTqHJWPvZh6SXsa4oGUsi04e3IMnslS+LuLp8xLip54+i\n3ovUpeTHDg18EFg4gdD8rddz/5ya/aRwk/YTm5TXi20ZgYlVxdhd/VGYx0sPREBS\nLr1RRVllamdIfNVY/sEG5gfzExy7ugypdhsRMdGPW1joVcO+P5I=\n=pL4M\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c98d4a4c341e524348d0342e145d439816a44c83",
          "sha": "c98d4a4c341e524348d0342e145d439816a44c83",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c98d4a4c341e524348d0342e145d439816a44c83"
        }
      ],
      "message": "cmake: Add `WERROR` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:24:49Z"
      },
      "sha": "30f642952cb5bf39479bdbe467b3950f0d09324a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3YTZlMmVmNGFiYmZkMmIxMmVlNjQ4OTM2NmJjNjYwOWJlYWQyNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57a6e2ef4abbfd2b12ee6489366bc6609bead263",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57a6e2ef4abbfd2b12ee6489366bc6609bead263",
      "tree": {
        "sha": "09fcad378198497abd553711b3ace2fa25f118fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09fcad378198497abd553711b3ace2fa25f118fe"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 09fcad378198497abd553711b3ace2fa25f118fe\nparent 30f642952cb5bf39479bdbe467b3950f0d09324a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720871920 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Build `bitcoin-qt` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB8zCRAAmFgP+ySuu5zU2f7++VhcOjTHcPy4FjWceWKoUOeOiuxdfdxhva1sOpo2\nRautV3ZqSMsDHXQqBfr0XsnHwA/3NyxC1OPnDICuVhkvr2AYHlefemqAvPjxWerg\nT+mzkK0uHdBXqMOMoITNJGJTtFgZGjOhuBGMKqu3L8Yfr4W4N6xVrqCqLcSQRKO9\nG9sXWxlpppoblBS6ZDr3iMElHADNFkt0hFxUhulxhfBEGZlF5bizuF//8X/2L+h3\nZfs9V9Fxiql7LQKgq1BzpGtagJa/0TXvUWEVL1Pqbkh+cuwQFWqUOgPcbejlhvTb\nrhTPcglqxOHyluvaQ5eFYorRlWy2v5TLGLE+fDFcI1B1RcIqSYAFiMuQugROOn3B\nvgfzyfwfV3sx/QzffG9No9tTHrUoZO2rOLznZmhsxiRRLq7c2/1d+83eDr4qeDeA\n02+0/cPCmhTsGYSMjxniGq1+tMxwwz1U9pX8YoP9vEzLgOeyCK2DG25IqxaL01j4\ntqJMsALEzm1rhR/s90RFaRKygL04/kIhuAYJlpE0xs6SyIjlI8LOBHVmbPiMklzl\n1oGWFftgpEC2krUd3X5RWJjRm669MT2F+a+TG1sUWPjyOzhiSXWwuEucVmtEucYV\na63lMLej1UEkf1xDkpKn4KDYhZVybl9ATvH0lQmqU2VEkTUfZ2c=\n=Fat/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30f642952cb5bf39479bdbe467b3950f0d09324a",
          "sha": "30f642952cb5bf39479bdbe467b3950f0d09324a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30f642952cb5bf39479bdbe467b3950f0d09324a"
        }
      ],
      "message": "cmake: Build `bitcoin-qt` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:58:40Z"
      },
      "sha": "57a6e2ef4abbfd2b12ee6489366bc6609bead263"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViYjVhNGJjNzVhNTIzZTMwZWFiNTYxNzYzOTI3MjUyY2UxMDVjNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bb5a4bc75a523e30eab561763927252ce105c4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb5a4bc75a523e30eab561763927252ce105c4d",
      "tree": {
        "sha": "6197e512a2eee25e6f1e8d276fff0c19b12a13d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6197e512a2eee25e6f1e8d276fff0c19b12a13d7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6197e512a2eee25e6f1e8d276fff0c19b12a13d7\nparent 57a6e2ef4abbfd2b12ee6489366bc6609bead263\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823221 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Add `libqrencode` optional package support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB/7+RAAlY9X3JJPYyAZugPD4NRYpYzu0ecTo4RBWMsviFm3c6OpJxL+ZKACzVG0\nyDcb2rs+RWsLdt8AmMYAtnudlsmrnFwrhcHINNdyEcmWeileO+ajrg4uG/nTcWYm\nsPiHoSrPvckhKC9ApbRKHepQY6AjehzPB/4Dov9BpLvfP+MArBRags2qi4i5rR5N\n2KnH/XVE2rzMOONiVtC0Y5QgSA8fR8SIjtDdJZuUSgtWiQ7qtUZtAb3qI3kBQ8ew\nQ6rKF/SmrYnT51FV/WCyg24h9416mXAByTHanAFlZqwhLvykaG0kA7dJgIUVXVTd\nQfoS5jsXibYh6xuX8KAs3tTmo/Srj8TE47SBZCpjYKZ9+cPhSTwObKNMynfGRlQc\nFwU0dknsdFi5Qg4wj0Hwekq0e469IAMNdT13ADckOGhRSXmBkioDT0jKtARqSnF2\nEtq/ir1V0m+LvLI/68WNGNGPRZyX0wDdURrWg0ctAXxaxz5HfYUlGqA5BW4NViwA\njRzBcBYzWvTzcbg9HipRNsmFgcInf73ir53saNVnrWnBErwtL1zyRVtFaQuIOgL5\nQFXp3tsKSg200n3VJNa1v5E4BFPkq47eH3vQPHQjw/jKibYfA4q+QAZupbdWX14K\nAoyVTrhM6ht2ILOS/+mriep7QLfb4sCjJoy6nONZ3YbOXbW/+jE=\n=QU4L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57a6e2ef4abbfd2b12ee6489366bc6609bead263",
          "sha": "57a6e2ef4abbfd2b12ee6489366bc6609bead263",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/57a6e2ef4abbfd2b12ee6489366bc6609bead263"
        }
      ],
      "message": "cmake: Add `libqrencode` optional package support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:13:41Z"
      },
      "sha": "5bb5a4bc75a523e30eab561763927252ce105c4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwZmNjNjY4YTM0MzBiNzJlYWY3ZWZmYzgzZjAwY2VkZWIyN2M3ZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10fcc668a3430b72eaf7effc83f00cedeb27c7dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/10fcc668a3430b72eaf7effc83f00cedeb27c7dc",
      "tree": {
        "sha": "f173daa64409dd81713849217226e74581d0d33e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f173daa64409dd81713849217226e74581d0d33e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f173daa64409dd81713849217226e74581d0d33e\nparent 5bb5a4bc75a523e30eab561763927252ce105c4d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721823540 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832862 +0100\n\ncmake: Add `WITH_DBUS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mh4ACgkQQQEIES5+\nqB930RAAoDrAx/RXwo2E6CiVI2E1H8DP8qZC6a9G9AlYRleopjCD9Xya2CZ/o3Kg\n22nsu4A1MZgEAs3ZKXJGh/wn0oCa0//c5dEB8uLDALWRG9xpvFpoZM1MQ3JkRep3\n2A+l6lfeSwahzBGHqrW6tCyUW2crbklQCHwd3aLJ/U4//W9CKuaNr7bB6nhPFHhq\nQuRd9h/Rd5okDFhtdz/U7WK8IsDdIzc60p9Z3lNJ1DjyrNI0+44RWQAlx1/rrZXs\niLnwY8Yq/ENSMDZdGGpH5NVN5h2cXcxcUI2HVhx+eG3uJ9/NHZGbPHaDzUrxhHfQ\n8s/XptpjptNg1fNYtbFXOOWjoq87sIE/KFjE4eaGYd3t95aswM7SJE4Zv45fODBZ\nA48/6Fcjl2VKlrDVmFJ8zuxWXjBHXD72STKxJFttN9M77r2+Yzk1IhawtCwByBCz\njgOxSFNVf5HcDOo0QC24+gzSxq37EkdgjAPB3AG10pbhDncjkWMRb5Y4U2tAKriW\nzWIhmMw7OXOA7V49+H1bQZvqudmqBasaCY8+iTKqh+Aadcx0YudPXQbEW9RmM7dP\nL3tBiH4T19xDpPEyzUvA0p/Vo9e6CMy4jKJrPVZAiDNGnvtzvFDHOwdR83J7cDxR\nfWHWwMOpipis73gGLa2cFDl+tGOvyCapi7TIQJvYTy9zvnaQm9M=\n=MHnF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bb5a4bc75a523e30eab561763927252ce105c4d",
          "sha": "5bb5a4bc75a523e30eab561763927252ce105c4d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb5a4bc75a523e30eab561763927252ce105c4d"
        }
      ],
      "message": "cmake: Add `WITH_DBUS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:27:42Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T12:19:00Z"
      },
      "sha": "10fcc668a3430b72eaf7effc83f00cedeb27c7dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3NWQ2NzM2OWI4ZjNhMzNhMjFmZDc2MThjMjk5YzBlYzEzODI5MmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/975d67369b8f3a33a21fd7618c299c0ec138292c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/975d67369b8f3a33a21fd7618c299c0ec138292c",
      "tree": {
        "sha": "1eaec90e0fa3c5e44791c2d234fa6a899d06d92c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1eaec90e0fa3c5e44791c2d234fa6a899d06d92c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1eaec90e0fa3c5e44791c2d234fa6a899d06d92c\nparent 10fcc668a3430b72eaf7effc83f00cedeb27c7dc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832939 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832939 +0100\n\ncmake: Build `test_bitcoin-qt` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/mmsACgkQQQEIES5+\nqB9kyg//YdRqeRGJswoIYj3MaNmkwzs6dCygoHwcY+gchDr+SVkl8l/tjDY8j7q1\noeR41cDeNdHJeS1VPeGDM1t41Lri1uDhWMouaonAE2kBXqWNy+HMuK9Ep8c7eH1m\nYCoA0MluykvCu8bKCITdu6baVvBqHR1oYUMx6bwscP26nWCpdITa+MSc6BCxRom9\n83zG455nsVSh8Y1Qgd42m4DqopQ/q+HIi5i8vCWoA2Xz5D4hee6JI7hABp0Y18W1\n5xvEq/f3f7MdaexKCuqtRjxj0Nd9Bk2p7c/1Z+0/0j2W8r38JmccR42BWd4g7nyS\nCt5a+ZmYskOvOgvju7CHjMpErAv+Sd00MMVumlVpQdq+5I7aILX48M7cdjwl86aS\nP9WiwSuMzcemCc5LrhMLqAUO4i/Y5NmN64LON8nW3PH/CGmpOyuzQGbvcb7odXnH\nsQZWeSkH3H/gFp4cIuckTm4pGfVY9rvcyncbuNegWsbsGwuLW9CCm6lHKmr1thl9\ngAYJ1gbVFMs2u2gB1hmPNTPcI5dftlDMTkIG17jL/HkNhLe/UgjXLC6u8TpQNcGk\nM2X5Cgnl3ipwTNQ1Z1DOLgHWFgaSDsvPgdJCZ+9XLTkCizm2ZVGFqMs6jNBB7XBy\n7pAlSX2bxpAP8xBGUedd0zuJbfSlo3wVZ0XIoVteyz58z54rhoM=\n=T+11\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10fcc668a3430b72eaf7effc83f00cedeb27c7dc",
          "sha": "10fcc668a3430b72eaf7effc83f00cedeb27c7dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/10fcc668a3430b72eaf7effc83f00cedeb27c7dc"
        }
      ],
      "message": "cmake: Build `test_bitcoin-qt` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:28:59Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:28:59Z"
      },
      "sha": "975d67369b8f3a33a21fd7618c299c0ec138292c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlZDM4ZWE1OGNiZGUwNjhmZTEyYjUyOTliMjQ2YjRlMzY0OWEwOWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aed38ea58cbde068fe12b5299b246b4e3649a09c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aed38ea58cbde068fe12b5299b246b4e3649a09c",
      "tree": {
        "sha": "13cc942e2d0b896061e99d11cf14c7bf81e9b1b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13cc942e2d0b896061e99d11cf14c7bf81e9b1b4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 13cc942e2d0b896061e99d11cf14c7bf81e9b1b4\nparent 975d67369b8f3a33a21fd7618c299c0ec138292c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720870637 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839549 +0100\n\ncmake: Build `bitcoinkernel` library\n\nCo-authored-by: TheCharlatan <seb.kung@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD0ACgkQQQEIES5+\nqB+8Sw/xAUT6LRQ3uYspzceM0qvAea1k5/5vZ6q38Jt8+B2eexSpD6OlfiHRaTEc\nmvrEWK3Pdnv3cgWUJzBjg/DO++IS3GlcEE3oh1BAUEaOce5ytzdfvDZo/2B52Atw\npO30QmqmKayN0zcxGEeHM2eI1fkD7Cx+ufRe4PBrVWLaNj03rxw8DG9Cid5+RaKI\nmFIn61iU29uw90Uzah+xPzNeW5K8zR4fqdYp3mDXmZ+ytZhw1KvwW5oDpm+6E6bU\n5/MGmsy5xevGYgqtwMwIoOqsD6F8f0Xgm/YwcU6HOLZpy5AUjQCwhZ6JPghBBmsy\nUQSorqX/szCeWKu8STkSoJ+qHJUo9JSFsq3n9CjzcbUAWM14XrX+m/Y7c6fHnhYc\nuY/ymmnwlGZVVu0h+cD8CKX4CvyWEnm4h3um+cnVRSYJS+BSVPfkLDkYwCeCdPD8\nOc/bcgM0pvviESh/uOgOgTQHmyYqqSK1+b2r0QZbgKPW6XLIM4yhxMbzXtGrRSfX\nKBotMvqShHX6ptS1ZrWzKJjDwQfKA3WHlJxb9HBS60MNhyiQmInWoPpdXUbebW1X\nNWwpE490VDAkF2Btb00KIOKtD4B5/+fpVgKMmXMCz+I9iChxePclMuzwAUtwcCYT\nGXi0HH/KNt486Tlry3fEbgwn9Dg7KFO2o79Ywp9P/kjKUt689A==\n=35yB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/975d67369b8f3a33a21fd7618c299c0ec138292c",
          "sha": "975d67369b8f3a33a21fd7618c299c0ec138292c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/975d67369b8f3a33a21fd7618c299c0ec138292c"
        }
      ],
      "message": "cmake: Build `bitcoinkernel` library\n\nCo-authored-by: TheCharlatan <seb.kung@gmail.com>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:09Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-13T11:37:17Z"
      },
      "sha": "aed38ea58cbde068fe12b5299b246b4e3649a09c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJiMWE0NTBkY2IxMTE3NDY4Njk1NDdjOGI1MzhiNWQyNDcyY2Y4ZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb1a450dcb111746869547c8b538b5d2472cf8e6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb1a450dcb111746869547c8b538b5d2472cf8e6",
      "tree": {
        "sha": "254930bf41d29c681e47f6110f5ec057a0f55d64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/254930bf41d29c681e47f6110f5ec057a0f55d64"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 254930bf41d29c681e47f6110f5ec057a0f55d64\nparent aed38ea58cbde068fe12b5299b246b4e3649a09c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719759335 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839549 +0100\n\ncmake: Build `bitcoin-chainstate` executable\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD0ACgkQQQEIES5+\nqB9pJhAAjWjKM9we3VIOvraWr/j1RoHzhIhVDha+njE2qQTC7YOpwhjY+hAQ+ySl\n4Xauk1s3gVqcgonwpfMcKZ+ZXOdqyDlwHnXgOAalZibuHQk5+OvI6HvCebsXnwCW\nGnv68PHuBZleoXwoVJRAYGDT818jSMvCiFYS3m5OgZ0kvrUg+iz3fFc1bJTRG/Zj\nsyWMr1ZgBb1qR4ySTFf05fQgxNEfLOddK8J7A5aKE8ALEw3YHtPh/aZgtW2u4iWi\nTaQF0MYYI3XEQmgfKsSYBjmAsEpttm2XrH6jxh3WKIWCHTumi+s/yAqPTuYU6QQf\nZi/liYXls8spUcZWZ6QXx80rDP1RhqmjzGZxjbqdRpMalIlii3M2azraPBUxDSJB\nVOOMI+INDOs6ZOeVIHbmbPdPpW0306ErAmVdPozzcXN58PgyotuErWvFAuT+nIY5\nyPh73974EbrFgepHNrQcztZW/zkmU30cse9qCgg84YPtncPwyedqsow6s72PlX5E\nUIFqAIpWfDtm+kylwUFUfd8YMkQTtjqKZrWq68egYIDQtvPHYMl6MZdJoFFSrXIh\nY60NiRd2bT2znB9Y/3yyEGTwo48q10dJFjtywEc9Tq3VwaG42yOrbusxb8x6CXky\nVqUiexrX27DooHS6RsYxo2w33Dw0zxMMuxJ+dFiqMz862hOJ/DM=\n=pomJ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aed38ea58cbde068fe12b5299b246b4e3649a09c",
          "sha": "aed38ea58cbde068fe12b5299b246b4e3649a09c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aed38ea58cbde068fe12b5299b246b4e3649a09c"
        }
      ],
      "message": "cmake: Build `bitcoin-chainstate` executable",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:09Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-30T14:55:35Z"
      },
      "sha": "bb1a450dcb111746869547c8b538b5d2472cf8e6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwY2VjNGQyNTFhNTQxYWRmYzU5NTNlMjRkYzAxODQwYThjYjRhZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90cec4d251a541adfc5953e24dc01840a8cb4af2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/90cec4d251a541adfc5953e24dc01840a8cb4af2",
      "tree": {
        "sha": "00378e56b2e9e5f7264664f9de36e0d5647bd119",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00378e56b2e9e5f7264664f9de36e0d5647bd119"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 00378e56b2e9e5f7264664f9de36e0d5647bd119\nparent bb1a450dcb111746869547c8b538b5d2472cf8e6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722965004 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\ncmake: Add `MULTIPROCESS` option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB/mSw/+Jvq7X6eiY75tPXzR5CiUbLMtSRa/V/qRJWj3ppR7qcHuoCddTdrN0V/K\nWz8jilT7pua1RrFDE8LPAFH8jzSPc1yAGsCGzubt9QAnM1yMgi4pYRDBs/E+LVuX\nKlQldzT0hX8dthm7rK7J0IrF2kJJWGpD86MCjIy7et3A7BLKsCMX5z0IVVytylA+\nsRe/BNucFKtYdeCe1kLtPSiRj/xQGkiYGhrz1lnJjp8j0qy9qTZfgb32Vaejj480\nsIDRRosyN0kaidYTz4H5VwRRA2w4WaWddPA9stDJNbF79c7pkb6JWNmAIMQgTwOB\noGFnAK174lfm6RJ/+y4Xn0lNVdjTp3v00BNPynC5tH8ZFhkI0DKPMByubhxQ+1nD\neQyef6JGha7x1i7emnATTl+nFldoiNPU1phu5V8tjSCXm0jI73U3b77YqL34amp2\nIdEsb+UbwYeUKkN6v41sw2ZD+UqkwyllMJXJ1Pofcm7AaKZyEbjif2mW+Z9t/H/T\nQ1OyneEMVaAkIkDWFecX70gYoXyX416k5BhndFG8vjPs8e/WwD39/PlRLsjD68G5\nos3Ayvp8aCaAXHT2qjgVBCV3txQIrlzg66jyDnyZlUCHfsryDWrcywDxRyBY+EBb\nESOjTWkOBLrsPUH8EqpN4ZbMnaengY0hMklG6/5EwLObarGwCd4=\n=W40j\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb1a450dcb111746869547c8b538b5d2472cf8e6",
          "sha": "bb1a450dcb111746869547c8b538b5d2472cf8e6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb1a450dcb111746869547c8b538b5d2472cf8e6"
        }
      ],
      "message": "cmake: Add `MULTIPROCESS` option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-06T17:23:24Z"
      },
      "sha": "90cec4d251a541adfc5953e24dc01840a8cb4af2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1MjJhZjYyYWYxYzNhNmUyNTI1YmZmZmRiMjI5NTc1MWI2ZmE0OWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6522af62af1c3a6e2525bfffdb2295751b6fa49b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6522af62af1c3a6e2525bfffdb2295751b6fa49b",
      "tree": {
        "sha": "f216fecafab303e9e861c66e46af1419d53ea947",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f216fecafab303e9e861c66e46af1419d53ea947"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f216fecafab303e9e861c66e46af1419d53ea947\nparent 90cec4d251a541adfc5953e24dc01840a8cb4af2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1707084770 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\ndepends: Amend handling flags environment variables\n\nIf any of {C,CXX,CPP,LD}FLAGS is specified it should be assigned to\na non-type-specific variable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB8AwA//VJTnhfZWA9S0kitLicv55/Ptt4pvRqirhENDWwFicaqIlw/ZqEb4KKAI\n0yb0oZe1t6bTT8mH5+RR3//jsIxjhsj+mv1RK3Oi0JF9MGCQC5D+CwhOkT2cwAy0\nvPlKYNuVws/0mdNYkE4Hb1+U/+2YZDMWR8/84wQZA+5Wiesy+AkHDxCiuFH4iEMm\nCDct6Q/YJe21Pc9XowKih2Nq9oJtin+vKmrOkckuWg1uqC9mg0R6OyAR100eWI/7\n+E0+ZJw1Zf/HhA9174akU2j8Le6ttSShe4XKdojBww81QTC5k7MsndXfmo3zHgTl\n+0mnEcUzNuo658QDfsyiIDtsPunf/xXCSJVzmgzusbHbAN0ylMRiNISkBKhs9Grz\n50ijIfG6uVgujOh9Suma99xZRpm/84uZO2F6Q4RC1aKGxOJxzD/Kwj8iELG3BhOS\nwqX/G1iQo327NEwchyBIK9oPffPiaAKS+q2jclg3h/C6Y8uu9JotZjD8fm5W5No1\nSkhhR4C+MymHRWQDvQhMcmspzpkpvRdSM2UYs2zW5LBUOvgSM8VDWHIQ9dDP1/GN\nf/0JNtNn/VjuhIzALXf8EHpNu56nvStH6eF8MBmoLBML5GdENPa1/qg6YgYamtvm\nLCImp6UvGPku4Iigw9qhsWAtQ3O0aiR97JIXi5KxRNqh0xYA1JQ=\n=Pi+o\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90cec4d251a541adfc5953e24dc01840a8cb4af2",
          "sha": "90cec4d251a541adfc5953e24dc01840a8cb4af2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/90cec4d251a541adfc5953e24dc01840a8cb4af2"
        }
      ],
      "message": "depends: Amend handling flags environment variables\n\nIf any of {C,CXX,CPP,LD}FLAGS is specified it should be assigned to\na non-type-specific variable.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-02-04T22:12:50Z"
      },
      "sha": "6522af62af1c3a6e2525bfffdb2295751b6fa49b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhNTIwOGE4MWQ1YmZlZWYyNzBjNjRkNDhkY2UzNDQ0ZDZkMDM1MTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a5208a81d5bfeef270c64d48dce3444d6d03511",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a5208a81d5bfeef270c64d48dce3444d6d03511",
      "tree": {
        "sha": "1121757a40abf3b7dd9b6f095dfb01800888b4d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1121757a40abf3b7dd9b6f095dfb01800888b4d4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1121757a40abf3b7dd9b6f095dfb01800888b4d4\nparent 6522af62af1c3a6e2525bfffdb2295751b6fa49b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1705498180 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\nRevert \"build, qt: Do not install *.prl files\"\n\nThis reverts commit 1155978d8f3fcc1cebf357302b933b834f9c9465.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB9UOw/9G4cu2ROqsIB5VipcBL1MVNskk54nbUQ3i7I86E0tJ/b1mzbl6IqTVqrQ\nUOf9WZ0hUbonGJtK1gMpkLuyHQNDW8RlB1hwVI0lg/WLx+rDHpqoD4iVQMS+9WyZ\nMMbfGMM9zMU9CINRjOpAJl6sQkNtjdgqEHyoJ0BzhRAvZrAMXF0k447yvPAUpuH2\nlmczmt/DB8t/AWraY0jg5UEF6jCqpZZzsdDKObGEZxX6lf9A406qD7pMNLucTeDu\njNvNVZIWTVKCPuzn1u4d2mDQPzj/Q5NzLNiMaMwHvRMvb7FZj0U4f2orkrlWuepx\n3Ejy0UthMU3mwRzKcq88yKlTpyRFSLi8AVG3UKzqct2K2stooz3scss6mTWEQPHR\nbaIG3Eyzg3GDJHau1ph/d+lMcuR+WbERBfsbjm3eNXqqGG8tQ0DQZO0dI1YCcC24\ntQfyFK/6SyocGnYopR/xJTiGvNCl6qCyhGWBwVF4acO3/cGkBQD7+M9WjWXw+ss4\ntcjmlhNGNQ5tEzWu1W+L4triWBfa1MymdKNpYLfhuYq/+o70cFWBKY9aSuw2K1Fb\nDcjl590rMCeMlxH9oPFZ3gqSglVOBZBqxcWpwGlomdeMSP6uIat8FaZLsE3Z6IVh\nsLdDAeeW4m26lfIndcavVcr342+Kb3zrnqlbnPyvBBs+jsDi5UI=\n=6Oy7\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6522af62af1c3a6e2525bfffdb2295751b6fa49b",
          "sha": "6522af62af1c3a6e2525bfffdb2295751b6fa49b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6522af62af1c3a6e2525bfffdb2295751b6fa49b"
        }
      ],
      "message": "Revert \"build, qt: Do not install *.prl files\"\n\nThis reverts commit 1155978d8f3fcc1cebf357302b933b834f9c9465.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-17T13:29:40Z"
      },
      "sha": "4a5208a81d5bfeef270c64d48dce3444d6d03511"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliMzEyMDliNGNhYWEwMmIzMDQ0YWNkMjM3NWE3ZjU5NWNkYmQ1MjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b31209b4caaa02b3044acd2375a7f595cdbd520",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b31209b4caaa02b3044acd2375a7f595cdbd520",
      "tree": {
        "sha": "9065901c29c7931da09295d9d99f0068267d7ad1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9065901c29c7931da09295d9d99f0068267d7ad1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9065901c29c7931da09295d9d99f0068267d7ad1\nparent 4a5208a81d5bfeef270c64d48dce3444d6d03511\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1715757542 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\ndepends: Rename `cmake_system` -> `cmake_system_name`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB85mA/9EL+shN/QAc7gMUUHtijexlDh8T7ziuqnvTSTLqCARlcPyyLVe+JG1mug\naD51Du031FJc7yf5ZCuv8tLDf6Clu51FjrTtWQLM/PhuxZSAleKoQQP9m8ALBnJP\nbxnqLLRiHrxHsvyB70eI50Dy3Gjf+Z678WtKp/rsO6x+oMFJ2E0bN6XgtAv7sjnm\neXv+gYNEEgU4DqPvhfainjMC473pao7KfvUDz/aiGKOnn+A/+StlLBLO30TPDa4T\nhPu0NrVAJqubl03VZw6KA1YKRErPoZkwQlSHd6LGH+n31lf5aLPNix3XajGXHFvd\nZ12VS0Z57x+YBvfkgGPKmj6qINAOWpQFfAnL/GSwuXOoCUhX228+1xm9gGAkicfo\nMfp+ZYX2Q4yQ2L4FNb+Tv2TrewGQrU0jHVM/Yl3Ms7k2YRWBGh1joJJXwTuyHtR2\nApYErh7zLuZWsr26GmtgFu4fMbkgR7MJy7d5MfXgUCnYL9NmGkMltB/pv0pDgl18\nNilBCElqtR43gBqIBiDFCo7fT/wLQFlyOderZ9lwdOTA2gLAMQh6PbaR/6j3Q4F/\n2Sa5o19y3lxsbqXPnufomTkBL3MBkVX74QaHFxZpbAG/sW59OJPosFnVf9WRt/oS\njYO020am1qE8gbGwbhH3Rb1/jQvw/tGxYAnDBHyQkrly+gUa3ok=\n=68bC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a5208a81d5bfeef270c64d48dce3444d6d03511",
          "sha": "4a5208a81d5bfeef270c64d48dce3444d6d03511",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a5208a81d5bfeef270c64d48dce3444d6d03511"
        }
      ],
      "message": "depends: Rename `cmake_system` -> `cmake_system_name`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-15T07:19:02Z"
      },
      "sha": "9b31209b4caaa02b3044acd2375a7f595cdbd520"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxYTc5OTI0N2RjNWU0NjI3ZTZiMmYyMjE2NjljOGZmOTIzOGJjOGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91a799247dc5e4627e6b2f221669c8ff9238bc8d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/91a799247dc5e4627e6b2f221669c8ff9238bc8d",
      "tree": {
        "sha": "ab4c83502e9b36176605e61d7b51d861c4f56d51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab4c83502e9b36176605e61d7b51d861c4f56d51"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ab4c83502e9b36176605e61d7b51d861c4f56d51\nparent 9b31209b4caaa02b3044acd2375a7f595cdbd520\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1715767291 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\ndepends: Add host-specific `cmake_system_version` variables\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB9Jbg//X+4EBgszI8k3CU4K8Z7i4j/UdMW4bInMlwurggaKkP0EKXR4dbZHvQE9\nWnD/gyfBrByz0dFct25lbE/sWdh2kL/tqii4aCF9qVW4yo3eJv8Zhtt+v69S2RkF\n/pdWfnYKUmSfS1l6sVi+dOh1e+hxaM8Xdlkdm6yflBLSJHOnYHdlm4NSaedK5CCd\n3iNlT9O7cRqQtaJrgapulb473md1zfW0Nq/vWnlb7hcdU32SQ5IegVKnzZXxaa3D\n/cEzK99PJqBYsxQj1aXL5/XHQ11xyqfOZqeESO1m6SaDGAngYWFDArXRkNlK2c+Z\nHd1TyakMtSsDQmXCs97ShZJyfyxq8ZU7fErm/e+jUdFrqifk6seLszcnRAtGs9cV\n+ycLENimuHUeZ9VsEMrL1W7xLzoxH7LYikT2nZhox5pyNKDA/C3X8w0xB587AMCP\nwtiK/Ck80sOwaXWgufBWjOcwjeGhd/kgYK3Ts8rRCBTCXWJH7q4hvLAZS3CjflC9\nN/ouQpWN3/ShwhuDHPLavZS4ASsjx2jj9piDiGJhvyGKnEPs6zhTuHs8MXbNR+oh\npoOMhk9KeHATr4TQwEIT6cijA1DZx+KLym8SB58QnjETu5xuH/5dwIC2zk6p2N0z\nhQrsnrKCsjZPFAqzkBxMIjTl6kdWmCXCzs6kZ+xFW5e0JrNXRYc=\n=85FV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b31209b4caaa02b3044acd2375a7f595cdbd520",
          "sha": "9b31209b4caaa02b3044acd2375a7f595cdbd520",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b31209b4caaa02b3044acd2375a7f595cdbd520"
        }
      ],
      "message": "depends: Add host-specific `cmake_system_version` variables",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-05-15T10:01:31Z"
      },
      "sha": "91a799247dc5e4627e6b2f221669c8ff9238bc8d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkMDFjMjI4YTdkMzliYjQ5MThiNWNiOWY2ZGIyNWNiOGMzMDU2N2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d01c228a7d39bb4918b5cb9f6db25cb8c30567a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d01c228a7d39bb4918b5cb9f6db25cb8c30567a",
      "tree": {
        "sha": "32e1e0af7e8ab1fa8dcf88af2cc61c39cece7167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32e1e0af7e8ab1fa8dcf88af2cc61c39cece7167"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 32e1e0af7e8ab1fa8dcf88af2cc61c39cece7167\nparent 91a799247dc5e4627e6b2f221669c8ff9238bc8d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722416636 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839550 +0100\n\nbuild: Generate `toolchain.cmake` in depends\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD4ACgkQQQEIES5+\nqB9kvRAAk5Kgr0AgaPQCFSmUbXql/f+Aw9tR2AcOTI21LZ+l1H7XXqxbmqGOlC+x\noi4hu9T0Xuour7tf7lKbSx52SC0NPuWMtIs1y2Z0/raHhZozfrQ2ZAFhkgRjRmNd\nJaYgB2Ec5B7loeSt1R3lKMtv60iKi+2DJLN+Geu3L/eg8Dcz24lLWvX5mbG3ITi5\n1ljS2RJ5JxgInJjAMl9284XT3VQoEVJshMfney89mxQG+iZJhY0gwA2h6SOBPzrg\nXno03OtlH8+XeDmZbgfGJJ6inQjN9zsDwL+CyC1Np5Fhdhr9neDpMm8rR3BKhRzi\na159a5ESu4pCh8MmbiyWfN1NL/VfFf1qNkvS+5582nMfX2OXvhFjKAqqmAGBB66m\nvNrXUm4/xujc5y5TbJfK0I9abrqmTwf5QSnPOgA11DmJLpl4EuFGEEXq9Wfyhu+g\nqsBAnArRCNP+L+zJPAE7jMNg0Y2db5c8a1ByhDhN+RkpPj2EmxMqqwmHJpNzeSR8\nkzxB74RqNiD9uI4rjtrjIBHU1wHmWr94VrWFANa7drnwlh8XuSYb9x96wkClkf/J\n4/x0GjuVzJmYhZBv3qJI7IPHlBzQAMQBM3j59m4l6ADb6nJR3JlRUKTeMTe5rurD\nYUafa/H9zBD16M/3/ubf3SdHq4hgtxI2DWhUSbACUnjaZihYZ2Q=\n=EtdM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91a799247dc5e4627e6b2f221669c8ff9238bc8d",
          "sha": "91a799247dc5e4627e6b2f221669c8ff9238bc8d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/91a799247dc5e4627e6b2f221669c8ff9238bc8d"
        }
      ],
      "message": "build: Generate `toolchain.cmake` in depends",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T09:03:56Z"
      },
      "sha": "0d01c228a7d39bb4918b5cb9f6db25cb8c30567a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg0YWMzNWNmZDRkZmE2ZjIzNWY2ZTVhMDBiNTcxODQ2MzU4ZjQ1Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84ac35cfd4dfa6f235f6e5a00b571846358f45ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/84ac35cfd4dfa6f235f6e5a00b571846358f45ce",
      "tree": {
        "sha": "adf330de899da834f613dc4d1c21cf1e69508101",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adf330de899da834f613dc4d1c21cf1e69508101"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree adf330de899da834f613dc4d1c21cf1e69508101\nparent 0d01c228a7d39bb4918b5cb9f6db25cb8c30567a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1720049171 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Add cross-compiling support\n\nTo configure CMake for cross-compiling, use\n`--toolchain depends/${HOST}/toolchain.cmake` command-line option.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB/RQBAAjcW9juFxMySBhUckkU+M1KSZIVaG27Kp6/ZCt5HgAd/hyakEfX1AGTB8\nSE3qIPoctw6kbLucaDN97LOSICZQ16kYXlS3AB8EUTlwcg0FFYSNo1k01q1J1MIM\njFdjRd5sXPaxwyBoWOLNft1bPjBTaC1Ut+VQTm62hWbV86JjgAXo2UsFH37KHUFY\nHeUknU1QxjHe9Os6XUwBLXWHgeftnI1bGCxF+dwvlkJWLEC/32o+myqFhiydOEy6\n17S0dvh15LphJaRDyUKC50GaquW7Wn/nocy1oYV/sEwc56Al70wey70mr/DTzSmb\nMTaq0w8JK3j96kmNtLqEdE0OuvIz04Dfgnes/DKBL9eWsuJ/loL7aZ5s5nHHaMO0\nuJ0FeQlU7ZUoYKL2Zp+EraE6N+Oyt0OEPC6LoJmDlJ+RaqMWzvkPwUcVGSp/Ew16\ns+MhJ2PqMbxKnoREFUC7j6x+UazZkdt4ydeq25cRo+AHjJoIG+1XY+5XspeTu1MA\nQ+GWl+FmBUBrmR4mPlAWhKWJz5Ngpy7s9Hg8731x6Qrktf1p2K4A/vfokyuApCOG\nnvErLmw60ZUY8fVH/XWB8CcR0+5agVX3O7VlHXmEz6xrFIysfWgX4AzIIvEKyXf+\n3Z1KrdlGDG8Djdr7f5GDwO90YeH2F5nCAE/EdIhFHsgujrUDS0M=\n=YCGX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d01c228a7d39bb4918b5cb9f6db25cb8c30567a",
          "sha": "0d01c228a7d39bb4918b5cb9f6db25cb8c30567a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d01c228a7d39bb4918b5cb9f6db25cb8c30567a"
        }
      ],
      "message": "cmake: Add cross-compiling support\n\nTo configure CMake for cross-compiling, use\n`--toolchain depends/${HOST}/toolchain.cmake` command-line option.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-03T23:26:11Z"
      },
      "sha": "84ac35cfd4dfa6f235f6e5a00b571846358f45ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3M2EzYjBjNWRjYmY2YjNmZDE1NWIyZGRhNGMyZTk0YTBiMGVlNWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f",
      "tree": {
        "sha": "b514d11c15217400903355ba389930e2a510bba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b514d11c15217400903355ba389930e2a510bba0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b514d11c15217400903355ba389930e2a510bba0\nparent 84ac35cfd4dfa6f235f6e5a00b571846358f45ce\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721820552 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Implement `install` build target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB/2khAAmKhxdOet9Okm6/s58TfrRTHRoBgBeTWqT/qggN4xp0Lz19pKGZbcDZIi\nJOnkPKX0bJq4pxcgXqcSmUOUyvyYsJHMDNycqfOx5xzlsL66w6DsVUdwtlIAs3pt\nyuGW3PjnW/7aV3ik9YQNQi6xvepH7lbudue+zDMlkztN4eibyrWhmjTw+j8picew\nPJmMri3+JIkWKzXeIbCMbX0Oelk5i5OR1dPVB+hPc2OKHK6MdKE1U/yvBOl+cjO2\nrQpZ1QGqwpej/nNm0DfbM5AMwrLIElsyNdENW0e4RJdO3d3MAcirHnpjEMRPg4Q1\npTbKPGhD7zVbsDOrpn3Uiqmd/pX/h+ysT8PnbEGN1E9C0YNtt448RKJEwPJT5uSv\nfpD1ARqLlXjRvUQ/3TdoQTzIE9A2KvT6Guuu87r7+288GkqbQOm4m7jEtswVIrA7\nZJ1Pg3PSaAOrW/e5L5WTQ+mcLw8dtf7QmhCL0LveBXQTB+tY+sckLiz10+73cM0d\nyl6z/9xAPXmOypimrmuXzhNCGI2NlY7+IvGvzDRhPylk0Qi5IjONprCb4Ma5qLf+\nRi0GU2MPCR4tdo9cErKVCuqSKQZ9FCNn1/Cs4w3j8sLq0TsfflDG46LZZvOQycU0\nxOS46RItI+erVstNsUIazkYDjU0PtZZGCjyN6Sp5XDlVZxC5Zxg=\n=aHjh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84ac35cfd4dfa6f235f6e5a00b571846358f45ce",
          "sha": "84ac35cfd4dfa6f235f6e5a00b571846358f45ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/84ac35cfd4dfa6f235f6e5a00b571846358f45ce"
        }
      ],
      "message": "cmake: Implement `install` build target",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T11:29:12Z"
      },
      "sha": "973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiNDNjNDViMTNhZDAwY2ZkOTkyOGEwM2RhOGE0ODA5Nzc3MjRjYjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b43c45b13ad00cfd9928a03da8a480977724cb1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b43c45b13ad00cfd9928a03da8a480977724cb1",
      "tree": {
        "sha": "a42fde8b29b622084ab00a1ea8d63fc50ea268c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a42fde8b29b622084ab00a1ea8d63fc50ea268c8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a42fde8b29b622084ab00a1ea8d63fc50ea268c8\nparent 973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1706357038 +0000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Add `AddWindowsResources` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB9QXw/7Bs3QJVgFeUYKmyBfnOfImdSKwIUpqH/xHe7hkxzQoxYBY9+5eSniUc7F\nvvxv9mp2IRB1TL7iWOfT6GJyj2LPobPCxmKzl9j37mKgtQlSko5+cUE5mKPvk3zh\npG5NtUNAjpUQ7mx4RK6fentrUkWf6SAWpyUoox9V2T+6MIbmexqKyX3sV5NcKXgK\nzXtIVsn7MO99YK+0GJ+83SXfFVjROKZw8IrpUZrVGhMPeQESaahdQjMQyKy3YW74\nJb+kMnM41sY198m2Zo1avY3RQcjQiCK7/3CevVuJiVN5owAvVYH1ffG6HHSRHH1B\nBpGsajnHpw+OLbPquFjqED+CKg0ysJkG9wUpHYQKZhwjYplTap4ivxo5RZGieXA5\n9JBLtVKOGm8CjG/at4FBr7O97nlFHztj1cFyEvqh3W0dwgtsS4Jk1Kj1Xw7ykYr6\niu9kLJb5hGPjBUHL2POGVa65DcmbLSKyW6FCVvRGu29jW5xGoBeKZVRPb7Pmn5m7\nPG/fDVHfAYz6owjwLdFintLEBJin2o4HlF2WXQ/YM6vb8yCONxF+IbnuQbMoK5Nh\nPIluTxb2Fu0IdyDKll27myCrXn3me/J40POupsI0YoB9yM8DlMwhZRW5HIWWsWyL\n0Us3IRKUDXJCf44TbUN2kr76xl/qiyTvzQwsJHtHHw4q0AfI6C4=\n=cDuN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f",
          "sha": "973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/973a3b0c5dcbf6b3fd155b2dda4c2e94a0b0ee5f"
        }
      ],
      "message": "cmake: Add `AddWindowsResources` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-01-27T12:03:58Z"
      },
      "sha": "2b43c45b13ad00cfd9928a03da8a480977724cb1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmNjBiMzBkZjBjYjU4YTczODFhMWJmYmQ2ZDM0ZjAwMjIzMmU4NjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f60b30df0cb58a7381a1bfbd6d34f002232e862",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f60b30df0cb58a7381a1bfbd6d34f002232e862",
      "tree": {
        "sha": "2b0782f8b46976e79497a6d618f5092f7d61a1cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b0782f8b46976e79497a6d618f5092f7d61a1cf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2b0782f8b46976e79497a6d618f5092f7d61a1cf\nparent 2b43c45b13ad00cfd9928a03da8a480977724cb1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714135121 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Add `APPEND_{CPP,C,CXX,LD}FLAGS` cache variables\n\nThe content of those variables is appended to the each target after the\nflags added by the build system.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB9H/A/9G7f25Na2BucPSHtE62zqSM9zI5EHOQgOFD+7/STBJOXIEkWfQu2fgSmU\nv5F57njyULYa6L0HbB0LDXXTIeXBHNIwfZ6pNjfVpfNGvNxcWgD6Qjb9hwax2UsS\nyz30SMgQa7oZnOPBu3IklBIyOXSEkjOehFChlO3CkWZfC9/bHmXQ3iJbeJAVn+jC\nGgFbnW1PPJCQA4V8CFjHcH0qfyqpUxfaw1TdFCsq8AhiLVY4WmqFKFrQhDjzfUoJ\ntiItmn3Gnevh+BpdbKsyenWYQqD3swGH6BaIMrjNQSzsZXa/MPzTuOv7pNVe8qM4\nSAT8YjVRZh1kd6/LQj26p8c/e3lEFRKabIm8gY2nFKA8I4SV9RMHQiT77t5NIzRd\noGpFmj40Jyt5efwScZhX47M5TgLYF/QD7ar6ZFjgfgYBPtEVmvN5G6ytUFfr2Kr7\nAfClAs84191KvypF4dgAn1Krj5P/K4KOKx8PUovPQ+KkQa3j/7Jx/j1qYBO6hf10\n0irwvglzKOeud3nzYn5GkJLZiobg6aQ7DnAq9a4LyBv7Y1C+w6CqagpmK+RaunTC\n0UkQNvJHCXPWdo6GpDPeeR0SRbvYXfz1ALyc+xqXipxl2MIPC8Rjc3rb3TVc6M+M\nQrKlvzrq252vZ4moQsI4xYT4XZ2s8z9CWHzN+daAhvlG5Dqau7I=\n=Gs5r\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b43c45b13ad00cfd9928a03da8a480977724cb1",
          "sha": "2b43c45b13ad00cfd9928a03da8a480977724cb1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2b43c45b13ad00cfd9928a03da8a480977724cb1"
        }
      ],
      "message": "cmake: Add `APPEND_{CPP,C,CXX,LD}FLAGS` cache variables\n\nThe content of those variables is appended to the each target after the\nflags added by the build system.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-26T12:38:41Z"
      },
      "sha": "1f60b30df0cb58a7381a1bfbd6d34f002232e862"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0N2FkYjZmZmU5YjA2ZDQ3NmZjNWVhZWJiYWY5YTYyYjkxYTc4YzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
      "tree": {
        "sha": "8f67f79cd698f21bcf143e65a7ec8872deaeeee2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f67f79cd698f21bcf143e65a7ec8872deaeeee2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8f67f79cd698f21bcf143e65a7ec8872deaeeee2\nparent 1f60b30df0cb58a7381a1bfbd6d34f002232e862\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723832974 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Add `Maintenance` module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB98/w//UAYOuyaffZMvmkdG7LGCW3p7RmY09BK84zIIJipoZR/LJ2iXn2fDssqs\nrMcQNpy6Q5vPcSiuUl7Gc0XTyR+b6+0AP96IKDrQPWEXRcL5OAU791QtFFiZERkL\n0fIeaDi0wrQAQU4ByH6WXw0iXK1AGCvOdqFEJVFsUgybr2uflIU5xSvv9bOzCHLy\ns0vO7I3lUV5uFTwTuAEY6qRaA9IAn7/liBL7oyjAxLR/XiGl1ePf7B4LDJVrzXjk\n/ggGWUiwA4J5JLX53oY4E6p9MrHJ42eAUYQfH3L+Ui+fIY8Nx5Sd6r6I1lGN7MjM\ng/NpBJIqcloiH7qCLJBZ/mNiI9tzmzHR+N2/ISo7pyIlHVB80BF+xPIxMtyjtG6i\nyVoHQXl9ntlFFpeg4RH26sxfTjCv/k6uG0yBN4LF4vJX4+3P8N2Vn/vDCdRHSEbL\nTKZznFs+8OJhSqsuhfmuvCrkNyOGsAll7NATntNUAgUdL9GjUXWAJPgoBEoSsjIX\n+N/Ztfaj0XUd97hDCsdq3VVvmXitahSn2NFVFRZnVf8XWEZ6aN+iOgq9ZBAmeSSo\nfQ1Z5JL4SlMJnQRDg+KuKzk+RjRbDJmOnBfnMdB25MnPNDqw/01LriFG8ZVjUAOn\nm+6NKLwBoE+EMDIyWGGsq8YVViVvqIrUmaOQwFjQW6Ve9B+DDz4=\n=THYp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f60b30df0cb58a7381a1bfbd6d34f002232e862",
          "sha": "1f60b30df0cb58a7381a1bfbd6d34f002232e862",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f60b30df0cb58a7381a1bfbd6d34f002232e862"
        }
      ],
      "message": "cmake: Add `Maintenance` module",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T18:29:34Z"
      },
      "sha": "747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4MjFmMGEzN2EwMjZmYTA0ODBjN2Y2ZjZjOTM4ZGE3Yzc3ZTBkNTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e821f0a37a026fa0480c7f6f6c938da7c77e0d52",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e821f0a37a026fa0480c7f6f6c938da7c77e0d52",
      "tree": {
        "sha": "afe69800487c3a383c458ce4bfe02b368e593ee0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afe69800487c3a383c458ce4bfe02b368e593ee0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree afe69800487c3a383c458ce4bfe02b368e593ee0\nparent 747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717500380 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839551 +0100\n\ncmake: Migrate Guix build scripts to CMake\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tD8ACgkQQQEIES5+\nqB8JjQ/+LiIRM0snD/4FxnnLhCm+Ju7A7/2bNP6gkA2wekcnlH3kYOCLrhKr/NEv\nvcvWj/vQmYSaXgaQ1L/BGa/OD6zzCrxLeq/86MXSutFphGCre8HWP7Ax1CKkL6qi\nfwJBrS1jWC/NeKwMPk10hDo6d3j6FxC+5PEVcWeDYuJ44twmoN4un7UiJjWOCdto\ni93WRoUt82pmAzSPHx+KcxA/YlbEYFxLim/cWBN/gHc0OF18PcrPMf2yXmCBCEub\n8qdEb+BOIQYFI84cqFJCvFNfrjK6fIffxqPZ9KmCbscWy1w1swRMNDfBpFytpcyf\nNuHLfNKTvGvMGFsUiv08FSrZNCwuYpCxZ0XGDQK5pJqkVlTcxpCzQHBcT4bCh88L\nXkJR/WDGQL5hHXQhxIrMgQHe+dteXxNzYjYjiZ0+DDKznX05u4o5D8F6GPuuZHc3\nbThrE+iptnptO8AdsVAV9DAS3ycFZAN1sl0lnklrCYOdDGxDNF/nhdI17u8PAnIe\n6d+qq1Og4ses6jBbfahU9DidIaQHKgCkksQp8125foSm8Cuglb+6WJ/rR1jYJyZq\nlCKBilAAiV5JIpX+z8APTGJM02wBN2yXA9T8s+g3kPjqthyACcX4WTn8DGRVSa9s\njZBJ9bHmqO+50L/hrJZIMaxIQMgCgAqbnyWX/uDBO/ekCY8ehss=\n=4Ynr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
          "sha": "747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5"
        }
      ],
      "message": "cmake: Migrate Guix build scripts to CMake",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T11:26:20Z"
      },
      "sha": "e821f0a37a026fa0480c7f6f6c938da7c77e0d52"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiNzVlYmJjMzM1NTdkZGQ1NmY1MDUxMDBhZDM2MzFhMDAyOGViODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb75ebbc33557ddd56f505100ad3631a0028eb86",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fb75ebbc33557ddd56f505100ad3631a0028eb86",
      "tree": {
        "sha": "0d59136858681ae13f3723c9c9409a7bf972a6a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d59136858681ae13f3723c9c9409a7bf972a6a8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0d59136858681ae13f3723c9c9409a7bf972a6a8\nparent e821f0a37a026fa0480c7f6f6c938da7c77e0d52\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1719672357 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake: Add compiler diagnostic flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB9T9Q//SNIWRf7EAM+eZu8ZgcrWStOKz21hMqxoEZXx4otMqzYFbHM+uFPJlVlI\nPkzR3E9eO3TQz+ZKV0jS3rX6d8L8FPY7H1VvFvh+tjzKeO1f9MCNaiYDwKKootH3\n/90Bgy9ohgTkZn7+ON2sOkpcT2OU7xBlm4aTbZrsmwxIKkrou8F9P64kGR2XeMiW\nO9xydqSS7ohMy9gw7+uRx2KSfnu+o9v8gfxHeym9kPP94llbGdu7l4vRn+8auKk5\n1Yj1cmkMH+Iz8Yu+E/n0hLfFAl/lcWtJm9L2OGqgu6Yn4P3t/981QaoSp4ihiLMY\nhj0l1Mxg0H6qQJ+INS/TJ+A3ToHXUXXQwVKgMqRgg+jJzBgoIbZCKgsNm7ltTIw4\ns3dclvA9L4M0yMR1mB2Dwrxf5IOTKuHgEP+C8J4Xs5672xRBpH54/7PPGvPy/KxM\nGyVFOEmJ2fpozmbGZoDnSZlr27r2IY+I6EUgA/TeGfPxKU23KsaPhKizxFHxzZEH\nOsxOzcq96ErnwyVdI1XR+haw4Wh4qVvBSN6+ZC9vZb0hVKRIMeEStmgSFOGbjSXa\n/lIUKKEqkiklt+g57NNHJLfmzHB5BURmyPh8/MtBf1Q6dmEYq3cLyosNX8we/uWH\nJx2EcU/XHBea6TGBtrE26veqrRgI6OMzqEg27VZJ36UVsWrFxzs=\n=0NYE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e821f0a37a026fa0480c7f6f6c938da7c77e0d52",
          "sha": "e821f0a37a026fa0480c7f6f6c938da7c77e0d52",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e821f0a37a026fa0480c7f6f6c938da7c77e0d52"
        }
      ],
      "message": "cmake: Add compiler diagnostic flags",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-29T14:45:57Z"
      },
      "sha": "fb75ebbc33557ddd56f505100ad3631a0028eb86"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1YmRiYzFmZjIzYjBhODE3ZjRkOWE0NjgyZTZmNjMwYzliYmRkNTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59",
      "tree": {
        "sha": "c90696bbcaf9455ccd603287584f106a005c0053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c90696bbcaf9455ccd603287584f106a005c0053"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c90696bbcaf9455ccd603287584f106a005c0053\nparent fb75ebbc33557ddd56f505100ad3631a0028eb86\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1713883460 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake: Add `docs` build target\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB8/GRAAq5P1zJFBK92gBM5YdEyfXtzbOcTv8KvbO81JJDhOJwKlk+gbgyo0jhs8\nSBuR6TGynRWZR07REPxiV3QpXFv2F2runRUlfWNvb+2VyjrIp6WAJ1FMGBWKuccB\naTjFozjDUx3heeuRENctHSbpmwvtbNFySaInCsSweqH2mNkYuz8d7c+JcyFChIOI\nZodFm3+wQT/xIAqkRwucp5CLhJynH/5lp4EUdHMSD025xyj9KxK8G0iPiF4ljpgf\nm/j4oO8wo1HlITzRxrB6edb8dKqeUW/gASHiUeNZoOt52INYWEk5hTS7buG4uxu5\nc5KbfFwPie87NTuHhL/F0IdDNvmJC9xyKRXRxKCQSyg2ZkKwkQhiKWg4lJ8tyMZR\nKzW5L+uGtYNpUHEfRSl70Ho3iY3spEqIkzP14zIKLX6mVlldRrR0LYj5JmwTJ5EA\nFtmH3kOwb1EYpsnwuTXw/FYbZbCOSVsNdaU+/QEdLTgpSYGbPAwAlGSOlHwtYREb\nhpPf/E9IebFdGyeIdaOMlxcI1OunIHcu/IQZz1t5I2clYgj23bv9MxBtD4ygl8jY\nJv0LHtefCWWsQ2r6z+oov+zpn1OHTSdYS8svm9Wt6NycPK2BfTFT/rtWa+nrY+5N\nOScWnMi4/WnMORvXu3H2kuTDMVywTit+als5xVoQJtebia2EyPU=\n=2fgb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb75ebbc33557ddd56f505100ad3631a0028eb86",
          "sha": "fb75ebbc33557ddd56f505100ad3631a0028eb86",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fb75ebbc33557ddd56f505100ad3631a0028eb86"
        }
      ],
      "message": "cmake: Add `docs` build target",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-23T14:44:20Z"
      },
      "sha": "65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiNmYxYzQzNTM4MzZiYWU2YWE2ODNjYmM2NTI1MTE2NWJkMDMxYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b6f1c4353836bae6aa683cbc65251165bd031ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8b6f1c4353836bae6aa683cbc65251165bd031ba",
      "tree": {
        "sha": "cc21c669859a4e0aa2e40112514d046eca191280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc21c669859a4e0aa2e40112514d046eca191280"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cc21c669859a4e0aa2e40112514d046eca191280\nparent 65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722860218 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake: Add `Coverage` and `CoverageFuzz` scripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB8q+g//V1BvcjROjUSWJRNtdjyFFPrN7IdRlEvJA9WmaMNkmT0PlGX5IXSkQQq5\n+yKJp/WpC9aDrcRIAgHEy/UQxub+PQmaCCjT1s4p9r+FOxPu27MUOEXpVG1ijxZc\nLQ/GJ4woOs4a9U+Pp/rCJWI2jwk5oOyaJkU/15P9n6S1xBhHWUU4+eRK4w/a+/jk\n5vDFHO9G1JWV6oxovQIEsUwqnHiuB61xo6IHnX42WFwezKlY7Eye78dseDtHsNQh\nKYFO0HtX5jwxgdzJnQq/zQyR56e+WLKLv9oS8XZepl4A4gJ0mM1MlDqKR4qGiYPe\neb+MSklHoR2eOO17V5VWfkfRFPO3vSnslJFpmHNc8403PoXE90JB5/SsLyjPVE3/\nHwC1KT+GM71d4ND51aq+oPHVNF4gMFmWGNJeSWyAZw5l7F2cTgRB850c1vVEVqrP\nYbWQpxW3/Xz97RvB2ol3EhPpMDHjnNeSdLcDoaERF5t0KW3EAh/sjE7O+IEkQohG\nBfkn1LN/9iTOtAxd12VtNEJZxHREfc3A0QdQ/hlFWaVt8eAiDII/0eUlCtouzQGG\nuY2vBL9sLw9gstZURtW7Rj3FC2X/bWXbpFtWaiaRLXIQk68TQylRnigkYWw2RHfh\nj7akerMIHzKEo/2An+hxAkJJpKWt+CRTDiK9HUwNTq158jF7th4=\n=PRhl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59",
          "sha": "65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65bdbc1ff23b0a817f4d9a4682e6f630c9bbdd59"
        }
      ],
      "message": "cmake: Add `Coverage` and `CoverageFuzz` scripts",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T12:16:58Z"
      },
      "sha": "8b6f1c4353836bae6aa683cbc65251165bd031ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2ODE3NDZiMjBkZDU4ZTdkM2U2ZDI4NTJmMDdmYjg3NjM4M2ExMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7681746b20dd58e7d3e6d2852f07fb876383a133",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7681746b20dd58e7d3e6d2852f07fb876383a133",
      "tree": {
        "sha": "4459d4d6df3b9881ccea16eecc365edd566cff62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4459d4d6df3b9881ccea16eecc365edd566cff62"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4459d4d6df3b9881ccea16eecc365edd566cff62\nparent 8b6f1c4353836bae6aa683cbc65251165bd031ba\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1717506889 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake: Add vcpkg manifest file\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB+04Q/+KlpSYYs/8jLm0Hr2Fo6l0qOWpwQytNRipWbp4tvlaUs6uohYZt1hKZWv\nlmYCfigLusTt1X3HXrKxe6VlTITcaXdIbEpzT5SpErxzECYQEGKSxb8hnoyZKQSC\nn8w0YVU3F7biET1J6JcRERcPQ3U5WvrAL8VNJ2K3U8OIYZyanX41eQ4PcAkQTqex\ni3RQ5DWRHUMdusaUvmJwVazSyODl3hYpKYf3KFDpvZm9/ODmn5RqFkPDCMN0DM0I\npqdSxm/36InSfAXbDkIKmHUoAiKmr4kO+fQrdctxKNk9j1gSDMilXyL9pe/qNfvE\n49eteWBcwCMekC/NutrIwJaX7WD8oP9eEuHnWop2AhGmu0X2LQ1ZfOQi6EHsT0Oo\n2NiB9axbIU8x1xW0bA2GLMb7gFjr3FDVtNNK3CgyTpcJVU1HE+FRHpVLJppk90Zp\nef9kV2eh1J4ZNYLQo5bjBUOLhJAAOkUo031kCUBrpxlh2utLZj3Z44UxtL6a4sdm\nH1UVT3/Ei9SeKED6luLSYed39DQmb0I+0W4S3FxqQQH4nEM5HDiemU77LYUi/gx/\nfCi++C6DXpJzIfkBPJHRdI/o0R6LmY3QJkTorQ1dJyq4uAL12rtDLy+9a0lrqKwv\nqmBsSih4GCrcgQoTXzRJrbwjbTP2Mys8qO4NQm05DFpkAfxTAq4=\n=R1Lw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b6f1c4353836bae6aa683cbc65251165bd031ba",
          "sha": "8b6f1c4353836bae6aa683cbc65251165bd031ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8b6f1c4353836bae6aa683cbc65251165bd031ba"
        }
      ],
      "message": "cmake: Add vcpkg manifest file",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-06-04T13:14:49Z"
      },
      "sha": "7681746b20dd58e7d3e6d2852f07fb876383a133"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4ODU0NDFlZTBkMzVhNDA5MDQ5OTVlZGU2ODEyMGZlYTQ3MWRkZTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3885441ee0d35a40904995ede68120fea471dde7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3885441ee0d35a40904995ede68120fea471dde7",
      "tree": {
        "sha": "3d4dcec1e490611a889ee1db0359daab2379a67e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d4dcec1e490611a889ee1db0359daab2379a67e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d4dcec1e490611a889ee1db0359daab2379a67e\nparent 7681746b20dd58e7d3e6d2852f07fb876383a133\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722415633 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake: Add presets for native Windows builds\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB8qdw//QoKyRfQUa4vlLktnR6ofQZRY9ieiIXB8bKtihfqd5Fx2/7tp1t5T6c3C\n53EwMci2OIk7hmQoEqVFvuyt522TQKu9vJNPDphwCI+WVOPYq9+wRr8Jcj23tgYj\nwxm2Nm8BrKtnH2b/P5HCzqxlbE5UT5LI7SUg7lAzNagC6OQpU/jApOpDRn+Cs2cl\n5OaUZCkeQ7iRx/u5KFxEV/dgOwKFroWWqmCIY4rAv5+aYLsg6b++DnX0WhrZeg9L\nE7bfSyAwSPvo5B8BgnfRswtLpn78d+s+rQlWEZpUQ6o6NXBFlTOUzb4fnwPBo6Lq\nsaYjbH0r3v3Mwn/oam+Z9RffJRUAIdr1vNnx6Is6xDoH3qfVKhZ4e9RtbdG2ShrZ\nGXEYC2SYYGTKc9X7Nvd9LVPcDZilPQf6Cjbe+2GDVaLtnAwCAFTCRTAARmPJWmqD\nDEUWXgVRZEL74DFbb8eJOcML+mjADsMdlvR1Be3SXvmsndPRdBJfypiJ9f/3cR6D\n89T8itj5SRsn31gZbt9m7w6gMJYmAaKbFpYMTibSg/HnPah7NnDrONAj22Me9VPv\n4NnV03+H7yFj9bHa/UccLbr+j12hEcoDBgfjUXXOYxM5G35bBE4VrYryrPANQ1h/\nNuvg5+Jg+fqRhfdMi5mmyAnpQDDjoN2dnjhFM1RQPTMsW88Gstc=\n=2OmR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7681746b20dd58e7d3e6d2852f07fb876383a133",
          "sha": "7681746b20dd58e7d3e6d2852f07fb876383a133",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7681746b20dd58e7d3e6d2852f07fb876383a133"
        }
      ],
      "message": "cmake: Add presets for native Windows builds",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-31T08:47:13Z"
      },
      "sha": "3885441ee0d35a40904995ede68120fea471dde7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzNjA4MzdjYTVjOTFjOTg3OGFlODA4OGJiNTQ4MmU5NmZkODdjOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c360837ca5c91c9878ae8088bb5482e96fd87c96",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c360837ca5c91c9878ae8088bb5482e96fd87c96",
      "tree": {
        "sha": "a2ace3594f4023a0870923a16450e8ec6345bc5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2ace3594f4023a0870923a16450e8ec6345bc5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a2ace3594f4023a0870923a16450e8ec6345bc5b\nparent 3885441ee0d35a40904995ede68120fea471dde7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1714296331 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839552 +0100\n\ncmake, lint: Adjust `lint_includes_build_config`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEAACgkQQQEIES5+\nqB8cJw/9HA4jfzmB1NF9i1h2RjPt+NFEKOlcI/a8kMW8Q6NqTkvL8voVVo1lK3Pm\na0STyKTtZtaYzSOB1p6yLxzmVvp7NzjWUinRoiGVt0R1loIQYnHdvKyzGh9Z0nle\nPjdqifB5MulT2YvRUzEoA8H5dvPoGcnx06gDHbetkYiAa+qaD0/wqU5vJD4T2OiH\nO5vZs+ZeWL7c8VxzzZe4BeFMvJsw1wRjPtj1wTBMp7NAjPEoZLtqToYTqutT/5sM\nfkXbdwu8HbUsRhco4pJ4J5epSfwL6f1sbpk7Py1xjtL95T26c15rIJizjG3VQF7Q\nL311Pi2vYB876C26DiIA8inctlUJg8+ALV7t3l6lfmrNGsofMQv+9kPm9yrcwpf9\nurObAEqlBYSAFSew4iY7v5FCzZlAYx0QLPxbY+A0UENCJn6D299+oqlt5Wjh6gEI\nrGIaiqc06XeijGmE0dnjCGWA4B6rxyhBNc7/bnQxyU/yV/ReXtXFMrF5migPDWP1\nsTZv8Rl6b6dsNUS8W1uT77wIAkG3XBRli/1q4AJdomKhtSUjBAqjynDlGnBVs/D8\nTaDTZI8r10CCvrstlKNqgC/FZD+LoOR61Kt7tcurtsvbxtzmh7kvEh8x+QbY2JVf\nPiqCFKE1jGkprEkNLiPNwvJGAcm0cGcAWIdgWbq78Tn/0zTqXVo=\n=zlcZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3885441ee0d35a40904995ede68120fea471dde7",
          "sha": "3885441ee0d35a40904995ede68120fea471dde7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3885441ee0d35a40904995ede68120fea471dde7"
        }
      ],
      "message": "cmake, lint: Adjust `lint_includes_build_config`",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:12Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-04-28T09:25:31Z"
      },
      "sha": "c360837ca5c91c9878ae8088bb5482e96fd87c96"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3MzAyODhhMGNkM2YzMzAyMWVmMDBmYjJkOTVlNTIxNmQxMGFiNjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9730288a0cd3f33021ef00fb2d95e5216d10ab61",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9730288a0cd3f33021ef00fb2d95e5216d10ab61",
      "tree": {
        "sha": "4d18971ab02fcdf2238c4ba5a4b39b5d42b8ad54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d18971ab02fcdf2238c4ba5a4b39b5d42b8ad54"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d18971ab02fcdf2238c4ba5a4b39b5d42b8ad54\nparent c360837ca5c91c9878ae8088bb5482e96fd87c96\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818481 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839553 +0100\n\nci: Migrate CI scripts to CMake\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tEEACgkQQQEIES5+\nqB+59Q//berSBppK/VpbdLwg1P7D/iq7+wDgXF1609RjbTWL1KQTLLBTCXJK5vNU\nEKkXdFaEvWpZud7O2myQfsQkHxUFS2HiHj4KbC5T93eq3M6dYktaA2D0TsOSsE/g\n0IRGAkYFBDSa8kDe0X7nKUy/IizB/P6BYnk3y9w3ra2ty0cmrr2AtZRPE9J3UR+g\nUucPWGLYELyLWks1yhmpj/yOUPFxtFSJvKuuhS5MBWtocvThLZNEll4yi00Y8E7n\nqv7KD+eIwi6eaFbdRLVyEmI7eg5Xl95ryn7PqFhCyfDXoJqZseHj3XVaTUvHhs4c\nom3w1OIWG1IAhXyo7qWUnB3FIJBori7my8GuHB+5pCdFuPCpPK7zAgVZsXHzNn+P\nROytZx7y2uM+DBOm+eRy746+smVoPfh+aSMFoffLm/ET+3lpNJhln249bOOCDBS6\nyU+28uyyLRZxakNc6V9uIbVdYZ9uR9tNaHl5SIGdFTNP/14AdkA8S2vBCXpOw/CQ\nwm+hCWAFXYOmL46MsfVjHJwZtJ+p6nXGQra8Cy+h9aKabBsT6oeZfFSvrzeN38UE\niSh3Vypf1XwE7X2BXw5nrTcj3j2Kh7FMhJykY43OyoOuurut0vC1GZOjoGgAGjm4\n+GcujYlD1nMsDgZabdoqrp9LsGhrgLJIVqfeGSoW5wCzeFC6/Cc=\n=XR7h\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c360837ca5c91c9878ae8088bb5482e96fd87c96",
          "sha": "c360837ca5c91c9878ae8088bb5482e96fd87c96",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c360837ca5c91c9878ae8088bb5482e96fd87c96"
        }
      ],
      "message": "ci: Migrate CI scripts to CMake",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:19:13Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:54:41Z"
      },
      "sha": "9730288a0cd3f33021ef00fb2d95e5216d10ab61"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjZTUwZmQ5ZDBhZTY4NTBkNTRiZjg4M2U3YTdjMWJjYjY5MTJjNWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "tree": {
        "sha": "7c3c52f9af7a682636b5405b210f4f38bccf384a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c3c52f9af7a682636b5405b210f4f38bccf384a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7c3c52f9af7a682636b5405b210f4f38bccf384a\nparent 9730288a0cd3f33021ef00fb2d95e5216d10ab61\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1721818519 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839848 +0100\n\ndoc: Update for CMake-based build system\n\nCo-authored-by: Lőrinc <pap.lorinc@gmail.com>\nCo-authored-by: pablomartin4btc <pablomartin4btc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tWgACgkQQQEIES5+\nqB8eiBAAq/6Bx1OhNL43g9M/h5ATiRoY0ty0WiKiWNUR4Lg+W9AcQUXaXYxrGNVu\ntuoc9uXC7oF36DSUUwHVJ/aMiS1sd67DJmncwdjIwSLWIHK0O/CpXKJgUAiEt8+C\nyQTomQTrsMr3HhiKIitVnx4F8v5tbR8Y6k07h+X9t2wbDC0Iocw/WdFj/8OIJB02\nA4r2jteM/5U8EcSBUOmGyur0i5rDt0MA5+Xv3ZGFMQPuHApW98BiRELGN4PECwUL\nVZ+0mqXGrXKUalndRMC/UZ7NhRj6Qb6sf3rA3TmjQpp9Fv2XGs0Ev2wbUnzpj1wL\njHV9TwX51KavHG1GPRc6TjTNf3mVrvbxcdRjKy/BYcd8Gi73Yt88ITc5IWtKWpxP\nLmW4VfiAHaLiDO8jozEJlLjRo37/qnpOwtDXCSl5QPdBUJE6d3TKQBXlO5sPU4n9\nOIvf31R9YqHafjdNIu5MvmJyyoIDlk8BE7iuKgvl0j6+ecJNEu2uPVlifYMsFiOI\nnEC6UWiaGJIwh+v4CTB0679dxWtCveMUihckA/PVCP31G9uA6uNdRE4ukrow+166\nTI4AMboJJiVi8+lchkRWkCWwQoMSzuT+ViqvWICh8Iqf9HzKvNOBTfKzw5mTDK3h\nNPN2WhRixsWzzia8RnFwakNydAFAyAkrgsvrKF3y+ScK6WxDmAc=\n=EkDC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9730288a0cd3f33021ef00fb2d95e5216d10ab61",
          "sha": "9730288a0cd3f33021ef00fb2d95e5216d10ab61",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9730288a0cd3f33021ef00fb2d95e5216d10ab61"
        }
      ],
      "message": "doc: Update for CMake-based build system\n\nCo-authored-by: Lőrinc <pap.lorinc@gmail.com>\nCo-authored-by: pablomartin4btc <pablomartin4btc@gmail.com>",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:24:08Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-07-24T10:55:19Z"
      },
      "sha": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxMDUxMjkwYWIzYjZjMzYzMTJjZWMyNmEyN2Y3ODdjZWE5OTYxYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41051290ab3b6c36312cec26a27f787cea9961b4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/41051290ab3b6c36312cec26a27f787cea9961b4",
      "tree": {
        "sha": "c58dcf6f2762837cec17f0268d169bdef31e073a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c58dcf6f2762837cec17f0268d169bdef31e073a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c58dcf6f2762837cec17f0268d169bdef31e073a\nparent 6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1722853916 +0100\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1723839848 +0100\n\ncmake: Ignore build subdirectories within source directory\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAma/tWgACgkQQQEIES5+\nqB+1jw//UGPDKcJDKzOegM+1v9DKZUo9fg60Yfn4N13B6wTKan5UwokuQQBjuVzW\nNXSjJSjVgHBFxnhEGi6KVkWWKLQuklnYEQqCCIrmuWo+qbCYrNYApZo80Mwmrnjy\n0plZxcw1J9m9bgdMgdgc+3fH6OsUbywTYf3HIQ3Xfwl2mSM6E+69QEMaa4gOGbgL\nUYEMMSfSfKGsUHDN2/IXMV5PQl6Y+c2/XZJ0T30ScfU7Vwcs+KirXwM7ffrN2tX7\nrCS0TRUsdoyWLwN8uTyAJXaVDc3CTms/pjKx9qYiHIEHPrpI3CHhWnvhG3D86UdO\nMYlSDDZx+pb1+Jv6bHE3sn8YwHsCNXfoPx2Hl6dP/huQrZtEqRvJeCSVRI0pfNJP\nonGWotYl+DQL6AmDvwgMhgihsldiRIwD6sPlX42FUv5+Aj+9Dz2Gev3/D6gG2E1E\nIaThHzW/Kq6190ELIabDaAb7akpF1sacRDmfdfLve5kTSBlBkcA3x2sEGwEjUlVV\noGhBdKbNsWStY2mvMvFEyYrti8rrvRjJi6NPo3eoNpqD69HkdsCPpExwfaBuOIvU\nMTW4RqE4tOjR5mvZ/ogkucuTLpOdxdhqhjsjMipSQCNSdlUlkMT4BAzdE0Ep4aNi\n2r/a7e1PbznFZPaYZdSrjHyEZj+x9ztu3lTNMMSuVL7bnk1FmSc=\n=Ysn2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
          "sha": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c"
        }
      ],
      "message": "cmake: Ignore build subdirectories within source directory",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-16T20:24:08Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2024-08-05T10:31:56Z"
      },
      "sha": "41051290ab3b6c36312cec26a27f787cea9961b4"
    },
    {
      "event": "commented",
      "id": 2294461104,
      "node_id": "IC_kwDOABII586IwrKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294461104",
      "actor": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T23:58:45Z",
      "updated_at": "2024-08-17T04:23:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 67b1e236334f38ec4e4d2251dbdfb790f20ed88b on Gentoo, modulo our usual [hacks](https://github.com/whitslack/bitcoin/commit/cmake-syslibs) (now adapted to CMake) to allow linking against system-installed libsecp256k1 and LevelDB.\r\n\r\nOne small gripe: When we enter the install phase, CMake always rebuilds `src/clientversion.cpp`, which forces a relink of all target executables. It would be better if `ninja install` would not rebuild anything.",
      "user": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294461104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13919228357,
      "node_id": "HRFPE_lADOABII586PurnmzwAAAAM9ppHF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919228357",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/41051290ab3b6c36312cec26a27f787cea9961b4",
      "created_at": "2024-08-17T07:58:30Z"
    },
    {
      "event": "commented",
      "id": 2294786256,
      "node_id": "IC_kwDOABII586Ix6jQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294786256",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:10:37Z",
      "updated_at": "2024-08-17T08:10:37Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflicts. This PR branch is the current [staging branch](https://github.com/hebasto/bitcoin/commit/818a3c07fb48e4f7fdaf5640f3987d47280f54d0) with the top 3 commits dropped.\r\n\r\nSome feedback has been addressed including:\r\n- @fanquake's https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277722262\r\n- @fanquake's https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2277886777\r\n- @pablomartin4btc's https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2234121687\r\n- @fanquake's https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288526278\r\n\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13919267847,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM9pywH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919267847",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:10:38Z"
    },
    {
      "event": "subscribed",
      "id": 13919267851,
      "node_id": "SE_lADOABII586PurnmzwAAAAM9pywL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919267851",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:10:38Z"
    },
    {
      "event": "mentioned",
      "id": 13919267854,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM9pywO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919267854",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:10:38Z"
    },
    {
      "event": "subscribed",
      "id": 13919267859,
      "node_id": "SE_lADOABII586PurnmzwAAAAM9pywT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919267859",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:10:38Z"
    },
    {
      "event": "commented",
      "id": 2294789962,
      "node_id": "IC_kwDOABII586Ix7dK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294789962",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:14:54Z",
      "updated_at": "2024-08-17T08:15:08Z",
      "author_association": "MEMBER",
      "body": "@whitslack \r\n\r\n> ACK [67b1e23](https://github.com/bitcoin/bitcoin/commit/67b1e236334f38ec4e4d2251dbdfb790f20ed88b) on Gentoo, modulo our usual [hacks](https://github.com/whitslack/bitcoin/commit/cmake-syslibs) (now adapted to CMake) to allow linking against system-installed libsecp256k1 and LevelDB.\r\n\r\nThanks for testing!\r\n\r\n> One small gripe: When we enter the install phase, CMake always rebuilds `src/clientversion.cpp`, which forces a relink of all target executables. It would be better if `ninja install` would not rebuild anything.\r\n\r\nIs this still an issue with the recent update?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294789962",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13919277369,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM9p1E5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919277369",
      "actor": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:14:55Z"
    },
    {
      "event": "subscribed",
      "id": 13919277371,
      "node_id": "SE_lADOABII586PurnmzwAAAAM9p1E7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919277371",
      "actor": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:14:56Z"
    },
    {
      "event": "commented",
      "id": 2294793259,
      "node_id": "IC_kwDOABII586Ix8Qr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294793259",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T08:29:45Z",
      "updated_at": "2024-08-17T08:29:45Z",
      "author_association": "MEMBER",
      "body": "During the recent CMake Working Group call, it was agreed to freeze this branch until it is merged, unless a severe bug is reported or a merge conflict arises. All other reported issues will be addressed in follow-up PRs.\r\n\r\nPlease continue testing this branch as thoroughly as possible.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294793259",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13919442201,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM9qdUZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13919442201",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T09:38:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2294938454,
      "node_id": "IC_kwDOABII586IyftW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294938454",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T18:37:35Z",
      "updated_at": "2024-08-17T18:37:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds (on x86_64) [untrusted test-only build, possibly unsafe, not for production use]\n\n| File | commit ee367170cb2acf82b6ff8e0ccdbc1cce09730662<br>(master) | commit 3fbd65d8a8b0e781695628b08e166e73cc220956<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`1c825f8e2152bd0e...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/SHA256SUMS.part) | [`41737d558ce3e975...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/SHA256SUMS.part) |\n| *-aarch64-linux-gnu-debug.tar.gz | [`d9e2695d203aaf59...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-aarch64-linux-gnu-debug.tar.gz) | [`d96dda153880b989...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-aarch64-linux-gnu-debug.tar.gz) |\n| *-aarch64-linux-gnu.tar.gz | [`08f591ff3379fe80...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-aarch64-linux-gnu.tar.gz) | [`bcd4b94dcafb3722...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-aarch64-linux-gnu.tar.gz) |\n| *-arm-linux-gnueabihf-debug.tar.gz | [`cb8171218c609a92...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-arm-linux-gnueabihf-debug.tar.gz) | [`52ba24dda03de328...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-arm-linux-gnueabihf-debug.tar.gz) |\n| *-arm-linux-gnueabihf.tar.gz | [`9905ff4c3e391749...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-arm-linux-gnueabihf.tar.gz) | [`49d7901246e8e565...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-arm-linux-gnueabihf.tar.gz) |\n| *-arm64-apple-darwin-unsigned.tar.gz | [`5914d325ce72cb8d...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-arm64-apple-darwin-unsigned.tar.gz) | [`002bb169db369d17...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-arm64-apple-darwin-unsigned.tar.gz) |\n| *-arm64-apple-darwin-unsigned.zip | [`8eeefe55c183da64...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-arm64-apple-darwin-unsigned.zip) | [`d7a57a8e5d709385...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-arm64-apple-darwin-unsigned.zip) |\n| *-arm64-apple-darwin.tar.gz | [`217ccf7afa3c0eff...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-arm64-apple-darwin.tar.gz) | [`d413382a40108827...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-arm64-apple-darwin.tar.gz) |\n| *-powerpc64-linux-gnu-debug.tar.gz | [`17a38cf70f9cc9cb...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-powerpc64-linux-gnu-debug.tar.gz) | [`6c32703a2bbf8581...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-powerpc64-linux-gnu-debug.tar.gz) |\n| *-powerpc64-linux-gnu.tar.gz | [`467c005ca4e985de...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-powerpc64-linux-gnu.tar.gz) | [`916849c7d92bfb9c...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-powerpc64-linux-gnu.tar.gz) |\n| *-riscv64-linux-gnu-debug.tar.gz | [`62d8366b2afc8bd4...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-riscv64-linux-gnu-debug.tar.gz) | [`1b7a92467ac64d94...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-riscv64-linux-gnu-debug.tar.gz) |\n| *-riscv64-linux-gnu.tar.gz | [`c554640dea8aedee...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-riscv64-linux-gnu.tar.gz) | [`c8e94f1d45145c26...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-riscv64-linux-gnu.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.tar.gz | [`6ed41ffac060ec0a...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-x86_64-apple-darwin-unsigned.tar.gz) | [`59d905fb430a38eb...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-x86_64-apple-darwin-unsigned.tar.gz) |\n| *-x86_64-apple-darwin-unsigned.zip | [`92f80f305d144359...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-x86_64-apple-darwin-unsigned.zip) | [`e3df80979cdb49e0...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-x86_64-apple-darwin-unsigned.zip) |\n| *-x86_64-apple-darwin.tar.gz | [`8db84bfbfbec5291...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-x86_64-apple-darwin.tar.gz) | [`a2706374dc7c2fae...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-x86_64-apple-darwin.tar.gz) |\n| *-x86_64-linux-gnu-debug.tar.gz | [`40e0245ce7589be1...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-x86_64-linux-gnu-debug.tar.gz) | [`30fce2e13664d578...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-x86_64-linux-gnu-debug.tar.gz) |\n| *-x86_64-linux-gnu.tar.gz | [`1fac143a58c167a4...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a-x86_64-linux-gnu.tar.gz) | [`7adef3f26bc16bae...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0-x86_64-linux-gnu.tar.gz) |\n| *.tar.gz | [`9f3f71576dc99a8e...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/bitcoin-ee367170cb2a.tar.gz) | [`e7bc0f26ce908cbe...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/bitcoin-3fbd65d8a8b0.tar.gz) |\n| guix_build.log | [`1042c7ad0d54505a...`](https://drahtbot.space/guix/bitcoin/bitcoin/ee367170cb2acf82b6ff8e0ccdbc1cce09730662/guix_build.log) | [`899ca7fcf714d8be...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/guix_build.log) |\n| guix_build.log.diff |  | [`1347312935a4b9d2...`](https://drahtbot.space/guix/bitcoin/bitcoin/3fbd65d8a8b0e781695628b08e166e73cc220956/guix_build.log.diff) |\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294938454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unlabeled",
      "id": 13920362240,
      "node_id": "UNLE_lADOABII586PurnmzwAAAAM9t98A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13920362240",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T18:37:35Z",
      "label": {
        "name": "DrahtBot Guix build requested",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2294985333,
      "node_id": "IC_kwDOABII586IyrJ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2294985333",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-17T21:03:48Z",
      "updated_at": "2024-08-17T21:03:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm doing some test builds on Windows and it was a bit of a treasure hunt to find the binaries. The relevant doc states \"CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\". Would it be worth listing the directories?\r\n\r\nThe Autotools Linux based builds put the binaries into a single obvious location. If that's tricky with cmake then maybe the next best thing is to list the locations where the binaries can be found?\r\n\r\nShouldn't this PR also remove the build_msvc directory and related doc?",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294985333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2295181963,
      "node_id": "IC_kwDOABII586IzbKL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2295181963",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T08:50:03Z",
      "updated_at": "2024-08-18T08:50:03Z",
      "author_association": "MEMBER",
      "body": "> Shouldn't this PR also remove the build_msvc directory and related doc?\r\n\r\nThis is supposed to be done in a follow-up PR (see https://github.com/hebasto/bitcoin/pull/166 and https://github.com/bitcoin/bitcoin/pull/30664).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2295181963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2295183828,
      "node_id": "IC_kwDOABII586IzbnU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2295183828",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T08:56:59Z",
      "updated_at": "2024-08-18T08:56:59Z",
      "author_association": "MEMBER",
      "body": "> I'm doing some test builds on Windows and it was a bit of a treasure hunt to find the binaries. The relevant doc states \"CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\". Would it be worth listing the directories?\r\n> \r\n> The Autotools Linux based builds put the binaries into a single obvious location. If that's tricky with cmake then maybe the next best thing is to list the locations where the binaries can be found?\r\n\r\nA solution similar to that in https://github.com/bitcoin-core/secp256k1/pull/1553 could be useful.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2295183828",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2244276011,
      "node_id": "PRR_kwDOABII586FxO8r",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2244276011",
      "submitted_at": "2024-08-18T10:26:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "comment_deleted",
      "id": 13922623006,
      "node_id": "CDE_lADOABII586PurnmzwAAAAM92l4e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922623006",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T18:00:43Z"
    },
    {
      "event": "commented",
      "id": 2295367078,
      "node_id": "IC_kwDOABII586I0IWm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2295367078",
      "actor": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:35:16Z",
      "updated_at": "2024-08-18T19:35:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > One small gripe: When we enter the install phase, CMake always rebuilds `src/clientversion.cpp`, which forces a relink of all target executables. It would be better if `ninja install` would not rebuild anything.\r\n> \r\n> Is this still an issue with the recent update?\r\n\r\n@hebasto: Nope! It works as expected at 41051290ab3b6c36312cec26a27f787cea9961b4. :grin: Thanks!",
      "user": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2295367078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13922781427,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM93Mjz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922781427",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:35:20Z"
    },
    {
      "event": "subscribed",
      "id": 13922781429,
      "node_id": "SE_lADOABII586PurnmzwAAAAM93Mj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922781429",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:35:20Z"
    },
    {
      "event": "mentioned",
      "id": 13922783154,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM93M-y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922783154",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:36:20Z"
    },
    {
      "event": "subscribed",
      "id": 13922783161,
      "node_id": "SE_lADOABII586PurnmzwAAAAM93M-5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922783161",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:36:20Z"
    },
    {
      "event": "mentioned",
      "id": 13922785247,
      "node_id": "MEE_lADOABII586PurnmzwAAAAM93Nff",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922785247",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:37:33Z"
    },
    {
      "event": "subscribed",
      "id": 13922785252,
      "node_id": "SE_lADOABII586PurnmzwAAAAM93Nfk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922785252",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:37:33Z"
    },
    {
      "event": "comment_deleted",
      "id": 13922812867,
      "node_id": "CDE_lADOABII586PurnmzwAAAAM93UPD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922812867",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:54:09Z"
    },
    {
      "event": "comment_deleted",
      "id": 13922813008,
      "node_id": "CDE_lADOABII586PurnmzwAAAAM93URQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13922813008",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-18T19:54:13Z"
    },
    {
      "event": "reviewed",
      "id": 2244976481,
      "node_id": "PRR_kwDOABII586Fz59h",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\nI did not review this entirely and thoroughly like I do for other pull requests. The development that lead to this happened in https://github.com/hebasto/bitcoin/pulls where every change that is in this PR was reviewed by me and/or other reviewers. In this respect, this is similar to `master` where I did not review all changes, but it is possible to check that all changes were properly reviewed (by me and/or other reviewers).\r\n\r\nThis PR probably has some room for improvement and polishing, but I do not see any blockers to merging it. We have ~6 months for the polishing before 29.0 is released.\r\n\r\n<details>\r\n<summary>diff of compile and link commands of autotools vs cmake of debug build</summary>\r\n\r\ncompile:\r\n```diff\r\n--- compile_autotools\t2024-08-19 10:34:32.383681000 +0200\r\n+++ compile_cmake\t2024-08-19 10:29:16.344723000 +0200\r\n@@ -3,26 +3,17 @@\r\n -DDEBUG\r\n -DDEBUG_LOCKCONTENTION\r\n -DDEBUG_LOCKORDER\r\n--DHAVE_BUILD_INFO\r\n--DHAVE_CONFIG_H\r\n--DPROVIDE_FUZZ_MAIN_FUNCTION\r\n -DRPC_DOC_CHECK\r\n -D_THREAD_SAFE\r\n--I.\r\n--I.\r\n--I../src/config\r\n--I./leveldb/include\r\n--I./minisketch/include\r\n--I./secp256k1/include\r\n--I./univalue/include\r\n--I/usr/local/include\r\n--I/usr/local/include\r\n+-I/SOURCE/bitcoin/bitcoin/src\r\n+-I/SOURCE/bitcoin/bitcoin/src/leveldb/include\r\n+-I/SOURCE/bitcoin/bitcoin/src/minisketch/include\r\n+-I/SOURCE/bitcoin/bitcoin/src/univalue/include\r\n+-I/BUILD/src\r\n -MD\r\n--MF .deps/libbitcoin_node_a-net.Tpo\r\n--MP\r\n--MT libbitcoin_node_a-net.o\r\n+-MF src/CMakeFiles/bitcoin_node.dir/net.cpp.o.d\r\n+-MT src/CMakeFiles/bitcoin_node.dir/net.cpp.o\r\n -O0\r\n--O2\r\n -Wall\r\n -Wconditional-uninitialized\r\n -Wdate-time\r\n@@ -47,16 +38,15 @@\r\n -Wunused-member-function\r\n -Wvla\r\n -c\r\n--fPIE\r\n+-fPIC\r\n -fcf-protection=full\r\n+-fcolor-diagnostics\r\n -fstack-clash-protection\r\n -fstack-protector-all\r\n -ftrapv\r\n--g\r\n -g3\r\n -isystem /usr/local/include\r\n--isystem /usr/local/include\r\n--o libbitcoin_node_a-net.o\r\n+-o src/CMakeFiles/bitcoin_node.dir/net.cpp.o\r\n -pthread\r\n -std=c++20\r\n-`test -f 'net.cpp' || echo './'`net.cpp\r\n+/SOURCE/bitcoin/bitcoin/src/net.cpp\r\n```\r\n\r\nlink:\r\n```diff\r\n--- link_autotools\t2024-08-19 10:28:09.549987000 +0200\r\n+++ link_cmake\t2024-08-19 10:16:01.841351000 +0200\r\n@@ -1,71 +1,33 @@\r\n--L/usr/local/lib\r\n--L/usr/local/lib\r\n--L/usr/local/lib\r\n--L/usr/local/lib\r\n--L/usr/local/lib\r\n -O0\r\n--O2\r\n--Wall\r\n--Wconditional-uninitialized\r\n--Wdate-time\r\n--Wdocumentation\r\n--Werror\r\n--Wextra\r\n--Wformat\r\n--Wformat-security\r\n--Wgnu\r\n--Wimplicit-fallthrough\r\n -Wl,-z,now\r\n -Wl,-z,relro\r\n -Wl,-z,separate-code\r\n--Wloop-analysis\r\n--Wmissing-field-initializers\r\n--Wno-unused-parameter\r\n--Woverloaded-virtual\r\n--Wredundant-decls\r\n--Wself-assign\r\n--Wshadow-field\r\n--Wstack-protector\r\n--Wsuggest-override\r\n--Wthread-safety\r\n--Wundef\r\n--Wunreachable-code\r\n--Wunused-member-function\r\n--Wvla\r\n -fPIE\r\n -fcf-protection=full\r\n -fstack-clash-protection\r\n -fstack-protector-all\r\n -ftrapv\r\n--g\r\n -g3\r\n--levent\r\n--levent\r\n--levent_pthreads\r\n--lminiupnpc\r\n--lnatpmp\r\n--lpthread\r\n--lsqlite3\r\n--lzmq\r\n--o bitcoind\r\n+-o src/bitcoind\r\n -pie\r\n -pthread\r\n--std=c++20\r\n-bitcoind-bitcoind.o\r\n-crc32c/libcrc32c.la\r\n-crc32c/libcrc32c_sse42.la\r\n-crypto/libbitcoin_crypto_avx2.la\r\n-crypto/libbitcoin_crypto_base.la\r\n-crypto/libbitcoin_crypto_sse41.la\r\n-crypto/libbitcoin_crypto_x86_shani.la\r\n-init/bitcoind-bitcoind.o\r\n-leveldb/libleveldb.la\r\n-leveldb/libmemenv.la\r\n-libbitcoin_common.a\r\n-libbitcoin_consensus.a\r\n-libbitcoin_node.a\r\n-libbitcoin_util.a\r\n-libbitcoin_wallet.a\r\n-libbitcoin_zmq.a\r\n-libunivalue.la\r\n-secp256k1/libsecp256k1.la\r\n+/usr/local/lib/libevent.so\r\n+/usr/local/lib/libevent_pthreads.so\r\n+/usr/local/lib/libsqlite3.so\r\n+libcrc32c.a\r\n+libcrc32c_sse42.a\r\n+libleveldb.a\r\n+libminisketch.a\r\n+src/CMakeFiles/bitcoind.dir/bitcoind.cpp.o\r\n+src/CMakeFiles/bitcoind.dir/init/bitcoind.cpp.o\r\n+src/crypto/libbitcoin_crypto.a\r\n+src/crypto/libbitcoin_crypto_avx2.a\r\n+src/crypto/libbitcoin_crypto_sse41.a\r\n+src/crypto/libbitcoin_crypto_x86_shani.a\r\n+src/libbitcoin_common.a\r\n+src/libbitcoin_consensus.a\r\n+src/libbitcoin_node.a\r\n+src/secp256k1/src/libsecp256k1.a\r\n+src/univalue/libunivalue.a\r\n+src/util/libbitcoin_util.a\r\n+src/wallet/libbitcoin_wallet.a\r\n```\r\n\r\nVerdict: autotools is using `-O2 -O0` and `-g3 -g`... lets get rid of it :pray: \r\n\r\nPS I do not know what is the `-fPIE` vs `-fPIC` difference.\r\n</details>",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2244976481",
      "submitted_at": "2024-08-19T08:52:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "review_requested",
      "id": 13927115731,
      "node_id": "RRE_lADOABII586PurnmzwAAAAM-HuvT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13927115731",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-19T08:52:23Z",
      "requested_reviewer": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13927115962,
      "node_id": "RRE_lADOABII586PurnmzwAAAAM-Huy6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13927115962",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-19T08:52:24Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2296430206,
      "node_id": "IC_kwDOABII586I4L5-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2296430206",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-19T12:14:10Z",
      "updated_at": "2024-08-19T12:30:21Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nIn my testing of #30664 I keep seeing `share/rpcauth/__pycache__/` in `git status`, so that might need to be added to `.gitignore`. _Update:_ I can't reproduce this anymore, so maybe is was a rebase issue.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2296430206",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2254019496,
      "node_id": "PRR_kwDOABII586GWZuo",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\nI reviewed most of this and at least glanced over every pull request in hebasto's repository since the project started review in his repository early last year. The change does contain some tradeoffs compared to the current build system, most of which are inherent to cmake and challenges that are also faced by other projects. However none of these are serious compared to the benefits that this migration will bring. I hope the better IDE integration cmake brings compared to autotools will boost productivity and make it easier for developers to onboard in the future.\r\n\r\nGuix builds (aarch64):\r\n```\r\nc4e0333106b259d1ab11066677fc32fba8dd380afc2f9c334d9eff2dccccba39  guix-build-41051290ab3b/output/aarch64-linux-gnu/SHA256SUMS.part\r\nbfce0ebd120bd45576586691c46b47e66bb0031f7540772a924d4cb1c2602576  guix-build-41051290ab3b/output/aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu-debug.tar.gz\r\n615aae82e503fc07ee1053649b3a45ad2f0dd9c02d5a85394f8ba33b3bd5be88  guix-build-41051290ab3b/output/aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu.tar.gz\r\n2a8ef06d7795513a3d53c43560c3810c94cbe1072a71780ab32ffbda53f7be70  guix-build-41051290ab3b/output/arm-linux-gnueabihf/SHA256SUMS.part\r\nfe9b3740ddcf221ee6b2a16c1fcc51f0f1276226a6f0d5ede4ec9a5ec8630473  guix-build-41051290ab3b/output/arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf-debug.tar.gz\r\n459f02e850925be6c7c7e04f2c5ce851838505c1fa3fb86ad796e3892b62b561  guix-build-41051290ab3b/output/arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf.tar.gz\r\n3c8fc1d8f4bbf87e7106dfcd6fb9ac89fdc98c47ccfd27f791e85396458acf6d  guix-build-41051290ab3b/output/arm64-apple-darwin/SHA256SUMS.part\r\ndb755f2f4321ed1ba930ffd73aaa6d3f30ce028c1cbcbc120e3a4f9729d44aeb  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.tar.gz\r\n7375d138f0351c9f41b25c02b3628894b2fdb8add8783952468d71afbf3fbb47  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.zip\r\n152a84bd68011d9af6e30830f4da1a72ebee401160c1fefd46e9de0cae77c94a  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin.tar.gz\r\n97c437130ae60c72400ba9738fe2ef03dbd7bc25e303185061b426ac8f0244ea  guix-build-41051290ab3b/output/dist-archive/bitcoin-41051290ab3b.tar.gz\r\n3f0961cf0912d9469c279c76987d81c217e755b7b2593fcf04171663f453ef1d  guix-build-41051290ab3b/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nc02e3d07355b36481a9c442085a2d3370d19031defa0c1831b39f443abc650d1  guix-build-41051290ab3b/output/powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu-debug.tar.gz\r\n6a1e7e6eedc15ed13be15c526c4c9145241e012cc7b23ecf23bbde455eb0e74e  guix-build-41051290ab3b/output/powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu.tar.gz\r\ne99090bd1371547fae416e70fe0977ab8679e4d710446ee7b1df980618a728b6  guix-build-41051290ab3b/output/riscv64-linux-gnu/SHA256SUMS.part\r\nd5bd95a0f718e72b01732e37de33a9e63ae26182e67d4458b47ca6051fc2ce9d  guix-build-41051290ab3b/output/riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu-debug.tar.gz\r\nfbdd2ca094b9f69c17fdebedc9d790eab0cd58a2ce12833efec602d210a39a42  guix-build-41051290ab3b/output/riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu.tar.gz\r\naeeb2f5ab3a3197481f0c6c2aea1837026dc322b0066c229b365ba8747d829f2  guix-build-41051290ab3b/output/x86_64-apple-darwin/SHA256SUMS.part\r\n0a7214b6617da6f36cd632a9dc1edbdeda25a5d3049cd2b597634164d906abe8  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.tar.gz\r\nc266669f9e663c7f35060adeba9148e8b5cda45376ae90ee917eb411d6890e46  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.zip\r\na52f9e74d790f71f8ec89a23338df518053dce6ad5c37338ba13ba4438a367cd  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin.tar.gz\r\n1c1dcc180e415c893a253315786397b6dbbed7a10b40fa9fc4b85f3ae102d370  guix-build-41051290ab3b/output/x86_64-linux-gnu/SHA256SUMS.part\r\n91da98db1e4eea4738b839ed3b425dcf6ffdccd2177debe46314cceb785f0728  guix-build-41051290ab3b/output/x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu-debug.tar.gz\r\nf8bc57976b26c4a378dc7a3be5e6f60de9e7b1d73fae6a2a96505801194f1420  guix-build-41051290ab3b/output/x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu.tar.gz\r\nc7642ef6d7529c6c3b3d929de6172ab594ace611c3ab04b11a6c953bcd48823c  guix-build-41051290ab3b/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n572691a757abc27a32a37b0f10c84a361809f4de76fb4a39e39815ded836a26a  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-debug.zip\r\nd02a1bc08fb97a2c4e726fabb3166293061834f0f32dd488a4238304cfaefe28  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-setup-unsigned.exe\r\n963836e69f2382ccd48fbbf68146cd29a78e79b6784297c76b415824ed3e4175  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-unsigned.tar.gz\r\nf42b645f14fd2d9fe88ce44e03f0b175fce4a703961e9ef5dd1f6cf4ad986de1  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64.zip\r\n```",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2254019496",
      "submitted_at": "2024-08-22T09:41:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "review_requested",
      "id": 13974325512,
      "node_id": "RRE_lADOABII586PurnmzwAAAANA70kI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13974325512",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T09:41:53Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13974360805,
      "node_id": "RRE_lADOABII586PurnmzwAAAANA79Ll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13974360805",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T09:44:26Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2254261093,
      "node_id": "PRR_kwDOABII586GXUtl",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2254261093",
      "submitted_at": "2024-08-22T11:31:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2304454120,
      "node_id": "IC_kwDOABII586JWy3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2304454120",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T11:38:47Z",
      "updated_at": "2024-08-22T11:38:47Z",
      "author_association": "MEMBER",
      "body": "My Guix build:\r\n```\r\nx86_64\r\nc4e0333106b259d1ab11066677fc32fba8dd380afc2f9c334d9eff2dccccba39  guix-build-41051290ab3b/output/aarch64-linux-gnu/SHA256SUMS.part\r\nbfce0ebd120bd45576586691c46b47e66bb0031f7540772a924d4cb1c2602576  guix-build-41051290ab3b/output/aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu-debug.tar.gz\r\n615aae82e503fc07ee1053649b3a45ad2f0dd9c02d5a85394f8ba33b3bd5be88  guix-build-41051290ab3b/output/aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu.tar.gz\r\n2a8ef06d7795513a3d53c43560c3810c94cbe1072a71780ab32ffbda53f7be70  guix-build-41051290ab3b/output/arm-linux-gnueabihf/SHA256SUMS.part\r\nfe9b3740ddcf221ee6b2a16c1fcc51f0f1276226a6f0d5ede4ec9a5ec8630473  guix-build-41051290ab3b/output/arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf-debug.tar.gz\r\n459f02e850925be6c7c7e04f2c5ce851838505c1fa3fb86ad796e3892b62b561  guix-build-41051290ab3b/output/arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf.tar.gz\r\n3c8fc1d8f4bbf87e7106dfcd6fb9ac89fdc98c47ccfd27f791e85396458acf6d  guix-build-41051290ab3b/output/arm64-apple-darwin/SHA256SUMS.part\r\ndb755f2f4321ed1ba930ffd73aaa6d3f30ce028c1cbcbc120e3a4f9729d44aeb  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.tar.gz\r\n7375d138f0351c9f41b25c02b3628894b2fdb8add8783952468d71afbf3fbb47  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.zip\r\n152a84bd68011d9af6e30830f4da1a72ebee401160c1fefd46e9de0cae77c94a  guix-build-41051290ab3b/output/arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin.tar.gz\r\n97c437130ae60c72400ba9738fe2ef03dbd7bc25e303185061b426ac8f0244ea  guix-build-41051290ab3b/output/dist-archive/bitcoin-41051290ab3b.tar.gz\r\n3f0961cf0912d9469c279c76987d81c217e755b7b2593fcf04171663f453ef1d  guix-build-41051290ab3b/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nc02e3d07355b36481a9c442085a2d3370d19031defa0c1831b39f443abc650d1  guix-build-41051290ab3b/output/powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu-debug.tar.gz\r\n6a1e7e6eedc15ed13be15c526c4c9145241e012cc7b23ecf23bbde455eb0e74e  guix-build-41051290ab3b/output/powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu.tar.gz\r\ne99090bd1371547fae416e70fe0977ab8679e4d710446ee7b1df980618a728b6  guix-build-41051290ab3b/output/riscv64-linux-gnu/SHA256SUMS.part\r\nd5bd95a0f718e72b01732e37de33a9e63ae26182e67d4458b47ca6051fc2ce9d  guix-build-41051290ab3b/output/riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu-debug.tar.gz\r\nfbdd2ca094b9f69c17fdebedc9d790eab0cd58a2ce12833efec602d210a39a42  guix-build-41051290ab3b/output/riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu.tar.gz\r\naeeb2f5ab3a3197481f0c6c2aea1837026dc322b0066c229b365ba8747d829f2  guix-build-41051290ab3b/output/x86_64-apple-darwin/SHA256SUMS.part\r\n0a7214b6617da6f36cd632a9dc1edbdeda25a5d3049cd2b597634164d906abe8  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.tar.gz\r\nc266669f9e663c7f35060adeba9148e8b5cda45376ae90ee917eb411d6890e46  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.zip\r\na52f9e74d790f71f8ec89a23338df518053dce6ad5c37338ba13ba4438a367cd  guix-build-41051290ab3b/output/x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin.tar.gz\r\n1c1dcc180e415c893a253315786397b6dbbed7a10b40fa9fc4b85f3ae102d370  guix-build-41051290ab3b/output/x86_64-linux-gnu/SHA256SUMS.part\r\n91da98db1e4eea4738b839ed3b425dcf6ffdccd2177debe46314cceb785f0728  guix-build-41051290ab3b/output/x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu-debug.tar.gz\r\nf8bc57976b26c4a378dc7a3be5e6f60de9e7b1d73fae6a2a96505801194f1420  guix-build-41051290ab3b/output/x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu.tar.gz\r\nc7642ef6d7529c6c3b3d929de6172ab594ace611c3ab04b11a6c953bcd48823c  guix-build-41051290ab3b/output/x86_64-w64-mingw32/SHA256SUMS.part\r\n572691a757abc27a32a37b0f10c84a361809f4de76fb4a39e39815ded836a26a  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-debug.zip\r\nd02a1bc08fb97a2c4e726fabb3166293061834f0f32dd488a4238304cfaefe28  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-setup-unsigned.exe\r\n963836e69f2382ccd48fbbf68146cd29a78e79b6784297c76b415824ed3e4175  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-unsigned.tar.gz\r\nf42b645f14fd2d9fe88ce44e03f0b175fce4a703961e9ef5dd1f6cf4ad986de1  guix-build-41051290ab3b/output/x86_64-w64-mingw32/bitcoin-41051290ab3b-win64.zip\r\n```",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2304454120",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2304492506,
      "node_id": "IC_kwDOABII586JW8Pa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2304492506",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T11:59:52Z",
      "updated_at": "2024-08-22T12:02:51Z",
      "author_association": "MEMBER",
      "body": "Getting the same guix hashes as @hebasto and x86_64. Briefly tested that the macOS zip still contains a working (x86_64) binary.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2304492506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13976052962,
      "node_id": "MEE_lADOABII586PurnmzwAAAANBCaTi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13976052962",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T11:59:54Z"
    },
    {
      "event": "subscribed",
      "id": 13976052978,
      "node_id": "SE_lADOABII586PurnmzwAAAANBCaTy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13976052978",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T11:59:54Z"
    },
    {
      "event": "commented",
      "id": 2305438162,
      "node_id": "IC_kwDOABII586JajHS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2305438162",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T19:00:35Z",
      "updated_at": "2024-08-23T07:14:56Z",
      "author_association": "MEMBER",
      "body": "I reviewed everything from scratch commit-by-commit. I couldn't find any massive holes, only a few instances of missing stuff of severity such as https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726881676, which is trivial and quick to follow-up on and not a blocker. (My plan is to submit the review comments after merge, in one batch, so as to not distract this pull request right now with noise and comment-cycles)\r\n\r\nHowever, I did ***not*** review:\r\n\r\n* `cmake/module/Find{*}.cmake`\r\n* The `translate` target\r\n* Anything MSVC, VCPKG, Apple, Darwin\r\n* MULTI_CONFIG\r\n\r\nAlso, I am not a build-system expert, so I may have overlooked stuff.\r\n\r\nAlso, I haven't done any tests. I'll do them in the coming days and update the drafted review comments as needed.\r\n\r\nreview ACK 41051290ab3b6c36312cec26a27f787cea9961b4 🐥\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 41051290ab3b6c36312cec26a27f787cea9961b4 🐥\r\nhU9e0FnrniROs75oW/F5Op9SsvAT+AkF01s2a7qdVi2AZEs0wbc0rSK7RF5eCFpOXQ3HdqCXbQc1R/Pr1dOMDQ==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2305438162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2306583830,
      "node_id": "IC_kwDOABII586Je60W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2306583830",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T08:33:06Z",
      "updated_at": "2024-08-23T08:33:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 41051290ab3b6c36312cec26a27f787cea9961b4.\r\n\r\nTested successful builds on:\r\n - Win11 + msvc x64 dynamic and static\r\n - Win11 + WSL Ubuntu 24.04 + mingw32 \r\n \r\nI couldn't perform the build on Win11 + WSL + Ubuntu 20.04 as the g++-mingw toolset not available. I don't think this is a problem since it's trivial to install a newer Ubuntu version on WSL.",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2306583830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2257577490,
      "node_id": "PRR_kwDOABII586Gj-YS",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\nBuilt successfully on macOS 14.4 with/ without `GUI` and legacy wallet. Noticed I didn't have `ccache` installed so I also played with/ without it and reviewed the `productivity.md` doc.\r\n\r\nAlso ran the tests with `ctest` and performed the `deploy` that had a in issue when compiling with `--target` identified by @fanquake [earlier](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2288437679) and I've verified that works perfect now.\r\n\r\nI'll check cross building on WSL 24.04 soon.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2257577490",
      "submitted_at": "2024-08-23T16:05:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2307590054,
      "node_id": "IC_kwDOABII586Jiwem",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2307590054",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T18:21:00Z",
      "updated_at": "2024-08-23T18:25:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "After yesterday's OS update (might be unrelated, not sure), I started getting:\r\n```bash\r\n% cmake -B build && cmake --build build -j8 && build/src/test/test_bitcoin --run_test=coins_tests\r\n...\r\n\r\n[ 70%] Linking CXX executable test_bitcoin\r\nld: warning: ignoring duplicate libraries: '../secp256k1/src/libsecp256k1.a'\r\nduplicate symbol '__ZN16sigopcount_tests13GetSigOpCount11test_methodEv' in:\r\n    build/src/test/CMakeFiles/test_bitcoin.dir/sigopcount_tests.cpp.o\r\n    build/src/test/CMakeFiles/test_bitcoin.dir/validation_chainstate_tests.cpp.o\r\nduplicate symbol '__ZN16sigopcount_tests14GetTxSigOpCost11test_methodEv' in:\r\n    build/src/test/CMakeFiles/test_bitcoin.dir/sigopcount_tests.cpp.o\r\n    build/src/test/CMakeFiles/test_bitcoin.dir/validation_chainstate_tests.cpp.o\r\nld: 2 duplicate symbols\r\n```\r\n\r\nwhich was weird, since `sigopcount_tests.cpp` and `validation_chainstate_tests.cpp` weren't modified recently and compilation was working correctly with autotools and with `cmake -B build -DWITH_CCACHE=OFF`.\r\n\r\nComparing the `objdump` of `sigopcount_tests.cpp.o` and `validation_chainstate_tests.cpp.o` revealed that for some reason ccache returned the content of  `sigopcount_tests` for `validation_chainstate_tests` (exact match, 0 difference between the two).\r\n\r\nNot exactly sure if this is a `CMake` error or not, but given that it's working with autotools, thought I'll report it here.\r\nNote that I was merging this branch with every PR I checked out locally and built without clearing the cache in-between. That should work, right?\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\n% sw_vers\r\nProductName:            macOS\r\nProductVersion:         14.6.1\r\nBuildVersion:           23G93\r\n\r\n% ccache --version\r\nccache version 4.10.2\r\n\r\n% cmake --version\r\ncmake version 3.30.2\r\n\r\n% clang --version\r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.6.0\r\nThread model: posix\r\n```\r\n</details>\r\n\r\n----\r\n\r\n\r\nI'm also trying to compare the build artefacts before/after the migration to make sure the build tool doesn't change our deliverables.\r\nTried using https://github.com/fanquake/core-review/blob/master/docker/debian.dockerfile, but the binaries seemed very different, can someone please point me to a doc on how we usually compare them?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2307590054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2307711611,
      "node_id": "IC_kwDOABII586JjOJ7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2307711611",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:44:13Z",
      "updated_at": "2024-08-23T19:44:13Z",
      "author_association": "MEMBER",
      "body": "@hebasto Didn't we decide in last week's IRC meeting to delete configure.ac + Makefile.* in this PR, then doing a full removal (#30664) as a follow-up? That way the conflicts are apparent as soon as it's merged?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2307711611",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13997269494,
      "node_id": "MEE_lADOABII586PurnmzwAAAANCTWH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13997269494",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:44:14Z"
    },
    {
      "event": "subscribed",
      "id": 13997269501,
      "node_id": "SE_lADOABII586PurnmzwAAAANCTWH9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13997269501",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:44:14Z"
    },
    {
      "event": "commented",
      "id": 2307729771,
      "node_id": "IC_kwDOABII586JjSlr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2307729771",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:58:46Z",
      "updated_at": "2024-08-23T19:58:46Z",
      "author_association": "MEMBER",
      "body": "> @hebasto Didn't we decide in last week's IRC meeting to delete configure.ac + Makefile.* in this PR, then doing a full removal (#30664) as a follow-up? That way the conflicts are apparent as soon as it's merged?\r\n\r\nI understood it as an intention to reveal conflicts. A follow up that just removes the code should be a no-brainer, right?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2307729771",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 13997388358,
      "node_id": "MEE_lADOABII586PurnmzwAAAANCTzJG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13997388358",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:58:48Z"
    },
    {
      "event": "subscribed",
      "id": 13997388380,
      "node_id": "SE_lADOABII586PurnmzwAAAANCTzJc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13997388380",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-23T19:58:48Z"
    },
    {
      "event": "reviewed",
      "id": 2258177952,
      "node_id": "PRR_kwDOABII586GmQ-g",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\nCross built for Win11 on WSL 24.04, performed `install`, `deploy`, run `ctest` and `test_bitcoin` on both WSL and WIndows.\r\n\r\nSmall details regarding the docs:\r\n- In \"Building for 64-bit Windows\" doc, building depends got changed to `gmake`, but not in depends doc.\r\n- Also there's no reference to `ctest` in `build-unix.md` except at the end as part of the \"Setup and Build Example: Arch Linux\" , should not be at the beginning in the \"To Build\" section as well?\r\n\r\n",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2258177952",
      "submitted_at": "2024-08-23T22:19:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2308803683,
      "node_id": "IC_kwDOABII586JnYxj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2308803683",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-25T12:02:35Z",
      "updated_at": "2024-08-25T12:02:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Comparing the `objdump` of `sigopcount_tests.cpp.o` and `validation_chainstate_tests.cpp.o` revealed that for some reason ccache returned the content of `sigopcount_tests` for `validation_chainstate_tests` (exact match, 0 difference between the two).\r\n\r\nI investigated further, and if I understand correctly, it appears that `ccache` is indeed returning `sigopcount_tests` binaries for `validation_chainstate_tests`.\r\n\r\nI generated build debug logs using the following commands:\r\n```bash\r\nexport CCACHE_DEBUG=1\r\nexport CCACHE_DEBUGDIR=~/ccache-debug-fail\r\ngit clean -fxd && cmake -B build && cmake --build build -j10\r\n```\r\n\r\nWhen checking the corresponding build commands and results for `validation_chainstate_tests.cpp` and `sigopcount_tests.cpp`, I found the following:\r\n> build/src/test/CMakeFiles/test_bitcoin.dir/validation_chainstate_tests.cpp.o.20240825_123816_090964.ccache-log:\r\n```python\r\nManifest key: 6af4hv9nbb0dhlmrck6nb8hr8llmdrmps\r\nRetrieved 6af4hv9nbb0dhlmrck6nb8hr8llmdrmps from local storage (/Users/lorinc/.ccache/6/a/f4hv9nbb0dhlmrck6nb8hr8llmdrmpsM)\r\nGot result key from manifest\r\nResult key: 04f9ih83ggvf132nto09kl2ljemb7onbc\r\nRetrieved 04f9ih83ggvf132nto09kl2ljemb7onbc from local storage (/Users/lorinc/.ccache/0/4/f9ih83ggvf132nto09kl2ljemb7onbcR)\r\n```\r\nvs\r\n> build/src/test/CMakeFiles/test_bitcoin.dir/sigopcount_tests.cpp.o.20240825_123815_909195.ccache-log:\r\n```python\r\nManifest key: 387dad41g4hv0p4jt4tvjlsc7bshr77gg\r\nRetrieved 387dad41g4hv0p4jt4tvjlsc7bshr77gg from local storage (/Users/lorinc/.ccache/3/8/7dad41g4hv0p4jt4tvjlsc7bshr77ggM)\r\nGot result key from manifest\r\nResult key: 04f9ih83ggvf132nto09kl2ljemb7onbc\r\nRetrieved 04f9ih83ggvf132nto09kl2ljemb7onbc from local storage (/Users/lorinc/.ccache/0/4/f9ih83ggvf132nto09kl2ljemb7onbcR)\r\n```\r\n\r\nI.e. both are resolved to the same cache entry:\r\n```bash\r\n04f9ih83ggvf132nto09kl2ljemb7onbc\r\n```\r\nstored in\r\n```bash\r\n.ccache/0/4/f9ih83ggvf132nto09kl2ljemb7onbcR\r\n```\r\n\r\nExtracting the corresponding cache entry proves that it's `sigopcount_tests.cpp` related:\r\n```python\r\n% ccache --extract-result ~/.ccache/0/4/f9ih83ggvf132nto09kl2ljemb7onbcR\r\n% grep GetSigOpCount ccache-result.o\r\nBinary file ccache-result.o matches\r\n% grep sigopcount_tests ccache-result.d\r\nsrc/test/CMakeFiles/test_bitcoin.dir/sigopcount_tests.cpp.o: \\\r\n  /Users/lorinc/IdeaProjects/bitcoin/src/test/sigopcount_tests.cpp \\\r\n```\r\n\r\nRemoving the `.ccache` folder and rebuilding everything results in a different cache key and correct looking build.\r\nI'm not yet sure if it's CMake related or not (could it be caused by switching branches often?), but I have sent the cache entries to @hebasto.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2308803683",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 14004131643,
      "node_id": "MEE_lADOABII586PurnmzwAAAANCthc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14004131643",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-25T12:02:35Z"
    },
    {
      "event": "subscribed",
      "id": 14004131646,
      "node_id": "SE_lADOABII586PurnmzwAAAANCthc-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14004131646",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-25T12:02:36Z"
    },
    {
      "event": "reviewed",
      "id": 2259369009,
      "node_id": "PRR_kwDOABII586Gqzwx",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK [`4105129`](https://github.com/bitcoin/bitcoin/commit/41051290ab3b6c36312cec26a27f787cea9961b4)\r\n\r\nTested and Built successfully on:\r\n\r\n- MacOS 14.6.1 without GUI and Wallet\r\n- Ubuntu 24.04 without GUI and Wallet\r\n\r\nAlso ran tests with `ctest`.\r\n\r\n",
      "user": {
        "login": "i-am-yuvi",
        "id": 92994932,
        "node_id": "U_kgDOBYr9dA",
        "avatar_url": "https://avatars.githubusercontent.com/u/92994932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/i-am-yuvi",
        "html_url": "https://github.com/i-am-yuvi",
        "followers_url": "https://api.github.com/users/i-am-yuvi/followers",
        "following_url": "https://api.github.com/users/i-am-yuvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/i-am-yuvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/i-am-yuvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/i-am-yuvi/subscriptions",
        "organizations_url": "https://api.github.com/users/i-am-yuvi/orgs",
        "repos_url": "https://api.github.com/users/i-am-yuvi/repos",
        "events_url": "https://api.github.com/users/i-am-yuvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/i-am-yuvi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2259369009",
      "submitted_at": "2024-08-25T20:37:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2260753659,
      "node_id": "PRR_kwDOABII586GwFz7",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "41051290ab3b6c36312cec26a27f787cea9961b4 succesfully built on debian12 and fedora40\r\n \r\n- the build requirements for Fedora at `doc/build.unix.md` are incorrect/not updated\r\n- disable-wallet mode is not working without sqlite dependency installed? Using  `cmake -B build -DENABLE_WALLET=OFF`, as per the instructions, will not work without sqlite installed. (error that sqlite is missing)",
      "user": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2260753659",
      "submitted_at": "2024-08-26T13:53:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2310296649,
      "node_id": "IC_kwDOABII586JtFRJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2310296649",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T14:02:23Z",
      "updated_at": "2024-08-26T14:02:23Z",
      "author_association": "MEMBER",
      "body": ">    * the build requirements for Fedora at `doc/build.unix.md` are incorrect/not updated\r\n\r\nThanks! Will update them in a follow-up along with other doc amendments.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2310296649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2310321280,
      "node_id": "IC_kwDOABII586JtLSA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2310321280",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T14:13:06Z",
      "updated_at": "2024-08-26T14:13:06Z",
      "author_association": "MEMBER",
      "body": "> [4105129](https://github.com/bitcoin/bitcoin/commit/41051290ab3b6c36312cec26a27f787cea9961b4) succesfully built on debian12 and fedora40\r\n> \r\n>    * disable-wallet mode is not working without sqlite dependency installed? Using  `cmake -B build -DENABLE_WALLET=OFF`, as per the instructions, will not work without sqlite installed. (error that sqlite is missing)\r\n\r\nI cannot reproduce the issue on Fedora 40:\r\n```\r\n$ dnf list installed sqlite-devel\r\nError: No matching Packages to list\r\n$ cmake -B build -DENABLE_WALLET=OFF\r\n< snip >\r\n-- Configuring done (24.7s)\r\n-- Generating done (0.1s)\r\n-- Build files have been written to: /home/hebasto/git/bitcoin/build\r\n```\r\n\r\nIs your build directory clean?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2310321280",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2310426838,
      "node_id": "IC_kwDOABII586JtlDW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2310426838",
      "actor": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T14:59:43Z",
      "updated_at": "2024-08-26T14:59:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > [4105129](https://github.com/bitcoin/bitcoin/commit/41051290ab3b6c36312cec26a27f787cea9961b4) succesfully built on debian12 and fedora40\r\n> > \r\n> > * disable-wallet mode is not working without sqlite dependency installed? Using  `cmake -B build -DENABLE_WALLET=OFF`, as per the instructions, will not work without sqlite installed. (error that sqlite is missing)\r\n> \r\n> I cannot reproduce the issue on Fedora 40:\r\n> \r\n> ```\r\n> $ dnf list installed sqlite-devel\r\n> Error: No matching Packages to list\r\n> $ cmake -B build -DENABLE_WALLET=OFF\r\n> < snip >\r\n> -- Configuring done (24.7s)\r\n> -- Generating done (0.1s)\r\n> -- Build files have been written to: /home/hebasto/git/bitcoin/build\r\n> ```\r\n> \r\n> Is your build directory clean?\r\n\r\nI cannot repro anymore. \r\nsorry for the pollution",
      "user": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2310426838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2261524445,
      "node_id": "PRR_kwDOABII586GzB_d",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2261524445",
      "submitted_at": "2024-08-26T20:15:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2311036181,
      "node_id": "IC_kwDOABII586Jv50V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2311036181",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T20:32:52Z",
      "updated_at": "2024-08-26T20:32:52Z",
      "author_association": "MEMBER",
      "body": "x86-64 Guix build:\r\n```\r\nbfce0ebd120bd45576586691c46b47e66bb0031f7540772a924d4cb1c2602576  aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu-debug.tar.gz\r\n615aae82e503fc07ee1053649b3a45ad2f0dd9c02d5a85394f8ba33b3bd5be88  aarch64-linux-gnu/bitcoin-41051290ab3b-aarch64-linux-gnu.tar.gz\r\nc4e0333106b259d1ab11066677fc32fba8dd380afc2f9c334d9eff2dccccba39  aarch64-linux-gnu/SHA256SUMS.part\r\n152a84bd68011d9af6e30830f4da1a72ebee401160c1fefd46e9de0cae77c94a  arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin.tar.gz\r\ndb755f2f4321ed1ba930ffd73aaa6d3f30ce028c1cbcbc120e3a4f9729d44aeb  arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.tar.gz\r\n7375d138f0351c9f41b25c02b3628894b2fdb8add8783952468d71afbf3fbb47  arm64-apple-darwin/bitcoin-41051290ab3b-arm64-apple-darwin-unsigned.zip\r\n3c8fc1d8f4bbf87e7106dfcd6fb9ac89fdc98c47ccfd27f791e85396458acf6d  arm64-apple-darwin/SHA256SUMS.part\r\nfe9b3740ddcf221ee6b2a16c1fcc51f0f1276226a6f0d5ede4ec9a5ec8630473  arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf-debug.tar.gz\r\n459f02e850925be6c7c7e04f2c5ce851838505c1fa3fb86ad796e3892b62b561  arm-linux-gnueabihf/bitcoin-41051290ab3b-arm-linux-gnueabihf.tar.gz\r\n2a8ef06d7795513a3d53c43560c3810c94cbe1072a71780ab32ffbda53f7be70  arm-linux-gnueabihf/SHA256SUMS.part\r\n97c437130ae60c72400ba9738fe2ef03dbd7bc25e303185061b426ac8f0244ea  dist-archive/bitcoin-41051290ab3b.tar.gz\r\nc02e3d07355b36481a9c442085a2d3370d19031defa0c1831b39f443abc650d1  powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu-debug.tar.gz\r\n6a1e7e6eedc15ed13be15c526c4c9145241e012cc7b23ecf23bbde455eb0e74e  powerpc64-linux-gnu/bitcoin-41051290ab3b-powerpc64-linux-gnu.tar.gz\r\n3f0961cf0912d9469c279c76987d81c217e755b7b2593fcf04171663f453ef1d  powerpc64-linux-gnu/SHA256SUMS.part\r\nd5bd95a0f718e72b01732e37de33a9e63ae26182e67d4458b47ca6051fc2ce9d  riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu-debug.tar.gz\r\nfbdd2ca094b9f69c17fdebedc9d790eab0cd58a2ce12833efec602d210a39a42  riscv64-linux-gnu/bitcoin-41051290ab3b-riscv64-linux-gnu.tar.gz\r\ne99090bd1371547fae416e70fe0977ab8679e4d710446ee7b1df980618a728b6  riscv64-linux-gnu/SHA256SUMS.part\r\na52f9e74d790f71f8ec89a23338df518053dce6ad5c37338ba13ba4438a367cd  x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin.tar.gz\r\n0a7214b6617da6f36cd632a9dc1edbdeda25a5d3049cd2b597634164d906abe8  x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.tar.gz\r\nc266669f9e663c7f35060adeba9148e8b5cda45376ae90ee917eb411d6890e46  x86_64-apple-darwin/bitcoin-41051290ab3b-x86_64-apple-darwin-unsigned.zip\r\naeeb2f5ab3a3197481f0c6c2aea1837026dc322b0066c229b365ba8747d829f2  x86_64-apple-darwin/SHA256SUMS.part\r\n91da98db1e4eea4738b839ed3b425dcf6ffdccd2177debe46314cceb785f0728  x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu-debug.tar.gz\r\nf8bc57976b26c4a378dc7a3be5e6f60de9e7b1d73fae6a2a96505801194f1420  x86_64-linux-gnu/bitcoin-41051290ab3b-x86_64-linux-gnu.tar.gz\r\n1c1dcc180e415c893a253315786397b6dbbed7a10b40fa9fc4b85f3ae102d370  x86_64-linux-gnu/SHA256SUMS.part\r\n572691a757abc27a32a37b0f10c84a361809f4de76fb4a39e39815ded836a26a  x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-debug.zip\r\nd02a1bc08fb97a2c4e726fabb3166293061834f0f32dd488a4238304cfaefe28  x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-setup-unsigned.exe\r\n963836e69f2382ccd48fbbf68146cd29a78e79b6784297c76b415824ed3e4175  x86_64-w64-mingw32/bitcoin-41051290ab3b-win64-unsigned.tar.gz\r\nf42b645f14fd2d9fe88ce44e03f0b175fce4a703961e9ef5dd1f6cf4ad986de1  x86_64-w64-mingw32/bitcoin-41051290ab3b-win64.zip\r\nc7642ef6d7529c6c3b3d929de6172ab594ace611c3ab04b11a6c953bcd48823c  x86_64-w64-mingw32/SHA256SUMS.part\r\n```",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2311036181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2311072370,
      "node_id": "IC_kwDOABII586JwCpy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2311072370",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T20:51:52Z",
      "updated_at": "2024-08-26T20:51:52Z",
      "author_association": "MEMBER",
      "body": "doc/developer-notes.md needs to be updated too.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2311072370",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2311259644,
      "node_id": "IC_kwDOABII586JwwX8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2311259644",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-26T23:05:51Z",
      "updated_at": "2024-08-26T23:05:51Z",
      "author_association": "MEMBER",
      "body": "Initial testing: Seems to work fine. I was surprised Qt wasn't at least enabled by default.\r\n\r\n> The \"auto\" value is no longer available; non-default values must be specified explicitly. \r\n\r\nI assume this is a CMake standard practice? Or is there some other reason to not autodetect bdb/portmapping/qt/zmq?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2311259644",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "commented",
      "id": 2311866895,
      "node_id": "IC_kwDOABII586JzEoP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2311866895",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T08:20:16Z",
      "updated_at": "2024-08-27T08:20:16Z",
      "author_association": "MEMBER",
      "body": "> doc/developer-notes.md needs to be updated too.\r\n\r\n@l0rinc has already started to work on it in https://github.com/hebasto/bitcoin/pull/337. It will be converted in a follow up PR once this PR is merged.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2311866895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 14024304531,
      "node_id": "MEE_lADOABII586PurnmzwAAAAND6eeT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14024304531",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T08:20:17Z"
    },
    {
      "event": "subscribed",
      "id": 14024304552,
      "node_id": "SE_lADOABII586PurnmzwAAAAND6eeo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14024304552",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T08:20:17Z"
    },
    {
      "event": "commented",
      "id": 2311917823,
      "node_id": "IC_kwDOABII586JzRD_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2311917823",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-27T08:42:05Z",
      "updated_at": "2024-08-27T08:42:05Z",
      "author_association": "MEMBER",
      "body": "> I was surprised Qt wasn't at least enabled by default.\r\n\r\nThe default build options were tailored to meet the needs of the majority of this repository's contributors.\r\n\r\n> > The \"auto\" value is no longer available; non-default values must be specified explicitly.\r\n> \r\n> I assume this is a CMake standard practice?\r\n\r\nIt is.\r\n\r\n> Or is there some other reason to not autodetect bdb/portmapping/qt/zmq?\r\n\r\nPackage autodetection can introduce unsolicited changes in the build configuration, which is considered suboptimal practice.\r\n\r\nFWIW, the \"AUTO\" value was implemented in the staging branch to ensure that the new system mirrors the old one. It was deleted in https://github.com/hebasto/bitcoin/pull/215/commits/4cd15f1c64537fc9964dcdb7ff763884ff4e9278.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2311917823",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2264222354,
      "node_id": "PRR_kwDOABII586G9UqS",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I haven't reviewed this exact series in detail, but I believe I reviewed it all as it passed through @heabsto's staging branch.\r\n\r\nQuickly tested this PR merged into master, with depends on Linux x86-64.\r\n\r\nWith the understanding that there will be a flurry of follow-up PRs to clean up some things requested here, along with the deletion of autotools:\r\n\r\nACK 41051290ab3b6c36312cec26a27f787cea9961b4. ",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2264222354",
      "submitted_at": "2024-08-27T18:55:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2265730991,
      "node_id": "PRR_kwDOABII586HDE-v",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\nGoing to merge this now. Non-exhaustive list of things that need fixing / following up:\r\n* Coverage builds seems to be broken: https://github.com/hebasto/bitcoin/issues/341\r\n    * It's not exactly clear what to do here (or exactly what's broken)\r\n    * We shouldn't just add more options (i.e something Clang specific) if the current options are broken / unused.\r\n* Missing fuzz targets from bad rebases: https://github.com/bitcoin/bitcoin/pull/30712.\r\n* Incorrect version number (still 27.x). https://github.com/bitcoin/bitcoin/pull/30729\r\n* Sporadic miscompiles/issues: https://github.com/hebasto/bitcoin/pull/340.\r\n    * Appears this code is actually all unused, so should be removed (along with the problem).\r\n* Lots of documentation.\r\n* Oss-fuzz switchover (and anything else that is doing nightly builds). https://github.com/google/oss-fuzz/pull/12419\r\n* Autotools removal (ideally today). https://github.com/bitcoin/bitcoin/pull/30664",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2265730991",
      "submitted_at": "2024-08-28T09:45:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "merged",
      "id": 14043774568,
      "node_id": "ME_lADOABII586PurnmzwAAAANFEv5o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14043774568",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "338bc2cd261ba3daf7fb494f8cb4a534762e292c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338bc2cd261ba3daf7fb494f8cb4a534762e292c",
      "created_at": "2024-08-28T09:51:36Z"
    },
    {
      "event": "closed",
      "id": 14043774640,
      "node_id": "CE_lADOABII586PurnmzwAAAANFEv6w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14043774640",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T09:51:36Z"
    },
    {
      "event": "commented",
      "id": 2314866592,
      "node_id": "IC_kwDOABII586J-g-g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2314866592",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T09:55:36Z",
      "updated_at": "2024-08-28T09:55:36Z",
      "author_association": "MEMBER",
      "body": "> Autotools removal (ideally today).\r\n\r\nI understand that it should be done quickly. However, given that some things don't work out-of-the-box anymore, such as clang coverage, it would be good to give a few more days (maybe a week) to give everyone a bit time to adapt their scripts, which there may be many of.\r\n\r\nThis also has the benefit that any quick follow-ups and bugfixes can still be tested for autotools parity.\r\n\r\nIn any case, I am not going to block the autotools removal, if others agree it should be done faster.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2314866592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "referenced",
      "id": 14044082425,
      "node_id": "REFE_lADOABII586PurnmzwAAAANFF7D5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14044082425",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e45913ea8b069c22ef247c47c3400bb757d77919",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e45913ea8b069c22ef247c47c3400bb757d77919",
      "created_at": "2024-08-28T10:14:08Z"
    },
    {
      "event": "commented",
      "id": 2315591429,
      "node_id": "IC_kwDOABII586KBR8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2315591429",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T14:53:15Z",
      "updated_at": "2024-08-28T14:53:15Z",
      "author_association": "MEMBER",
      "body": "ci regressions fixed in https://github.com/bitcoin/bitcoin/pull/30740",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2315591429",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "unsubscribed",
      "id": 14049315996,
      "node_id": "UE_lADOABII586PurnmzwAAAANFZ4yc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14049315996",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T15:43:48Z"
    },
    {
      "event": "unsubscribed",
      "id": 14049316642,
      "node_id": "UE_lADOABII586PurnmzwAAAANFZ48i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14049316642",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T15:43:51Z"
    },
    {
      "event": "reviewed",
      "id": 2266760272,
      "node_id": "PRR_kwDOABII586HHARQ",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2266760272",
      "submitted_at": "2024-08-28T16:29:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2267148876,
      "node_id": "PRR_kwDOABII586HIfJM",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2267148876",
      "submitted_at": "2024-08-28T19:58:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "head_ref_deleted",
      "id": 14052138768,
      "node_id": "HRDE_lADOABII586PurnmzwAAAANFkp8Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14052138768",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T20:07:32Z"
    },
    {
      "event": "unsubscribed",
      "id": 14054106459,
      "node_id": "UE_lADOABII586PurnmzwAAAANFsKVb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14054106459",
      "actor": {
        "login": "spacebear21",
        "id": 144076611,
        "node_id": "U_kgDOCJZvQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/144076611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/spacebear21",
        "html_url": "https://github.com/spacebear21",
        "followers_url": "https://api.github.com/users/spacebear21/followers",
        "following_url": "https://api.github.com/users/spacebear21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/spacebear21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/spacebear21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/spacebear21/subscriptions",
        "organizations_url": "https://api.github.com/users/spacebear21/orgs",
        "repos_url": "https://api.github.com/users/spacebear21/repos",
        "events_url": "https://api.github.com/users/spacebear21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/spacebear21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T00:18:46Z"
    },
    {
      "event": "referenced",
      "id": 14057894681,
      "node_id": "REFE_lADOABII586PurnmzwAAAANF6nMZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14057894681",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4ae3be772d06c1b56a2b7b62540e523c35d50339",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ae3be772d06c1b56a2b7b62540e523c35d50339",
      "created_at": "2024-08-29T08:33:58Z"
    },
    {
      "event": "commented",
      "id": 2320675750,
      "node_id": "IC_kwDOABII586KUrOm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2320675750",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T09:43:06Z",
      "updated_at": "2024-08-30T09:43:06Z",
      "author_association": "MEMBER",
      "body": "ci msan fuzz looks broken, see https://github.com/bitcoin/bitcoin/issues/30760",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2320675750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "reviewed",
      "id": 2275372899,
      "node_id": "PRR_kwDOABII586Hn29j",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Post-merge Tested ACK 41051290ab3b6c36312cec26a27f787cea9961b4\r\n\r\n\r\nTested on M2 Pro, Sonoma 14.1.1\r\n\r\nClang version 18.1.7\r\n\r\nCMake version 3.29.5\r\n\r\nConfiguration and compilation completed smoothly without any issues.\r\n\r\nStarted bitcoind without any issue and tested a few RPCs.\r\n\r\nI also ran unit tests and benchmarks, all ran smoothly.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2275372899",
      "submitted_at": "2024-09-02T11:24:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "reviewed",
      "id": 2245305890,
      "node_id": "PRR_kwDOABII586F1KYi",
      "url": null,
      "actor": null,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Submitting my review comments, now that this has been merged.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#pullrequestreview-2245305890",
      "submitted_at": "2024-09-03T15:32:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
    },
    {
      "event": "commented",
      "id": 2341480416,
      "node_id": "IC_kwDOABII586LkCfg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2341480416",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T16:53:50Z",
      "updated_at": "2024-09-10T16:54:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Are there release notes for cmake transition? Seems like the autoconf -> cmake mapping table https://gist.github.com/hebasto/2ef97d3a726bfce08ded9df07f7dab5e would be especially helpful to have in release notes to help users and packagers convert previous configurations to new ones.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2341480416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "labeled",
      "id": 14210830765,
      "node_id": "LE_lADOABII586PurnmzwAAAANPCBGt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14210830765",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T07:15:52Z",
      "label": {
        "name": "Needs release note",
        "color": "d2db6d"
      }
    },
    {
      "event": "referenced",
      "id": 14229659081,
      "node_id": "REFE_lADOABII586PurnmzwAAAANQJ13J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14229659081",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db8350b0e3f5c65281585fdaeba05432069f2152",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db8350b0e3f5c65281585fdaeba05432069f2152",
      "created_at": "2024-09-12T09:30:13Z"
    },
    {
      "event": "referenced",
      "id": 14232350205,
      "node_id": "REFE_lADOABII586PurnmzwAAAANQUG39",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14232350205",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bf0ee88c8d73910c759bd317a772949ce53fe2d6",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/bf0ee88c8d73910c759bd317a772949ce53fe2d6",
      "created_at": "2024-09-12T12:51:05Z"
    },
    {
      "event": "referenced",
      "id": 14232400020,
      "node_id": "REFE_lADOABII586PurnmzwAAAANQUTCU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14232400020",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e118dde75ad3a8e08051b4189e1e75c172a98043",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/e118dde75ad3a8e08051b4189e1e75c172a98043",
      "created_at": "2024-09-12T12:54:29Z"
    },
    {
      "event": "referenced",
      "id": 14251004301,
      "node_id": "REFE_lADOABII586PurnmzwAAAANRbRGN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14251004301",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "95560616fbab3ddca9d85980b7f73c8a816bc99e",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/95560616fbab3ddca9d85980b7f73c8a816bc99e",
      "created_at": "2024-09-13T15:55:47Z"
    },
    {
      "event": "referenced",
      "id": 14251053349,
      "node_id": "REFE_lADOABII586PurnmzwAAAANRbdEl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14251053349",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1d5b2406bb9ce619219a3b76608bd764a3b162c3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d5b2406bb9ce619219a3b76608bd764a3b162c3",
      "created_at": "2024-09-13T16:00:13Z"
    },
    {
      "event": "referenced",
      "id": 14288200397,
      "node_id": "REFE_lADOABII586PurnmzwAAAANTpKLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14288200397",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "70829c7278df173f779723f3d7938c2d42fd6b42",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/70829c7278df173f779723f3d7938c2d42fd6b42",
      "created_at": "2024-09-17T09:47:31Z"
    },
    {
      "event": "referenced",
      "id": 14293602082,
      "node_id": "REFE_lADOABII586PurnmzwAAAANT9w8i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14293602082",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4c412607a958866d72fc12355a7ef973503bf779",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/4c412607a958866d72fc12355a7ef973503bf779",
      "created_at": "2024-09-17T15:48:14Z"
    },
    {
      "event": "referenced",
      "id": 14294343955,
      "node_id": "REFE_lADOABII586PurnmzwAAAANUAmET",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14294343955",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "020646a0b50b9c5e2a1ee0644214c37979a98d31",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/020646a0b50b9c5e2a1ee0644214c37979a98d31",
      "created_at": "2024-09-17T16:47:35Z"
    },
    {
      "event": "referenced",
      "id": 14337535364,
      "node_id": "REFE_lADOABII586PurnmzwAAAANWlW2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14337535364",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "197aa249551ea7b2280b6e187d2ad5378687beff",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/197aa249551ea7b2280b6e187d2ad5378687beff",
      "created_at": "2024-09-20T09:59:24Z"
    },
    {
      "event": "referenced",
      "id": 14425074466,
      "node_id": "REFE_lADOABII586PurnmzwAAAANbzSsi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14425074466",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b6043d6e503bd8ef645cc57a31b355042757757a",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/b6043d6e503bd8ef645cc57a31b355042757757a",
      "created_at": "2024-09-27T03:57:58Z"
    },
    {
      "event": "referenced",
      "id": 14425087265,
      "node_id": "REFE_lADOABII586PurnmzwAAAANbzV0h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14425087265",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cab20854ad966b208f7d6a9095c4942ce4bb3c3f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/cab20854ad966b208f7d6a9095c4942ce4bb3c3f",
      "created_at": "2024-09-27T04:00:23Z"
    },
    {
      "event": "referenced",
      "id": 14425162163,
      "node_id": "REFE_lADOABII586PurnmzwAAAANbzoGz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14425162163",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec5338c480e8c74f27dde9a2c78deb382b1f3047",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/ec5338c480e8c74f27dde9a2c78deb382b1f3047",
      "created_at": "2024-09-27T04:14:14Z"
    },
    {
      "event": "referenced",
      "id": 14425162191,
      "node_id": "REFE_lADOABII586PurnmzwAAAANbzoHP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14425162191",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e92f57ad6ebab7e99543f118cd48fc90d14f178e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e92f57ad6ebab7e99543f118cd48fc90d14f178e",
      "created_at": "2024-09-27T04:14:15Z"
    },
    {
      "event": "referenced",
      "id": 14434463496,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXG8I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434463496",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d36534d800b5c44820f2723064685321b6dbe278",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/d36534d800b5c44820f2723064685321b6dbe278",
      "created_at": "2024-09-27T17:51:09Z"
    },
    {
      "event": "referenced",
      "id": 14434463540,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXG80",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434463540",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "03d6c1b6f1a6eba8ca69e7e45b3743459b22982f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/03d6c1b6f1a6eba8ca69e7e45b3743459b22982f",
      "created_at": "2024-09-27T17:51:09Z"
    },
    {
      "event": "referenced",
      "id": 14434468043,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXIDL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434468043",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c1ca6f2fa1b6410575aa89b3a05e82da0c10b9a7",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c1ca6f2fa1b6410575aa89b3a05e82da0c10b9a7",
      "created_at": "2024-09-27T17:51:37Z"
    },
    {
      "event": "referenced",
      "id": 14434468104,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXIEI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434468104",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4d22089a5cb556040e22d758d4b338cfd814b840",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4d22089a5cb556040e22d758d4b338cfd814b840",
      "created_at": "2024-09-27T17:51:38Z"
    },
    {
      "event": "referenced",
      "id": 14434478098,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXKgS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434478098",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a2046164467414cd04957f72f3582039f46e38b9",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/a2046164467414cd04957f72f3582039f46e38b9",
      "created_at": "2024-09-27T17:52:22Z"
    },
    {
      "event": "referenced",
      "id": 14434478147,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXKhD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434478147",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "24973ee34c5f0243ab38c05c064a81dcce6cb0a1",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/24973ee34c5f0243ab38c05c064a81dcce6cb0a1",
      "created_at": "2024-09-27T17:52:22Z"
    },
    {
      "event": "referenced",
      "id": 14434480688,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXLIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434480688",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a6e391d6bcd1d33e4de780a5a4b38f68fa5e7dfb",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/a6e391d6bcd1d33e4de780a5a4b38f68fa5e7dfb",
      "created_at": "2024-09-27T17:52:37Z"
    },
    {
      "event": "referenced",
      "id": 14434480736,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcXLJg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14434480736",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44883dd26e648abd793a9f72cd32d89921b26511",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/44883dd26e648abd793a9f72cd32d89921b26511",
      "created_at": "2024-09-27T17:52:38Z"
    },
    {
      "event": "referenced",
      "id": 14438471464,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcmZco",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14438471464",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2e970728be7f442713cf207955e48f9f0d061536",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/2e970728be7f442713cf207955e48f9f0d061536",
      "created_at": "2024-09-28T01:39:41Z"
    },
    {
      "event": "referenced",
      "id": 14438471480,
      "node_id": "REFE_lADOABII586PurnmzwAAAANcmZc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14438471480",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d4fd078ec923ecaa237dda9970fd7941b48e510",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/2d4fd078ec923ecaa237dda9970fd7941b48e510",
      "created_at": "2024-09-28T01:39:41Z"
    },
    {
      "event": "referenced",
      "id": 14474450325,
      "node_id": "REFE_lADOABII586PurnmzwAAAANevpWV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14474450325",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d46e16c023b55e2425a55fe3b370d77333fa90a8",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/d46e16c023b55e2425a55fe3b370d77333fa90a8",
      "created_at": "2024-10-01T14:46:39Z"
    },
    {
      "event": "referenced",
      "id": 14474450429,
      "node_id": "REFE_lADOABII586PurnmzwAAAANevpX9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14474450429",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "25d2816007629e5303bc2de7f1ee2d74ecc64072",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/25d2816007629e5303bc2de7f1ee2d74ecc64072",
      "created_at": "2024-10-01T14:46:39Z"
    },
    {
      "event": "referenced",
      "id": 14499186288,
      "node_id": "REFE_lADOABII586PurnmzwAAAANgOAZw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14499186288",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe127e795782796d21f499d453213b1346a728ce",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/fe127e795782796d21f499d453213b1346a728ce",
      "created_at": "2024-10-03T06:13:59Z"
    },
    {
      "event": "referenced",
      "id": 14499209527,
      "node_id": "REFE_lADOABII586PurnmzwAAAANgOGE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14499209527",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ba1309b717716aec389be7d770339466aa2fc11",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/5ba1309b717716aec389be7d770339466aa2fc11",
      "created_at": "2024-10-03T06:16:55Z"
    },
    {
      "event": "referenced",
      "id": 14499209571,
      "node_id": "REFE_lADOABII586PurnmzwAAAANgOGFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14499209571",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4f44750f9a1d5315d7340c127091a23490e24d06",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4f44750f9a1d5315d7340c127091a23490e24d06",
      "created_at": "2024-10-03T06:16:55Z"
    },
    {
      "event": "referenced",
      "id": 15110274575,
      "node_id": "REFE_lADOABII586PurnmzwAAAAOEpH4P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15110274575",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b934954ad10401d9f96d7e0f248e45c4dd7a7409",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b934954ad10401d9f96d7e0f248e45c4dd7a7409",
      "created_at": "2024-11-04T20:54:37Z"
    },
    {
      "event": "commented",
      "id": 2695318085,
      "node_id": "IC_kwDOABII586gp0pF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2695318085",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:39Z",
      "updated_at": "2025-03-03T19:14:39Z",
      "author_association": "MEMBER",
      "body": "Unsure if a release note was written, apologies if I missed it. @hebasto @theuni @fanquake could you add to https://github.com/bitcoin-core/bitcoin-devwiki/wiki/29.0-Release-Notes-draft?",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2695318085",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 16539533564,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPZ1UD8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533564",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:41Z"
    },
    {
      "event": "subscribed",
      "id": 16539533586,
      "node_id": "SE_lADOABII586PurnmzwAAAAPZ1UES",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533586",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:41Z"
    },
    {
      "event": "mentioned",
      "id": 16539533606,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPZ1UEm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533606",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:42Z"
    },
    {
      "event": "subscribed",
      "id": 16539533622,
      "node_id": "SE_lADOABII586PurnmzwAAAAPZ1UE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533622",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:42Z"
    },
    {
      "event": "mentioned",
      "id": 16539533632,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPZ1UFA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533632",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:42Z"
    },
    {
      "event": "subscribed",
      "id": 16539533646,
      "node_id": "SE_lADOABII586PurnmzwAAAAPZ1UFO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16539533646",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T19:14:42Z"
    },
    {
      "event": "commented",
      "id": 2705689094,
      "node_id": "IC_kwDOABII586hRYoG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2705689094",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:51Z",
      "updated_at": "2025-03-07T07:05:51Z",
      "author_association": "MEMBER",
      "body": "> Unsure if a release note was written, apologies if I missed it. @hebasto @theuni @fanquake could you add to https://github.com/bitcoin-core/bitcoin-devwiki/wiki/29.0-Release-Notes-draft?\r\n\r\nAdded.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2705689094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30454"
    },
    {
      "event": "mentioned",
      "id": 16627784770,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPfF9xC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784770",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:53Z"
    },
    {
      "event": "subscribed",
      "id": 16627784904,
      "node_id": "SE_lADOABII586PurnmzwAAAAPfF9zI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784904",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:54Z"
    },
    {
      "event": "mentioned",
      "id": 16627784916,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPfF9zU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784916",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:54Z"
    },
    {
      "event": "subscribed",
      "id": 16627784927,
      "node_id": "SE_lADOABII586PurnmzwAAAAPfF9zf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784927",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:54Z"
    },
    {
      "event": "mentioned",
      "id": 16627784935,
      "node_id": "MEE_lADOABII586PurnmzwAAAAPfF9zn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784935",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:54Z"
    },
    {
      "event": "subscribed",
      "id": 16627784943,
      "node_id": "SE_lADOABII586PurnmzwAAAAPfF9zv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16627784943",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T07:05:54Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679674217",
      "pull_request_review_id": 2180684965,
      "id": 1679674217,
      "node_id": "PRRC_kwDOABII585kHctp",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit ff368465a66298487a88d8da575f5251d094d687\r\n\r\nCould you remind me what's going on here, please? I assume these aren't needed because we're meant to be adding compile definitions to specific libs. But from what I can tell, we're not actually adding them to `sha256.cpp`? So... is this currently using an un-optimized sha2?\r\n\r\nGenerally I'd feel more comfortable turning these into opt-outs, I think, to avoid accidentally building without optims.\r\n\r\nFor the sake of review/sanity, I think for this commit it's worth documenting (in the commit message) exactly which defines are affected and where in CMake they've been added.",
      "created_at": "2024-07-16T15:52:41Z",
      "updated_at": "2024-07-16T15:52:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679674217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679674217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679703168",
      "pull_request_review_id": 2180732303,
      "id": 1679703168,
      "node_id": "PRRC_kwDOABII585kHjyA",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But from what I can tell, we're not actually adding them to sha256.cpp? So... is this currently using an un-optimized sha2?\r\n\r\nPlease note the `PUBLIC` keyword, which propagates the definition as a usage requirement:\r\nhttps://github.com/bitcoin/bitcoin/blob/2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5/src/crypto/CMakeLists.txt#L125\r\n\r\nand\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5/src/crypto/CMakeLists.txt#L128\r\n\r\nwhere that usage requirement is actually applied.\r\n\r\nThe same approach works for other definitions used in `src/crypto/sha256.cpp`.\r\n\r\n> For the sake of review/sanity, I think for this commit it's worth documenting (in the commit message) exactly which defines are affected and where in CMake they've been added.\r\n\r\nSure thing! I'll update the commit message during the next branch update.",
      "created_at": "2024-07-16T16:14:41Z",
      "updated_at": "2024-07-16T16:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679703168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679703168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712159",
      "pull_request_review_id": 2180746661,
      "id": 1679712159,
      "node_id": "PRRC_kwDOABII585kHl-f",
      "diff_hunk": "@@ -7,9 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_nowallet_libbitcoinkernel\n-export CI_IMAGE_NAME_TAG=\"docker.io/debian:bullseye\"\n-# Use minimum supported python3.9 and clang-16, see doc/dependencies.md\n+export CI_IMAGE_NAME_TAG=\"docker.io/ubuntu:24.04\"\n+# Use minimum supported python3.9 (or best-effort 3.12) and clang-16, see doc/dependencies.md",
      "path": "ci/test/00_setup_env_native_nowallet_libbitcoinkernel.sh",
      "position": null,
      "original_position": 7,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why not bookworm? https://packages.debian.org/bookworm/python3 (3.11)?",
      "created_at": "2024-07-16T16:21:55Z",
      "updated_at": "2024-07-16T16:21:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679712159",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 10,
      "start_side": "LEFT",
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712998",
      "pull_request_review_id": 2180748015,
      "id": 1679712998,
      "node_id": "PRRC_kwDOABII585kHmLm",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like these don't allow overriding/take into account user flags? i.e If I configure with `-DCMAKE_CXX_FLAGS_RELEASE=\"-march=armv8-a+nocrypto\"`, I'd expect the ARM SHA-NI check to fail, but it doesn't. Also doesn't seem to work with `APPEND_CXXFLAGS`, which should always be (globally) taken into account?",
      "created_at": "2024-07-16T16:22:34Z",
      "updated_at": "2024-07-16T16:22:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679712998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679712998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679842517",
      "pull_request_review_id": 2180957378,
      "id": 1679842517,
      "node_id": "PRRC_kwDOABII585kIFzV",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One can see that they are indeed disabled now in https://corecheck.dev/bitcoin/bitcoin/pulls/30454 (coverage report + benchmarks).\r\n\r\nShouldn't autotools be nuked in this pull request, assuming that cmake and autotools are apparently incompatible, as designed now?",
      "created_at": "2024-07-16T18:10:36Z",
      "updated_at": "2024-07-16T18:10:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1679842517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679842517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680665264",
      "pull_request_review_id": 2182285671,
      "id": 1680665264,
      "node_id": "PRRC_kwDOABII585kLOqw",
      "diff_hunk": "@@ -18,7 +18,8 @@ export PACKAGES=\"ninja-build\"\n export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n # _FORTIFY_SOURCE is not compatible with MSAN.\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,memory CPPFLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE -U_FORTIFY_SOURCE'\"\n+export BITCOIN_CONFIG=\"-DENABLE_FUZZ=ON -DSANITIZERS=fuzzer,memory -DCMAKE_CXX_FLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE' \\\n+-DAPPEND_CPPFLAGS='-U_FORTIFY_SOURCE'\"",
      "path": "ci/test/00_setup_env_native_fuzz_with_msan.sh",
      "position": null,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "CPP flag handling seems inconsistent throughout the CI changes, which is confusing. It'd be good to consistently put all CPPFLAGS into CPPFLAGS, rather than having them sometimes in CXXFLAGS, sometimes in (append) CPPFLAGS, and sometimes spread between the two, i.e here.",
      "created_at": "2024-07-17T08:39:20Z",
      "updated_at": "2024-07-17T08:39:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1680665264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1680665264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683279748",
      "pull_request_review_id": 2186539962,
      "id": 1683279748,
      "node_id": "PRRC_kwDOABII585kVM-E",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see https://github.com/hebasto/bitcoin/pull/269.",
      "created_at": "2024-07-18T18:06:10Z",
      "updated_at": "2024-07-18T18:06:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1683279748",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683279748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683411958",
      "pull_request_review_id": 2186752216,
      "id": 1683411958,
      "node_id": "PRRC_kwDOABII585kVtP2",
      "diff_hunk": "@@ -7,9 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_nowallet_libbitcoinkernel\n-export CI_IMAGE_NAME_TAG=\"docker.io/debian:bullseye\"\n-# Use minimum supported python3.9 and clang-16, see doc/dependencies.md\n+export CI_IMAGE_NAME_TAG=\"docker.io/ubuntu:24.04\"\n+# Use minimum supported python3.9 (or best-effort 3.12) and clang-16, see doc/dependencies.md",
      "path": "ci/test/00_setup_env_native_nowallet_libbitcoinkernel.sh",
      "position": null,
      "original_position": 7,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712159,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/hebasto/bitcoin/pull/270.",
      "created_at": "2024-07-18T19:59:46Z",
      "updated_at": "2024-07-18T19:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1683411958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683411958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 10,
      "start_side": "LEFT",
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684802528",
      "pull_request_review_id": 2188923226,
      "id": 1684802528,
      "node_id": "PRRC_kwDOABII585kbAvg",
      "diff_hunk": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=8da797c5f1644df1bffd84d10c1ae9836dc70d60\n+$(package)_version=003eb04d6d0029fd24a330ab63d5a9ba08cf240f",
      "path": "depends/packages/native_libmultiprocess.mk",
      "position": null,
      "original_position": 3,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like this can be bumped further now that https://github.com/chaincodelabs/libmultiprocess/pull/98 has been merged?",
      "created_at": "2024-07-19T18:26:38Z",
      "updated_at": "2024-07-19T18:26:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1684802528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684802528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685163279",
      "pull_request_review_id": 2189569755,
      "id": 1685163279,
      "node_id": "PRRC_kwDOABII585kcY0P",
      "diff_hunk": "@@ -6,6 +6,13 @@\n \n BOOST_AUTO_TEST_SUITE(compilerbug_tests)\n \n+// At least one test case is required to avoid the \"Test setup error: no test\n+// cases matching filter or all test cases were disabled\" errror.\n+BOOST_AUTO_TEST_CASE(dummy)\n+{\n+    BOOST_CHECK(true);\n+}\n+",
      "path": "src/test/compilerbug_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This diff will gone after https://github.com/hebasto/bitcoin/pull/272.",
      "created_at": "2024-07-20T00:02:19Z",
      "updated_at": "2024-07-20T00:02:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1685163279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685163279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685289194",
      "pull_request_review_id": 2189780844,
      "id": 1685289194,
      "node_id": "PRRC_kwDOABII585kc3jq",
      "diff_hunk": "@@ -18,7 +18,8 @@ export PACKAGES=\"ninja-build\"\n export DEP_OPTS=\"DEBUG=1 NO_BDB=1 NO_QT=1 CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n # _FORTIFY_SOURCE is not compatible with MSAN.\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,memory CPPFLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE -U_FORTIFY_SOURCE'\"\n+export BITCOIN_CONFIG=\"-DENABLE_FUZZ=ON -DSANITIZERS=fuzzer,memory -DCMAKE_CXX_FLAGS='-DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE' \\\n+-DAPPEND_CPPFLAGS='-U_FORTIFY_SOURCE'\"",
      "path": "ci/test/00_setup_env_native_fuzz_with_msan.sh",
      "position": null,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1680665264,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed in https://github.com/hebasto/bitcoin/pull/273.",
      "created_at": "2024-07-20T07:05:31Z",
      "updated_at": "2024-07-20T07:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1685289194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685289194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688752764",
      "pull_request_review_id": 2195131612,
      "id": 1688752764,
      "node_id": "PRRC_kwDOABII585kqFJ8",
      "diff_hunk": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=8da797c5f1644df1bffd84d10c1ae9836dc70d60\n+$(package)_version=003eb04d6d0029fd24a330ab63d5a9ba08cf240f",
      "path": "depends/packages/native_libmultiprocess.mk",
      "position": null,
      "original_position": 3,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "4883197abc63aedbc395f37f6d2aded5db5270aa",
      "in_reply_to_id": 1684802528,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Bumped even further in https://github.com/bitcoin/bitcoin/pull/30513 :)",
      "created_at": "2024-07-23T21:31:53Z",
      "updated_at": "2024-07-23T21:31:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1688752764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688752764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688758712",
      "pull_request_review_id": 2195141142,
      "id": 1688758712,
      "node_id": "PRRC_kwDOABII585kqGm4",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712998,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cross-posted in https://github.com/hebasto/bitcoin/issues/279 to make tracking easier.",
      "created_at": "2024-07-23T21:39:23Z",
      "updated_at": "2024-07-23T21:39:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1688758712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688758712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689974792",
      "pull_request_review_id": 2196999857,
      "id": 1689974792,
      "node_id": "PRRC_kwDOABII585kuvgI",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@theuni  @maflcko \r\n\r\nCan you confirm please that the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2248232775) resolved this issue?",
      "created_at": "2024-07-24T14:58:06Z",
      "updated_at": "2024-07-24T14:58:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1689974792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689974792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690941661",
      "pull_request_review_id": 2198509560,
      "id": 1690941661,
      "node_id": "PRRC_kwDOABII585kybjd",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again",
      "created_at": "2024-07-25T07:17:44Z",
      "updated_at": "2024-07-25T07:17:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690941661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690941661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690979665",
      "pull_request_review_id": 2198548041,
      "id": 1690979665,
      "node_id": "PRRC_kwDOABII585kyk1R",
      "diff_hunk": "@@ -19,11 +19,16 @@ else\n fi\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"\n+export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"",
      "path": "ci/test/00_setup_env_native_asan.sh",
      "position": 1,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note to myself: Could split this up",
      "created_at": "2024-07-25T07:34:54Z",
      "updated_at": "2024-07-25T07:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690979665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690979665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690990701",
      "pull_request_review_id": 2198548041,
      "id": 1690990701,
      "node_id": "PRRC_kwDOABII585kynht",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The rename could be split out and merged ahead?",
      "created_at": "2024-07-25T07:42:02Z",
      "updated_at": "2024-07-25T07:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1690990701",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1690990701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691143911",
      "pull_request_review_id": 2198805225,
      "id": 1691143911,
      "node_id": "PRRC_kwDOABII585kzM7n",
      "diff_hunk": "@@ -19,11 +19,16 @@ else\n fi\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"\n+export PACKAGES=\"systemtap-sdt-dev clang-18 llvm-18 libclang-rt-18-dev python3-zmq qtbase5-dev qttools5-dev qttools5-dev-tools libevent-dev libboost-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev ${BPFCC_PACKAGE}\"",
      "path": "ci/test/00_setup_env_native_asan.sh",
      "position": 1,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690979665,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/30522",
      "created_at": "2024-07-25T09:32:53Z",
      "updated_at": "2024-07-25T09:32:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691143911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691143911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691182478",
      "pull_request_review_id": 2198866489,
      "id": 1691182478,
      "node_id": "PRRC_kwDOABII585kzWWO",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690990701,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~Done in https://github.com/bitcoin/bitcoin/pull/30523.~\r\n\r\nSee https://github.com/hebasto/bitcoin/pull/284.",
      "created_at": "2024-07-25T09:58:52Z",
      "updated_at": "2024-07-25T15:58:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691182478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691182478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691754532",
      "pull_request_review_id": 2199783458,
      "id": 1691754532,
      "node_id": "PRRC_kwDOABII585k1iAk",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again\r\n\r\nIt is up now :)",
      "created_at": "2024-07-25T16:14:12Z",
      "updated_at": "2024-07-25T16:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1691754532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691754532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698503517",
      "pull_request_review_id": 2210160056,
      "id": 1698503517,
      "node_id": "PRRC_kwDOABII585lPRtd",
      "diff_hunk": "@@ -0,0 +1,129 @@\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if(NOT MSVC)\n+  include(CheckSourceCompilesAndLinks)\n+\n+  # Check for SSE4.1 intrinsics.\n+  set(SSE41_CXXFLAGS -msse4.1)\n+  check_cxx_source_compiles_with_flags(\"${SSE41_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i l = _mm_set1_epi32(0);\n+      return _mm_extract_epi32(l, 3);\n+    }\n+    \" HAVE_SSE41\n+  )\n+\n+  # Check for AVX2 intrinsics.\n+  set(AVX2_CXXFLAGS -mavx -mavx2)\n+  check_cxx_source_compiles_with_flags(\"${AVX2_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m256i l = _mm256_set1_epi32(0);\n+      return _mm256_extract_epi32(l, 7);\n+    }\n+    \" HAVE_AVX2\n+  )\n+\n+  # Check for x86 SHA-NI intrinsics.\n+  set(X86_SHANI_CXXFLAGS -msse4 -msha)\n+  check_cxx_source_compiles_with_flags(\"${X86_SHANI_CXXFLAGS}\" \"\n+    #include <immintrin.h>\n+\n+    int main()\n+    {\n+      __m128i i = _mm_set1_epi32(0);\n+      __m128i j = _mm_set1_epi32(1);\n+      __m128i k = _mm_set1_epi32(2);\n+      return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, j, k), 0);\n+    }\n+    \" HAVE_X86_SHANI\n+  )\n+\n+  # Check for ARMv8 SHA-NI intrinsics.\n+  set(ARM_SHANI_CXXFLAGS -march=armv8-a+crypto)",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 50,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "2b7c0f4fdb81ec1cf0579fa71b37f56672934ab5",
      "in_reply_to_id": 1679712998,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "With the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863), one can configure for such a use case with `-DAPPEND_CXXFLAGS=\"-march=armv8-a+nocrypto\"`.",
      "created_at": "2024-07-31T13:22:50Z",
      "updated_at": "2024-07-31T13:22:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698503517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698503517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698507747",
      "pull_request_review_id": 2210167356,
      "id": 1698507747,
      "node_id": "PRRC_kwDOABII585lPSvj",
      "diff_hunk": "@@ -58,7 +54,7 @@ For more information, see [SDK Extraction](../contrib/macdeploy/README.md#sdk-ex\n \n #### For Win64 cross compilation\n \n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+- see [build-windows-mingw.md](../doc/build-windows-mingw.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)",
      "path": "depends/README.md",
      "position": null,
      "original_position": 28,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "dcd411eba701808519adf72328c19597fd5a187c",
      "in_reply_to_id": 1690990701,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It has not been an issue since the recent [push](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2260498863).",
      "created_at": "2024-07-31T13:25:27Z",
      "updated_at": "2024-07-31T13:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698507747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698507747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698521517",
      "pull_request_review_id": 2210190130,
      "id": 1698521517,
      "node_id": "PRRC_kwDOABII585lPWGt",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Not sure about listing the required deps from the native guide again. Maybe native depends install instructions can be moved to native guide (`./doc/build-openbsd.md`)?",
      "created_at": "2024-07-31T13:34:13Z",
      "updated_at": "2024-07-31T13:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698521517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698521517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698522521",
      "pull_request_review_id": 2210190130,
      "id": 1698522521,
      "node_id": "PRRC_kwDOABII585lPWWZ",
      "diff_hunk": "@@ -41,7 +41,7 @@ The following are developer notes on how to build Bitcoin Core on your native pl\n - [Dependencies](dependencies.md)\n - [macOS Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-windows.md)",
      "path": "doc/README.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "why remove the link?",
      "created_at": "2024-07-31T13:34:52Z",
      "updated_at": "2024-07-31T13:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698522521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698522521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698563756",
      "pull_request_review_id": 2210259782,
      "id": 1698563756,
      "node_id": "PRRC_kwDOABII585lPgas",
      "diff_hunk": "@@ -41,7 +41,7 @@ The following are developer notes on how to build Bitcoin Core on your native pl\n - [Dependencies](dependencies.md)\n - [macOS Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-windows.md)",
      "path": "doc/README.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698522521,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This list description mentions \"on your native platform\". Does it mean \"to build natively\"? If so, then `build-windows.md` doesn't belong to this list. If I misunderstood the description, let me know.",
      "created_at": "2024-07-31T14:00:01Z",
      "updated_at": "2024-07-31T14:00:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698563756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698563756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698595899",
      "pull_request_review_id": 2210311726,
      "id": 1698595899,
      "node_id": "PRRC_kwDOABII585lPoQ7",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Was this removed because this is an issue for CMake as well?",
      "created_at": "2024-07-31T14:15:12Z",
      "updated_at": "2024-07-31T14:15:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698595899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698595899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598503",
      "pull_request_review_id": 2210316127,
      "id": 1698598503,
      "node_id": "PRRC_kwDOABII585lPo5n",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "None of these package are required for the native build with CMake.",
      "created_at": "2024-07-31T14:16:53Z",
      "updated_at": "2024-07-31T14:16:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698598503",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698619942",
      "pull_request_review_id": 2210350614,
      "id": 1698619942,
      "node_id": "PRRC_kwDOABII585lPuIm",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> None of these package are required for the native build with CMake.\r\n\r\nCorrect. I was mostly trying to say that packages required for a native build are not listed here again as a dependency for a native (non-cross) `depends` build. Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages? In any case you are removing `autoconf automake` and `gmake` from the instructions in `doc/build-openbsd.md`, so overall it seems a bit inconsistent?",
      "created_at": "2024-07-31T14:30:04Z",
      "updated_at": "2024-07-31T14:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698619942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698619942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698631089",
      "pull_request_review_id": 2210369139,
      "id": 1698631089,
      "node_id": "PRRC_kwDOABII585lPw2x",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages? In any case you are removing `autoconf automake` and `gmake` from the instructions in `doc/build-openbsd.md`, so overall it seems a bit inconsistent?\r\n\r\n~I agree that this issue has to be resolved in `depends/README.md`.~",
      "created_at": "2024-07-31T14:36:38Z",
      "updated_at": "2024-08-01T00:13:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698631089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698631089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698675755",
      "pull_request_review_id": 2210441463,
      "id": 1698675755,
      "node_id": "PRRC_kwDOABII585lP7wr",
      "diff_hunk": "@@ -2,8 +2,6 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/crypto/sha256.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ff368465a66298487a88d8da575f5251d094d687",
      "in_reply_to_id": 1679674217,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Hmm https://corecheck.dev/bitcoin/bitcoin/pulls/30454 is down again\r\n> \r\n> It is up now :)\r\n\r\nNice. The output there looks better now. But I haven't yet tried locally.",
      "created_at": "2024-07-31T15:02:57Z",
      "updated_at": "2024-07-31T15:02:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1698675755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698675755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699235049",
      "pull_request_review_id": 2211331244,
      "id": 1699235049,
      "node_id": "PRRC_kwDOABII585lSETp",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Otherwise, `autoconf automake` should be listed here as well, because they are still required for some `depends` packages?\r\n\r\nApparently, they are not. Thanks to the recent migration of dependency packages to CMake.\r\n\r\ncc @theStack ",
      "created_at": "2024-08-01T00:13:47Z",
      "updated_at": "2024-08-01T00:13:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699235049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699235049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699542457",
      "pull_request_review_id": 2211806605,
      "id": 1699542457,
      "node_id": "PRRC_kwDOABII585lTPW5",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Apparently, they are not. \n\nSQLite still uses Autotools?",
      "created_at": "2024-08-01T07:00:50Z",
      "updated_at": "2024-08-01T07:00:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699542457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699542457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699559000",
      "pull_request_review_id": 2211832683,
      "id": 1699559000,
      "node_id": "PRRC_kwDOABII585lTTZY",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, I see. I just completed on current master a depends on Linux build without any of `autoconf automake autotools-dev libtool`. Possibly they could be removed from the `Common` section above, but that seems unrelated to this pull request.\r\n\r\n\r\n\r\nJust to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n",
      "created_at": "2024-08-01T07:15:00Z",
      "updated_at": "2024-08-01T07:15:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699559000",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699559000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699867091",
      "pull_request_review_id": 2212271726,
      "id": 1699867091,
      "node_id": "PRRC_kwDOABII585lUenT",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Just to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n\r\nYes, it is. CMake can work with any flavour of Make, so GNU Make is not longer a requirement.",
      "created_at": "2024-08-01T09:52:19Z",
      "updated_at": "2024-08-01T09:52:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699867091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699867091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699889168",
      "pull_request_review_id": 2212309592,
      "id": 1699889168,
      "node_id": "PRRC_kwDOABII585lUkAQ",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Apparently, they are not.\r\n> \r\n> SQLite still uses Autotools?\r\n\r\nThe `sqlite-autoconf-3380500.tar.gz` archive contains pre-built `configure` script and `Makefile.in` file. Therefore, Autotools is not required on our side.",
      "created_at": "2024-08-01T10:08:03Z",
      "updated_at": "2024-08-01T10:08:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699889168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699889168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699904124",
      "pull_request_review_id": 2212334647,
      "id": 1699904124,
      "node_id": "PRRC_kwDOABII585lUnp8",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Autotools might not be used currently for sqlite (libtool still is), but we can't rule out entirely that it wont be used going forward. For example, if we need to regenerate the configure script for some reason. This has happened in the past, for example, something like 6897c4bdf51a4aa74320ebfffa9467db14670109. This might be very unlikely here, but not impossible. \r\n\r\nNote that this would also breakdown, if we were to shift to building from source (requiring us to generate the build scripts oursevles), rather than using the tarballs with everything pre-generated (and unverifiable/opauge). (In this case it'd also be all of the Linux GUI packages that'd require it).",
      "created_at": "2024-08-01T10:19:20Z",
      "updated_at": "2024-08-01T10:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699904124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699904124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699912337",
      "pull_request_review_id": 2212347510,
      "id": 1699912337,
      "node_id": "PRRC_kwDOABII585lUpqR",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right. Such a possibility does exist. However, instructing the user to install packages that are not currently required does not seem compelling to me.",
      "created_at": "2024-08-01T10:26:08Z",
      "updated_at": "2024-08-01T10:26:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699912337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699912337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699938667",
      "pull_request_review_id": 2212390975,
      "id": 1699938667,
      "node_id": "PRRC_kwDOABII585lUwFr",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Autotools might not be used currently for sqlite (libtool still is)...\r\n\r\nThe tarball also contains a pre-built `ltmain.sh` script, so `libtool` package installation is not needed.",
      "created_at": "2024-08-01T10:48:34Z",
      "updated_at": "2024-08-01T10:48:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699938667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699938667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699943513",
      "pull_request_review_id": 2212398991,
      "id": 1699943513,
      "node_id": "PRRC_kwDOABII585lUxRZ",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Just to clarify, removing `gmake` from the instructions in `doc/build-openbsd.md` is also intentional in this pull request?\r\n> \r\n> Yes, it is. CMake can work with any flavour of Make, so GNU Make is not longer a requirement.\r\n\r\nBut the document still refers to `gmake`, no? For example line 47 of `doc/build-openbsd.md` says:\r\n\r\n```\r\ngmake -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1\r\n```\r\n\r\nMaybe `gmake` is installed as part of `cmake`, but I haven't checked that.\r\n\r\nJust a nit in any case.",
      "created_at": "2024-08-01T10:53:03Z",
      "updated_at": "2024-08-01T10:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699943513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699943513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699965761",
      "pull_request_review_id": 2212434653,
      "id": 1699965761,
      "node_id": "PRRC_kwDOABII585lU2tB",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This PR does not change how packages are built in depends. Therefore, GNU Make is still a requirement to build depends. But it is not for the main build system.",
      "created_at": "2024-08-01T11:10:21Z",
      "updated_at": "2024-08-01T11:11:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699965761",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699965761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699975633",
      "pull_request_review_id": 2212451427,
      "id": 1699975633,
      "node_id": "PRRC_kwDOABII585lU5HR",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But the document still refers to `gmake`, no? For example line 47 of `doc/build-openbsd.md` says:\r\n> \r\n> ```\r\n> gmake -C depends NO_BOOST=1 NO_LIBEVENT=1 NO_QT=1 NO_SQLITE=1 NO_NATPMP=1 NO_UPNP=1 NO_ZMQ=1 NO_USDT=1\r\n> ```\r\n\r\nThe line above refers to `depends/README.md`, where the required build dependencies, including `gmake`, are suggested to be installed.",
      "created_at": "2024-08-01T11:19:05Z",
      "updated_at": "2024-08-01T11:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1699975633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699975633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700280376",
      "pull_request_review_id": 2212977310,
      "id": 1700280376,
      "node_id": "PRRC_kwDOABII585lWDg4",
      "diff_hunk": "@@ -90,9 +86,13 @@ For linux S390X cross compilation:\n \n     pkg install bash\n \n+### Install the required dependencies: NetBSD\n+\n+    pkgin install bash gmake\n+\n ### Install the required dependencies: OpenBSD\n \n-    pkg_add bash gtar\n+    pkg_add bash gmake gtar",
      "path": "depends/README.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698521517,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolving this conversation based \"thumbs up\" emoji.",
      "created_at": "2024-08-01T14:13:49Z",
      "updated_at": "2024-08-01T14:13:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1700280376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700280376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702357194",
      "pull_request_review_id": 2216461788,
      "id": 1702357194,
      "node_id": "PRRC_kwDOABII585ld-jK",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698595899,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The documentation has been amended in https://github.com/hebasto/bitcoin/pull/299.",
      "created_at": "2024-08-02T21:56:59Z",
      "updated_at": "2024-08-02T21:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1702357194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702357194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703708721",
      "pull_request_review_id": 2208656646,
      "id": 1703708721,
      "node_id": "PRRC_kwDOABII585ljIgx",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is the intent to handle any cross-compilation to Apple platforms from non-Apple hosts, or specifically cross-compilation to macOS?\r\nIs this the same as\r\n```\r\nCMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_APPLE\r\n```\r\n?",
      "created_at": "2024-08-05T08:07:30Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703708721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703708721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703721288",
      "pull_request_review_id": 2208656646,
      "id": 1703721288,
      "node_id": "PRRC_kwDOABII585ljLlI",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "When is `CMAKE_SOURCE_DIR`, `PROJECT_SOURCE_DIR` and `CMAKE_CURRENT_SOURCE_DIR` used here?\r\nI'm not an expert in this area, but browsing a bit reveals that others were [often bitten](https://lesleylai.info/en/cmake_src_directory) by the differences among these.\r\nIgnore, if the question doesn't make sense in this case...",
      "created_at": "2024-08-05T08:17:53Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703721288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703721288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703730116",
      "pull_request_review_id": 2208656646,
      "id": 1703730116,
      "node_id": "PRRC_kwDOABII585ljNvE",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(indent_message header content indent_num)\n+  if(indent_num GREATER 0)\n+    string(REPEAT \" \" ${indent_num} indentation)\n+    string(REPEAT \".\" ${indent_num} tail)\n+    string(REGEX REPLACE \"${tail}$\" \"\" header \"${header}\")\n+  endif()\n+  message(\"${indentation}${header} ${content}\")",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 13,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I noticed that we're not using the `message(STATUS ` construct in this file, was that deliberate?",
      "created_at": "2024-08-05T08:24:50Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703730116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703730116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703731262",
      "pull_request_review_id": 2208656646,
      "id": 1703731262,
      "node_id": "PRRC_kwDOABII585ljOA-",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: here we have the current year, would it make sense to change all of them to 2024 as a slightly better documentation of historical changes?",
      "created_at": "2024-08-05T08:25:44Z",
      "updated_at": "2024-08-05T08:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703731262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703731262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703840960",
      "pull_request_review_id": 2218531027,
      "id": 1703840960,
      "node_id": "PRRC_kwDOABII585ljozA",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 1,
      "original_position": 1,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703731262,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you mean the \"2023\" instances in the copyright headers, they reflect the actual time when the code was written.",
      "created_at": "2024-08-05T09:37:26Z",
      "updated_at": "2024-08-05T09:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703840960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703840960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703850707",
      "pull_request_review_id": 2218548240,
      "id": 1703850707,
      "node_id": "PRRC_kwDOABII585ljrLT",
      "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright (c) 2024-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(indent_message header content indent_num)\n+  if(indent_num GREATER 0)\n+    string(REPEAT \" \" ${indent_num} indentation)\n+    string(REPEAT \".\" ${indent_num} tail)\n+    string(REGEX REPLACE \"${tail}$\" \"\" header \"${header}\")\n+  endif()\n+  message(\"${indentation}${header} ${content}\")",
      "path": "cmake/module/FlagsSummary.cmake",
      "position": 13,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703730116,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "From the `message` command [docs](https://cmake.org/cmake/help/latest/command/message.html):\r\n> The CMake command-line tool displays `STATUS` ... messages on stdout with the message preceded by two hyphens and a space.\r\n\r\nI'm afraid that two hyphens in every line could clutter the summary.",
      "created_at": "2024-08-05T09:44:38Z",
      "updated_at": "2024-08-05T09:44:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703850707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703850707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703859387",
      "pull_request_review_id": 2218563876,
      "id": 1703859387,
      "node_id": "PRRC_kwDOABII585ljtS7",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703708721,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is the intent to handle any cross-compilation to Apple platforms from non-Apple hosts, or specifically cross-compilation to macOS?\r\n\r\nThe former.\r\n\r\n> Is this the same as\r\n> \r\n> ```\r\n> CMAKE_CROSSCOMPILING AND NOT CMAKE_HOST_APPLE\r\n> ```\r\n> \r\n> ?\r\n\r\nIn the context of a toolchain file, it is not. The `CMAKE_CROSSCOMPILING` variable is well-defined after a `project()` call, but not within a toolchain file.",
      "created_at": "2024-08-05T09:51:22Z",
      "updated_at": "2024-08-05T09:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703859387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703859387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703885526",
      "pull_request_review_id": 2218608990,
      "id": 1703885526,
      "node_id": "PRRC_kwDOABII585ljzrW",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/301. Your review is welcome :)",
      "created_at": "2024-08-05T10:12:59Z",
      "updated_at": "2024-08-05T10:12:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703885526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703885526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703899727",
      "pull_request_review_id": 2218631348,
      "id": 1703899727,
      "node_id": "PRRC_kwDOABII585lj3JP",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\r\n\r\nWhy is this (`-fvisibility-inlines-hidden`) being added, if we don't use it in master?",
      "created_at": "2024-08-05T10:25:00Z",
      "updated_at": "2024-08-05T10:25:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703899727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703899727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703923518",
      "pull_request_review_id": 2218670508,
      "id": 1703923518,
      "node_id": "PRRC_kwDOABII585lj88-",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed in https://github.com/hebasto/bitcoin/pull/303.",
      "created_at": "2024-08-05T10:45:42Z",
      "updated_at": "2024-08-05T10:45:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703923518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703923518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703933036",
      "pull_request_review_id": 2218686978,
      "id": 1703933036,
      "node_id": "PRRC_kwDOABII585lj_Rs",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# This file is expected to be highly volatile and may still change substantially.\n+\n+# If CMAKE_SYSTEM_NAME is set within a toolchain file, CMake will also\n+# set CMAKE_CROSSCOMPILING to TRUE, even if CMAKE_SYSTEM_NAME matches\n+# CMAKE_HOST_SYSTEM_NAME. To avoid potential misconfiguration of CMake,\n+# it is best not to touch CMAKE_SYSTEM_NAME unless cross-compiling is\n+# intended.\n+if(@depends_crosscompiling@)\n+  set(CMAKE_SYSTEM_NAME @host_system_name@)\n+  set(CMAKE_SYSTEM_VERSION @host_system_version@)\n+  set(CMAKE_SYSTEM_PROCESSOR @host_arch@)\n+endif()\n+\n+function(split_compiler_launcher env_compiler launcher compiler)\n+  set(${launcher})\n+  list(GET ${env_compiler} 0 start_token)\n+  if(start_token STREQUAL \"env\")\n+    set(${compiler})\n+    set(env_arg_parsing TRUE)\n+    foreach(token IN LISTS ${env_compiler})\n+      if(env_arg_parsing)\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing FALSE)\n+        continue()\n+      elseif(token STREQUAL \"-u\")\n+        list(APPEND ${launcher} ${token})\n+        set(env_arg_parsing TRUE)\n+        continue()\n+      endif()\n+      list(APPEND ${compiler} ${token})\n+    endforeach()\n+  else()\n+    set(${compiler} ${${env_compiler}})\n+  endif()\n+  set(${launcher} ${${launcher}} PARENT_SCOPE)\n+  set(${compiler} ${${compiler}} PARENT_SCOPE)\n+endfunction()\n+\n+if(NOT DEFINED CMAKE_C_FLAGS_INIT)\n+  set(CMAKE_C_FLAGS_INIT \"@CFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT \"@CFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_C_FLAGS_DEBUG_INIT)\n+  set(CMAKE_C_FLAGS_DEBUG_INIT \"@CFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_C_COMPILER)\n+  set(DEPENDS_C_COMPILER_WITH_LAUNCHER @CC@)\n+  split_compiler_launcher(DEPENDS_C_COMPILER_WITH_LAUNCHER CMAKE_C_COMPILER_LAUNCHER CMAKE_C_COMPILER)\n+  set(CMAKE_C_LINKER_LAUNCHER ${CMAKE_C_COMPILER_LAUNCHER})\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_FLAGS_INIT)\n+  set(CMAKE_CXX_FLAGS_INIT \"@CXXFLAGS@\")\n+  set(CMAKE_OBJCXX_FLAGS_INIT \"@CXXFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+  set(CMAKE_OBJCXX_FLAGS_RELWITHDEBINFO_INIT \"@CXXFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT)\n+  set(CMAKE_CXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+  set(CMAKE_OBJCXX_FLAGS_DEBUG_INIT \"@CXXFLAGS_DEBUG@\")\n+endif()\n+\n+if(NOT DEFINED CMAKE_CXX_COMPILER)\n+  set(DEPENDS_CXX_COMPILER_WITH_LAUNCHER @CXX@)\n+  split_compiler_launcher(DEPENDS_CXX_COMPILER_WITH_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CXX_COMPILER)\n+  set(CMAKE_CXX_LINKER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+\n+  set(CMAKE_OBJCXX_COMPILER ${CMAKE_CXX_COMPILER})\n+  set(CMAKE_OBJCXX_COMPILER_LAUNCHER ${CMAKE_CXX_COMPILER_LAUNCHER})\n+  set(CMAKE_OBJCXX_LINKER_LAUNCHER ${CMAKE_CXX_LINKER_LAUNCHER})\n+endif()\n+\n+# The DEPENDS_COMPILE_DEFINITIONS* variables are to be treated as lists.\n+set(DEPENDS_COMPILE_DEFINITIONS @CPPFLAGS@)\n+set(DEPENDS_COMPILE_DEFINITIONS_RELWITHDEBINFO @CPPFLAGS_RELEASE@)\n+set(DEPENDS_COMPILE_DEFINITIONS_DEBUG @CPPFLAGS_DEBUG@)\n+\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_INIT \"@LDFLAGS@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT \"@LDFLAGS_RELEASE@\")\n+endif()\n+if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT)\n+  set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT \"@LDFLAGS_DEBUG@\")\n+endif()\n+\n+set(CMAKE_AR \"@AR@\")\n+set(CMAKE_RANLIB \"@RANLIB@\")\n+set(CMAKE_STRIP \"@STRIP@\")\n+set(CMAKE_OBJCOPY \"@OBJCOPY@\")\n+set(CMAKE_OBJDUMP \"@OBJDUMP@\")\n+\n+# Using our own built dependencies should not be\n+# affected by a potentially random environment.\n+set(CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH OFF)\n+\n+set(CMAKE_FIND_ROOT_PATH \"@depends_prefix@\")\n+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n+set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n+set(QT_TRANSLATIONS_DIR \"@depends_prefix@/translations\")\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)",
      "path": "depends/toolchain.cmake.in",
      "position": 82,
      "original_position": 114,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703708721,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks",
      "created_at": "2024-08-05T10:54:10Z",
      "updated_at": "2024-08-05T10:54:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703933036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703933036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703937142",
      "pull_request_review_id": 2218693507,
      "id": 1703937142,
      "node_id": "PRRC_kwDOABII585lkAR2",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, ACK f9b48505d6beb2c4e388e275d89bad77a14de2bb",
      "created_at": "2024-08-05T10:57:47Z",
      "updated_at": "2024-08-05T10:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1703937142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703937142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704182733",
      "pull_request_review_id": 2219112695,
      "id": 1704182733,
      "node_id": "PRRC_kwDOABII585lk8PN",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't this be stopping the build if this check fails and `REDUCE_EXPORTS` is used (same as master)? Although, given they are unused, could be better to just remove entirely, rather than porting and not matching the behaviour. I'll open a PR.",
      "created_at": "2024-08-05T14:09:27Z",
      "updated_at": "2024-08-05T14:09:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704182733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704182733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704186023",
      "pull_request_review_id": 2219118263,
      "id": 1704186023,
      "node_id": "PRRC_kwDOABII585lk9Cn",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704182733,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See #30590.",
      "created_at": "2024-08-05T14:11:45Z",
      "updated_at": "2024-08-05T14:11:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704186023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704186023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704343886",
      "pull_request_review_id": 2219380157,
      "id": 1704343886,
      "node_id": "PRRC_kwDOABII585lljlO",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, I should've caught this in review. I wonder why we don't use this in master? IIRC there was some issue with boost visibility years ago that wouldn't be relevant anymore. Wonder if that was it?",
      "created_at": "2024-08-05T16:02:42Z",
      "updated_at": "2024-08-05T16:02:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704343886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704343886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704345827",
      "pull_request_review_id": 2219383263,
      "id": 1704345827,
      "node_id": "PRRC_kwDOABII585llkDj",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64\n+  )\n+endif()\n+\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+  target_compile_definitions(core_interface INTERFACE\n+    MAC_OSX\n+    OBJC_OLD_DISPATCH_PROTOTYPES=0\n+  )\n+  # These flags are specific to ld64, and may cause issues with other linkers.\n+  # For example: GNU ld will interpret -dead_strip as -de and then try and use\n+  # \"ad_strip\" as the symbol for the entry point.\n+  try_append_linker_flag(\"-Wl,-dead_strip\" TARGET core_interface)\n+  try_append_linker_flag(\"-Wl,-dead_strip_dylibs\" TARGET core_interface)\n+  if(CMAKE_HOST_APPLE)\n+    try_append_linker_flag(\"-Wl,-headerpad_max_install_names\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+set(THREADS_PREFER_PTHREAD_FLAG ON)\n+find_package(Threads REQUIRED)\n+target_link_libraries(core_interface INTERFACE\n+  Threads::Threads\n+)\n+\n+add_library(sanitize_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE sanitize_interface)\n+if(SANITIZERS)\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET sanitize_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+    SKIP_LINK\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  try_append_linker_flag(\"-fsanitize=${SANITIZERS}\" VAR SANITIZER_LDFLAGS\n+    SOURCE \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      __attribute__((weak)) // allow for libFuzzer linking\n+      int main() { return 0; }\n+    \"\n+    RESULT_VAR linker_supports_sanitizers\n+  )\n+  if(NOT linker_supports_sanitizers)\n+    message(FATAL_ERROR \"Linker did not accept requested flags, you are missing required libraries.\")\n+  endif()\n+endif()\n+target_link_options(sanitize_interface INTERFACE ${SANITIZER_LDFLAGS})\n+\n+if(BUILD_FUZZ_BINARY)\n+  include(CheckSourceCompilesAndLinks)\n+  check_cxx_source_links_with_flags(\"${SANITIZER_LDFLAGS}\" \"\n+      #include <cstdint>\n+      #include <cstddef>\n+      extern \\\"C\\\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) { return 0; }\n+      // No main() function.\n+    \" FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n+  )\n+endif()\n+\n+include(AddBoostIfNeeded)\n+add_boost_if_needed()\n+\n+if(BUILD_DAEMON OR BUILD_GUI OR BUILD_CLI OR BUILD_TESTS OR BUILD_BENCH OR BUILD_FUZZ_BINARY)\n+  find_package(Libevent 2.1.8 MODULE REQUIRED)\n+endif()\n+\n+include(cmake/introspection.cmake)\n+\n+include(cmake/ccache.cmake)\n+\n+add_library(warn_interface INTERFACE)\n+target_link_libraries(core_interface INTERFACE warn_interface)\n+if(MSVC)\n+  try_append_cxx_flags(\"/W3\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4018\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4244\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4267\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4715\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"/wd4805\" TARGET warn_interface SKIP_LINK)\n+  target_compile_definitions(warn_interface INTERFACE\n+    _CRT_SECURE_NO_WARNINGS\n+    _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING\n+  )\n+else()\n+  try_append_cxx_flags(\"-Wall\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wextra\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wgnu\" TARGET warn_interface SKIP_LINK)\n+  # Some compilers will ignore -Wformat-security without -Wformat, so just combine the two here.\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wvla\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wshadow-field\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wthread-safety\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wloop-analysis\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wredundant-decls\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunused-member-function\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdate-time\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wconditional-uninitialized\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-branches\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wduplicated-cond\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wlogical-op\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Woverloaded-virtual\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wsuggest-override\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wimplicit-fallthrough\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wunreachable-code\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wdocumentation\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wself-assign\" TARGET warn_interface SKIP_LINK)\n+  try_append_cxx_flags(\"-Wundef\" TARGET warn_interface SKIP_LINK)\n+\n+  # Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  # unknown options if any other warning is produced. Test the -Wfoo case, and\n+  # set the -Wno-foo case if it works.\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET warn_interface SKIP_LINK\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+endif()\n+\n+include(ProcessConfigurations)\n+set_default_config(RelWithDebInfo)\n+\n+# Redefine/adjust per-configuration flags.\n+target_compile_definitions(core_interface_debug INTERFACE\n+  DEBUG\n+  DEBUG_LOCKORDER\n+  DEBUG_LOCKCONTENTION\n+  RPC_DOC_CHECK\n+  ABORT_ON_FAILED_ASSUME\n+)\n+# We leave assertions on.\n+if(MSVC)\n+  remove_cxx_flag_from_all_configs(/DNDEBUG)\n+else()\n+  remove_cxx_flag_from_all_configs(-DNDEBUG)\n+\n+  # Adjust flags used by the CXX compiler during RELEASE builds.\n+  # Prefer -O2 optimization level. (-O3 is CMake's default for Release for many compilers.)\n+  replace_cxx_flag_in_config(Release -O3 -O2)\n+\n+  are_flags_overridden(CMAKE_CXX_FLAGS_DEBUG cxx_flags_debug_overridden)\n+  if(NOT cxx_flags_debug_overridden)\n+    # Redefine flags used by the CXX compiler during DEBUG builds.\n+    try_append_cxx_flags(\"-g3\" RESULT_VAR compiler_supports_g3)\n+    if(compiler_supports_g3)\n+      replace_cxx_flag_in_config(Debug -g -g3)\n+    endif()\n+    unset(compiler_supports_g3)\n+\n+    try_append_cxx_flags(\"-ftrapv\" RESULT_VAR compiler_supports_ftrapv)\n+    if(compiler_supports_ftrapv)\n+      string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-ftrapv \")\n+    endif()\n+    unset(compiler_supports_ftrapv)\n+\n+    string(PREPEND CMAKE_CXX_FLAGS_DEBUG \"-O0 \")\n+\n+    set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\"\n+      CACHE STRING\n+      \"Flags used by the CXX compiler during DEBUG builds.\"\n+      FORCE\n+    )\n+  endif()\n+  unset(cxx_flags_debug_overridden)\n+endif()\n+\n+set(CMAKE_CXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_OBJCXX_FLAGS_COVERAGE \"-Og --coverage\")\n+set(CMAKE_EXE_LINKER_FLAGS_COVERAGE \"--coverage\")\n+set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE \"--coverage\")\n+get_property(is_multi_config GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)\n+if(is_multi_config)\n+  if(NOT \"Coverage\" IN_LIST CMAKE_CONFIGURATION_TYPES)\n+    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)\n+  endif()\n+endif()\n+\n+configure_file(cmake/script/Coverage.cmake Coverage.cmake COPYONLY)\n+configure_file(cmake/script/CoverageFuzz.cmake CoverageFuzz.cmake COPYONLY)\n+configure_file(cmake/script/CoverageInclude.cmake.in CoverageInclude.cmake @ONLY)\n+configure_file(contrib/filter-lcov.py filter-lcov.py COPYONLY)\n+\n+# Don't allow extended (non-ASCII) symbols in identifiers. This is easier for code review.\n+try_append_cxx_flags(\"-fno-extended-identifiers\" TARGET core_interface SKIP_LINK)\n+\n+# Currently all versions of gcc are subject to a class of bugs, see the\n+# gccbug_90348 test case (only reproduces on GCC 11 and earlier) and\n+# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=111843. To work around that, set\n+# -fstack-reuse=none for all gcc builds. (Only gcc understands this flag).\n+try_append_cxx_flags(\"-fstack-reuse=none\" TARGET core_interface)\n+\n+if(ENABLE_HARDENING)\n+  add_library(hardening_interface INTERFACE)\n+  target_link_libraries(core_interface INTERFACE hardening_interface)\n+  if(MSVC)\n+    try_append_linker_flag(\"/DYNAMICBASE\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/HIGHENTROPYVA\" TARGET hardening_interface)\n+    try_append_linker_flag(\"/NXCOMPAT\" TARGET hardening_interface)\n+  else()\n+    try_append_cxx_flags(\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3\"\n+      RESULT_VAR cxx_supports_fortify_source\n+    )\n+    if(cxx_supports_fortify_source)\n+      # When the build configuration is Debug, all optimizations are disabled.\n+      # However, _FORTIFY_SOURCE requires that there is some level of optimization,\n+      # otherwise it does nothing and just creates a compiler warning.\n+      # Since _FORTIFY_SOURCE is a no-op without optimizations, do not enable it\n+      # when the build configuration is Debug.\n+      target_compile_options(hardening_interface INTERFACE\n+        $<$<NOT:$<CONFIG:Debug>>:-U_FORTIFY_SOURCE>\n+        $<$<NOT:$<CONFIG:Debug>>:-D_FORTIFY_SOURCE=3>\n+      )\n+    endif()\n+    unset(cxx_supports_fortify_source)\n+\n+    try_append_cxx_flags(\"-Wstack-protector\" TARGET hardening_interface SKIP_LINK)\n+    try_append_cxx_flags(\"-fstack-protector-all\" TARGET hardening_interface)\n+    try_append_cxx_flags(\"-fcf-protection=full\" TARGET hardening_interface)\n+\n+    if(MINGW)\n+      # stack-clash-protection doesn't compile with GCC 10 and earlier.\n+      # In any case, it is a no-op for Windows.\n+      # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90458 for more details.\n+    else()\n+      try_append_cxx_flags(\"-fstack-clash-protection\" TARGET hardening_interface)\n+    endif()\n+\n+    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n+      try_append_cxx_flags(\"-mbranch-protection=bti\" TARGET hardening_interface SKIP_LINK)\n+    endif()\n+\n+    try_append_linker_flag(\"-Wl,--enable-reloc-section\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--dynamicbase\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--nxcompat\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,--high-entropy-va\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,relro\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,now\" TARGET hardening_interface)\n+    try_append_linker_flag(\"-Wl,-z,separate-code\" TARGET hardening_interface)\n+    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+      try_append_linker_flag(\"-Wl,-fixup_chains\" TARGET hardening_interface)\n+    endif()\n+  endif()\n+endif()\n+\n+if(REDUCE_EXPORTS)\n+  set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n+  set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)",
      "path": "CMakeLists.txt",
      "position": null,
      "original_position": 587,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703899727,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Wonder if that was it?\r\n\r\nI don't [remember](https://github.com/hebasto/bitcoin/pull/303#issuecomment-2269145394).",
      "created_at": "2024-08-05T16:04:19Z",
      "updated_at": "2024-08-05T16:04:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704345827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704345827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704385992",
      "pull_request_review_id": 2219450044,
      "id": 1704385992,
      "node_id": "PRRC_kwDOABII585llt3I",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64",
      "path": "CMakeLists.txt",
      "position": 338,
      "original_position": 332,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like `AC_SYS_LARGEFILE` / `_LARGE_FILES` was never ported?",
      "created_at": "2024-08-05T16:41:51Z",
      "updated_at": "2024-08-05T16:41:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704385992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704385992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704600759",
      "pull_request_review_id": 2219811588,
      "id": 1704600759,
      "node_id": "PRRC_kwDOABII585lmiS3",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Previously benchmarks were [enabled by default](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L180), right? (Edit, just noticed [previous comments](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251018894) asking the same)\r\n\r\nIs this why the build is so much faster now?\r\n\r\nI can run the benchmarks from the command line, but the IDE is complaining they're not part of the project. Is that expected?\r\n<img src=\"https://github.com/user-attachments/assets/e4f0d837-bc70-48f6-8a75-e24b45cdeb42\">\r\n\r\nSame is true for the fuzz tests - was hoping I could run them from the IDE now.\r\n\r\nEdit: I see now that turning off bench was deliberate, my questions remain only about the IDE not detecting the benchmarks and fuzz even after I enable them, and running FUZZ tests from IDE, like we can run and debug other tests.",
      "created_at": "2024-08-05T20:29:57Z",
      "updated_at": "2024-08-06T07:09:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1704600759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704600759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705010534",
      "pull_request_review_id": 2220439371,
      "id": 1705010534,
      "node_id": "PRRC_kwDOABII585loGVm",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if this refers to the docker base, we could update it to:\r\n```suggestion\r\n# Ubuntu 24.04 LTS Noble Numbat, https://wiki.ubuntu.com/Releases, EOSS in June 2029, EOL in April 2036:\r\n#  - CMake 3.28.3, https://packages.ubuntu.com/noble/cmake\r\n```",
      "created_at": "2024-08-06T06:58:21Z",
      "updated_at": "2024-08-06T06:58:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705010534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705010534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705011162",
      "pull_request_review_id": 2220440443,
      "id": 1705011162,
      "node_id": "PRRC_kwDOABII585loGfa",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)",
      "path": "CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if we update the above, this can likely also be bumped, right?",
      "created_at": "2024-08-06T06:58:58Z",
      "updated_at": "2024-08-06T06:58:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705011162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705011162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705095354",
      "pull_request_review_id": 2220577618,
      "id": 1705095354,
      "node_id": "PRRC_kwDOABII585lobC6",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> if this refers to the docker base...\r\n\r\nIt refers to a system that users are using to build Bitcoin Core. In most cases, it will be their regular machines. However, building Bitcoin Core within a Docker container is also supported.\r\n\r\nUbuntu and CentOS are mentioned here as mainstream DEB and RPM-based distros. However, the new CMake-based build system is designed to work out-of-the-box on a wide range of other platforms.",
      "created_at": "2024-08-06T08:05:38Z",
      "updated_at": "2024-08-06T08:05:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705095354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705095354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705103582",
      "pull_request_review_id": 2220591482,
      "id": 1705103582,
      "node_id": "PRRC_kwDOABII585lodDe",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)",
      "path": "CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705011162,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We still want to allow the building of Bitcoin Core on Ubuntu 22.04 using the [`cmake`](https://packages.ubuntu.com/jammy/cmake) package available in the system repository.\r\n\r\nFor reference, the last time the CMake minimum required version was updated was in https://github.com/hebasto/bitcoin/pull/123.",
      "created_at": "2024-08-06T08:11:54Z",
      "updated_at": "2024-08-06T08:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705103582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705103582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705137899",
      "pull_request_review_id": 2220647152,
      "id": 1705137899,
      "node_id": "PRRC_kwDOABII585lolbr",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Previously benchmarks were [enabled by default](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L180), right?\r\n\r\nRight.\r\n\r\n> Is this why the build is so much faster now?\r\n\r\nAs [mentioned](https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2251181234) earlier:\r\n> Regarding the part about \"the default with autoconf is on\" part, in the CMake working group, we decided to enable by default only the \"essential\" build targets that most developers build most often in their everyday work. This means, for instance, that `-DBUILD_BENCH` and `-DBUILD_GUI` are `OFF` by default.\r\n\r\n> I can run the benchmarks from the command line, but the IDE is complaining they're not part of the project. Is that expected?\r\n\r\nIs the project configured with `-DBUILD_BENCH=ON`?",
      "created_at": "2024-08-06T08:36:10Z",
      "updated_at": "2024-08-06T08:36:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705137899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705137899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705405872",
      "pull_request_review_id": 2221090540,
      "id": 1705405872,
      "node_id": "PRRC_kwDOABII585lpm2w",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Got it, so our tests are run with a different version than what we're mentioning here, right?\r\nNot sure it makes sense, but could we have one of the docker images have this version, to expose ourselves to the documented os version as well (e.g. to catch if someone uses an old dependency, like a `CMake 3.22.1` incompatibility)?",
      "created_at": "2024-08-06T11:55:15Z",
      "updated_at": "2024-08-06T11:55:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705405872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705405872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705415336",
      "pull_request_review_id": 2221105860,
      "id": 1705415336,
      "node_id": "PRRC_kwDOABII585lppKo",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah (even edited the scripts to have them `ON` by default), I can run a benchmark from the terminal, but the IDE doesn't see them as part of the project.\r\nMaybe @rot13maxi can confirm or deny whether CLion sees the benchmarks.",
      "created_at": "2024-08-06T12:02:48Z",
      "updated_at": "2024-08-06T12:02:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705415336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705415336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705423262",
      "pull_request_review_id": 2221118607,
      "id": 1705423262,
      "node_id": "PRRC_kwDOABII585lprGe",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Got it, so our tests are run with a different version than what we're mentioning here, right?\r\n\r\nCMake version can be any >= 3.22. However, CMake ensures backward compatibility using the [policies](https://cmake.org/cmake/help/latest/manual/cmake-policies.7.html). Only policies known to version 3.22 are enabled, regardless of the actual CMake version.\r\n\r\n> Not sure it makes sense, but could we have one of the docker images have this version, to expose ourselves to the documented os version as well (e.g. to catch if someone uses an old dependency, like a `CMake 3.22.1` incompatibility)?\r\n\r\nThat was done for the [staging branch](https://github.com/hebasto/bitcoin/tree/cmake-staging) (see `.github/workflows/cmake.yml`). For this PR, it is out of the scope as it is focused on the migration only. Anyway, [this](https://cirrus-ci.com/task/5479234460712960) CI job uses Ubuntu 22.04 and CMake 3.22.1.",
      "created_at": "2024-08-06T12:09:04Z",
      "updated_at": "2024-08-06T12:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705423262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705423262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705430340",
      "pull_request_review_id": 2221129499,
      "id": 1705430340,
      "node_id": "PRRC_kwDOABII585lps1E",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@paplorinc \r\n\r\nPlease open an issue in https://github.com/hebasto/bitcoin/issues with detailed steps to reproduce the problem from the scratch.",
      "created_at": "2024-08-06T12:14:26Z",
      "updated_at": "2024-08-06T12:14:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705430340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705430340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705436112",
      "pull_request_review_id": 2221138699,
      "id": 1705436112,
      "node_id": "PRRC_kwDOABII585lpuPQ",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake",
      "path": "CMakeLists.txt",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1705010534,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks",
      "created_at": "2024-08-06T12:18:47Z",
      "updated_at": "2024-08-06T12:18:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705436112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705436112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 5,
      "original_start_line": 5,
      "start_side": "RIGHT",
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705621067",
      "pull_request_review_id": 2221444266,
      "id": 1705621067,
      "node_id": "PRRC_kwDOABII585lqbZL",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I managed to make it work, I think the internal IDE setting were overwriting the ones I was setting from the command line.\r\n\r\nFor the record, with these settings the bench and fuzz projects are enabled (though no IDE assistance - i.e. run from the IDE -, but that's a different issue):\r\n<img src=\"https://github.com/user-attachments/assets/06b10237-c4b3-4ca3-8547-b3299d214070\">\r\n\r\nI did open an unrelated suggestion for better error messages: https://github.com/hebasto/bitcoin/issues/306\r\n",
      "created_at": "2024-08-06T14:15:02Z",
      "updated_at": "2024-08-06T14:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705621067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705621067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705751853",
      "pull_request_review_id": 2221659147,
      "id": 1705751853,
      "node_id": "PRRC_kwDOABII585lq7Ut",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)",
      "path": "CMakeLists.txt",
      "position": 202,
      "original_position": 198,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "b440081908ec5eeaa4381ab702bc163a1e9ea0e4",
      "in_reply_to_id": 1704600759,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I managed to make it work...\r\n\r\nI consider this conversation as resolved then.",
      "created_at": "2024-08-06T15:36:49Z",
      "updated_at": "2024-08-06T15:36:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1705751853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705751853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706004353",
      "pull_request_review_id": 2222067429,
      "id": 1706004353,
      "node_id": "PRRC_kwDOABII585lr4-B",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)\n+if(HAVE_STRING_H)\n+  check_cxx_source_compiles(\"\n+    #include <string.h>\n+\n+    int main()\n+    {\n+      char buf[100];\n+      char* p{strerror_r(0, buf, sizeof buf)};\n+      (void)p;\n+    }\n+    \" STRERROR_R_CHAR_P\n+  )\n+endif()\n+\n+# Check for malloc_info (for memory statistics information in getmemoryinfo).\n+check_cxx_symbol_exists(malloc_info \"malloc.h\" HAVE_MALLOC_INFO)\n+\n+# Check for mallopt(M_ARENA_MAX) (to set glibc arenas).\n+check_cxx_source_compiles(\"\n+  #include <malloc.h>\n+\n+  int main()\n+  {\n+    mallopt(M_ARENA_MAX, 1);\n+  }\n+  \" HAVE_MALLOPT_ARENA_MAX\n+)\n+\n+# Check for posix_fallocate().\n+check_cxx_source_compiles(\"\n+  // same as in src/util/fs_helpers.cpp\n+  #ifdef __linux__\n+  #ifdef _POSIX_C_SOURCE\n+  #undef _POSIX_C_SOURCE\n+  #endif\n+  #define _POSIX_C_SOURCE 200112L\n+  #endif // __linux__\n+  #include <fcntl.h>\n+\n+  int main()\n+  {\n+    return posix_fallocate(0, 0, 0);\n+  }\n+  \" HAVE_POSIX_FALLOCATE\n+)\n+\n+# Check for strong getauxval() support in the system headers.\n+check_cxx_source_compiles(\"\n+  #include <sys/auxv.h>\n+\n+  int main()\n+  {\n+    getauxval(AT_HWCAP);\n+  }\n+  \" HAVE_STRONG_GETAUXVAL\n+)\n+\n+# Check for UNIX sockets.\n+check_cxx_source_compiles(\"\n+  #include <sys/socket.h>\n+  #include <sys/un.h>\n+\n+  int main()\n+  {\n+    struct sockaddr_un addr;\n+    addr.sun_family = AF_UNIX;\n+  }\n+  \" HAVE_SOCKADDR_UN\n+)\n+\n+# Check for different ways of gathering OS randomness:\n+# - Linux getrandom()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getrandom(nullptr, 32, 0);\n+  }\n+  \" HAVE_GETRANDOM\n+)\n+\n+# - BSD getentropy()\n+check_cxx_source_compiles(\"\n+  #include <sys/random.h>\n+\n+  int main()\n+  {\n+    getentropy(nullptr, 32);\n+  }\n+  \" HAVE_GETENTROPY_RAND\n+)\n+\n+\n+# - BSD sysctl()\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    sysctl(nullptr, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL\n+)\n+\n+# - BSD sysctl(KERN_ARND)\n+check_cxx_source_compiles(\"\n+  #include <sys/types.h>\n+  #include <sys/sysctl.h>\n+\n+  #ifdef __linux__\n+  #error Don't use sysctl on Linux, it's deprecated even when it works\n+  #endif\n+\n+  int main()\n+  {\n+    static int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0);\n+  }\n+  \" HAVE_SYSCTL_ARND\n+)\n+\n+check_cxx_source_compiles(\"\n+  int foo(void) __attribute__((visibility(\\\"default\\\")));\n+  int main(){}\n+  \" HAVE_DEFAULT_VISIBILITY_ATTRIBUTE",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 172,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704182733,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:20:14Z",
      "updated_at": "2024-08-06T19:20:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706004353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706004353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706005633",
      "pull_request_review_id": 2222069575,
      "id": 1706005633,
      "node_id": "PRRC_kwDOABII585lr5SB",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(generate_header_from_json json_source_relpath)\n+  add_custom_command(\n+    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h\n+    COMMAND ${CMAKE_COMMAND} -DJSON_SOURCE_PATH=${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} -DHEADER_PATH=${CMAKE_CURRENT_BINARY_DIR}/${json_source_relpath}.h -P ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake\n+    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${json_source_relpath} ${CMAKE_SOURCE_DIR}/cmake/script/GenerateHeaderFromJson.cmake",
      "path": "cmake/module/GenerateHeaders.cmake",
      "position": null,
      "original_position": 9,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1703721288,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:21:38Z",
      "updated_at": "2024-08-06T19:21:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706005633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706005633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706006163",
      "pull_request_review_id": 2222070336,
      "id": 1706006163,
      "node_id": "PRRC_kwDOABII585lr5aT",
      "diff_hunk": "@@ -60,7 +60,7 @@ example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dep\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n+results in configure scripts being able to execute Windows Portable Executable files. This can cause",
      "path": "doc/build-windows.md",
      "position": null,
      "original_position": 23,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1698595899,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2271981040.",
      "created_at": "2024-08-06T19:22:07Z",
      "updated_at": "2024-08-06T19:22:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706006163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706006163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706688706",
      "pull_request_review_id": 2223676631,
      "id": 1706688706,
      "node_id": "PRRC_kwDOABII585lugDC",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(add_boost_if_needed)\n+  #[=[\n+  TODO: Not all targets, which will be added in the future, require\n+        Boost. Therefore, a proper check will be appropriate here.\n+\n+  Implementation notes:\n+  Although only Boost headers are used to build Bitcoin Core,\n+  we still leverage a standard CMake's approach to handle\n+  dependencies, i.e., the Boost::headers \"library\".\n+  A command target_link_libraries(target PRIVATE Boost::headers)\n+  will propagate Boost::headers usage requirements to the target.\n+  For Boost::headers such usage requirements is an include\n+  directory and other added INTERFACE properties.\n+  ]=]\n+\n+  # We cannot rely on find_package(Boost ...) to work properly without\n+  # Boost_NO_BOOST_CMAKE set until we require a more recent Boost because\n+  # upstream did not ship proper CMake files until 1.82.0.\n+  # Until then, we rely on CMake's FindBoost module.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0167.html\n+  if(POLICY CMP0167)\n+    cmake_policy(SET CMP0167 OLD)\n+  endif()\n+  set(Boost_NO_BOOST_CMAKE ON)\n+  find_package(Boost 1.73.0 REQUIRED)\n+  mark_as_advanced(Boost_INCLUDE_DIR)\n+  set_target_properties(Boost::headers PROPERTIES IMPORTED_GLOBAL TRUE)\n+  target_compile_definitions(Boost::headers INTERFACE\n+    # We don't use multi_index serialization.\n+    BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n+  )\n+  if(DEFINED VCPKG_TARGET_TRIPLET)\n+    # Workaround for https://github.com/microsoft/vcpkg/issues/36955.\n+    target_compile_definitions(Boost::headers INTERFACE\n+      BOOST_NO_USER_CONFIG\n+    )\n+  endif()\n+\n+  # Prevent use of std::unary_function, which was removed in C++17,\n+  # and will generate warnings with newer compilers for Boost\n+  # older than 1.80.\n+  # See: https://github.com/boostorg/config/pull/430.\n+  set(CMAKE_REQUIRED_DEFINITIONS -DBOOST_NO_CXX98_FUNCTION_BASE)",
      "path": "cmake/module/AddBoostIfNeeded.cmake",
      "position": 47,
      "original_position": 47,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Pretty sure there are two separate bugs here:\r\n\r\n* The first is that `BOOST_NO_CXX98_FUNCTION_BASE` isn't removed from `CMAKE_REQUIRED_DEFINITIONS` after this check, which means it's incorrectly reused for the check below.\r\n\r\n* The second is that when `-DWERROR=ON` is used, `-Werror` isn't being passed to the check for the Boost Test header (which also hides the first bug).",
      "created_at": "2024-08-07T09:27:52Z",
      "updated_at": "2024-08-07T09:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1706688706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706688706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707326409",
      "pull_request_review_id": 2225598396,
      "id": 1707326409,
      "node_id": "PRRC_kwDOABII585lw7vJ",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(add_boost_if_needed)\n+  #[=[\n+  TODO: Not all targets, which will be added in the future, require\n+        Boost. Therefore, a proper check will be appropriate here.\n+\n+  Implementation notes:\n+  Although only Boost headers are used to build Bitcoin Core,\n+  we still leverage a standard CMake's approach to handle\n+  dependencies, i.e., the Boost::headers \"library\".\n+  A command target_link_libraries(target PRIVATE Boost::headers)\n+  will propagate Boost::headers usage requirements to the target.\n+  For Boost::headers such usage requirements is an include\n+  directory and other added INTERFACE properties.\n+  ]=]\n+\n+  # We cannot rely on find_package(Boost ...) to work properly without\n+  # Boost_NO_BOOST_CMAKE set until we require a more recent Boost because\n+  # upstream did not ship proper CMake files until 1.82.0.\n+  # Until then, we rely on CMake's FindBoost module.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0167.html\n+  if(POLICY CMP0167)\n+    cmake_policy(SET CMP0167 OLD)\n+  endif()\n+  set(Boost_NO_BOOST_CMAKE ON)\n+  find_package(Boost 1.73.0 REQUIRED)\n+  mark_as_advanced(Boost_INCLUDE_DIR)\n+  set_target_properties(Boost::headers PROPERTIES IMPORTED_GLOBAL TRUE)\n+  target_compile_definitions(Boost::headers INTERFACE\n+    # We don't use multi_index serialization.\n+    BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n+  )\n+  if(DEFINED VCPKG_TARGET_TRIPLET)\n+    # Workaround for https://github.com/microsoft/vcpkg/issues/36955.\n+    target_compile_definitions(Boost::headers INTERFACE\n+      BOOST_NO_USER_CONFIG\n+    )\n+  endif()\n+\n+  # Prevent use of std::unary_function, which was removed in C++17,\n+  # and will generate warnings with newer compilers for Boost\n+  # older than 1.80.\n+  # See: https://github.com/boostorg/config/pull/430.\n+  set(CMAKE_REQUIRED_DEFINITIONS -DBOOST_NO_CXX98_FUNCTION_BASE)",
      "path": "cmake/module/AddBoostIfNeeded.cmake",
      "position": 47,
      "original_position": 47,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1706688706,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For the following discussion, please see https://github.com/hebasto/bitcoin/pull/312.",
      "created_at": "2024-08-07T15:55:25Z",
      "updated_at": "2024-08-07T15:55:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707326409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707326409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707417887",
      "pull_request_review_id": 2225688525,
      "id": 1707417887,
      "node_id": "PRRC_kwDOABII585lxSEf",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think we can just drop include checks like this (which don't produce defines used anywhere else in the codebase). I realise this kind of check was ported from Autotools, but I no-longer think it's necessary to do. Running a check to see if we can include `string.h`, just to then immediately compile something which includes `string.h`, seems like it should just be collapsed down to the compile. Looks like another one is `check_include_file_cxx(unistd.h HAVE_UNISTD_H)`.",
      "created_at": "2024-08-07T16:39:28Z",
      "updated_at": "2024-08-07T16:39:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707417887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707417887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707716090",
      "pull_request_review_id": 2225993274,
      "id": 1707716090,
      "node_id": "PRRC_kwDOABII585lya36",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707417887,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Implemented in https://github.com/hebasto/bitcoin/pull/313.",
      "created_at": "2024-08-07T19:11:55Z",
      "updated_at": "2024-08-07T19:11:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707716090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707716090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707740750",
      "pull_request_review_id": 2226017520,
      "id": 1707740750,
      "node_id": "PRRC_kwDOABII585lyg5O",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we need the escape at the end?",
      "created_at": "2024-08-07T19:26:46Z",
      "updated_at": "2024-08-07T19:26:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707740750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707740750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707746253",
      "pull_request_review_id": 2226022459,
      "id": 1707746253,
      "node_id": "PRRC_kwDOABII585lyiPN",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if this comment still refers to the mac build, note that mac doesn't have `nproc`",
      "created_at": "2024-08-07T19:29:53Z",
      "updated_at": "2024-08-07T19:29:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707746253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707746253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707807652",
      "pull_request_review_id": 2226085150,
      "id": 1707807652,
      "node_id": "PRRC_kwDOABII585lyxOk",
      "diff_hunk": "@@ -0,0 +1,715 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/module)\n+\n+#=============================\n+# Configurable options\n+#=============================\n+include(CMakeDependentOption)\n+# When adding a new option, end the <help_text> with a full stop for consistency.\n+option(BUILD_DAEMON \"Build bitcoind executable.\" ON)\n+option(BUILD_GUI \"Build bitcoin-qt executable.\" OFF)\n+option(BUILD_CLI \"Build bitcoin-cli executable.\" ON)\n+\n+option(BUILD_TESTS \"Build test_bitcoin executable.\" ON)\n+option(BUILD_TX \"Build bitcoin-tx executable.\" ${BUILD_TESTS})\n+option(BUILD_UTIL \"Build bitcoin-util executable.\" ${BUILD_TESTS})\n+\n+option(BUILD_UTIL_CHAINSTATE \"Build experimental bitcoin-chainstate executable.\" OFF)\n+option(BUILD_KERNEL_LIB \"Build experimental bitcoinkernel library.\" ${BUILD_UTIL_CHAINSTATE})\n+\n+option(ENABLE_WALLET \"Enable wallet.\" ON)\n+option(WITH_SQLITE \"Enable SQLite wallet support.\" ${ENABLE_WALLET})\n+if(WITH_SQLITE)\n+  if(VCPKG_TARGET_TRIPLET)\n+    # Use of the `unofficial::` namespace is a vcpkg package manager convention.\n+    find_package(unofficial-sqlite3 CONFIG REQUIRED)\n+  else()\n+    find_package(SQLite3 3.7.17 REQUIRED)\n+  endif()\n+  set(USE_SQLITE ON)\n+  set(ENABLE_WALLET ON)\n+endif()\n+option(WITH_BDB \"Enable Berkeley DB (BDB) wallet support.\" OFF)\n+cmake_dependent_option(WARN_INCOMPATIBLE_BDB \"Warn when using a Berkeley DB (BDB) version other than 4.8.\" ON \"WITH_BDB\" OFF)\n+if(WITH_BDB)\n+  find_package(BerkeleyDB 4.8 MODULE REQUIRED)\n+  set(USE_BDB ON)\n+  set(ENABLE_WALLET ON)\n+  if(NOT BerkeleyDB_VERSION VERSION_EQUAL 4.8)\n+    message(WARNING \"Found Berkeley DB (BDB) other than 4.8.\\n\"\n+                    \"BDB (legacy) wallets opened by this build will not be portable!\"\n+    )\n+    if(WARN_INCOMPATIBLE_BDB)\n+      message(WARNING \"If this is intended, pass \\\"-DWARN_INCOMPATIBLE_BDB=OFF\\\".\\n\"\n+                      \"Passing \\\"-DWITH_BDB=OFF\\\" will suppress this warning.\"\n+      )\n+    endif()\n+  endif()\n+endif()\n+cmake_dependent_option(BUILD_WALLET_TOOL \"Build bitcoin-wallet tool.\" ${BUILD_TESTS} \"ENABLE_WALLET\" OFF)\n+\n+option(ENABLE_HARDENING \"Attempt to harden the resulting executables.\" ON)\n+option(REDUCE_EXPORTS \"Attempt to reduce exported symbols in the resulting executables.\" OFF)\n+option(WERROR \"Treat compiler warnings as errors.\" OFF)\n+option(WITH_CCACHE \"Attempt to use ccache for compiling.\" ON)\n+\n+option(WITH_NATPMP \"Enable NAT-PMP.\" OFF)\n+if(WITH_NATPMP)\n+  find_package(NATPMP MODULE REQUIRED)\n+endif()\n+\n+option(WITH_MINIUPNPC \"Enable UPnP.\" OFF)\n+if(WITH_MINIUPNPC)\n+  find_package(MiniUPnPc MODULE REQUIRED)\n+endif()\n+\n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.\n+    find_package(PkgConfig REQUIRED)\n+    pkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq>=4)\n+    # TODO: This command will be redundant once\n+    #       https://github.com/bitcoin/bitcoin/pull/30508 is merged.\n+    target_link_libraries(PkgConfig::libzmq INTERFACE\n+      $<$<PLATFORM_ID:Windows>:iphlpapi;ws2_32>\n+    )\n+  endif()\n+endif()\n+\n+option(WITH_USDT \"Enable tracepoints for Userspace, Statically Defined Tracing.\" OFF)\n+if(WITH_USDT)\n+  find_package(USDT MODULE REQUIRED)\n+endif()\n+\n+cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n+\n+cmake_dependent_option(WITH_QRENCODE \"Enable QR code support.\" ON \"BUILD_GUI\" OFF)\n+if(WITH_QRENCODE)\n+  find_package(PkgConfig REQUIRED)\n+  pkg_check_modules(libqrencode REQUIRED IMPORTED_TARGET libqrencode)\n+  set(USE_QRCODE TRUE)\n+endif()\n+\n+cmake_dependent_option(WITH_DBUS \"Enable DBus support.\" ON \"CMAKE_SYSTEM_NAME STREQUAL \\\"Linux\\\" AND BUILD_GUI\" OFF)\n+\n+option(WITH_MULTIPROCESS \"Build multiprocess bitcoin-node and bitcoin-gui executables in addition to monolithic bitcoind and bitcoin-qt executables. Requires libmultiprocess library. Experimental.\" OFF)\n+if(WITH_MULTIPROCESS)\n+  find_package(Libmultiprocess COMPONENTS Lib)\n+  find_package(LibmultiprocessNative COMPONENTS Bin\n+    NAMES Libmultiprocess\n+  )\n+endif()\n+\n+cmake_dependent_option(BUILD_GUI_TESTS \"Build test_bitcoin-qt executable.\" ON \"BUILD_GUI;BUILD_TESTS\" OFF)\n+if(BUILD_GUI)\n+  set(qt_components Core Gui Widgets LinguistTools)\n+  if(ENABLE_WALLET)\n+    list(APPEND qt_components Network)\n+  endif()\n+  if(WITH_DBUS)\n+    list(APPEND qt_components DBus)\n+    set(USE_DBUS TRUE)\n+  endif()\n+  if(BUILD_GUI_TESTS)\n+    list(APPEND qt_components Test)\n+  endif()\n+  find_package(Qt5 5.11.3 MODULE REQUIRED\n+    COMPONENTS ${qt_components}\n+  )\n+  unset(qt_components)\n+endif()\n+\n+option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)\n+\n+option(INSTALL_MAN \"Install man pages.\" ON)\n+\n+set(APPEND_CPPFLAGS \"\" CACHE STRING \"Preprocessor flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CFLAGS \"\" CACHE STRING \"C compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_CXXFLAGS \"\" CACHE STRING \"(Objective) C++ compiler flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+set(APPEND_LDFLAGS \"\" CACHE STRING \"Linker flags that are appended to the command line after all other flags added by the build system. This variable is intended for debugging and special builds.\")\n+# Appending to this low-level rule variables is the only way to\n+# guarantee that the flags appear at the end of the command line.\n+string(APPEND CMAKE_CXX_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CXXFLAGS}\")\n+string(APPEND CMAKE_CXX_CREATE_SHARED_LIBRARY \" ${APPEND_LDFLAGS}\")\n+string(APPEND CMAKE_CXX_LINK_EXECUTABLE \" ${APPEND_LDFLAGS}\")\n+\n+set(configure_warnings)\n+\n+include(CheckPIESupported)\n+check_pie_supported(OUTPUT_VARIABLE check_pie_output LANGUAGES CXX)\n+if(CMAKE_CXX_LINK_PIE_SUPPORTED)\n+  set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n+elseif(NOT WIN32)\n+  # The warning is superfluous for Windows.\n+  message(WARNING \"PIE is not supported at link time: ${check_pie_output}\")\n+  list(APPEND configure_warnings \"Position independent code disabled.\")\n+endif()\n+unset(check_pie_output)\n+\n+# The core_interface library aims to encapsulate common build flags.\n+# It is a usage requirement for all targets except for secp256k1, which\n+# gets its flags by other means.\n+add_library(core_interface INTERFACE)\n+add_library(core_interface_relwithdebinfo INTERFACE)\n+add_library(core_interface_debug INTERFACE)\n+target_link_libraries(core_interface INTERFACE\n+  $<$<CONFIG:RelWithDebInfo>:core_interface_relwithdebinfo>\n+  $<$<CONFIG:Debug>:core_interface_debug>\n+)\n+\n+if(BUILD_FOR_FUZZING)\n+  message(WARNING \"BUILD_FOR_FUZZING=ON will disable all other targets and force BUILD_FUZZ_BINARY=ON.\")\n+  set(BUILD_DAEMON OFF)\n+  set(BUILD_CLI OFF)\n+  set(BUILD_TX OFF)\n+  set(BUILD_UTIL OFF)\n+  set(BUILD_UTIL_CHAINSTATE OFF)\n+  set(BUILD_KERNEL_LIB OFF)\n+  set(BUILD_WALLET_TOOL OFF)\n+  set(BUILD_GUI OFF)\n+  set(ENABLE_EXTERNAL_SIGNER OFF)\n+  set(WITH_NATPMP OFF)\n+  set(WITH_MINIUPNPC OFF)\n+  set(WITH_ZMQ OFF)\n+  set(BUILD_TESTS OFF)\n+  set(BUILD_GUI_TESTS OFF)\n+  set(BUILD_BENCH OFF)\n+  set(BUILD_FUZZ_BINARY ON)\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    ABORT_ON_FAILED_ASSUME\n+  )\n+endif()\n+\n+include(TryAppendCXXFlags)\n+include(TryAppendLinkerFlag)\n+\n+if(WIN32)\n+  #[=[\n+  This build system supports two ways to build binaries for Windows.\n+\n+  1. Building on Windows using MSVC.\n+  Implementation notes:\n+  - /DWIN32 and /D_WINDOWS definitions are included into the CMAKE_CXX_FLAGS_INIT\n+    and CMAKE_CXX_FLAGS_INIT variables by default.\n+  - A run-time library is selected using the CMAKE_MSVC_RUNTIME_LIBRARY variable.\n+  - MSVC-specific options, for example, /Zc:__cplusplus, are additionally required.\n+\n+  2. Cross-compiling using MinGW.\n+  Implementation notes:\n+  - WIN32 and _WINDOWS definitions must be provided explicitly.\n+  - A run-time library must be specified explicitly using _MT definition.\n+  ]=]\n+\n+  target_compile_definitions(core_interface INTERFACE\n+    _WIN32_WINNT=0x0601\n+    _WIN32_IE=0x0501\n+    WIN32_LEAN_AND_MEAN\n+    NOMINMAX\n+  )\n+\n+  if(MSVC)\n+    if(VCPKG_TARGET_TRIPLET MATCHES \"-static\")\n+      set(msvc_library_linkage \"\")\n+    else()\n+      set(msvc_library_linkage \"DLL\")\n+    endif()\n+    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>${msvc_library_linkage}\")\n+    unset(msvc_library_linkage)\n+\n+    target_compile_definitions(core_interface INTERFACE\n+      _UNICODE;UNICODE\n+    )\n+    target_compile_options(core_interface INTERFACE\n+      /utf-8\n+      /Zc:preprocessor\n+      /Zc:__cplusplus\n+      /sdl\n+    )\n+    # Improve parallelism in MSBuild.\n+    # See: https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/.\n+    list(APPEND CMAKE_VS_GLOBALS \"UseMultiToolTask=true\")\n+  endif()\n+\n+  if(MINGW)\n+    target_compile_definitions(core_interface INTERFACE\n+      WIN32\n+      _WINDOWS\n+      _MT\n+    )\n+    # Avoid the use of aligned vector instructions when building for Windows.\n+    # See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54412.\n+    try_append_cxx_flags(\"-Wa,-muse-unaligned-vector-move\" TARGET core_interface SKIP_LINK)\n+    try_append_linker_flag(\"-static\" TARGET core_interface)\n+    # We require Windows 7 (NT 6.1) or later.\n+    try_append_linker_flag(\"-Wl,--major-subsystem-version,6\" TARGET core_interface)\n+    try_append_linker_flag(\"-Wl,--minor-subsystem-version,1\" TARGET core_interface)\n+  endif()\n+endif()\n+\n+# Use 64-bit off_t on 32-bit Linux.\n+if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n+  # Ensure 64-bit offsets are used for filesystem accesses for 32-bit compilation.\n+  target_compile_definitions(core_interface INTERFACE\n+    _FILE_OFFSET_BITS=64",
      "path": "CMakeLists.txt",
      "position": 338,
      "original_position": 332,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "80073c75d1218759f58ceefcb41b4fbc4a3d1ecd",
      "in_reply_to_id": 1704385992,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Looks like `AC_SYS_LARGEFILE` / `_LARGE_FILES` was never ported?\r\n\r\nThe comment in the [implementation code](https://git.savannah.gnu.org/gitweb/?p=autoconf.git;a=blob;f=lib/autoconf/specific.m4;h=cea6247a9d1417661e05f77e378460248540ea80;hb=HEAD#l264) mentions \"32-bit AIX 4.2.1+, 32-bit z/OS\". Do we support those systems?",
      "created_at": "2024-08-07T20:06:03Z",
      "updated_at": "2024-08-07T20:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707807652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707807652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 338,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812278",
      "pull_request_review_id": 2226090580,
      "id": 1707812278,
      "node_id": "PRRC_kwDOABII585lyyW2",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "cc @dergoegge ",
      "created_at": "2024-08-07T20:08:31Z",
      "updated_at": "2024-08-07T20:08:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707812278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812607",
      "pull_request_review_id": 2226090931,
      "id": 1707812607,
      "node_id": "PRRC_kwDOABII585lyyb_",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "cc @dergoegge ",
      "created_at": "2024-08-07T20:08:41Z",
      "updated_at": "2024-08-07T20:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707812607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707812607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707821187",
      "pull_request_review_id": 2226100409,
      "id": 1707821187,
      "node_id": "PRRC_kwDOABII585ly0iD",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wasn't able to run the fuzz tests with cmake (tried all mac tricks I could find here), I'm getting:\r\n```\r\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER\r\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER - Success\r\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_a797\r\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_a797 - Failed\r\nCMake Error at CMakeLists.txt:389 (message):\r\n  Linker did not accept requested flags, you are missing required libraries.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n```\r\n\r\ngiven:\r\n```\r\n% brew --prefix llvm   \r\n/opt/homebrew/opt/llvm\r\n\r\n% clang --version               \r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.5.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n\r\n% clang++ --version               \r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.5.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n```\r\n\r\n---\r\n\r\nAm I doing something wrong or should I open an issue for this as well?\r\n\r\ncc @dergoegge",
      "created_at": "2024-08-07T20:13:49Z",
      "updated_at": "2024-08-07T20:15:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707821187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707821187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707843731",
      "pull_request_review_id": 2226126646,
      "id": 1707843731,
      "node_id": "PRRC_kwDOABII585ly6CT",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I wasn't able to run the fuzz tests with cmake\n\nAre you able to build them using Autotools?",
      "created_at": "2024-08-07T20:26:50Z",
      "updated_at": "2024-08-07T20:26:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707843731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707843731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707893570",
      "pull_request_review_id": 2226182630,
      "id": 1707893570,
      "node_id": "PRRC_kwDOABII585lzGNC",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Kinda', but I do get some [errors](https://github.com/user-attachments/files/16534146/scratch_62.txt) at the beginning.",
      "created_at": "2024-08-07T20:55:09Z",
      "updated_at": "2024-08-07T20:56:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707893570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707893570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709002249",
      "pull_request_review_id": 2227273414,
      "id": 1709002249,
      "node_id": "PRRC_kwDOABII585l3U4J",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Are you able to build them using Autotools?\r\n\r\nYea, the steps in `fuzzing.md` currently work with master, but don't work this branch (ad2140d4d8cccec82fdad07bdc7532e202282306).",
      "created_at": "2024-08-08T09:00:09Z",
      "updated_at": "2024-08-08T09:00:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709002249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709002249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709005443",
      "pull_request_review_id": 2227276755,
      "id": 1709005443,
      "node_id": "PRRC_kwDOABII585l3VqD",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We probably don't.",
      "created_at": "2024-08-08T09:01:39Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709005443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709005443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709007912",
      "pull_request_review_id": 2227276755,
      "id": 1709007912,
      "node_id": "PRRC_kwDOABII585l3WQo",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, the \"-j$(nproc)\" bit should be removed. I don't have a Mac so I don't no if these instructions are still relevant.",
      "created_at": "2024-08-08T09:02:54Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709007912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709007912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709030842",
      "pull_request_review_id": 2227276755,
      "id": 1709030842,
      "node_id": "PRRC_kwDOABII585l3b26",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've only tried the instructions in this doc on linux when I wrote them a few weeks back. I'm guessing this is a Mac only issue but perhaps not.",
      "created_at": "2024-08-08T09:14:59Z",
      "updated_at": "2024-08-08T09:15:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709030842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709030842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709076520",
      "pull_request_review_id": 2227365621,
      "id": 1709076520,
      "node_id": "PRRC_kwDOABII585l3nAo",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The mac equivalent is `make -j$(sysctl -n hw.ncpu)`",
      "created_at": "2024-08-08T09:38:47Z",
      "updated_at": "2024-08-08T09:38:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709076520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709076520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709105914",
      "pull_request_review_id": 2227399035,
      "id": 1709105914,
      "node_id": "PRRC_kwDOABII585l3uL6",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit, what's the purpose of the comment?\r\nIs it to explain to the reviewers how to review it or will this make sense after we remove autotools? If the second, maybe we can explain in the commit message instead - or add a TODO in front of this to signal that it's a temporary explanation (otherwise people might be afraid to remove it)",
      "created_at": "2024-08-08T09:53:48Z",
      "updated_at": "2024-08-08T11:36:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709105914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709105914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709145204",
      "pull_request_review_id": 2227399035,
      "id": 1709145204,
      "node_id": "PRRC_kwDOABII585l33x0",
      "diff_hunk": "@@ -102,9 +102,8 @@ brew install berkeley-db@4\n \n ###### Qt\n \n-Bitcoin Core includes a GUI built with the cross-platform Qt Framework.\n-To compile the GUI, we need to install `qt@5`.\n-Skip if you don't intend to use the GUI.\n+Bitcoin Core includes a GUI built with the cross-platform Qt Framework. To compile the GUI, we need to install\n+the necessary parts of Qt, the libqrencode and pass `-DBUILD_GUI=ON`. Skip if you don't intend to use the GUI.\n \n ``` bash\n brew install qt@5",
      "path": "doc/build-osx.md",
      "position": 28,
      "original_position": 28,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 GUI is working with cmake, but I had to execute a `brew link qt5 --force` as well after `brew install qt@5` (applies to Autotools as well)",
      "created_at": "2024-08-08T10:14:40Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709145204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709145204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709170006",
      "pull_request_review_id": 2227399035,
      "id": 1709170006,
      "node_id": "PRRC_kwDOABII585l391W",
      "diff_hunk": "@@ -25,10 +24,10 @@ pkgin install gcc12\n \n Then, when configuring, pass the following:\n ```bash\n-./configure\n+cmake -B build\n     ...\n-    CC=\"/usr/pkg/gcc12/bin/gcc\" \\\n-    CXX=\"/usr/pkg/gcc12/bin/g++\" \\\n+    -DCMAKE_C_COMPILER=\"/usr/pkg/gcc12/bin/gcc\" \\\n+    -DCMAKE_CXX_COMPILER=\"/usr/pkg/gcc12/bin/g++\" \\",
      "path": "doc/build-netbsd.md",
      "position": 20,
      "original_position": 20,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit:\r\n```suggestion\r\n    -DCMAKE_C_COMPILER=/usr/pkg/gcc12/bin/gcc \\\r\n    -DCMAKE_CXX_COMPILER=/usr/pkg/gcc12/bin/g++ \\\r\n```",
      "created_at": "2024-08-08T10:28:24Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709170006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709170006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709187478",
      "pull_request_review_id": 2227399035,
      "id": 1709187478,
      "node_id": "PRRC_kwDOABII585l4CGW",
      "diff_hunk": "@@ -276,8 +273,8 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ## Other commands:\n \n ```shell",
      "path": "doc/build-osx.md",
      "position": 129,
      "original_position": 125,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: slightly unrelated, but in other cases similar code blocks are annotated as either \"\\```bash\" or \"```sh\" which are treated a bit different in e.g. CLion:\r\n<img src=\"https://github.com/user-attachments/assets/13f30a0a-1f92-4a39-87ce-8ca11a05a44f\">\r\n\r\nAlso note that \"\\``` bash\" is also a formatted differently than \"```bash\".\r\n\r\nShould probably be done in a different PR, though...",
      "created_at": "2024-08-08T10:37:42Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709187478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709187478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 272,
      "original_line": 272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709206550",
      "pull_request_review_id": 2227399035,
      "id": 1709206550,
      "node_id": "PRRC_kwDOABII585l4GwW",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Do not use generator expressions in test sources because the\n+# SOURCES property is processed to gather test suite macros.\n+target_sources(test_bitcoin\n+  PRIVATE\n+    init_test_fixture.cpp\n+    wallet_test_fixture.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: not very important, but can help with avoiding merge conflicts if we always sort these alphabetically (would be nice to have an automatic check for these, of course).\r\nUnless this is deliberate, in which case a comment could help.",
      "created_at": "2024-08-08T10:49:25Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709206550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709206550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709270807",
      "pull_request_review_id": 2227399035,
      "id": 1709270807,
      "node_id": "PRRC_kwDOABII585l4WcX",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+file(READ ${RAW_SOURCE_PATH} hex_content HEX)\n+string(REGEX MATCHALL \"([A-Za-z0-9][A-Za-z0-9])\" bytes \"${hex_content}\")",
      "path": "cmake/script/GenerateHeaderFromRaw.cmake",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wanted to suggest`\"([A-Za-z0-9]{2})\"` (or `\\w{2}`), but it seems the regex parser was written almost 40 years ago https://github.com/Kitware/CMake/blob/master/Source/kwsys/RegularExpression.cxx#L628",
      "created_at": "2024-08-08T11:24:50Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709270807",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709270807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709278334",
      "pull_request_review_id": 2227399035,
      "id": 1709278334,
      "node_id": "PRRC_kwDOABII585l4YR-",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there any way I could help here?",
      "created_at": "2024-08-08T11:29:40Z",
      "updated_at": "2024-08-08T11:36:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709278334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709278334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709374557",
      "pull_request_review_id": 2227710747,
      "id": 1709374557,
      "node_id": "PRRC_kwDOABII585l4vxd",
      "diff_hunk": "@@ -25,10 +24,10 @@ pkgin install gcc12\n \n Then, when configuring, pass the following:\n ```bash\n-./configure\n+cmake -B build\n     ...\n-    CC=\"/usr/pkg/gcc12/bin/gcc\" \\\n-    CXX=\"/usr/pkg/gcc12/bin/g++\" \\\n+    -DCMAKE_C_COMPILER=\"/usr/pkg/gcc12/bin/gcc\" \\\n+    -DCMAKE_CXX_COMPILER=\"/usr/pkg/gcc12/bin/g++\" \\",
      "path": "doc/build-netbsd.md",
      "position": 20,
      "original_position": 20,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709170006,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The quoting style was inherited from the master branch. Such an approach makes the diff easier to review.",
      "created_at": "2024-08-08T12:24:31Z",
      "updated_at": "2024-08-08T12:24:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709374557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709374557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 29,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709388813",
      "pull_request_review_id": 2227726740,
      "id": 1709388813,
      "node_id": "PRRC_kwDOABII585l4zQN",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+file(READ ${RAW_SOURCE_PATH} hex_content HEX)\n+string(REGEX MATCHALL \"([A-Za-z0-9][A-Za-z0-9])\" bytes \"${hex_content}\")",
      "path": "cmake/script/GenerateHeaderFromRaw.cmake",
      "position": 6,
      "original_position": 6,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709270807,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes. The CMake [Regex Specification](https://cmake.org/cmake/help/latest/command/string.html#regex-specification) does not include `\\w` support.",
      "created_at": "2024-08-08T12:31:17Z",
      "updated_at": "2024-08-08T12:31:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709388813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709388813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709396728",
      "pull_request_review_id": 2227736762,
      "id": 1709396728,
      "node_id": "PRRC_kwDOABII585l41L4",
      "diff_hunk": "@@ -276,8 +273,8 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ## Other commands:\n \n ```shell",
      "path": "doc/build-osx.md",
      "position": 129,
      "original_position": 125,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709187478,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This PR is intended to focus solely on migration. It helps to review it a lot.\r\n\r\n> Should probably be done in a different PR, though...\r\n\r\nI agree.",
      "created_at": "2024-08-08T12:35:20Z",
      "updated_at": "2024-08-08T12:35:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709396728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709396728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 272,
      "original_line": 272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709569185",
      "pull_request_review_id": 2227970156,
      "id": 1709569185,
      "node_id": "PRRC_kwDOABII585l5fSh",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've tested on macOS Monterey 12.7.6 (Intel) with Homebrew's `llvm@16`. Everything works flawlessly.\r\n\r\n> Is there any way I could help here?\r\n\r\nMind providing full _verbose_ build logs for both Autotools and CMake please?",
      "created_at": "2024-08-08T13:56:37Z",
      "updated_at": "2024-08-08T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1709569185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709569185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710058792",
      "pull_request_review_id": 2228575499,
      "id": 1710058792,
      "node_id": "PRRC_kwDOABII585l7W0o",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is a TODO comment. I'll update it if/when this file will be touched for other changes.",
      "created_at": "2024-08-08T18:24:14Z",
      "updated_at": "2024-08-08T18:24:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710058792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710058792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710065883",
      "pull_request_review_id": 2228584463,
      "id": 1710065883,
      "node_id": "PRRC_kwDOABII585l7Yjb",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Do not use generator expressions in test sources because the\n+# SOURCES property is processed to gather test suite macros.\n+target_sources(test_bitcoin\n+  PRIVATE\n+    init_test_fixture.cpp\n+    wallet_test_fixture.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709206550,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Source files were separated in two groups: fixtures and tests themselves. Both groups are sorted alphabetically.\r\n\r\nThat seemed convenient to me while I was working on this script.",
      "created_at": "2024-08-08T18:29:12Z",
      "updated_at": "2024-08-08T18:29:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710065883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710065883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710280041",
      "pull_request_review_id": 2228841738,
      "id": 1710280041,
      "node_id": "PRRC_kwDOABII585l8M1p",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The problem was that [brew gcc](https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468) and Xcode 15 have an duplicate lib:\r\n> ld: warning: ignoring duplicate libraries: '-lc++'gs)\r\n\r\nBut since we've [enabled fatal warnings](https://github.com/bitcoin/bitcoin/blob/166e9fa9a0e8b1d84cce96b447e52a46e043cb40/cmake/module/TryAppendLinkerFlag.cmake#L82) for Mac, we're getting:\r\n> ld: fatal warning(s) induced error (-fatal_warnings)\r\n\r\nBased on:\r\nhttps://stackoverflow.com/questions/77164140/ld-warning-ignoring-duplicate-libraries-lgcc-after-the-recent-update-of-xc we should be able to work around it:\r\n```patch\r\ndiff --git a/cmake/module/TryAppendLinkerFlag.cmake b/cmake/module/TryAppendLinkerFlag.cmake\r\n--- a/cmake/module/TryAppendLinkerFlag.cmake\t(revision ec5d1c372b20d49147813aa0392195a3642b86a1)\r\n+++ b/cmake/module/TryAppendLinkerFlag.cmake\t(date 1723148834055)\r\n@@ -79,7 +79,7 @@\r\n if(MSVC)\r\n   try_append_linker_flag(\"/WX\" VAR working_linker_werror_flag)\r\n elseif(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\r\n-  try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)\r\n+  try_append_linker_flag(\"-Wl,-no_warn_duplicate_libraries,-fatal_warnings\" VAR working_linker_werror_flag) # https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468\r\n else()\r\n   try_append_linker_flag(\"-Wl,--fatal-warnings\" VAR working_linker_werror_flag)\r\n endif()\r\n```\r\n\r\nwhich makes building with fuzz possible:\r\n> ld: warning: ignoring duplicate libraries: '-lc++', '../../../libleveldb.a', '../../../libminisketch.a', '../../libbitcoin_common.a', '../../secp256k1/src/libsecp256k1.a', '../../univalue/libunivalue.a'\r\n[100%] Built target fuzz\r\n\r\nand fuzzing can start (with the same error as the Autotools version)\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n% FUZZ=bech32 ./build_fuzz/src/test/fuzz/fuzz  \r\nfuzz(91171,0x2060fcc00) malloc: nano zone abandoned due to inability to reserve vm space.\r\n/opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:495:12: runtime error: call to function decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) through pointer to incorrect function type 'void (*)((lambda at /opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:814:11) &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &&)'\r\nvariant:532: note: decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) defined here\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /opt/homebrew/opt/llvm/bin/../include/c++/v1/variant:495:12 \r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 534925934\r\nINFO: Loaded 1 modules   (1210318 inline 8-bit counters): 1210318 [0x105d56048, 0x105e7d816), \r\nINFO: Loaded 1 PC tables (1210318 PCs): 1210318 [0x105e7d818,0x1070f54f8), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2      INITED cov: 294 ft: 294 corp: 1/1b exec/s: 0 rss: 74Mb\r\n#3      NEW    cov: 294 ft: 298 corp: 2/2b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n#5      NEW    cov: 295 ft: 301 corp: 3/3b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 2 ShuffleBytes-ChangeBit-\r\n#6      NEW    cov: 295 ft: 303 corp: 4/4b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n#7      NEW    cov: 295 ft: 305 corp: 5/5b lim: 4 exec/s: 0 rss: 74Mb L: 1/1 MS: 1 ChangeBit-\r\n\r\n</details>",
      "created_at": "2024-08-08T20:49:35Z",
      "updated_at": "2024-08-08T20:49:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710280041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711061417",
      "pull_request_review_id": 2229678578,
      "id": 1711061417,
      "node_id": "PRRC_kwDOABII585l_Lmp",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The problem was that [brew gcc](https://github.com/orgs/Homebrew/discussions/4794#discussioncomment-7044468) and Xcode 15 have an duplicate lib:\r\n\r\nNot sure, given that we aren't using Brew GCC, or Xcode, and the machine I tested on doesn't have either of them installed. The warning output might match, but I don't think this is the correct explanation (and it doesn't explain why it doesn't happen for Autotools build).",
      "created_at": "2024-08-09T08:41:50Z",
      "updated_at": "2024-08-09T08:41:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711061417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711061417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711130542",
      "pull_request_review_id": 2229763892,
      "id": 1711130542,
      "node_id": "PRRC_kwDOABII585l_ceu",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This definitely fixed it for me, how can I help with the other cases you've mentioned?",
      "created_at": "2024-08-09T09:25:01Z",
      "updated_at": "2024-08-09T09:25:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711130542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711130542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711152030",
      "pull_request_review_id": 2229790869,
      "id": 1711152030,
      "node_id": "PRRC_kwDOABII585l_hue",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> and it doesn't explain why it doesn't happen for Autotools build\r\n\r\nAutotools lack `-Wl,-fatal_warnings` in the following check: https://github.com/bitcoin/bitcoin/blob/24ced5274438c0185963ae1296ec7dda97ea62f1/configure.ac#L365-L375",
      "created_at": "2024-08-09T09:39:19Z",
      "updated_at": "2024-08-09T09:39:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711152030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711152030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711157307",
      "pull_request_review_id": 2229797469,
      "id": 1711157307,
      "node_id": "PRRC_kwDOABII585l_jA7",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, but it's still not clear why a compiler we don't use / isn't installed, would be adding libraries to the link line.",
      "created_at": "2024-08-09T09:42:47Z",
      "updated_at": "2024-08-09T09:42:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711157307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711157307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711188855",
      "pull_request_review_id": 2229838062,
      "id": 1711188855,
      "node_id": "PRRC_kwDOABII585l_qt3",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The proposed `-no_warn_duplicate_libraries` will only fix it for duplicate libs warnings (but any other warning would fail the build). Can we check if we're getting any other warning - or whether the above change fixes it?",
      "created_at": "2024-08-09T10:05:01Z",
      "updated_at": "2024-08-09T10:05:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711188855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711188855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711197957",
      "pull_request_review_id": 2229849600,
      "id": 1711197957,
      "node_id": "PRRC_kwDOABII585l_s8F",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "On Arm Mac I get the same configuration problem. In the logs I'm seeing:\r\n\r\n```shell\r\nld: warning: ignoring duplicate libraries: '-lc++'\r\nld: fatal warning(s) induced error (-fatal_warnings)\r\n```\r\n\r\nIt works with autotools (perhaps warnings aren't errors in the configure tests?). I've passed the full log to @hebasto.",
      "created_at": "2024-08-09T10:11:44Z",
      "updated_at": "2024-08-09T10:11:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711197957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711197957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711200712",
      "pull_request_review_id": 2229853644,
      "id": 1711200712,
      "node_id": "PRRC_kwDOABII585l_tnI",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@m3dwards \r\n\r\n> It works with autotools (perhaps warnings aren't errors in the configure tests?).\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711152030",
      "created_at": "2024-08-09T10:13:57Z",
      "updated_at": "2024-08-09T10:13:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711200712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711200712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711219004",
      "pull_request_review_id": 2229877693,
      "id": 1711219004,
      "node_id": "PRRC_kwDOABII585l_yE8",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@hebasto I had a stale version of this page open and hadn't seen the latest comments 🤦",
      "created_at": "2024-08-09T10:27:43Z",
      "updated_at": "2024-08-09T10:27:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711219004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711219004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711246805",
      "pull_request_review_id": 2229912517,
      "id": 1711246805,
      "node_id": "PRRC_kwDOABII585l_43V",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Similar problem: https://github.com/orgs/Homebrew/discussions/4794",
      "created_at": "2024-08-09T10:49:41Z",
      "updated_at": "2024-08-09T10:49:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711246805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711246805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711262045",
      "pull_request_review_id": 2229932275,
      "id": 1711262045,
      "node_id": "PRRC_kwDOABII585l_8ld",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "On my macOS Sonoma 14.6.1:\r\n```\r\n% cat test.cpp \r\nint main() {}\r\n% /opt/homebrew/opt/llvm/bin/clang++ --version\r\nHomebrew clang version 18.1.8\r\nTarget: arm64-apple-darwin23.6.0\r\nThread model: posix\r\nInstalledDir: /opt/homebrew/opt/llvm/bin\r\n% /opt/homebrew/opt/llvm/bin/clang++ -fsanitize=fuzzer -o test test.cpp\r\nld: warning: ignoring duplicate libraries: '-lc++'\r\n```\r\n\r\nUPD. Same for the `llvm@17` package, which provides `clang version 17.0.6`.\r\n\r\nUPD 2. Same for the `llvm@16` package, which provides `clang version 16.0.6`.",
      "created_at": "2024-08-09T11:01:47Z",
      "updated_at": "2024-08-09T11:19:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711262045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711262045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711302662",
      "pull_request_review_id": 2229980539,
      "id": 1711302662,
      "node_id": "PRRC_kwDOABII585mAGgG",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Similar problem: [github.com/orgs/Homebrew/discussions/4794](https://github.com/orgs/Homebrew/discussions/4794)\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "created_at": "2024-08-09T11:33:53Z",
      "updated_at": "2024-08-09T11:33:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711302662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711302662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711338908",
      "pull_request_review_id": 2230023787,
      "id": 1711338908,
      "node_id": "PRRC_kwDOABII585mAPWc",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As an alternative workaround, I'd suggest to use an extra configuration option `-DAPPEND_LDFLAGS=\"-Wl,-no_warn_duplicate_libraries\"`.",
      "created_at": "2024-08-09T12:01:43Z",
      "updated_at": "2024-08-09T12:01:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711338908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711338908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711371725",
      "pull_request_review_id": 2230064800,
      "id": 1711371725,
      "node_id": "PRRC_kwDOABII585mAXXN",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "btw, is it expected that modifying `TryAppendLinkerFlag.cmake` (e.g. the `try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)` line) and rerunning `cmake -B build_fuzz` ignores the update? Shouldn't it detect that this file was changed?\r\nI need to `rm -rfd build_fuzz && cmake -B build_fuzz` for it to be picked up.",
      "created_at": "2024-08-09T12:26:08Z",
      "updated_at": "2024-08-09T12:27:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711371725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711371725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711383749",
      "pull_request_review_id": 2230080151,
      "id": 1711383749,
      "node_id": "PRRC_kwDOABII585mAaTF",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As a side note, the UBSan errors observed [here](https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041) are not caused by CMake. Other people have observed the same Mac specific behavior with autotools: https://github.com/bitcoin/bitcoin/pull/30413#issuecomment-2260863971.",
      "created_at": "2024-08-09T12:34:45Z",
      "updated_at": "2024-08-09T12:34:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711383749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711383749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711390540",
      "pull_request_review_id": 2230089485,
      "id": 1711390540,
      "node_id": "PRRC_kwDOABII585mAb9M",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> errors observed https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041 are not caused by CMake\r\n\r\nYeah, my example in https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1707893570 was also in Autotools.\r\nThe same happens with CMake in https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1710280041",
      "created_at": "2024-08-09T12:39:40Z",
      "updated_at": "2024-08-09T12:39:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711390540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711390540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711401797",
      "pull_request_review_id": 2230103501,
      "id": 1711401797,
      "node_id": "PRRC_kwDOABII585mAetF",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> btw, is it expected that modifying `TryAppendLinkerFlag.cmake` (e.g. the `try_append_linker_flag(\"-Wl,-fatal_warnings\" VAR working_linker_werror_flag)` line) and rerunning `cmake -B build_fuzz` ignores the update?\r\n\r\nYes, that is because the result is cached.",
      "created_at": "2024-08-09T12:47:22Z",
      "updated_at": "2024-08-09T12:49:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711401797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711401797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711403435",
      "pull_request_review_id": 2230105806,
      "id": 1711403435,
      "node_id": "PRRC_kwDOABII585mAfGr",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Of course, but shouldn't this change invalidate the cache?",
      "created_at": "2024-08-09T12:48:37Z",
      "updated_at": "2024-08-09T12:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711403435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711403435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711409392",
      "pull_request_review_id": 2230113768,
      "id": 1711409392,
      "node_id": "PRRC_kwDOABII585mAgjw",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Apparently, not every change invalidates the cache. Mind reporting to https://gitlab.kitware.com/cmake/cmake/-/issues?",
      "created_at": "2024-08-09T12:52:54Z",
      "updated_at": "2024-08-09T12:52:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711409392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711409392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711452798",
      "pull_request_review_id": 2230175418,
      "id": 1711452798,
      "node_id": "PRRC_kwDOABII585mArJ-",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:19:41Z",
      "updated_at": "2024-08-09T13:19:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711452798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711452798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453187",
      "pull_request_review_id": 2230175825,
      "id": 1711453187,
      "node_id": "PRRC_kwDOABII585mArQD",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:19:54Z",
      "updated_at": "2024-08-09T13:19:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453782",
      "pull_request_review_id": 2230176570,
      "id": 1711453782,
      "node_id": "PRRC_kwDOABII585mArZW",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> As an alternative workaround, I'd suggest to use an extra configuration option `-DAPPEND_LDFLAGS=\"-Wl,-no_warn_duplicate_libraries\"`.\r\n\r\nAddressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:20:15Z",
      "updated_at": "2024-08-09T13:20:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453934",
      "pull_request_review_id": 2230176835,
      "id": 1711453934,
      "node_id": "PRRC_kwDOABII585mArbu",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in https://github.com/hebasto/bitcoin/pull/316.",
      "created_at": "2024-08-09T13:20:23Z",
      "updated_at": "2024-08-09T13:20:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711453934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711453934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711661191",
      "pull_request_review_id": 2230464760,
      "id": 1711661191,
      "node_id": "PRRC_kwDOABII585mBeCH",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I noticed that there are still a few leftover `make` reference in this file, and in other documentation: are we planning on updating them here or in a separate pr, e.g. when removing Autotools?\r\n\r\nI searched for other possible `make` references revealed a few:\r\n* https://github.com/bitcoin/bitcoin/blob/5ebb4063571aabd89c2d7ed6c2e70d27636efdeb/src/test/README.md?plain=1#L18-L24\r\n* https://github.com/bitcoin/bitcoin/blob/183e2fd6b55d84829faf70ba74d3f8865807772a/src/secp256k1/doc/release-process.md?plain=1#L20-L23\r\n* https://github.com/bitcoin/bitcoin/blob/14093d5d243f6eb9cfef721c80f92848d95032ee/doc/productivity.md?plain=1#L68\r\n* https://github.com/bitcoin/bitcoin/blob/463356d8b8948df118eda269827ca1a6da7d3132/depends/README.md?plain=1#L99\r\n* https://github.com/bitcoin/bitcoin/blob/d8513fe41102dcbfc05235f3b95e33eb1878f880/doc/benchmarking.md?plain=1#L16\r\n* https://github.com/bitcoin/bitcoin/blob/fad444f6e1b1ce5c1572c773db4a9a098c7a0b96/contrib/guix/INSTALL.md?plain=1#L244-L261\r\n* https://github.com/bitcoin/bitcoin/blob/fad444f6e1b1ce5c1572c773db4a9a098c7a0b96/contrib/guix/README.md?plain=1#L263\r\n* https://github.com/bitcoin/bitcoin/blob/fadb06c361bbda78192d89fd06195f0aa5418c56/test/README.md?plain=1#L16\r\n* https://github.com/bitcoin/bitcoin/blob/faeb5b59a098578b3e8c552d35b5ba02b12af14d/README.md?plain=1#L51",
      "created_at": "2024-08-09T15:17:34Z",
      "updated_at": "2024-08-09T15:17:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711661191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711661191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711674603",
      "pull_request_review_id": 2230482172,
      "id": 1711674603,
      "node_id": "PRRC_kwDOABII585mBhTr",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> are we planning on updating them here or in a separate pr, e.g. when removing Autotools?\r\n\r\nHere. Feel free to open a PR in https://github.com/hebasto/bitcoin/pulls against the `cmake-staging` branch. After merging, the changes will be pulled in here during the next update.\r\n\r\nUPD. Not all mentioned cases are related to CMake migration. For instance, depends still use the GNU Make.",
      "created_at": "2024-08-09T15:26:24Z",
      "updated_at": "2024-08-09T15:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1711674603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711674603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605045",
      "pull_request_review_id": 2231402133,
      "id": 1712605045,
      "node_id": "PRRC_kwDOABII585mFEd1",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Q: given that FUZZ and BENCH are disabled by default, would it maybe make sense to make them separate projects? I'm not exactly familiar with what that would involve and don't have strong arguments either way, was just wondering when investigating some other cmake related issue.",
      "created_at": "2024-08-10T08:28:16Z",
      "updated_at": "2024-08-10T10:46:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712605045",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605154",
      "pull_request_review_id": 2231402133,
      "id": 1712605154,
      "node_id": "PRRC_kwDOABII585mFEfi",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\n+  aes.cpp\n+  chacha20.cpp\n+  chacha20poly1305.cpp\n+  hex_base.cpp\n+  hkdf_sha256_32.cpp\n+  hmac_sha256.cpp\n+  hmac_sha512.cpp\n+  poly1305.cpp",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: alphabetic ordering?\r\n```patch\r\ndiff --git a/src/crypto/CMakeLists.txt b/src/crypto/CMakeLists.txt\r\n--- a/src/crypto/CMakeLists.txt\t(revision 92f7fc21768b0d898655d68b5d76ff09ff71c682)\r\n+++ b/src/crypto/CMakeLists.txt\t(date 1723279760256)\r\n@@ -4,19 +4,19 @@\r\n \r\n add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\r\n   aes.cpp\r\n-  chacha20.cpp\r\n   chacha20poly1305.cpp\r\n+  chacha20.cpp\r\n   hex_base.cpp\r\n   hkdf_sha256_32.cpp\r\n   hmac_sha256.cpp\r\n   hmac_sha512.cpp\r\n-  poly1305.cpp\r\n   muhash.cpp\r\n+  poly1305.cpp\r\n   ripemd160.cpp\r\n   sha1.cpp\r\n-  sha256.cpp\r\n-  sha256_sse4.cpp\r\n   sha3.cpp\r\n+  sha256_sse4.cpp\r\n+  sha256.cpp\r\n   sha512.cpp\r\n   siphash.cpp\r\n   ../support/cleanse.cpp\r\n```",
      "created_at": "2024-08-10T08:29:20Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712605154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712605154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712620747",
      "pull_request_review_id": 2231402133,
      "id": 1712620747,
      "node_id": "PRRC_kwDOABII585mFITL",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Apparently, not every change invalidates the cache\r\n\r\nMy understanding is that we're already avoiding the recompilation when the source didn't change, but when `working_linker_werror_flag` changes, that's ignored.\r\nI haven't opened a bug report to CMake since it seems to me we can fix it ourselved, see: https://github.com/hebasto/bitcoin/pull/319",
      "created_at": "2024-08-10T10:35:02Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712620747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712620747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621112",
      "pull_request_review_id": 2231402133,
      "id": 1712621112,
      "node_id": "PRRC_kwDOABII585mFIY4",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Wallet functionality used by bitcoind and bitcoin-wallet executables.\n+add_library(bitcoin_wallet STATIC EXCLUDE_FROM_ALL\n+  coincontrol.cpp\n+  coinselection.cpp\n+  context.cpp\n+  crypter.cpp\n+  db.cpp\n+  dump.cpp\n+  external_signer_scriptpubkeyman.cpp\n+  feebumper.cpp\n+  fees.cpp\n+  interfaces.cpp\n+  load.cpp\n+  migrate.cpp\n+  receive.cpp\n+  rpc/addresses.cpp\n+  rpc/backup.cpp\n+  rpc/coins.cpp\n+  rpc/encrypt.cpp\n+  rpc/spend.cpp\n+  rpc/signmessage.cpp",
      "path": "src/wallet/CMakeLists.txt",
      "position": null,
      "original_position": 25,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit, feel free to ignore these if not important:\r\n```suggestion\r\n  rpc/spend.cpp\r\n  rpc/signmessage.cpp\r\n```",
      "created_at": "2024-08-10T10:37:40Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712621112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621771",
      "pull_request_review_id": 2231402133,
      "id": 1712621771,
      "node_id": "PRRC_kwDOABII585mFIjL",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.\n+add_custom_target(generate_build_info\n+  BYPRODUCTS ${PROJECT_BINARY_DIR}/src/obj/build.h\n+  COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/src/obj\n+  COMMAND ${CMAKE_COMMAND} -DBUILD_INFO_HEADER_PATH=${PROJECT_BINARY_DIR}/src/obj/build.h -DSOURCE_DIR=${PROJECT_SOURCE_DIR} -P ${PROJECT_SOURCE_DIR}/cmake/script/GenerateBuildInfo.cmake\n+  COMMENT \"Generating obj/build.h\"\n+  VERBATIM\n+)\n+add_library(bitcoin_clientversion OBJECT EXCLUDE_FROM_ALL\n+  clientversion.cpp\n+)\n+target_compile_definitions(bitcoin_clientversion\n+  PRIVATE\n+    HAVE_BUILD_INFO\n+)\n+target_link_libraries(bitcoin_clientversion\n+  PRIVATE\n+    core_interface\n+)\n+add_dependencies(bitcoin_clientversion generate_build_info)\n+\n+add_subdirectory(crypto)\n+add_subdirectory(univalue)\n+add_subdirectory(util)\n+if(WITH_MULTIPROCESS)\n+  add_subdirectory(ipc)\n+endif()\n+\n+#=============================\n+# secp256k1 subtree\n+#=============================\n+message(\"\")\n+message(\"Configuring secp256k1 subtree...\")\n+set(SECP256K1_DISABLE_SHARED ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_ECDH OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_RECOVERY ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_BENCHMARK OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXHAUSTIVE_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXAMPLES OFF CACHE BOOL \"\" FORCE)\n+include(GetTargetInterface)\n+# -fsanitize and related flags apply to both C++ and C,\n+# so we can pass them down to libsecp256k1 as CFLAGS.\n+get_target_interface(core_sanitizer_cxx_flags \"\" sanitize_interface COMPILE_OPTIONS)\n+set(SECP256K1_LATE_CFLAGS ${core_sanitizer_cxx_flags} CACHE STRING \"\" FORCE)\n+unset(core_sanitizer_cxx_flags)\n+# We want to build libsecp256k1 with the most tested RelWithDebInfo configuration.\n+enable_language(C)\n+foreach(config IN LISTS CMAKE_BUILD_TYPE CMAKE_CONFIGURATION_TYPES)\n+  if(config STREQUAL \"\")\n+    continue()\n+  endif()\n+  string(TOUPPER \"${config}\" config)\n+  set(CMAKE_C_FLAGS_${config} \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+endforeach()\n+# If the CFLAGS environment variable is defined during building depends\n+# and configuring this build system, its content might be duplicated.\n+if(DEFINED ENV{CFLAGS})\n+  deduplicate_flags(CMAKE_C_FLAGS)\n+endif()\n+set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n+add_subdirectory(secp256k1)\n+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+string(APPEND CMAKE_C_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CFLAGS}\")\n+\n+# Stable, backwards-compatible consensus functionality.\n+add_library(bitcoin_consensus STATIC EXCLUDE_FROM_ALL\n+  arith_uint256.cpp\n+  consensus/merkle.cpp\n+  consensus/tx_check.cpp\n+  hash.cpp\n+  primitives/block.cpp\n+  primitives/transaction.cpp\n+  pubkey.cpp\n+  script/interpreter.cpp\n+  script/script.cpp\n+  script/script_error.cpp\n+  uint256.cpp\n+)\n+target_link_libraries(bitcoin_consensus\n+  PRIVATE\n+    core_interface\n+    bitcoin_crypto\n+    secp256k1\n+)\n+\n+if(WITH_ZMQ)\n+  add_subdirectory(zmq)\n+endif()\n+\n+# Home for common functionality shared by different executables and libraries.\n+# Similar to `bitcoin_util` library, but higher-level.\n+add_library(bitcoin_common STATIC EXCLUDE_FROM_ALL\n+  addresstype.cpp",
      "path": "src/CMakeLists.txt",
      "position": 106,
      "original_position": 106,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit:\r\n```patch\r\ndiff --git a/src/CMakeLists.txt b/src/CMakeLists.txt\r\n--- a/src/CMakeLists.txt\t(revision 92f7fc21768b0d898655d68b5d76ff09ff71c682)\r\n+++ b/src/CMakeLists.txt\t(date 1723286445028)\r\n@@ -106,8 +106,8 @@\r\n   addresstype.cpp\r\n   base58.cpp\r\n   bech32.cpp\r\n-  chainparamsbase.cpp\r\n   chainparams.cpp\r\n+  chainparamsbase.cpp\r\n   coins.cpp\r\n   common/args.cpp\r\n   common/bloom.cpp\r\n@@ -130,18 +130,18 @@\r\n   key.cpp\r\n   key_io.cpp\r\n   merkleblock.cpp\r\n+  net_permissions.cpp\r\n   net_types.cpp\r\n   netaddress.cpp\r\n   netbase.cpp\r\n-  net_permissions.cpp\r\n   outputtype.cpp\r\n   policy/feerate.cpp\r\n   policy/policy.cpp\r\n   protocol.cpp\r\n   psbt.cpp\r\n+  rpc/external_signer.cpp\r\n   rpc/rawtransaction_util.cpp\r\n   rpc/request.cpp\r\n-  rpc/external_signer.cpp\r\n   rpc/util.cpp\r\n   scheduler.cpp\r\n   script/descriptor.cpp\r\n```",
      "created_at": "2024-08-10T10:41:31Z",
      "updated_at": "2024-08-10T10:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712621771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712621771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712625608",
      "pull_request_review_id": 2231420769,
      "id": 1712625608,
      "node_id": "PRRC_kwDOABII585mFJfI",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could you elaborate please? What are the benefits of maintaining the build system in separate projects? Is this practice used by other open-source projects?",
      "created_at": "2024-08-10T11:11:54Z",
      "updated_at": "2024-08-10T11:11:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712625608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712625608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626562",
      "pull_request_review_id": 2231421684,
      "id": 1712626562,
      "node_id": "PRRC_kwDOABII585mFJuC",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(CheckCXXSourceCompiles)\n+include(CheckCXXSymbolExists)\n+include(CheckIncludeFileCXX)\n+\n+# The following HAVE_{HEADER}_H variables go to the bitcoin-config.h header.\n+check_include_file_cxx(sys/prctl.h HAVE_SYS_PRCTL_H)\n+check_include_file_cxx(sys/resources.h HAVE_SYS_RESOURCES_H)\n+check_include_file_cxx(sys/vmmeter.h HAVE_SYS_VMMETER_H)\n+check_include_file_cxx(vm/vm_param.h HAVE_VM_VM_PARAM_H)\n+\n+check_cxx_symbol_exists(O_CLOEXEC \"fcntl.h\" HAVE_O_CLOEXEC)\n+\n+check_include_file_cxx(unistd.h HAVE_UNISTD_H)\n+if(HAVE_UNISTD_H)\n+  check_cxx_symbol_exists(fdatasync \"unistd.h\" HAVE_FDATASYNC)\n+  check_cxx_symbol_exists(fork \"unistd.h\" HAVE_DECL_FORK)\n+  check_cxx_symbol_exists(pipe2 \"unistd.h\" HAVE_DECL_PIPE2)\n+  check_cxx_symbol_exists(setsid \"unistd.h\" HAVE_DECL_SETSID)\n+endif()\n+\n+check_include_file_cxx(sys/types.h HAVE_SYS_TYPES_H)\n+check_include_file_cxx(ifaddrs.h HAVE_IFADDRS_H)\n+if(HAVE_SYS_TYPES_H AND HAVE_IFADDRS_H)\n+  include(TestAppendRequiredLibraries)\n+  test_append_socket_library(core_interface)\n+endif()\n+\n+include(TestAppendRequiredLibraries)\n+test_append_atomic_library(core_interface)\n+\n+check_cxx_symbol_exists(std::system \"cstdlib\" HAVE_STD_SYSTEM)\n+check_cxx_symbol_exists(::_wsystem \"stdlib.h\" HAVE__WSYSTEM)\n+if(HAVE_STD_SYSTEM OR HAVE__WSYSTEM)\n+  set(HAVE_SYSTEM 1)\n+endif()\n+\n+check_include_file_cxx(string.h HAVE_STRING_H)",
      "path": "cmake/introspection.cmake",
      "position": null,
      "original_position": 41,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707417887,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:19:23Z",
      "updated_at": "2024-08-10T11:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626637",
      "pull_request_review_id": 2231421733,
      "id": 1712626637,
      "node_id": "PRRC_kwDOABII585mFJvN",
      "diff_hunk": "@@ -131,10 +142,14 @@ You may also need to take care of giving the correct path for `clang` and\n `clang++`, like `CC=/path/to/clang CXX=/path/to/clang++` if the non-systems\n `clang` does not come first in your path.\n \n-Full configure that was tested on macOS with `brew` installed `llvm`:\n+Full configuration step that was tested on macOS with `brew` installed `llvm`:\n \n ```sh\n-./configure --enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer \\",
      "path": "doc/fuzzing.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707740750,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:19:51Z",
      "updated_at": "2024-08-10T11:19:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626646",
      "pull_request_review_id": 2231421742,
      "id": 1712626646,
      "node_id": "PRRC_kwDOABII585mFJvW",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be controversial, but other Bitcoin clones seem to split into multiple projects after their CMake migrations: \r\n* https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/bench/CMakeLists.txt#L3\r\n* https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/src/bench/CMakeLists.txt#L3\r\n* https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/test/CMakeLists.txt#L5",
      "created_at": "2024-08-10T11:19:57Z",
      "updated_at": "2024-08-10T11:19:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626661",
      "pull_request_review_id": 2231421765,
      "id": 1712626661,
      "node_id": "PRRC_kwDOABII585mFJvl",
      "diff_hunk": "@@ -150,16 +165,18 @@ $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n $ git clone https://github.com/AFLplusplus/AFLplusplus\n $ make -C AFLplusplus/ source-only\n-$ ./autogen.sh\n # If afl-clang-lto is not available, see\n # https://github.com/AFLplusplus/AFLplusplus#a-selecting-the-best-afl-compiler-for-instrumenting-the-target\n-$ CC=$(pwd)/AFLplusplus/afl-clang-lto CXX=$(pwd)/AFLplusplus/afl-clang-lto++ ./configure --enable-fuzz\n-$ make\n-# For macOS you may need to ignore x86 compilation checks when running \"make\". If so,\n-# try compiling using: AFL_NO_X86=1 make\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto\" \\\n+   -DCMAKE_CXX_COMPILER=\"$(pwd)/AFLplusplus/afl-clang-lto++\" \\\n+   -DBUILD_FOR_FUZZING=ON\n+$ cmake --build build_fuzz -j$(nproc)\n+# For macOS you may need to ignore x86 compilation checks when running \"cmake --build\". If so,\n+# try compiling using: `AFL_NO_X86=1 cmake --build build_fuzz -j$(nproc)`",
      "path": "doc/fuzzing.md",
      "position": null,
      "original_position": 107,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707746253,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:20:09Z",
      "updated_at": "2024-08-10T11:20:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626746",
      "pull_request_review_id": 2231421861,
      "id": 1712626746,
      "node_id": "PRRC_kwDOABII585mFJw6",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.",
      "path": "src/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1709105914,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:21:11Z",
      "updated_at": "2024-08-10T11:21:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712626746",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712626746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627020",
      "pull_request_review_id": 2231422085,
      "id": 1712627020,
      "node_id": "PRRC_kwDOABII585mFJ1M",
      "diff_hunk": "@@ -7,12 +7,15 @@ To quickly get started fuzzing Bitcoin Core using [libFuzzer](https://llvm.org/d\n ```sh\n $ git clone https://github.com/bitcoin/bitcoin\n $ cd bitcoin/\n-$ ./autogen.sh\n-$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n+$ cmake -B build_fuzz \\\n+   -DCMAKE_C_COMPILER=\"clang\" \\\n+   -DCMAKE_CXX_COMPILER=\"clang++\" \\\n+   -DBUILD_FOR_FUZZING=ON \\\n+   -DSANITIZERS=undefined,address,fuzzer",
      "path": "doc/fuzzing.md",
      "position": 10,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1707821187,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I wasn't able to run the fuzz tests with cmake\r\n\r\nResolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2281111100.",
      "created_at": "2024-08-10T11:23:09Z",
      "updated_at": "2024-08-10T11:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712627020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627346",
      "pull_request_review_id": 2231422341,
      "id": 1712627346,
      "node_id": "PRRC_kwDOABII585mFJ6S",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Still curios about:\r\n> What are the benefits of maintaining the build system in separate projects?",
      "created_at": "2024-08-10T11:25:46Z",
      "updated_at": "2024-08-10T11:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712627346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712627346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712628124",
      "pull_request_review_id": 2231422999,
      "id": 1712628124,
      "node_id": "PRRC_kwDOABII585mFKGc",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm also curious, that's what I'm asking basically, why did the other clones decide to do this differently.\r\n\r\nI could only find general `Modularity and Reusability/Scalability/Improved Dependency Management/Isolation of Build Configurations` arguments online, but not sure any applies here, hence my question.",
      "created_at": "2024-08-10T11:32:08Z",
      "updated_at": "2024-08-10T11:32:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712628124",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712628124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712633831",
      "pull_request_review_id": 2231428308,
      "id": 1712633831,
      "node_id": "PRRC_kwDOABII585mFLfn",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Might be controversial, but other Bitcoin clones seem to split into multiple projects after their CMake migrations:\r\n> \r\n>    * https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/bench/CMakeLists.txt#L3\r\n\r\nIt is not controversial, just broken :)\r\n\r\nThe `cmake -S src/bench -B build` command fails.",
      "created_at": "2024-08-10T12:18:00Z",
      "updated_at": "2024-08-10T12:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712633831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712633831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637404",
      "pull_request_review_id": 2231431606,
      "id": 1712637404,
      "node_id": "PRRC_kwDOABII585mFMXc",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\n+  aes.cpp\n+  chacha20.cpp\n+  chacha20poly1305.cpp\n+  hex_base.cpp\n+  hkdf_sha256_32.cpp\n+  hmac_sha256.cpp\n+  hmac_sha512.cpp\n+  poly1305.cpp",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605154,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:06Z",
      "updated_at": "2024-08-10T12:47:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637433",
      "pull_request_review_id": 2231431634,
      "id": 1712637433,
      "node_id": "PRRC_kwDOABII585mFMX5",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Wallet functionality used by bitcoind and bitcoin-wallet executables.\n+add_library(bitcoin_wallet STATIC EXCLUDE_FROM_ALL\n+  coincontrol.cpp\n+  coinselection.cpp\n+  context.cpp\n+  crypter.cpp\n+  db.cpp\n+  dump.cpp\n+  external_signer_scriptpubkeyman.cpp\n+  feebumper.cpp\n+  fees.cpp\n+  interfaces.cpp\n+  load.cpp\n+  migrate.cpp\n+  receive.cpp\n+  rpc/addresses.cpp\n+  rpc/backup.cpp\n+  rpc/coins.cpp\n+  rpc/encrypt.cpp\n+  rpc/spend.cpp\n+  rpc/signmessage.cpp",
      "path": "src/wallet/CMakeLists.txt",
      "position": null,
      "original_position": 25,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:17Z",
      "updated_at": "2024-08-10T12:47:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637443",
      "pull_request_review_id": 2231431642,
      "id": 1712637443,
      "node_id": "PRRC_kwDOABII585mFMYD",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.\n+add_custom_target(generate_build_info\n+  BYPRODUCTS ${PROJECT_BINARY_DIR}/src/obj/build.h\n+  COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/src/obj\n+  COMMAND ${CMAKE_COMMAND} -DBUILD_INFO_HEADER_PATH=${PROJECT_BINARY_DIR}/src/obj/build.h -DSOURCE_DIR=${PROJECT_SOURCE_DIR} -P ${PROJECT_SOURCE_DIR}/cmake/script/GenerateBuildInfo.cmake\n+  COMMENT \"Generating obj/build.h\"\n+  VERBATIM\n+)\n+add_library(bitcoin_clientversion OBJECT EXCLUDE_FROM_ALL\n+  clientversion.cpp\n+)\n+target_compile_definitions(bitcoin_clientversion\n+  PRIVATE\n+    HAVE_BUILD_INFO\n+)\n+target_link_libraries(bitcoin_clientversion\n+  PRIVATE\n+    core_interface\n+)\n+add_dependencies(bitcoin_clientversion generate_build_info)\n+\n+add_subdirectory(crypto)\n+add_subdirectory(univalue)\n+add_subdirectory(util)\n+if(WITH_MULTIPROCESS)\n+  add_subdirectory(ipc)\n+endif()\n+\n+#=============================\n+# secp256k1 subtree\n+#=============================\n+message(\"\")\n+message(\"Configuring secp256k1 subtree...\")\n+set(SECP256K1_DISABLE_SHARED ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_ECDH OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_RECOVERY ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_BENCHMARK OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXHAUSTIVE_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXAMPLES OFF CACHE BOOL \"\" FORCE)\n+include(GetTargetInterface)\n+# -fsanitize and related flags apply to both C++ and C,\n+# so we can pass them down to libsecp256k1 as CFLAGS.\n+get_target_interface(core_sanitizer_cxx_flags \"\" sanitize_interface COMPILE_OPTIONS)\n+set(SECP256K1_LATE_CFLAGS ${core_sanitizer_cxx_flags} CACHE STRING \"\" FORCE)\n+unset(core_sanitizer_cxx_flags)\n+# We want to build libsecp256k1 with the most tested RelWithDebInfo configuration.\n+enable_language(C)\n+foreach(config IN LISTS CMAKE_BUILD_TYPE CMAKE_CONFIGURATION_TYPES)\n+  if(config STREQUAL \"\")\n+    continue()\n+  endif()\n+  string(TOUPPER \"${config}\" config)\n+  set(CMAKE_C_FLAGS_${config} \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+endforeach()\n+# If the CFLAGS environment variable is defined during building depends\n+# and configuring this build system, its content might be duplicated.\n+if(DEFINED ENV{CFLAGS})\n+  deduplicate_flags(CMAKE_C_FLAGS)\n+endif()\n+set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n+add_subdirectory(secp256k1)\n+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+string(APPEND CMAKE_C_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CFLAGS}\")\n+\n+# Stable, backwards-compatible consensus functionality.\n+add_library(bitcoin_consensus STATIC EXCLUDE_FROM_ALL\n+  arith_uint256.cpp\n+  consensus/merkle.cpp\n+  consensus/tx_check.cpp\n+  hash.cpp\n+  primitives/block.cpp\n+  primitives/transaction.cpp\n+  pubkey.cpp\n+  script/interpreter.cpp\n+  script/script.cpp\n+  script/script_error.cpp\n+  uint256.cpp\n+)\n+target_link_libraries(bitcoin_consensus\n+  PRIVATE\n+    core_interface\n+    bitcoin_crypto\n+    secp256k1\n+)\n+\n+if(WITH_ZMQ)\n+  add_subdirectory(zmq)\n+endif()\n+\n+# Home for common functionality shared by different executables and libraries.\n+# Similar to `bitcoin_util` library, but higher-level.\n+add_library(bitcoin_common STATIC EXCLUDE_FROM_ALL\n+  addresstype.cpp",
      "path": "src/CMakeLists.txt",
      "position": 106,
      "original_position": 106,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621771,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/hebasto/bitcoin/pull/320.",
      "created_at": "2024-08-10T12:47:24Z",
      "updated_at": "2024-08-10T12:47:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712637443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712637443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712955667",
      "pull_request_review_id": 2231784814,
      "id": 1712955667,
      "node_id": "PRRC_kwDOABII585mGaET",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The cmake -S src/bench -B build command fails.\r\n\r\nIt seems to me [they're using `ninja`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/benchmarking.md?plain=1#L8) for these tasks, i.e. [`ninja bench-bitcoin`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/ninja_targets.md?plain=1#L251) instead of raw cmake.",
      "created_at": "2024-08-11T10:20:20Z",
      "updated_at": "2024-08-11T10:20:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712955667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712955667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712956905",
      "pull_request_review_id": 2231786120,
      "id": 1712956905,
      "node_id": "PRRC_kwDOABII585mGaXp",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > The cmake -S src/bench -B build command fails.\r\n> \r\n> It seems to me [they're using `ninja`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/benchmarking.md?plain=1#L8) for these tasks, i.e. [`ninja bench-bitcoin`](https://github.com/bitcoin-cash-node/bitcoin-cash-node/blob/master/doc/ninja_targets.md?plain=1#L251) instead of raw cmake.\r\n\r\nIt seems this discussion has gone off topic :)",
      "created_at": "2024-08-11T10:27:50Z",
      "updated_at": "2024-08-11T10:27:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712956905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712956905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712957036",
      "pull_request_review_id": 2231786327,
      "id": 1712957036,
      "node_id": "PRRC_kwDOABII585mGaZs",
      "diff_hunk": "@@ -0,0 +1,658 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+# During the enabling of the CXX and CXXOBJ languages, we modify\n+# CMake's compiler/linker invocation strings by appending the content\n+# of the user-defined `APPEND_*` variables, which allows overriding\n+# any flag. We also ensure that the APPEND_* flags are considered\n+# during CMake's tests, which use the `try_compile()` command.\n+#\n+# CMake's docs state that the `CMAKE_TRY_COMPILE_PLATFORM_VARIABLES`\n+# variable \"is meant to be set by CMake's platform information modules\n+# for the current toolchain, or by a toolchain file.\" We do our best\n+# to set it before the `project()` command.\n+set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES\n+  CMAKE_CXX_COMPILE_OBJECT\n+  CMAKE_OBJCXX_COMPILE_OBJECT\n+  CMAKE_CXX_LINK_EXECUTABLE\n+)\n+\n+project(BitcoinCore",
      "path": "CMakeLists.txt",
      "position": 49,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605045,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Didn't realize that, please resolve it in that case",
      "created_at": "2024-08-11T10:29:08Z",
      "updated_at": "2024-08-11T10:29:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712957036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712957036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712974890",
      "pull_request_review_id": 2231805083,
      "id": 1712974890,
      "node_id": "PRRC_kwDOABII585mGewq",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How much rewrite do we need to do here?\r\nI have pushed https://github.com/hebasto/bitcoin/pull/322 to synchronize on the style, let me know how you imagine it.",
      "created_at": "2024-08-11T12:18:08Z",
      "updated_at": "2024-08-11T12:18:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1712974890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1712974890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713012418",
      "pull_request_review_id": 2231842092,
      "id": 1713012418,
      "node_id": "PRRC_kwDOABII585mGn7C",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">    * https://github.com/bitcoin/bitcoin/blob/14093d5d243f6eb9cfef721c80f92848d95032ee/doc/productivity.md?plain=1#L68\r\n\r\nSee https://github.com/hebasto/bitcoin/pull/323.",
      "created_at": "2024-08-11T15:54:30Z",
      "updated_at": "2024-08-11T15:54:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1713012418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713012418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713786718",
      "pull_request_review_id": 2233041214,
      "id": 1713786718,
      "node_id": "PRRC_kwDOABII585mJk9e",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also https://github.com/hebasto/bitcoin/pull/324.",
      "created_at": "2024-08-12T13:29:39Z",
      "updated_at": "2024-08-12T13:29:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1713786718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713786718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714285678",
      "pull_request_review_id": 2233879918,
      "id": 1714285678,
      "node_id": "PRRC_kwDOABII585mLexu",
      "diff_hunk": "@@ -0,0 +1,31 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+if(NOT MSVC)\n+  find_program(CCACHE_EXECUTABLE ccache)\n+  if(CCACHE_EXECUTABLE)\n+    execute_process(\n+      COMMAND readlink -f ${CMAKE_CXX_COMPILER}\n+      OUTPUT_VARIABLE compiler_resolved_link\n+      ERROR_QUIET\n+      OUTPUT_STRIP_TRAILING_WHITESPACE\n+    )\n+    if(CCACHE_EXECUTABLE STREQUAL compiler_resolved_link)\n+      set(WITH_CCACHE \"ccache masquerades as the compiler\")\n+    elseif(WITH_CCACHE)\n+      list(APPEND CMAKE_C_COMPILER_LAUNCHER ${CCACHE_EXECUTABLE})\n+      list(APPEND CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE_EXECUTABLE})\n+    endif()\n+    try_append_cxx_flags(\"-fdebug-prefix-map=A=B\" TARGET core_interface SKIP_LINK\n+      IF_CHECK_PASSED \"-fdebug-prefix-map=${PROJECT_SOURCE_DIR}=.\"",
      "path": "cmake/ccache.cmake",
      "position": 28,
      "original_position": 21,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "67b1e236334f38ec4e4d2251dbdfb790f20ed88b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note that with 80073c75d1218759f58ceefcb41b4fbc4a3d1ecd I could right click and debug and CLion would stop at a breakpoint, but with 67b1e236334f38ec4e4d2251dbdfb790f20ed88b (adding `debug-prefix-map`) it won't stop at breakpoints anymore.\r\n<img width=\"500\" src=\"https://github.com/user-attachments/assets/66651d62-2dc9-4fa7-9f8f-d45b240aa048\">\r\n\r\nBut as stated in the docs, setting the `target.source-map` in `~/.lldbinit` fixed debugging again. Or when that wasn't working, setting \"Use file name only\" on the breakpoint, did.",
      "created_at": "2024-08-12T19:41:58Z",
      "updated_at": "2024-08-18T09:45:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1714285678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714285678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737320",
      "pull_request_review_id": 2244066356,
      "id": 1720737320,
      "node_id": "PRRC_kwDOABII585mkF4o",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+function(add_boost_if_needed)\n+  #[=[\n+  TODO: Not all targets, which will be added in the future, require\n+        Boost. Therefore, a proper check will be appropriate here.\n+\n+  Implementation notes:\n+  Although only Boost headers are used to build Bitcoin Core,\n+  we still leverage a standard CMake's approach to handle\n+  dependencies, i.e., the Boost::headers \"library\".\n+  A command target_link_libraries(target PRIVATE Boost::headers)\n+  will propagate Boost::headers usage requirements to the target.\n+  For Boost::headers such usage requirements is an include\n+  directory and other added INTERFACE properties.\n+  ]=]\n+\n+  # We cannot rely on find_package(Boost ...) to work properly without\n+  # Boost_NO_BOOST_CMAKE set until we require a more recent Boost because\n+  # upstream did not ship proper CMake files until 1.82.0.\n+  # Until then, we rely on CMake's FindBoost module.\n+  # See: https://cmake.org/cmake/help/latest/policy/CMP0167.html\n+  if(POLICY CMP0167)\n+    cmake_policy(SET CMP0167 OLD)\n+  endif()\n+  set(Boost_NO_BOOST_CMAKE ON)\n+  find_package(Boost 1.73.0 REQUIRED)\n+  mark_as_advanced(Boost_INCLUDE_DIR)\n+  set_target_properties(Boost::headers PROPERTIES IMPORTED_GLOBAL TRUE)\n+  target_compile_definitions(Boost::headers INTERFACE\n+    # We don't use multi_index serialization.\n+    BOOST_MULTI_INDEX_DISABLE_SERIALIZATION\n+  )\n+  if(DEFINED VCPKG_TARGET_TRIPLET)\n+    # Workaround for https://github.com/microsoft/vcpkg/issues/36955.\n+    target_compile_definitions(Boost::headers INTERFACE\n+      BOOST_NO_USER_CONFIG\n+    )\n+  endif()\n+\n+  # Prevent use of std::unary_function, which was removed in C++17,\n+  # and will generate warnings with newer compilers for Boost\n+  # older than 1.80.\n+  # See: https://github.com/boostorg/config/pull/430.\n+  set(CMAKE_REQUIRED_DEFINITIONS -DBOOST_NO_CXX98_FUNCTION_BASE)",
      "path": "cmake/module/AddBoostIfNeeded.cmake",
      "position": 47,
      "original_position": 47,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1706688706,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256.",
      "created_at": "2024-08-17T08:11:43Z",
      "updated_at": "2024-08-17T08:11:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720737320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737774",
      "pull_request_review_id": 2244066827,
      "id": 1720737774,
      "node_id": "PRRC_kwDOABII585mkF_u",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake",
      "path": "depends/README.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1711661191,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256.",
      "created_at": "2024-08-17T08:12:19Z",
      "updated_at": "2024-08-17T08:12:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720737774",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737851",
      "pull_request_review_id": 2244066910,
      "id": 1720737851,
      "node_id": "PRRC_kwDOABII585mkGA7",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_library(bitcoin_crypto STATIC EXCLUDE_FROM_ALL\n+  aes.cpp\n+  chacha20.cpp\n+  chacha20poly1305.cpp\n+  hex_base.cpp\n+  hkdf_sha256_32.cpp\n+  hmac_sha256.cpp\n+  hmac_sha512.cpp\n+  poly1305.cpp",
      "path": "src/crypto/CMakeLists.txt",
      "position": null,
      "original_position": 13,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712605154,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256.",
      "created_at": "2024-08-17T08:12:33Z",
      "updated_at": "2024-08-17T08:12:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720737851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737884",
      "pull_request_review_id": 2244066977,
      "id": 1720737884,
      "node_id": "PRRC_kwDOABII585mkGBc",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Wallet functionality used by bitcoind and bitcoin-wallet executables.\n+add_library(bitcoin_wallet STATIC EXCLUDE_FROM_ALL\n+  coincontrol.cpp\n+  coinselection.cpp\n+  context.cpp\n+  crypter.cpp\n+  db.cpp\n+  dump.cpp\n+  external_signer_scriptpubkeyman.cpp\n+  feebumper.cpp\n+  fees.cpp\n+  interfaces.cpp\n+  load.cpp\n+  migrate.cpp\n+  receive.cpp\n+  rpc/addresses.cpp\n+  rpc/backup.cpp\n+  rpc/coins.cpp\n+  rpc/encrypt.cpp\n+  rpc/spend.cpp\n+  rpc/signmessage.cpp",
      "path": "src/wallet/CMakeLists.txt",
      "position": null,
      "original_position": 25,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256.",
      "created_at": "2024-08-17T08:12:46Z",
      "updated_at": "2024-08-17T08:12:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720737884",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737895",
      "pull_request_review_id": 2244066995,
      "id": 1720737895,
      "node_id": "PRRC_kwDOABII585mkGBn",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include(GNUInstallDirs)\n+include(AddWindowsResources)\n+\n+configure_file(${PROJECT_SOURCE_DIR}/cmake/bitcoin-config.h.in config/bitcoin-config.h @ONLY)\n+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})\n+\n+# After the transition from Autotools to CMake, the obj/ subdirectory\n+# could be dropped as its only purpose was to separate a generated header\n+# from source files.\n+add_custom_target(generate_build_info\n+  BYPRODUCTS ${PROJECT_BINARY_DIR}/src/obj/build.h\n+  COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/src/obj\n+  COMMAND ${CMAKE_COMMAND} -DBUILD_INFO_HEADER_PATH=${PROJECT_BINARY_DIR}/src/obj/build.h -DSOURCE_DIR=${PROJECT_SOURCE_DIR} -P ${PROJECT_SOURCE_DIR}/cmake/script/GenerateBuildInfo.cmake\n+  COMMENT \"Generating obj/build.h\"\n+  VERBATIM\n+)\n+add_library(bitcoin_clientversion OBJECT EXCLUDE_FROM_ALL\n+  clientversion.cpp\n+)\n+target_compile_definitions(bitcoin_clientversion\n+  PRIVATE\n+    HAVE_BUILD_INFO\n+)\n+target_link_libraries(bitcoin_clientversion\n+  PRIVATE\n+    core_interface\n+)\n+add_dependencies(bitcoin_clientversion generate_build_info)\n+\n+add_subdirectory(crypto)\n+add_subdirectory(univalue)\n+add_subdirectory(util)\n+if(WITH_MULTIPROCESS)\n+  add_subdirectory(ipc)\n+endif()\n+\n+#=============================\n+# secp256k1 subtree\n+#=============================\n+message(\"\")\n+message(\"Configuring secp256k1 subtree...\")\n+set(SECP256K1_DISABLE_SHARED ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_ECDH OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_ENABLE_MODULE_RECOVERY ON CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_BENCHMARK OFF CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXHAUSTIVE_TESTS ${BUILD_TESTS} CACHE BOOL \"\" FORCE)\n+set(SECP256K1_BUILD_EXAMPLES OFF CACHE BOOL \"\" FORCE)\n+include(GetTargetInterface)\n+# -fsanitize and related flags apply to both C++ and C,\n+# so we can pass them down to libsecp256k1 as CFLAGS.\n+get_target_interface(core_sanitizer_cxx_flags \"\" sanitize_interface COMPILE_OPTIONS)\n+set(SECP256K1_LATE_CFLAGS ${core_sanitizer_cxx_flags} CACHE STRING \"\" FORCE)\n+unset(core_sanitizer_cxx_flags)\n+# We want to build libsecp256k1 with the most tested RelWithDebInfo configuration.\n+enable_language(C)\n+foreach(config IN LISTS CMAKE_BUILD_TYPE CMAKE_CONFIGURATION_TYPES)\n+  if(config STREQUAL \"\")\n+    continue()\n+  endif()\n+  string(TOUPPER \"${config}\" config)\n+  set(CMAKE_C_FLAGS_${config} \"${CMAKE_C_FLAGS_RELWITHDEBINFO}\")\n+endforeach()\n+# If the CFLAGS environment variable is defined during building depends\n+# and configuring this build system, its content might be duplicated.\n+if(DEFINED ENV{CFLAGS})\n+  deduplicate_flags(CMAKE_C_FLAGS)\n+endif()\n+set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n+add_subdirectory(secp256k1)\n+set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+string(APPEND CMAKE_C_COMPILE_OBJECT \" ${APPEND_CPPFLAGS} ${APPEND_CFLAGS}\")\n+\n+# Stable, backwards-compatible consensus functionality.\n+add_library(bitcoin_consensus STATIC EXCLUDE_FROM_ALL\n+  arith_uint256.cpp\n+  consensus/merkle.cpp\n+  consensus/tx_check.cpp\n+  hash.cpp\n+  primitives/block.cpp\n+  primitives/transaction.cpp\n+  pubkey.cpp\n+  script/interpreter.cpp\n+  script/script.cpp\n+  script/script_error.cpp\n+  uint256.cpp\n+)\n+target_link_libraries(bitcoin_consensus\n+  PRIVATE\n+    core_interface\n+    bitcoin_crypto\n+    secp256k1\n+)\n+\n+if(WITH_ZMQ)\n+  add_subdirectory(zmq)\n+endif()\n+\n+# Home for common functionality shared by different executables and libraries.\n+# Similar to `bitcoin_util` library, but higher-level.\n+add_library(bitcoin_common STATIC EXCLUDE_FROM_ALL\n+  addresstype.cpp",
      "path": "src/CMakeLists.txt",
      "position": 106,
      "original_position": 106,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ec5d1c372b20d49147813aa0392195a3642b86a1",
      "in_reply_to_id": 1712621771,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved in https://github.com/bitcoin/bitcoin/pull/30454#issuecomment-2294786256.",
      "created_at": "2024-08-17T08:12:56Z",
      "updated_at": "2024-08-17T08:12:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720737895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720737895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720944823",
      "pull_request_review_id": 2244276011,
      "id": 1720944823,
      "node_id": "PRRC_kwDOABII585mk4i3",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+# Windows / MSVC Build Guide\n+\n+This guide describes how to build bitcoind, command-line utilities, and GUI on Windows using Micsrosoft Visual Studio.\n+\n+For cross-compiling options, please see [`build-windows.md`](./build-windows.md).\n+\n+## Preparation\n+\n+### 1. Visual Studio\n+\n+This guide relies on using CMake and vcpkg package manager provided with the Visual Studio installation.\n+Here are requirements for the Visual Studio installation:\n+1. Minimum required version: Visual Studio 2022 version 17.6.\n+2. Installed components:\n+- The \"Desktop development with C++\" workload.\n+\n+The commands in this guide should be executed in \"Developer PowerShell for VS 2022\" or \"Developer Command Prompt for VS 2022\".\n+The former is assumed hereinafter.\n+\n+### 2. Git\n+\n+Download and install [Git for Windows](https://git-scm.com/download/win). Once installed, Git is available from PowerShell or the Command Prompt.\n+\n+### 3. Clone Bitcoin Repository\n+\n+Clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+```\n+git clone https://github.com/bitcoin/bitcoin.git\n+```\n+\n+\n+## Triplets and Presets\n+\n+The Bitcoin Core project supports the following vcpkg triplets:\n+- `x64-windows` (both CRT and library linkage is dynamic)\n+- `x64-windows-static` (both CRT and library linkage is static)\n+\n+To facilitate build process, the Bitcoin Core project provides presets, which are used in this guide.\n+\n+Available presets can be listed as follows:\n+```\n+cmake --list-presets\n+```\n+\n+## Building\n+\n+CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\n+\n+In following istructions, the \"Debug\" configuration can be specified instead of the \"Release\" one.\n+\n+### 4. Building with Dynamic Linking with GUI\n+\n+```\n+cmake -B build --preset vs2022 -DBUILD_GUI=ON  # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+```\n+\n+### 5. Building with Static Linking without GUI\n+\n+```\n+cmake -B build --preset vs2022-static          # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+cmake --install build --config Release         # Optional.",
      "path": "doc/build-windows-msvc.md",
      "position": 65,
      "original_position": 65,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be useful to know what the install command will do.",
      "created_at": "2024-08-18T10:26:28Z",
      "updated_at": "2024-08-18T10:26:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720944823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720944823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720978737",
      "pull_request_review_id": 2244312605,
      "id": 1720978737,
      "node_id": "PRRC_kwDOABII585mlA0x",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+# Windows / MSVC Build Guide\n+\n+This guide describes how to build bitcoind, command-line utilities, and GUI on Windows using Micsrosoft Visual Studio.\n+\n+For cross-compiling options, please see [`build-windows.md`](./build-windows.md).\n+\n+## Preparation\n+\n+### 1. Visual Studio\n+\n+This guide relies on using CMake and vcpkg package manager provided with the Visual Studio installation.\n+Here are requirements for the Visual Studio installation:\n+1. Minimum required version: Visual Studio 2022 version 17.6.\n+2. Installed components:\n+- The \"Desktop development with C++\" workload.\n+\n+The commands in this guide should be executed in \"Developer PowerShell for VS 2022\" or \"Developer Command Prompt for VS 2022\".\n+The former is assumed hereinafter.\n+\n+### 2. Git\n+\n+Download and install [Git for Windows](https://git-scm.com/download/win). Once installed, Git is available from PowerShell or the Command Prompt.\n+\n+### 3. Clone Bitcoin Repository\n+\n+Clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+```\n+git clone https://github.com/bitcoin/bitcoin.git\n+```\n+\n+\n+## Triplets and Presets\n+\n+The Bitcoin Core project supports the following vcpkg triplets:\n+- `x64-windows` (both CRT and library linkage is dynamic)\n+- `x64-windows-static` (both CRT and library linkage is static)\n+\n+To facilitate build process, the Bitcoin Core project provides presets, which are used in this guide.\n+\n+Available presets can be listed as follows:\n+```\n+cmake --list-presets\n+```\n+\n+## Building\n+\n+CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\n+\n+In following istructions, the \"Debug\" configuration can be specified instead of the \"Release\" one.\n+\n+### 4. Building with Dynamic Linking with GUI\n+\n+```\n+cmake -B build --preset vs2022 -DBUILD_GUI=ON  # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+```\n+\n+### 5. Building with Static Linking without GUI\n+\n+```\n+cmake -B build --preset vs2022-static          # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+cmake --install build --config Release         # Optional.",
      "path": "doc/build-windows-msvc.md",
      "position": 65,
      "original_position": 65,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1720944823,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It installs the built project to the default install prefix, which is the value of the `CMAKE_INSTALL_PREFIX` variable.",
      "created_at": "2024-08-18T13:37:25Z",
      "updated_at": "2024-08-18T13:37:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1720978737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1720978737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721043065",
      "pull_request_review_id": 2244383816,
      "id": 1721043065,
      "node_id": "PRRC_kwDOABII585mlQh5",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+# Windows / MSVC Build Guide\n+\n+This guide describes how to build bitcoind, command-line utilities, and GUI on Windows using Micsrosoft Visual Studio.\n+\n+For cross-compiling options, please see [`build-windows.md`](./build-windows.md).\n+\n+## Preparation\n+\n+### 1. Visual Studio\n+\n+This guide relies on using CMake and vcpkg package manager provided with the Visual Studio installation.\n+Here are requirements for the Visual Studio installation:\n+1. Minimum required version: Visual Studio 2022 version 17.6.\n+2. Installed components:\n+- The \"Desktop development with C++\" workload.\n+\n+The commands in this guide should be executed in \"Developer PowerShell for VS 2022\" or \"Developer Command Prompt for VS 2022\".\n+The former is assumed hereinafter.\n+\n+### 2. Git\n+\n+Download and install [Git for Windows](https://git-scm.com/download/win). Once installed, Git is available from PowerShell or the Command Prompt.\n+\n+### 3. Clone Bitcoin Repository\n+\n+Clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+```\n+git clone https://github.com/bitcoin/bitcoin.git\n+```\n+\n+\n+## Triplets and Presets\n+\n+The Bitcoin Core project supports the following vcpkg triplets:\n+- `x64-windows` (both CRT and library linkage is dynamic)\n+- `x64-windows-static` (both CRT and library linkage is static)\n+\n+To facilitate build process, the Bitcoin Core project provides presets, which are used in this guide.\n+\n+Available presets can be listed as follows:\n+```\n+cmake --list-presets\n+```\n+\n+## Building\n+\n+CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\n+\n+In following istructions, the \"Debug\" configuration can be specified instead of the \"Release\" one.\n+\n+### 4. Building with Dynamic Linking with GUI\n+\n+```\n+cmake -B build --preset vs2022 -DBUILD_GUI=ON  # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+```\n+\n+### 5. Building with Static Linking without GUI\n+\n+```\n+cmake -B build --preset vs2022-static          # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+cmake --install build --config Release         # Optional.",
      "path": "doc/build-windows-msvc.md",
      "position": 65,
      "original_position": 65,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1720944823,
      "user": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm doing some test builds on Windows and it was a bit of a treasure hunt to find the binaries.\r\n\r\n@sipsorcery: Rather than going on a treasure hunt, wouldn't you \"install\" the built product to a staging directory and then produce your distributable package from there? That way you'll pick up all the bits that the build system wants you to have and none that it doesn't.",
      "created_at": "2024-08-18T19:29:54Z",
      "updated_at": "2024-08-18T19:29:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1721043065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721043065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721048474",
      "pull_request_review_id": 2244388338,
      "id": 1721048474,
      "node_id": "PRRC_kwDOABII585mlR2a",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+# Windows / MSVC Build Guide\n+\n+This guide describes how to build bitcoind, command-line utilities, and GUI on Windows using Micsrosoft Visual Studio.\n+\n+For cross-compiling options, please see [`build-windows.md`](./build-windows.md).\n+\n+## Preparation\n+\n+### 1. Visual Studio\n+\n+This guide relies on using CMake and vcpkg package manager provided with the Visual Studio installation.\n+Here are requirements for the Visual Studio installation:\n+1. Minimum required version: Visual Studio 2022 version 17.6.\n+2. Installed components:\n+- The \"Desktop development with C++\" workload.\n+\n+The commands in this guide should be executed in \"Developer PowerShell for VS 2022\" or \"Developer Command Prompt for VS 2022\".\n+The former is assumed hereinafter.\n+\n+### 2. Git\n+\n+Download and install [Git for Windows](https://git-scm.com/download/win). Once installed, Git is available from PowerShell or the Command Prompt.\n+\n+### 3. Clone Bitcoin Repository\n+\n+Clone the Bitcoin Core repository to a directory. All build scripts and commands will run from this directory.\n+```\n+git clone https://github.com/bitcoin/bitcoin.git\n+```\n+\n+\n+## Triplets and Presets\n+\n+The Bitcoin Core project supports the following vcpkg triplets:\n+- `x64-windows` (both CRT and library linkage is dynamic)\n+- `x64-windows-static` (both CRT and library linkage is static)\n+\n+To facilitate build process, the Bitcoin Core project provides presets, which are used in this guide.\n+\n+Available presets can be listed as follows:\n+```\n+cmake --list-presets\n+```\n+\n+## Building\n+\n+CMake will put the resulting object files, libraries, and executables into a dedicated build directory.\n+\n+In following istructions, the \"Debug\" configuration can be specified instead of the \"Release\" one.\n+\n+### 4. Building with Dynamic Linking with GUI\n+\n+```\n+cmake -B build --preset vs2022 -DBUILD_GUI=ON  # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+```\n+\n+### 5. Building with Static Linking without GUI\n+\n+```\n+cmake -B build --preset vs2022-static          # It might take a while if the vcpkg binary cache is unpopulated or invalidated.\n+cmake --build build --config Release           # Use \"-j N\" for N parallel jobs.\n+ctest --test-dir build --build-config Release  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.\n+cmake --install build --config Release         # Optional.",
      "path": "doc/build-windows-msvc.md",
      "position": 65,
      "original_position": 65,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1720944823,
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> @sipsorcery: Rather than going on a treasure hunt, wouldn't you \"install\" the built product to a staging directory and then produce your distributable package from there? That way you'll pick up all the bits that the build system wants you to have and none that it doesn't.\r\n\r\nI think that would be a reasonable soln. I'm used to the way msvc places all the executables in a single directory. GIven the `cmake --install` command provides an option to achieve the same that would work. \r\n\r\nAs mentioned in another comment I think the `cmake --install` explanation should be enhanced to assist those that use it infrequently, like me.\r\n",
      "created_at": "2024-08-18T20:10:07Z",
      "updated_at": "2024-08-18T20:10:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1721048474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721048474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721657604",
      "pull_request_review_id": 2245305890,
      "id": 1721657604,
      "node_id": "PRRC_kwDOABII585mnmkE",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": 16,
      "original_position": 16,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/a2317e27b7fb86df4e32cd1674c06e09cb808248: Maybe add a comment that this can be removed after `cmake_minimum_required(VERSION 3.25)`?\r\n\r\nAlternatively, given that \"The default installation of the latest version of MSVC 17.10.4 includes both CMake 3.28.3 and the vcpkg package manager\", it may be easier to just require cmake >= 3.25 on MSVC and enforce the policy this way?",
      "created_at": "2024-08-19T11:40:54Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1721657604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1721657604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723106474",
      "pull_request_review_id": 2245305890,
      "id": 1723106474,
      "node_id": "PRRC_kwDOABII585mtISq",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+include(CheckCXXSourceCompiles)\n+\n+#[=[\n+Add language-wide flags, which will be passed to all invocations of the compiler.\n+This includes invocations that drive compiling and those that drive linking.\n+\n+Usage examples:\n+\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" VAR warn_cxx_flags)\n+\n+\n+  try_append_cxx_flags(\"-Wsuggest-override\" VAR warn_cxx_flags\n+    SOURCE \"struct A { virtual void f(); }; struct B : A { void f() final; };\"\n+  )\n+\n+\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET core_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET core_interface\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+\n+\n+  try_append_cxx_flags(\"-Werror=return-type\" TARGET core_interface\n+    IF_CHECK_FAILED \"-Wno-error=return-type\"\n+    SOURCE \"#include <cassert>\\nint f(){ assert(false); }\"\n+  )\n+\n+\n+In configuration output, this function prints a string by the following pattern:\n+\n+  -- Performing Test CXX_SUPPORTS_[flags]\n+  -- Performing Test CXX_SUPPORTS_[flags] - Success\n+\n+]=]\n+function(try_append_cxx_flags flags)\n+  cmake_parse_arguments(PARSE_ARGV 1\n+    TACXXF                            # prefix\n+    \"SKIP_LINK\"                       # options\n+    \"TARGET;VAR;SOURCE;RESULT_VAR\"    # one_value_keywords\n+    \"IF_CHECK_PASSED;IF_CHECK_FAILED\" # multi_value_keywords\n+  )\n+\n+  set(flags_as_string \"${flags}\")\n+  separate_arguments(flags)\n+\n+  string(MAKE_C_IDENTIFIER \"${flags_as_string}\" id_string)\n+  string(TOUPPER \"${id_string}\" id_string)\n+\n+  set(source \"int main() { return 0; }\")\n+  if(DEFINED TACXXF_SOURCE AND NOT TACXXF_SOURCE STREQUAL source)\n+    set(source \"${TACXXF_SOURCE}\")\n+    string(SHA256 source_hash \"${source}\")\n+    string(SUBSTRING ${source_hash} 0 4 source_hash_head)\n+    string(APPEND id_string _${source_hash_head})\n+  endif()\n+\n+  # This avoids running a linker.\n+  set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)\n+  set(CMAKE_REQUIRED_FLAGS \"${flags_as_string} ${working_compiler_werror_flag}\")\n+  set(compiler_result CXX_SUPPORTS_${id_string})\n+  check_cxx_source_compiles(\"${source}\" ${compiler_result})\n+\n+  if(${compiler_result})\n+    if(DEFINED TACXXF_IF_CHECK_PASSED)\n+      if(DEFINED TACXXF_TARGET)\n+        target_compile_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_PASSED})\n+      endif()\n+      if(DEFINED TACXXF_VAR)\n+        string(STRIP \"${${TACXXF_VAR}} ${TACXXF_IF_CHECK_PASSED}\" ${TACXXF_VAR})\n+      endif()\n+    else()\n+      if(DEFINED TACXXF_TARGET)\n+        target_compile_options(${TACXXF_TARGET} INTERFACE ${flags})\n+      endif()\n+      if(DEFINED TACXXF_VAR)\n+        string(STRIP \"${${TACXXF_VAR}} ${flags_as_string}\" ${TACXXF_VAR})\n+      endif()\n+    endif()\n+  elseif(DEFINED TACXXF_IF_CHECK_FAILED)\n+    if(DEFINED TACXXF_TARGET)\n+      target_compile_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_FAILED})\n+    endif()\n+    if(DEFINED TACXXF_VAR)\n+      string(STRIP \"${${TACXXF_VAR}} ${TACXXF_IF_CHECK_FAILED}\" ${TACXXF_VAR})\n+    endif()\n+  endif()\n+\n+  if(DEFINED TACXXF_VAR)\n+    set(${TACXXF_VAR} \"${${TACXXF_VAR}}\" PARENT_SCOPE)\n+  endif()\n+\n+  if(DEFINED TACXXF_RESULT_VAR)\n+    set(${TACXXF_RESULT_VAR} \"${${compiler_result}}\" PARENT_SCOPE)\n+  endif()\n+\n+  if(NOT ${compiler_result} OR TACXXF_SKIP_LINK)\n+    return()\n+  endif()\n+\n+  # This forces running a linker.\n+  set(CMAKE_TRY_COMPILE_TARGET_TYPE EXECUTABLE)\n+  set(CMAKE_REQUIRED_FLAGS \"${flags_as_string}\")\n+  set(CMAKE_REQUIRED_LINK_OPTIONS ${working_linker_werror_flag})\n+  set(linker_result LINKER_SUPPORTS_${id_string})\n+  check_cxx_source_compiles(\"${source}\" ${linker_result})\n+\n+  if(${linker_result})\n+    if(DEFINED TACXXF_IF_CHECK_PASSED)\n+      if(DEFINED TACXXF_TARGET)\n+        target_link_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_PASSED})\n+      endif()\n+    else()\n+      if(DEFINED TACXXF_TARGET)\n+        target_link_options(${TACXXF_TARGET} INTERFACE ${flags})\n+      endif()\n+    endif()\n+  else()\n+    message(WARNING \"'${flags_as_string}' fail(s) to link.\")\n+  endif()\n+endfunction()\n+\n+if(MSVC)\n+  try_append_cxx_flags(\"/WX /options:strict\" VAR working_compiler_werror_flag SKIP_LINK)\n+else()\n+  try_append_cxx_flags(\"-Werror\" VAR working_compiler_werror_flag SKIP_LINK)",
      "path": "cmake/module/TryAppendCXXFlags.cmake",
      "position": 137,
      "original_position": 137,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in commit https://github.com/bitcoin/bitcoin/commit/4a0af29697b62d32af6f60d3ec70cd2ed4d7243c (\"cmake: Add TryAppendCXXFlags module\"):\r\n\r\n could it make sense to mention that `IF_CHECK_FAILED` is never applied to the linker flags, whereas `IF_CHECK_PASSED` seems to be? (`IF_CHECK_FAILED` is unused dead code, so nothing blocking)",
      "created_at": "2024-08-20T10:47:51Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1723106474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723106474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 137,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1724779168",
      "pull_request_review_id": 2245305890,
      "id": 1724779168,
      "node_id": "PRRC_kwDOABII585mzgqg",
      "diff_hunk": "@@ -56,3 +56,24 @@ endforeach()\n set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n add_subdirectory(secp256k1)\n set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+\n+# Stable, backwards-compatible consensus functionality.",
      "path": "src/CMakeLists.txt",
      "position": 78,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 3118e40c6157c8ab9e264518d1065d2b0fc07795: The comment seems wrong? This is an internal lib, neither stable nor \"compatible\"",
      "created_at": "2024-08-21T09:55:50Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1724779168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1724779168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725182221",
      "pull_request_review_id": 2245305890,
      "id": 1725182221,
      "node_id": "PRRC_kwDOABII585m1DEN",
      "diff_hunk": "@@ -116,6 +116,23 @@ if(WITH_MINIUPNPC)\n   find_package(MiniUPnPc MODULE REQUIRED)\n endif()\n \n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.",
      "path": "CMakeLists.txt",
      "position": 148,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1: 4.2.2 Looks ancient, so maybe it can be dropped already?",
      "created_at": "2024-08-21T14:42:59Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1725182221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725182221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 147,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 148,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726684296",
      "pull_request_review_id": 2245305890,
      "id": 1726684296,
      "node_id": "PRRC_kwDOABII585m6xyI",
      "diff_hunk": "@@ -141,6 +141,8 @@ endif()\n cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n \n option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)",
      "path": "CMakeLists.txt",
      "position": 204,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3d853795707c5a1828dcd09c1f68bb07dee472cd: Why does this need special handling for msvc? What problem is this trying to solve?",
      "created_at": "2024-08-22T09:21:05Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726684296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726684296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726881676",
      "pull_request_review_id": 2254261093,
      "id": 1726881676,
      "node_id": "PRRC_kwDOABII585m7h-M",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`i2p.cpp` is missing here",
      "created_at": "2024-08-22T11:31:06Z",
      "updated_at": "2024-08-22T11:31:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726881676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726881676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726889959",
      "pull_request_review_id": 2254272437,
      "id": 1726889959,
      "node_id": "PRRC_kwDOABII585m7j_n",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1726881676,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks!\r\n\r\nI don't consider this a blocker, so it will be fixed in a follow-up.",
      "created_at": "2024-08-22T11:37:06Z",
      "updated_at": "2024-08-22T11:37:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726889959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726889959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726899916",
      "pull_request_review_id": 2254286215,
      "id": 1726899916,
      "node_id": "PRRC_kwDOABII585m7mbM",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1726881676,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a list of known things to be addressed in a followup? It would help us not to forget things and also should avoid people reporting duplicates.",
      "created_at": "2024-08-22T11:44:05Z",
      "updated_at": "2024-08-22T11:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726899916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726899916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726907251",
      "pull_request_review_id": 2254297007,
      "id": 1726907251,
      "node_id": "PRRC_kwDOABII585m7oNz",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1726881676,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we're adding some follow-ups as PRs to https://github.com/hebasto/bitcoin/pulls",
      "created_at": "2024-08-22T11:49:28Z",
      "updated_at": "2024-08-22T11:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726907251",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726907251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726913600",
      "pull_request_review_id": 2245305890,
      "id": 1726913600,
      "node_id": "PRRC_kwDOABII585m7pxA",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(setup_split_debug_script)\n+  if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Linux\")\n+    set(OBJCOPY ${CMAKE_OBJCOPY})\n+    set(STRIP ${CMAKE_STRIP})\n+    configure_file(\n+      contrib/devtools/split-debug.sh.in split-debug.sh\n+      FILE_PERMISSIONS OWNER_READ OWNER_EXECUTE\n+                       GROUP_READ GROUP_EXECUTE\n+                       WORLD_READ\n+      @ONLY\n+    )\n+  endif()\n+endfunction()\n+\n+function(add_maintenance_targets)\n+  if(NOT PYTHON_COMMAND)\n+    return()\n+  endif()\n+\n+  if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+    set(exe_format MACHO)\n+  elseif(WIN32)\n+    set(exe_format PE)\n+  else()\n+    set(exe_format ELF)\n+  endif()\n+\n+  # In CMake, the components of the compiler invocation are separated into distinct variables:\n+  #  - CMAKE_CXX_COMPILER: the full path to the compiler binary itself (e.g., /usr/bin/clang++).\n+  #  - CMAKE_CXX_COMPILER_ARG1: a string containing initial compiler options (e.g., --target=x86_64-apple-darwin -nostdlibinc).\n+  # By concatenating these variables, we form the complete command line to be passed to a Python script via the CXX environment variable.\n+  string(STRIP \"${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1}\" cxx_compiler_command)\n+  add_custom_target(test-security-check\n+    COMMAND ${CMAKE_COMMAND} -E env CXX=${cxx_compiler_command} CXXFLAGS=${CMAKE_CXX_FLAGS} LDFLAGS=${CMAKE_EXE_LINKER_FLAGS} ${PYTHON_COMMAND} ${PROJECT_SOURCE_DIR}/contrib/devtools/test-security-check.py TestSecurityChecks.test_${exe_format}\n+    COMMAND ${CMAKE_COMMAND} -E env CXX=${cxx_compiler_command} CXXFLAGS=${CMAKE_CXX_FLAGS} LDFLAGS=${CMAKE_EXE_LINKER_FLAGS} ${PYTHON_COMMAND} ${PROJECT_SOURCE_DIR}/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_${exe_format}\n+    VERBATIM\n+  )\n+\n+  foreach(target IN ITEMS bitcoind bitcoin-qt bitcoin-cli bitcoin-tx bitcoin-util bitcoin-wallet test_bitcoin bench_bitcoin)",
      "path": "cmake/module/Maintenance.cmake",
      "position": 45,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5: missing bitcoin-node",
      "created_at": "2024-08-22T11:54:11Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726913600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726913600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726922698",
      "pull_request_review_id": 2254319653,
      "id": 1726922698,
      "node_id": "PRRC_kwDOABII585m7r_K",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1726881676,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> we're adding some follow-ups as PRs to https://github.com/hebasto/bitcoin/pulls\r\n\r\nRight. This, and https://github.com/bitcoin/bitcoin/issues?q=label%3A%22Needs+CMake+port%22+is%3Aclosed.",
      "created_at": "2024-08-22T12:00:46Z",
      "updated_at": "2024-08-22T12:00:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1726922698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726922698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727016049",
      "pull_request_review_id": 2254457950,
      "id": 1727016049,
      "node_id": "PRRC_kwDOABII585m8Cxx",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+add_subdirectory(util)\n+\n+add_executable(fuzz\n+  addition_overflow.cpp\n+  addrman.cpp\n+  asmap.cpp\n+  asmap_direct.cpp\n+  autofile.cpp\n+  banman.cpp\n+  base_encode_decode.cpp\n+  bech32.cpp\n+  bip324.cpp\n+  bitdeque.cpp\n+  bitset.cpp\n+  block.cpp\n+  block_header.cpp\n+  block_index.cpp\n+  blockfilter.cpp\n+  bloom_filter.cpp\n+  buffered_file.cpp\n+  chain.cpp\n+  checkqueue.cpp\n+  cluster_linearize.cpp\n+  coins_view.cpp\n+  coinscache_sim.cpp\n+  connman.cpp\n+  crypto.cpp\n+  crypto_aes256.cpp\n+  crypto_aes256cbc.cpp\n+  crypto_chacha20.cpp\n+  crypto_chacha20poly1305.cpp\n+  crypto_common.cpp\n+  crypto_diff_fuzz_chacha20.cpp\n+  crypto_hkdf_hmac_sha256_l32.cpp\n+  crypto_poly1305.cpp\n+  cuckoocache.cpp\n+  decode_tx.cpp\n+  descriptor_parse.cpp\n+  deserialize.cpp\n+  eval_script.cpp\n+  feefrac.cpp\n+  fee_rate.cpp\n+  feeratediagram.cpp\n+  fees.cpp\n+  flatfile.cpp\n+  float.cpp\n+  golomb_rice.cpp\n+  headerssync.cpp\n+  hex.cpp\n+  http_request.cpp",
      "path": "src/test/fuzz/CMakeLists.txt",
      "position": 54,
      "original_position": 54,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1726881676,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Comparing the output of `PRINT_ALL_FUZZ_TARGETS_AND_ABORT=1 src/test/fuzz/fuzz` for both autotools and cmake can be used to verify that all harnesses are ported.",
      "created_at": "2024-08-22T13:02:37Z",
      "updated_at": "2024-08-22T13:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1727016049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727016049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727630179",
      "pull_request_review_id": 2245305890,
      "id": 1727630179,
      "node_id": "PRRC_kwDOABII585m-Ytj",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.",
      "path": "doc/build-windows.md",
      "position": 55,
      "original_position": 55,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "make, not gmake",
      "created_at": "2024-08-22T18:31:07Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1727630179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727630179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727632112",
      "pull_request_review_id": 2245305890,
      "id": 1727632112,
      "node_id": "PRRC_kwDOABII585m-ZLw",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You can't run exe on WSL without wine, can you?",
      "created_at": "2024-08-22T18:32:34Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1727632112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1727632112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1728692369",
      "pull_request_review_id": 2245305890,
      "id": 1728692369,
      "node_id": "PRRC_kwDOABII585nCcCR",
      "diff_hunk": "@@ -153,3 +153,41 @@ target_link_libraries(test_bitcoin\n   Boost::headers\n   $<TARGET_NAME_IF_EXISTS:libevent::libevent>\n )\n+\n+function(add_boost_test source_file)\n+  if(NOT EXISTS ${source_file})\n+    return()\n+  endif()\n+\n+  file(READ \"${source_file}\" source_file_content)\n+  string(REGEX\n+    MATCH \"(BOOST_FIXTURE_TEST_SUITE|BOOST_AUTO_TEST_SUITE)\\\\(([A-Za-z0-9_]+)\"\n+    test_suite_macro \"${source_file_content}\"\n+  )\n+  string(REGEX\n+    REPLACE \"(BOOST_FIXTURE_TEST_SUITE|BOOST_AUTO_TEST_SUITE)\\\\(\" \"\"\n+    test_suite_name \"${test_suite_macro}\"\n+  )\n+  if(test_suite_name)\n+    add_test(NAME ${test_suite_name}\n+      COMMAND test_bitcoin --run_test=${test_suite_name} --catch_system_error=no",
      "path": "src/test/CMakeLists.txt",
      "position": 199,
      "original_position": 21,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ab2e99b0d95714e16a7d1a1313d7da938b0485cb: This is missing `-l test_suite` and `DEBUG_LOG_OUT`",
      "created_at": "2024-08-23T09:42:29Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1728692369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1728692369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1729191860",
      "pull_request_review_id": 2257577490,
      "id": 1729191860,
      "node_id": "PRRC_kwDOABII585nEV-0",
      "diff_hunk": "@@ -12,17 +12,13 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-**Bitcoin Core's `configure` script by default will ignore the depends output.** In\n+**When configuring Bitcoin Core, CMake by default will ignore the depends output.** In\n order for it to pick up libraries, tools, and settings from the depends build,\n-you must set the `CONFIG_SITE` environment variable to point to a `config.site` settings file.\n-Make sure that `CONFIG_SITE` is an absolute path.\n-In the above example, a file named `depends/x86_64-w64-mingw32/share/config.site` will be\n-created. To use it during compilation:\n+you must specify the toolchain file.\n+In the above example, a file named `depends/x86_64-w64-mingw32/toolchain.cmake` will be\n+created. To use it during configuring Bitcoin Core:\n \n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure\n-\n-The default install prefix when using `config.site` is `--prefix=depends/<host-platform-triplet>`,\n-so depends build outputs will be installed in that location.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n \n Common `host-platform-triplet`s for cross compilation are:\n ",
      "path": "depends/README.md",
      "position": 22,
      "original_position": 22,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Building with `depends` on macOS setting the host as `arm64-apple-darwin` (following the notes in the readme file) I got confused noticing that the cross compilation was activated in the configuration (which was solved originally in https://github.com/hebasto/bitcoin/pull/125), then I checked in Ubuntu 22.04 which works fine and rerun the command on macOS without specifying `HOST=` and I found that in M3 the actual triplet is `aarch64-apple-darwin`, should we add it? Perhaps in a follow-up).",
      "created_at": "2024-08-23T15:56:32Z",
      "updated_at": "2024-08-23T16:05:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1729191860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1729191860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731757103",
      "pull_request_review_id": 2261524445,
      "id": 1731757103,
      "node_id": "PRRC_kwDOABII585nOIQv",
      "diff_hunk": "@@ -0,0 +1,662 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+if (${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n+  message(FATAL_ERROR \"In-source builds are not allowed.\")\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)",
      "path": "CMakeLists.txt",
      "position": 26,
      "original_position": 26,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a2317e27b7fb86df4e32cd1674c06e09cb808248 \"cmake: Add root `CMakeLists.txt` file\"\r\n\r\nThe plan is to have this merged post 28.x branch off, so I think this should be set to 28.",
      "created_at": "2024-08-26T20:04:39Z",
      "updated_at": "2024-08-26T20:15:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1731757103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1731757103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1732369832",
      "pull_request_review_id": 2262529130,
      "id": 1732369832,
      "node_id": "PRRC_kwDOABII585nQd2o",
      "diff_hunk": "@@ -0,0 +1,662 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+if (${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n+  message(FATAL_ERROR \"In-source builds are not allowed.\")\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)",
      "path": "CMakeLists.txt",
      "position": 26,
      "original_position": 26,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1731757103,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct. Will be updated in a follow up PR, along with a few other amendments such as https://github.com/bitcoin/bitcoin/pull/30712.",
      "created_at": "2024-08-27T08:22:18Z",
      "updated_at": "2024-08-27T08:22:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1732369832",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1732369832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734981334",
      "pull_request_review_id": 2266760272,
      "id": 1734981334,
      "node_id": "PRRC_kwDOABII585nabbW",
      "diff_hunk": "@@ -12,22 +12,23 @@ that runs all of the unit tests. The main source file for the test library is fo\n \n ### Compiling/running unit tests\n \n-Unit tests will be automatically compiled if dependencies were met in `./configure`\n+Unit tests will be automatically compiled if dependencies were met\n+during the generation of the Bitcoin Core build system\n and tests weren't explicitly disabled.\n \n-After configuring, they can be run with `make check`, which includes unit tests from\n-subtrees, or `make && make -C src check-unit` for just the unit tests.\n+Assuming the build directory is named `build`, the unit tests can be run\n+with `ctests --test-dir build`, which includes unit tests from subtrees.",
      "path": "src/test/README.md",
      "position": 12,
      "original_position": 12,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this is supposed to be `ctest`, not `ctests`?",
      "created_at": "2024-08-28T16:29:10Z",
      "updated_at": "2024-08-28T16:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1734981334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734981334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734982273",
      "pull_request_review_id": 2266761948,
      "id": 1734982273,
      "node_id": "PRRC_kwDOABII585nabqB",
      "diff_hunk": "@@ -12,22 +12,23 @@ that runs all of the unit tests. The main source file for the test library is fo\n \n ### Compiling/running unit tests\n \n-Unit tests will be automatically compiled if dependencies were met in `./configure`\n+Unit tests will be automatically compiled if dependencies were met\n+during the generation of the Bitcoin Core build system\n and tests weren't explicitly disabled.\n \n-After configuring, they can be run with `make check`, which includes unit tests from\n-subtrees, or `make && make -C src check-unit` for just the unit tests.\n+Assuming the build directory is named `build`, the unit tests can be run\n+with `ctests --test-dir build`, which includes unit tests from subtrees.",
      "path": "src/test/README.md",
      "position": 12,
      "original_position": 12,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1734981334,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, already fixed in a differt pr",
      "created_at": "2024-08-28T16:30:00Z",
      "updated_at": "2024-08-28T16:30:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1734982273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734982273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734983385",
      "pull_request_review_id": 2266763742,
      "id": 1734983385,
      "node_id": "PRRC_kwDOABII585nab7Z",
      "diff_hunk": "@@ -12,22 +12,23 @@ that runs all of the unit tests. The main source file for the test library is fo\n \n ### Compiling/running unit tests\n \n-Unit tests will be automatically compiled if dependencies were met in `./configure`\n+Unit tests will be automatically compiled if dependencies were met\n+during the generation of the Bitcoin Core build system\n and tests weren't explicitly disabled.\n \n-After configuring, they can be run with `make check`, which includes unit tests from\n-subtrees, or `make && make -C src check-unit` for just the unit tests.\n+Assuming the build directory is named `build`, the unit tests can be run\n+with `ctests --test-dir build`, which includes unit tests from subtrees.",
      "path": "src/test/README.md",
      "position": 12,
      "original_position": 12,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1734981334,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See #30734. Docs should be improving (generally) over the next day or so.",
      "created_at": "2024-08-28T16:30:53Z",
      "updated_at": "2024-08-28T16:30:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1734983385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1734983385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735220144",
      "pull_request_review_id": 2267148876,
      "id": 1735220144,
      "node_id": "PRRC_kwDOABII585nbVuw",
      "diff_hunk": "@@ -22,19 +21,20 @@ distributions](#linux-distribution-specific-instructions), or the\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n memory available when compiling Bitcoin Core. On systems with less, gcc can be\n-tuned to conserve memory with additional CXXFLAGS:\n+tuned to conserve memory with additional `CMAKE_CXX_FLAGS`:\n \n \n-    ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n+    cmake -B build -DCMAKE_CXX_FLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n-Alternatively, or in addition, debugging information can be skipped for compilation. The default compile flags are\n-`-g -O2`, and can be changed with:\n+Alternatively, or in addition, debugging information can be skipped for compilation.\n+For the default build type `RelWithDebInfo`, the default compile flags are\n+`-O2 -g`, and can be changed with:\n \n-    ./configure CXXFLAGS=\"-g0\"\n+    cmake -B build -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=\"-O2 -g0\"\n \n Finally, clang (often less resource hungry) can be used instead of gcc, which is used by default:\n \n-    ./configure CXX=clang++ CC=clang\n+    cmake -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CC_COMPILER=clang",
      "path": "doc/build-unix.md",
      "position": 37,
      "original_position": 37,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this say:\r\n`cmake -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang`\r\ninstead?\r\n\r\nWhen I follow these instructions as written, I get a Cmake Warning that the CMAKE_CC_COMPILER variable was not used by the project.\r\n",
      "created_at": "2024-08-28T19:58:54Z",
      "updated_at": "2024-08-28T19:58:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1735220144",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735220144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735225920",
      "pull_request_review_id": 2267159315,
      "id": 1735225920,
      "node_id": "PRRC_kwDOABII585nbXJA",
      "diff_hunk": "@@ -22,19 +21,20 @@ distributions](#linux-distribution-specific-instructions), or the\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n memory available when compiling Bitcoin Core. On systems with less, gcc can be\n-tuned to conserve memory with additional CXXFLAGS:\n+tuned to conserve memory with additional `CMAKE_CXX_FLAGS`:\n \n \n-    ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n+    cmake -B build -DCMAKE_CXX_FLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n-Alternatively, or in addition, debugging information can be skipped for compilation. The default compile flags are\n-`-g -O2`, and can be changed with:\n+Alternatively, or in addition, debugging information can be skipped for compilation.\n+For the default build type `RelWithDebInfo`, the default compile flags are\n+`-O2 -g`, and can be changed with:\n \n-    ./configure CXXFLAGS=\"-g0\"\n+    cmake -B build -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=\"-O2 -g0\"\n \n Finally, clang (often less resource hungry) can be used instead of gcc, which is used by default:\n \n-    ./configure CXX=clang++ CC=clang\n+    cmake -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CC_COMPILER=clang",
      "path": "doc/build-unix.md",
      "position": 37,
      "original_position": 37,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1735220144,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed, that's what we have in other cases: https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md?plain=1#L11",
      "created_at": "2024-08-28T20:04:21Z",
      "updated_at": "2024-08-28T20:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1735225920",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735225920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735228312",
      "pull_request_review_id": 2267163722,
      "id": 1735228312,
      "node_id": "PRRC_kwDOABII585nbXuY",
      "diff_hunk": "@@ -22,19 +21,20 @@ distributions](#linux-distribution-specific-instructions), or the\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n memory available when compiling Bitcoin Core. On systems with less, gcc can be\n-tuned to conserve memory with additional CXXFLAGS:\n+tuned to conserve memory with additional `CMAKE_CXX_FLAGS`:\n \n \n-    ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n+    cmake -B build -DCMAKE_CXX_FLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n-Alternatively, or in addition, debugging information can be skipped for compilation. The default compile flags are\n-`-g -O2`, and can be changed with:\n+Alternatively, or in addition, debugging information can be skipped for compilation.\n+For the default build type `RelWithDebInfo`, the default compile flags are\n+`-O2 -g`, and can be changed with:\n \n-    ./configure CXXFLAGS=\"-g0\"\n+    cmake -B build -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=\"-O2 -g0\"\n \n Finally, clang (often less resource hungry) can be used instead of gcc, which is used by default:\n \n-    ./configure CXX=clang++ CC=clang\n+    cmake -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CC_COMPILER=clang",
      "path": "doc/build-unix.md",
      "position": 37,
      "original_position": 37,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "in_reply_to_id": 1735220144,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed in https://github.com/bitcoin/bitcoin/pull/30744.",
      "created_at": "2024-08-28T20:06:19Z",
      "updated_at": "2024-08-28T20:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1735228312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1735228312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736110362",
      "pull_request_review_id": 2245305890,
      "id": 1736110362,
      "node_id": "PRRC_kwDOABII585nevEa",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+if (${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n+  message(FATAL_ERROR \"In-source builds are not allowed.\")\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+set(configure_warnings)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+message(\"C++ compiler .......................... ${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}, ${CMAKE_CXX_COMPILER}\")",
      "path": "CMakeLists.txt",
      "position": 646,
      "original_position": 67,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in commit a2317e27b7fb86df4e32cd1674c06e09cb808248: This will only print the compiler name, not the flags.\r\n\r\nE.g. `-DCMAKE_CXX_COMPILER='clang++;-stdlib=libc++;-m32'` will print the flags nowhere. (This is used in the `ci/test/00_setup_env_i686_multiprocess.sh` task)",
      "created_at": "2024-08-29T12:28:19Z",
      "updated_at": "2024-09-03T15:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1736110362",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736110362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742288290",
      "pull_request_review_id": 2277825627,
      "id": 1742288290,
      "node_id": "PRRC_kwDOABII585n2TWi",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.",
      "path": "doc/build-windows.md",
      "position": 55,
      "original_position": 55,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727630179,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`gmake` is an accepted alias for `make` when it refers to GNU Make, which is required to build depends.\r\n\r\nAlso please refer to https://packages.ubuntu.com/noble/amd64/make/filelist.\r\n",
      "created_at": "2024-09-03T15:40:30Z",
      "updated_at": "2024-09-03T15:40:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742288290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742288290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742291673",
      "pull_request_review_id": 2277831005,
      "id": 1742291673,
      "node_id": "PRRC_kwDOABII585n2ULZ",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't recall installing Wine.",
      "created_at": "2024-09-03T15:42:53Z",
      "updated_at": "2024-09-03T15:42:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742291673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742291673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742295827",
      "pull_request_review_id": 2277837884,
      "id": 1742295827,
      "node_id": "PRRC_kwDOABII585n2VMT",
      "diff_hunk": "@@ -141,6 +141,8 @@ endif()\n cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n \n option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)",
      "path": "CMakeLists.txt",
      "position": 204,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "in_reply_to_id": 1726684296,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Lack of fuzzing engines for MSVC?",
      "created_at": "2024-09-03T15:45:43Z",
      "updated_at": "2024-09-03T15:45:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742295827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742295827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742301373",
      "pull_request_review_id": 2277845981,
      "id": 1742301373,
      "node_id": "PRRC_kwDOABII585n2Wi9",
      "diff_hunk": "@@ -56,3 +56,24 @@ endforeach()\n set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n add_subdirectory(secp256k1)\n set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+\n+# Stable, backwards-compatible consensus functionality.",
      "path": "src/CMakeLists.txt",
      "position": 78,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "in_reply_to_id": 1724779168,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/blob/9cb9651d92ddb5d92724f6a52440601c7a0bbcf8/doc/design/libraries.md?plain=1#L7",
      "created_at": "2024-09-03T15:48:56Z",
      "updated_at": "2024-09-03T15:48:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742301373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742301373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742312035",
      "pull_request_review_id": 2277863839,
      "id": 1742312035,
      "node_id": "PRRC_kwDOABII585n2ZJj",
      "diff_hunk": "@@ -116,6 +116,23 @@ if(WITH_MINIUPNPC)\n   find_package(MiniUPnPc MODULE REQUIRED)\n endif()\n \n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.",
      "path": "CMakeLists.txt",
      "position": 148,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "in_reply_to_id": 1725182221,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unfortunately, packages in the main distros still lack CMake configuration files. For example, see https://packages.debian.org/sid/amd64/libzmq3-dev/filelist.",
      "created_at": "2024-09-03T15:55:41Z",
      "updated_at": "2024-09-03T15:55:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742312035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742312035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 147,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 148,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742312937",
      "pull_request_review_id": 2277865354,
      "id": 1742312937,
      "node_id": "PRRC_kwDOABII585n2ZXp",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Regardless of WSL, given these are the general instructions for any Linux, `wine` should be added as a requirement, otherwise the current instructions will fail:\r\n```bash\r\ngmake -C depends HOST=x86_64-w64-mingw32 -j12 NO_QT=1 NO_WALLET=1 NO_ZMQ=1 NO_NATPMP=1 NO_UPNP=1\r\ncmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\r\ncmake --build build\r\nbitcoin# wine\r\nbash: wine: command not found\r\nbitcoin# wine64\r\nbash: wine64: command not found\r\n<snip>\r\nctest --test-dir build\r\n0% tests passed, 117 tests failed out of 117\r\n```",
      "created_at": "2024-09-03T15:56:18Z",
      "updated_at": "2024-09-03T15:56:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742312937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742312937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742328675",
      "pull_request_review_id": 2277891344,
      "id": 1742328675,
      "node_id": "PRRC_kwDOABII585n2dNj",
      "diff_hunk": "@@ -141,6 +141,8 @@ endif()\n cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n \n option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)",
      "path": "CMakeLists.txt",
      "position": 204,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "in_reply_to_id": 1726684296,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`BUILD_FOR_FUZZING` has nothing to do with fuzz engines. According to the documentation it is an option to \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\"\r\n\r\nCan you explain this a bit better? Maybe with an example output of a msvc compile error or otherwise steps to reproduce?",
      "created_at": "2024-09-03T16:08:36Z",
      "updated_at": "2024-09-04T06:43:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742328675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742328675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742339471",
      "pull_request_review_id": 2277910152,
      "id": 1742339471,
      "node_id": "PRRC_kwDOABII585n2f2P",
      "diff_hunk": "@@ -56,3 +56,24 @@ endforeach()\n set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n add_subdirectory(secp256k1)\n set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+\n+# Stable, backwards-compatible consensus functionality.",
      "path": "src/CMakeLists.txt",
      "position": 78,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "in_reply_to_id": 1724779168,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the reference. Looks like it was added in commit dc1e7ad7a5713d885f70ccc6c93e7a4c07e76559 by @ryanofsky. My preference would be to just drop the prefix \"Stable, backwards-compatible\", because it is unclear whether it refers to the build system artefacts, or the consensus rules. In either case, the prefix seems either wrong or an approximation that lacks nuance.",
      "created_at": "2024-09-03T16:17:02Z",
      "updated_at": "2024-09-03T16:17:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742339471",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742339471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742342524",
      "pull_request_review_id": 2277915236,
      "id": 1742342524,
      "node_id": "PRRC_kwDOABII585n2gl8",
      "diff_hunk": "@@ -116,6 +116,23 @@ if(WITH_MINIUPNPC)\n   find_package(MiniUPnPc MODULE REQUIRED)\n endif()\n \n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.",
      "path": "CMakeLists.txt",
      "position": 148,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "in_reply_to_id": 1725182221,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks. Makes sense. I guess the comment should be adjusted to say that this won't be possible to do any time soon, or at all, for the reason given by you?",
      "created_at": "2024-09-03T16:19:27Z",
      "updated_at": "2024-09-03T16:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742342524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742342524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 147,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 148,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742348150",
      "pull_request_review_id": 2277924633,
      "id": 1742348150,
      "node_id": "PRRC_kwDOABII585n2h92",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for testing @fanquake. Just to clarify: I left the review comment, because running the tests was added as part of this pull request, even though it wasn't present previously with autotools.",
      "created_at": "2024-09-03T16:24:09Z",
      "updated_at": "2024-09-03T16:24:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742348150",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742348150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742389705",
      "pull_request_review_id": 2277991387,
      "id": 1742389705,
      "node_id": "PRRC_kwDOABII585n2sHJ",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+\n+function(setup_split_debug_script)\n+  if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Linux\")\n+    set(OBJCOPY ${CMAKE_OBJCOPY})\n+    set(STRIP ${CMAKE_STRIP})\n+    configure_file(\n+      contrib/devtools/split-debug.sh.in split-debug.sh\n+      FILE_PERMISSIONS OWNER_READ OWNER_EXECUTE\n+                       GROUP_READ GROUP_EXECUTE\n+                       WORLD_READ\n+      @ONLY\n+    )\n+  endif()\n+endfunction()\n+\n+function(add_maintenance_targets)\n+  if(NOT PYTHON_COMMAND)\n+    return()\n+  endif()\n+\n+  if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n+    set(exe_format MACHO)\n+  elseif(WIN32)\n+    set(exe_format PE)\n+  else()\n+    set(exe_format ELF)\n+  endif()\n+\n+  # In CMake, the components of the compiler invocation are separated into distinct variables:\n+  #  - CMAKE_CXX_COMPILER: the full path to the compiler binary itself (e.g., /usr/bin/clang++).\n+  #  - CMAKE_CXX_COMPILER_ARG1: a string containing initial compiler options (e.g., --target=x86_64-apple-darwin -nostdlibinc).\n+  # By concatenating these variables, we form the complete command line to be passed to a Python script via the CXX environment variable.\n+  string(STRIP \"${CMAKE_CXX_COMPILER} ${CMAKE_CXX_COMPILER_ARG1}\" cxx_compiler_command)\n+  add_custom_target(test-security-check\n+    COMMAND ${CMAKE_COMMAND} -E env CXX=${cxx_compiler_command} CXXFLAGS=${CMAKE_CXX_FLAGS} LDFLAGS=${CMAKE_EXE_LINKER_FLAGS} ${PYTHON_COMMAND} ${PROJECT_SOURCE_DIR}/contrib/devtools/test-security-check.py TestSecurityChecks.test_${exe_format}\n+    COMMAND ${CMAKE_COMMAND} -E env CXX=${cxx_compiler_command} CXXFLAGS=${CMAKE_CXX_FLAGS} LDFLAGS=${CMAKE_EXE_LINKER_FLAGS} ${PYTHON_COMMAND} ${PROJECT_SOURCE_DIR}/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_${exe_format}\n+    VERBATIM\n+  )\n+\n+  foreach(target IN ITEMS bitcoind bitcoin-qt bitcoin-cli bitcoin-tx bitcoin-util bitcoin-wallet test_bitcoin bench_bitcoin)",
      "path": "cmake/module/Maintenance.cmake",
      "position": 45,
      "original_position": 45,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "747adb6ffe9b06d476fc5eaebbaf9a62b91a78c5",
      "in_reply_to_id": 1726913600,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is used for the `check-symbols` and `check-security` targets, which are intended to be run in a Guix environment during the release process. Currently, we do not support the multiprocess feature in this workflow, right?",
      "created_at": "2024-09-03T16:55:16Z",
      "updated_at": "2024-09-03T16:55:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742389705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742389705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742404977",
      "pull_request_review_id": 2278016402,
      "id": 1742404977,
      "node_id": "PRRC_kwDOABII585n2v1x",
      "diff_hunk": "@@ -56,3 +56,24 @@ endforeach()\n set(CMAKE_EXPORT_COMPILE_COMMANDS OFF)\n add_subdirectory(secp256k1)\n set(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n+\n+# Stable, backwards-compatible consensus functionality.",
      "path": "src/CMakeLists.txt",
      "position": 78,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3118e40c6157c8ab9e264518d1065d2b0fc07795",
      "in_reply_to_id": 1724779168,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30802",
      "created_at": "2024-09-03T17:08:32Z",
      "updated_at": "2024-09-03T17:08:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742404977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742404977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421067",
      "pull_request_review_id": 2278043370,
      "id": 1742421067,
      "node_id": "PRRC_kwDOABII585n2zxL",
      "diff_hunk": "@@ -116,6 +116,23 @@ if(WITH_MINIUPNPC)\n   find_package(MiniUPnPc MODULE REQUIRED)\n endif()\n \n+option(WITH_ZMQ \"Enable ZMQ notifications.\" OFF)\n+if(WITH_ZMQ)\n+  if(VCPKG_TARGET_TRIPLET)\n+    find_package(ZeroMQ CONFIG REQUIRED)\n+  else()\n+    # The ZeroMQ project has provided config files since v4.2.2.\n+    # TODO: Switch to find_package(ZeroMQ) at some point in the future.",
      "path": "CMakeLists.txt",
      "position": 148,
      "original_position": 10,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "d2fda82b4954f4af7e7d340cf42b9cb34d96cde1",
      "in_reply_to_id": 1725182221,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-03T17:23:01Z",
      "updated_at": "2024-09-03T17:23:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742421067",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 147,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 148,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421343",
      "pull_request_review_id": 2278043741,
      "id": 1742421343,
      "node_id": "PRRC_kwDOABII585n2z1f",
      "diff_hunk": "@@ -153,3 +153,41 @@ target_link_libraries(test_bitcoin\n   Boost::headers\n   $<TARGET_NAME_IF_EXISTS:libevent::libevent>\n )\n+\n+function(add_boost_test source_file)\n+  if(NOT EXISTS ${source_file})\n+    return()\n+  endif()\n+\n+  file(READ \"${source_file}\" source_file_content)\n+  string(REGEX\n+    MATCH \"(BOOST_FIXTURE_TEST_SUITE|BOOST_AUTO_TEST_SUITE)\\\\(([A-Za-z0-9_]+)\"\n+    test_suite_macro \"${source_file_content}\"\n+  )\n+  string(REGEX\n+    REPLACE \"(BOOST_FIXTURE_TEST_SUITE|BOOST_AUTO_TEST_SUITE)\\\\(\" \"\"\n+    test_suite_name \"${test_suite_macro}\"\n+  )\n+  if(test_suite_name)\n+    add_test(NAME ${test_suite_name}\n+      COMMAND test_bitcoin --run_test=${test_suite_name} --catch_system_error=no",
      "path": "src/test/CMakeLists.txt",
      "position": 199,
      "original_position": 21,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "ab2e99b0d95714e16a7d1a1313d7da938b0485cb",
      "in_reply_to_id": 1728692369,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-03T17:23:14Z",
      "updated_at": "2024-09-03T17:23:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742421343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421605",
      "pull_request_review_id": 2278044223,
      "id": 1742421605,
      "node_id": "PRRC_kwDOABII585n2z5l",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()\n+\n+if (${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})\n+  message(FATAL_ERROR \"In-source builds are not allowed.\")\n+endif()\n+\n+#=============================\n+# Project / Package metadata\n+#=============================\n+set(PACKAGE_NAME \"Bitcoin Core\")\n+set(CLIENT_VERSION_MAJOR 27)\n+set(CLIENT_VERSION_MINOR 99)\n+set(CLIENT_VERSION_BUILD 0)\n+set(CLIENT_VERSION_RC 0)\n+set(CLIENT_VERSION_IS_RELEASE \"false\")\n+set(COPYRIGHT_YEAR \"2024\")\n+\n+project(BitcoinCore\n+  VERSION ${CLIENT_VERSION_MAJOR}.${CLIENT_VERSION_MINOR}.${CLIENT_VERSION_BUILD}\n+  DESCRIPTION \"Bitcoin client software\"\n+  HOMEPAGE_URL \"https://bitcoincore.org/\"\n+  LANGUAGES NONE\n+)\n+\n+set(PACKAGE_VERSION ${PROJECT_VERSION})\n+if(CLIENT_VERSION_RC GREATER 0)\n+  string(APPEND PACKAGE_VERSION \"rc${CLIENT_VERSION_RC}\")\n+endif()\n+\n+set(COPYRIGHT_HOLDERS \"The %s developers\")\n+set(COPYRIGHT_HOLDERS_FINAL \"The ${PACKAGE_NAME} developers\")\n+set(PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\")\n+\n+#=============================\n+# Language setup\n+#=============================\n+if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND NOT CMAKE_HOST_APPLE)\n+  # We do not use the install_name_tool when cross-compiling for macOS.\n+  # So disable this tool check in further enable_language() commands.\n+  set(CMAKE_PLATFORM_HAS_INSTALLNAME FALSE)\n+endif()\n+enable_language(CXX)\n+set(CMAKE_CXX_STANDARD 20)\n+set(CMAKE_CXX_STANDARD_REQUIRED ON)\n+set(CMAKE_CXX_EXTENSIONS OFF)\n+\n+set(configure_warnings)\n+\n+message(\"\\n\")\n+message(\"Configure summary\")\n+message(\"=================\")\n+message(\"C++ compiler .......................... ${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}, ${CMAKE_CXX_COMPILER}\")",
      "path": "CMakeLists.txt",
      "position": 646,
      "original_position": 67,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "in_reply_to_id": 1736110362,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-03T17:23:27Z",
      "updated_at": "2024-09-03T17:23:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742421605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742421605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 646,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742927650",
      "pull_request_review_id": 2278862731,
      "id": 1742927650,
      "node_id": "PRRC_kwDOABII585n4vci",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": 16,
      "original_position": 16,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "in_reply_to_id": 1721657604,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> nit in [a2317e2](https://github.com/bitcoin/bitcoin/commit/a2317e27b7fb86df4e32cd1674c06e09cb808248): Maybe add a comment that this can be removed after `cmake_minimum_required(VERSION 3.25)`?\r\n\r\nIt seems redundant to me. Since policies are tied to specific versions,  it's generally understood that one should review every `if(CMAKE_VERSION...)` and `if(POLICY...)` statement in the code when updating the minimum required version.\r\n\r\n> Alternatively, given that \"The default installation of the latest version of MSVC 17.10.4 includes both CMake 3.28.3 and the vcpkg package manager\", it may be easier to just require cmake >= 3.25 on MSVC and enforce the policy this way?\r\n\r\nThe build system becomes aware that it is building on MSVC only after the `project()` call, which makes such an implementation unfeasible given modern CMake requirements ([here](https://cmake.org/cmake/help/latest/command/cmake_minimum_required.html) and [here](https://cmake.org/cmake/help/latest/command/project.html)).\r\n\r\nBesides, the current implementation is idiomatic for enforcing individual policies.\r\n\r\nThe other alternative is to specify `cmake_minimum_required(VERSION 3.22...3.25)`, but this has a drawback,  as the build system's behavior depends on the actual CMake version.",
      "created_at": "2024-09-04T03:10:05Z",
      "updated_at": "2024-09-04T03:10:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742927650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742927650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742931121",
      "pull_request_review_id": 2278892613,
      "id": 1742931121,
      "node_id": "PRRC_kwDOABII585n4wSx",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'd rather not include Wine installation instructions in this build doc. It is not a trivial process and could create an additional maintenance burden in the future.\r\n\r\n>  it wasn't present previously with autotools.\r\n\r\nLet's just remove it.",
      "created_at": "2024-09-04T03:16:54Z",
      "updated_at": "2024-09-04T03:16:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1742931121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1742931121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743189780",
      "pull_request_review_id": 2279181979,
      "id": 1743189780,
      "node_id": "PRRC_kwDOABII585n5vcU",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-04T07:09:58Z",
      "updated_at": "2024-09-04T07:09:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743189780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743189780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743195595",
      "pull_request_review_id": 2279191488,
      "id": 1743195595,
      "node_id": "PRRC_kwDOABII585n5w3L",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'd rather not include Wine installation instructions in this build doc. It is not a trivial process and could create an additional maintenance burden in the future.\n\nNot sure I agree. Can you elaborate on this \"burden\"? Why is that better to avoid than running the tests?",
      "created_at": "2024-09-04T07:14:41Z",
      "updated_at": "2024-09-04T07:14:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743195595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743195595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743199107",
      "pull_request_review_id": 2279196932,
      "id": 1743199107,
      "node_id": "PRRC_kwDOABII585n5xuD",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@fanquake  I am not sure how useful it is to run the tests in the build environment on Linux on Wine, when the binaries itself are meant to be run on a completely different platform (Windows). It would be better to run the tests on the actual platform that will later run the binaries instead. If the docs don't mention it, they can be adjusted to say so.",
      "created_at": "2024-09-04T07:17:29Z",
      "updated_at": "2024-09-04T07:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743199107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743199107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743211010",
      "pull_request_review_id": 2279216368,
      "id": 1743211010,
      "node_id": "PRRC_kwDOABII585n50oC",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Can you elaborate on this \"burden\"?\r\n\r\nWine config creation? Need of the `wine-binfmt` package? People's requests to fix their Wine installations?",
      "created_at": "2024-09-04T07:26:27Z",
      "updated_at": "2024-09-04T07:26:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743211010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743211010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743326932",
      "pull_request_review_id": 2279407059,
      "id": 1743326932,
      "node_id": "PRRC_kwDOABII585n6Q7U",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like a better reason to not do this is that it doesn't actually work properly with CTest? Did this work when you tested it previously? i.e:\r\n```bash\r\nctest --test-dir build -R mempool_tests --rerun-failed --output-on-failure\r\nInternal ctest changing into directory: /bitcoin/build\r\nTest project /bitcoin/build\r\n    Start 53: mempool_tests\r\n1/1 Test #53: mempool_tests ....................***Failed    0.01 sec\r\n/bitcoin/build/src/test/test_bitcoin.exe: 1: MZ????@???: not found\r\n/bitcoin/build/src/test/test_bitcoin.exe: 2: Syntax error: \")\" unexpected\r\n\r\n\r\n0% tests passed, 1 tests failed out of 1\r\n\r\nTotal Test time (real) =   0.02 sec\r\n\r\nThe following tests FAILED:\r\n\t 53 - mempool_tests (Failed)\r\nErrors while running CTest\r\n```\r\n\r\nIf it's expected that this is broken, then we should probably document that, otherwise we might end up with issues opened about non-functioning unit tests.\r\n\r\nWhen run directly under wine, the unit tests run, but also have issues:\r\n```bash\r\nbitcoin# wine /bitcoin/build/src/test/test_bitcoin.exe       \r\n0044:err:winediag:nodrv_CreateWindow Application tried to create a window, but no driver could be loaded.\r\n0044:err:winediag:nodrv_CreateWindow L\"The explorer process failed to start.\"\r\n0044:err:systray:initialize_systray Could not create tray window\r\nRunning 563 test cases...\r\n/bitcoin/src/test/fs_tests.cpp(61): error: in \"fs_tests/fsbridge_fstream\": check input_buffer == \"bitcoin\" has failed [ != bitcoin]\r\n/bitcoin/src/test/fs_tests.cpp(77): error: in \"fs_tests/fsbridge_fstream\": check input_buffer == \"bitcointests\" has failed [ != bitcointests]\r\n/bitcoin/src/test/fs_tests.cpp(87): error: in \"fs_tests/fsbridge_fstream\": check input_buffer == \"bitcoin\" has failed [ != bitcoin]\r\nunknown location(0): fatal error: in \"dbwrapper_tests/unicodepath\": std::filesystem::__cxx11::filesystem_error: filesystem error: cannot create directories: No such file or directory [C:\\users\\root\\Temp\r\n\\test_common_Bitcoin Core\\110aa87c039e797f10589751c6d5c303ef8cbe847c202a40f7b7188f48aedf19\\test_runner_a??_????_20191128_104644]\r\n/bitcoin/src/test/dbwrapper_tests.cpp(389): last checkpoint: \"unicodepath\" test entry\r\n\r\n*** 4 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n```",
      "created_at": "2024-09-04T08:47:33Z",
      "updated_at": "2024-09-04T08:47:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743326932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743326932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743353913",
      "pull_request_review_id": 2279451217,
      "id": 1743353913,
      "node_id": "PRRC_kwDOABII585n6Xg5",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't recall when wine was ever working. There was always a a number of intermittent or consistent errors, regardless of cmake, see https://github.com/bitcoin/bitcoin/pull/29881#discussion_r1632851441\r\n\r\nFixing that seems unrelated to the cmake transition.\r\n\r\nI think simply removing the accidentally added line is fine and other follow-ups can be done in a follow-up, if they are needed.",
      "created_at": "2024-09-04T09:05:30Z",
      "updated_at": "2024-09-04T09:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1743353913",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1743353913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744945740",
      "pull_request_review_id": 2282073588,
      "id": 1744945740,
      "node_id": "PRRC_kwDOABII585oAcJM",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> ```shell\r\n> *** 4 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n> ```\r\n\r\nDoes `export LC_ALL=C.UTF-8` make any difference? This is set in the CI, where it \"works\" before and after the cmake migration. Maybe a separate issue can be created, as it seems unrelated to cmake?",
      "created_at": "2024-09-05T07:25:38Z",
      "updated_at": "2024-09-05T07:25:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1744945740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1744945740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745128233",
      "pull_request_review_id": 2282378304,
      "id": 1745128233,
      "node_id": "PRRC_kwDOABII585oBIsp",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Does export LC_ALL=C.UTF-8 make any difference? \r\n\r\nYes, this seems to fix the failures when running directly under wine. Can followup with an issues/docs.",
      "created_at": "2024-09-05T09:28:49Z",
      "updated_at": "2024-09-05T09:28:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1745128233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745128233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745136573",
      "pull_request_review_id": 2282391890,
      "id": 1745136573,
      "node_id": "PRRC_kwDOABII585oBKu9",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Longer term, I wonder if it makes sense for the build system (and guix) to produce a \"test kit\" that contains the test config ini file required to run the tests (unit and functional ones) as well as other required stuff, so that on native Windows, one can simply move the exe files to a folder inside the \"test kit\" and then run the kit to execute all tests.",
      "created_at": "2024-09-05T09:34:38Z",
      "updated_at": "2024-09-05T09:34:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1745136573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1745136573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747723657",
      "pull_request_review_id": 2287167541,
      "id": 1747723657,
      "node_id": "PRRC_kwDOABII585oLCWJ",
      "diff_hunk": "@@ -0,0 +1,75 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+# Ubuntu 22.04 LTS Jammy Jellyfish, https://wiki.ubuntu.com/Releases, EOSS in June 2027:\n+#  - CMake 3.22.1, https://packages.ubuntu.com/jammy/cmake\n+#\n+# Centos Stream 9, EOL in May 2027:\n+#  - CMake 3.26.5, https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/\n+cmake_minimum_required(VERSION 3.22)\n+if(POLICY CMP0141)\n+  # MSVC debug information format flags are selected by an abstraction.\n+  # We want to use the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable\n+  # to select the MSVC debug information format.\n+  cmake_policy(SET CMP0141 NEW)\n+endif()",
      "path": "CMakeLists.txt",
      "position": 16,
      "original_position": 16,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "a2317e27b7fb86df4e32cd1674c06e09cb808248",
      "in_reply_to_id": 1721657604,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Apparently, there is no need to enable the `CMP0141` policy, as we have not used the `CMAKE_MSVC_DEBUG_INFORMATION_FORMAT` variable since https://github.com/hebasto/bitcoin/pull/215.\r\n\r\nFixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-06T21:12:32Z",
      "updated_at": "2024-09-06T21:12:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1747723657",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747723657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749166051",
      "pull_request_review_id": 2288495572,
      "id": 1749166051,
      "node_id": "PRRC_kwDOABII585oQifj",
      "diff_hunk": "@@ -141,6 +141,8 @@ endif()\n cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n \n option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)",
      "path": "CMakeLists.txt",
      "position": 204,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "in_reply_to_id": 1726684296,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `BUILD_FOR_FUZZING` has nothing to do with fuzz engines. According to the documentation it is an option to \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\"\r\n\r\nYou're right, there's no need for a special case for MSVC.",
      "created_at": "2024-09-08T10:01:50Z",
      "updated_at": "2024-09-08T10:01:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749166051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749166051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749166887",
      "pull_request_review_id": 2288495997,
      "id": 1749166887,
      "node_id": "PRRC_kwDOABII585oQisn",
      "diff_hunk": "@@ -141,6 +141,8 @@ endif()\n cmake_dependent_option(ENABLE_EXTERNAL_SIGNER \"Enable external signer support.\" ON \"NOT WIN32\" OFF)\n \n option(BUILD_BENCH \"Build bench_bitcoin executable.\" OFF)\n+option(BUILD_FUZZ_BINARY \"Build fuzz binary.\" OFF)\n+cmake_dependent_option(BUILD_FOR_FUZZING \"Build for fuzzing. Enabling this will disable all other targets and override BUILD_FUZZ_BINARY.\" OFF \"NOT MSVC\" OFF)",
      "path": "CMakeLists.txt",
      "position": 204,
      "original_position": 5,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "3d853795707c5a1828dcd09c1f68bb07dee472cd",
      "in_reply_to_id": 1726684296,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-08T10:04:35Z",
      "updated_at": "2024-09-08T10:04:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749166887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749166887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749188455",
      "pull_request_review_id": 2288509705,
      "id": 1749188455,
      "node_id": "PRRC_kwDOABII585oQn9n",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Seems like a better reason to not do this is that it doesn't actually work properly with CTest? Did this work when you tested it previously? i.e:\r\n> \r\n> ```shell\r\n> ctest --test-dir build -R mempool_tests --rerun-failed --output-on-failure\r\n> Internal ctest changing into directory: /bitcoin/build\r\n> Test project /bitcoin/build\r\n>     Start 53: mempool_tests\r\n> 1/1 Test #53: mempool_tests ....................***Failed    0.01 sec\r\n> /bitcoin/build/src/test/test_bitcoin.exe: 1: MZ????@???: not found\r\n> /bitcoin/build/src/test/test_bitcoin.exe: 2: Syntax error: \")\" unexpected\r\n> \r\n> \r\n> 0% tests passed, 1 tests failed out of 1\r\n> \r\n> Total Test time (real) =   0.02 sec\r\n> \r\n> The following tests FAILED:\r\n> \t 53 - mempool_tests (Failed)\r\n> Errors while running CTest\r\n> ```\r\n\r\nFrom https://cirrus-ci.com/task/6467960875778048 for the latest https://github.com/bitcoin/bitcoin/commit/a5fa90706addb3ebc4325b139cfebcf9d7ac3045:\r\n```\r\n 49/135 Test  #54: mempool_tests ........................   Passed    2.92 sec\r\n```",
      "created_at": "2024-09-08T11:05:15Z",
      "updated_at": "2024-09-08T11:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749188455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749188455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749231491",
      "pull_request_review_id": 2288534947,
      "id": 1749231491,
      "node_id": "PRRC_kwDOABII585oQyeD",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "On my Ubuntu 24.04 system all test pass.\r\n\r\n<details>\r\n<summary>Logs</summary>\r\n\r\n```\r\n$ make -C depends -j 16 HOST=x86_64-w64-mingw32 NO_QT=1\r\n$ cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\r\n$ cmake --build build -j 16\r\n$ ctest --test-dir build -j 16\r\nInternal ctest changing into directory: /home/hebasto/git/bitcoin/build\r\nTest project /home/hebasto/git/bitcoin/build\r\n        Start   1: util_test_runner\r\n        Start   2: util_rpcauth_test\r\n        Start   3: univalue_test\r\n        Start   4: univalue_object_test\r\n        Start   5: noverify_tests\r\n        Start   6: tests\r\n        Start   7: exhaustive_tests\r\n        Start   8: addrman_tests\r\n        Start   9: allocator_tests\r\n        Start  10: amount_tests\r\n        Start  11: argsman_tests\r\n        Start  12: arith_uint256_tests\r\n        Start  13: banman_tests\r\n        Start  14: base32_tests\r\n        Start  15: base58_tests\r\n        Start  16: base64_tests\r\n  1/134 Test   #2: util_rpcauth_test ....................   Passed    0.06 sec\r\n        Start  17: bech32_tests\r\n  2/134 Test   #4: univalue_object_test .................   Passed    0.67 sec\r\n        Start  18: bip32_tests\r\n  3/134 Test  #10: amount_tests .........................   Passed    1.03 sec\r\n        Start  19: bip324_tests\r\n  4/134 Test  #14: base32_tests .........................   Passed    1.03 sec\r\n        Start  20: blockchain_tests\r\n  5/134 Test  #12: arith_uint256_tests ..................   Passed    1.03 sec\r\n        Start  21: blockencodings_tests\r\n  6/134 Test   #9: allocator_tests ......................   Passed    1.03 sec\r\n        Start  22: blockfilter_index_tests\r\n  7/134 Test  #17: bech32_tests .........................   Passed    0.98 sec\r\n        Start  23: blockfilter_tests\r\n  8/134 Test  #13: banman_tests .........................   Passed    1.27 sec\r\n        Start  24: blockmanager_tests\r\n  9/134 Test  #15: base58_tests .........................   Passed    1.37 sec\r\n        Start  25: bloom_tests\r\n 10/134 Test  #18: bip32_tests ..........................   Passed    0.91 sec\r\n        Start  26: bswap_tests\r\n 11/134 Test   #8: addrman_tests ........................   Passed    1.58 sec\r\n        Start  27: checkqueue_tests\r\n 12/134 Test  #23: blockfilter_tests ....................   Passed    0.79 sec\r\n        Start  28: cluster_linearize_tests\r\n 13/134 Test  #20: blockchain_tests .....................   Passed    0.94 sec\r\n        Start  29: coins_tests\r\n 14/134 Test  #21: blockencodings_tests .................   Passed    1.01 sec\r\n        Start  30: coinscachepair_tests\r\n 15/134 Test  #25: bloom_tests ..........................   Passed    0.74 sec\r\n        Start  31: coinstatsindex_tests\r\n 16/134 Test  #26: bswap_tests ..........................   Passed    0.55 sec\r\n        Start  32: common_url_tests\r\n 17/134 Test  #22: blockfilter_index_tests ..............   Passed    1.16 sec\r\n        Start  33: compilerbug_tests\r\n 18/134 Test  #11: argsman_tests ........................   Passed    2.26 sec\r\n        Start  34: compress_tests\r\n 19/134 Test  #24: blockmanager_tests ...................   Passed    1.12 sec\r\n        Start  35: crypto_tests\r\n 20/134 Test  #28: cluster_linearize_tests ..............   Passed    0.83 sec\r\n        Start  36: cuckoocache_tests\r\n 21/134 Test  #30: coinscachepair_tests .................   Passed    0.67 sec\r\n        Start  37: dbwrapper_tests\r\n 22/134 Test  #19: bip324_tests .........................   Passed    1.69 sec\r\n        Start  38: denialofservice_tests\r\n 23/134 Test  #32: common_url_tests .....................   Passed    0.70 sec\r\n        Start  39: descriptor_tests\r\n 24/134 Test  #33: compilerbug_tests ....................   Passed    0.68 sec\r\n        Start  40: disconnected_transactions\r\n 25/134 Test  #34: compress_tests .......................   Passed    1.09 sec\r\n        Start  41: feefrac_tests\r\n 26/134 Test  #37: dbwrapper_tests ......................   Passed    0.81 sec\r\n        Start  42: flatfile_tests\r\n 27/134 Test  #38: denialofservice_tests ................   Passed    0.87 sec\r\n        Start  43: fs_tests\r\n 28/134 Test  #40: disconnected_transactions ............   Passed    0.80 sec\r\n        Start  44: getarg_tests\r\n 29/134 Test  #41: feefrac_tests ........................   Passed    0.55 sec\r\n        Start  45: hash_tests\r\n 30/134 Test  #39: descriptor_tests .....................   Passed    1.15 sec\r\n        Start  46: headers_sync_chainwork_tests\r\n 31/134 Test  #36: cuckoocache_tests ....................   Passed    1.52 sec\r\n        Start  47: httpserver_tests\r\n 32/134 Test  #27: checkqueue_tests .....................   Passed    2.63 sec\r\n        Start  48: i2p_tests\r\n 33/134 Test  #42: flatfile_tests .......................   Passed    0.75 sec\r\n        Start  49: interfaces_tests\r\n 34/134 Test  #43: fs_tests .............................   Passed    0.75 sec\r\n        Start  50: key_io_tests\r\n 35/134 Test  #44: getarg_tests .........................   Passed    0.71 sec\r\n        Start  51: key_tests\r\n 36/134 Test  #45: hash_tests ...........................   Passed    0.73 sec\r\n        Start  52: logging_tests\r\n 37/134 Test  #46: headers_sync_chainwork_tests .........   Passed    0.83 sec\r\n        Start  53: mempool_tests\r\n 38/134 Test  #48: i2p_tests ............................   Passed    0.69 sec\r\n        Start  54: merkle_tests\r\n 39/134 Test  #47: httpserver_tests .....................   Passed    0.73 sec\r\n        Start  55: merkleblock_tests\r\n 40/134 Test  #50: key_io_tests .........................   Passed    0.76 sec\r\n        Start  56: miner_tests\r\n 41/134 Test  #35: crypto_tests .........................   Passed    2.86 sec\r\n        Start  57: miniminer_tests\r\n 42/134 Test  #51: key_tests ............................   Passed    0.92 sec\r\n        Start  58: miniscript_tests\r\n 43/134 Test  #52: logging_tests ........................   Passed    0.77 sec\r\n        Start  59: minisketch_tests\r\n 44/134 Test  #55: merkleblock_tests ....................   Passed    0.57 sec\r\n        Start  60: multisig_tests\r\n 45/134 Test  #31: coinstatsindex_tests .................   Passed    3.39 sec\r\n        Start  61: net_peer_connection_tests\r\n 46/134 Test  #53: mempool_tests ........................   Passed    0.93 sec\r\n        Start  62: net_peer_eviction_tests\r\n 47/134 Test  #49: interfaces_tests .....................   Passed    1.78 sec\r\n        Start  63: net_tests\r\n 48/134 Test  #54: merkle_tests .........................   Passed    1.21 sec\r\n        Start  64: netbase_tests\r\n 49/134 Test  #59: minisketch_tests .....................   Passed    0.77 sec\r\n        Start  65: node_warnings_tests\r\n 50/134 Test  #61: net_peer_connection_tests ............   Passed    0.73 sec\r\n        Start  66: orphanage_tests\r\n 51/134 Test  #60: multisig_tests .......................   Passed    0.75 sec\r\n        Start  67: peerman_tests\r\n 52/134 Test  #62: net_peer_eviction_tests ..............   Passed    0.78 sec\r\n        Start  68: pmt_tests\r\n 53/134 Test  #64: netbase_tests ........................   Passed    0.80 sec\r\n        Start  69: policy_fee_tests\r\n 54/134 Test  #57: miniminer_tests ......................   Passed    1.66 sec\r\n        Start  70: policyestimator_tests\r\n 55/134 Test  #65: node_warnings_tests ..................   Passed    0.78 sec\r\n        Start  71: pool_tests\r\n 56/134 Test  #67: peerman_tests ........................   Passed    0.80 sec\r\n        Start  72: pow_tests\r\n 57/134 Test  #66: orphanage_tests ......................   Passed    0.92 sec\r\n        Start  73: prevector_tests\r\n 58/134 Test  #68: pmt_tests ............................   Passed    0.85 sec\r\n        Start  74: raii_event_tests\r\n 59/134 Test  #69: policy_fee_tests .....................   Passed    0.58 sec\r\n        Start  75: random_tests\r\n 60/134 Test  #58: miniscript_tests .....................   Passed    2.32 sec\r\n        Start  76: rbf_tests\r\n 61/134 Test  #71: pool_tests ...........................   Passed    0.78 sec\r\n        Start  77: rest_tests\r\n 62/134 Test  #72: pow_tests ............................   Passed    0.78 sec\r\n        Start  78: result_tests\r\n 63/134 Test  #74: raii_event_tests .....................   Passed    0.72 sec\r\n        Start  79: reverselock_tests\r\n 64/134 Test  #56: miner_tests ..........................   Passed    3.05 sec\r\n        Start  80: rpc_tests\r\n 65/134 Test  #73: prevector_tests ......................   Passed    1.09 sec\r\n        Start  81: sanity_tests\r\n 66/134 Test  #78: result_tests .........................   Passed    0.49 sec\r\n        Start  82: scheduler_tests\r\n 67/134 Test  #77: rest_tests ...........................   Passed    0.67 sec\r\n        Start  83: script_p2sh_tests\r\n 68/134 Test  #79: reverselock_tests ....................   Passed    0.60 sec\r\n        Start  84: script_parse_tests\r\n 69/134 Test  #76: rbf_tests ............................   Passed    1.24 sec\r\n        Start  85: script_segwit_tests\r\n 70/134 Test  #82: scheduler_tests ......................   Passed    0.68 sec\r\n        Start  86: script_standard_tests\r\n 71/134 Test  #81: sanity_tests .........................   Passed    0.76 sec\r\n        Start  87: script_tests\r\n 72/134 Test  #83: script_p2sh_tests ....................   Passed    0.85 sec\r\n        Start  88: scriptnum_tests\r\n 73/134 Test  #84: script_parse_tests ...................   Passed    0.61 sec\r\n        Start  89: serfloat_tests\r\n 74/134 Test  #80: rpc_tests ............................   Passed    1.19 sec\r\n        Start  90: serialize_tests\r\n 75/134 Test  #85: script_segwit_tests ..................   Passed    0.74 sec\r\n        Start  91: settings_tests\r\n 76/134 Test  #86: script_standard_tests ................   Passed    0.77 sec\r\n        Start  92: sighash_tests\r\n 77/134 Test  #70: policyestimator_tests ................   Passed    2.88 sec\r\n        Start  93: sigopcount_tests\r\n 78/134 Test  #88: scriptnum_tests ......................   Passed    0.71 sec\r\n        Start  94: skiplist_tests\r\n 79/134 Test  #90: serialize_tests ......................   Passed    0.86 sec\r\n        Start  95: sock_tests\r\n 80/134 Test  #63: net_tests ............................   Passed    4.15 sec\r\n        Start  96: span_tests\r\n 81/134 Test  #91: settings_tests .......................   Passed    0.85 sec\r\n        Start  97: streams_tests\r\n 82/134 Test  #87: script_tests .........................   Passed    1.54 sec\r\n        Start  98: sync_tests\r\n 83/134 Test  #89: serfloat_tests .......................   Passed    1.31 sec\r\n        Start  99: system_tests\r\n 84/134 Test  #93: sigopcount_tests .....................   Passed    0.82 sec\r\n        Start 100: timeoffsets_tests\r\n 85/134 Test  #96: span_tests ...........................   Passed    0.62 sec\r\n        Start 101: torcontrol_tests\r\n 86/134 Test  #92: sighash_tests ........................   Passed    1.08 sec\r\n        Start 102: transaction_tests\r\n 87/134 Test  #95: sock_tests ...........................   Passed    0.80 sec\r\n        Start 103: translation_tests\r\n 88/134 Test  #98: sync_tests ...........................   Passed    0.61 sec\r\n        Start 104: txindex_tests\r\n 89/134 Test  #94: skiplist_tests .......................   Passed    1.30 sec\r\n        Start 105: txpackage_tests\r\n 90/134 Test  #97: streams_tests ........................   Passed    0.81 sec\r\n        Start 106: txreconciliation_tests\r\n 91/134 Test #101: torcontrol_tests .....................   Passed    0.56 sec\r\n        Start 107: txrequest_tests\r\n 92/134 Test #100: timeoffsets_tests ....................   Passed    0.72 sec\r\n        Start 108: txvalidation_tests\r\n 93/134 Test  #99: system_tests .........................   Passed    0.78 sec\r\n        Start 109: txvalidationcache_tests\r\n 94/134 Test #103: translation_tests ....................   Passed    0.55 sec\r\n        Start 110: uint256_tests\r\n 95/134 Test #106: txreconciliation_tests ...............   Passed    0.76 sec\r\n        Start 111: util_tests\r\n 96/134 Test #110: uint256_tests ........................   Passed    0.56 sec\r\n        Start 112: util_threadnames_tests\r\n 97/134 Test #104: txindex_tests ........................   Passed    1.06 sec\r\n        Start 113: validation_block_tests\r\n 98/134 Test #108: txvalidation_tests ...................   Passed    0.98 sec\r\n        Start 114: validation_chainstate_tests\r\n 99/134 Test #112: util_threadnames_tests ...............   Passed    0.56 sec\r\n        Start 115: validation_chainstatemanager_tests\r\n100/134 Test #111: util_tests ...........................   Passed    0.78 sec\r\n        Start 116: validation_flush_tests\r\n101/134 Test #114: validation_chainstate_tests ..........   Passed    0.88 sec\r\n        Start 117: validation_tests\r\n102/134 Test #105: txpackage_tests ......................   Passed    2.14 sec\r\n        Start 118: validationinterface_tests\r\n103/134 Test #116: validation_flush_tests ...............   Passed    0.70 sec\r\n        Start 119: versionbits_tests\r\n104/134 Test  #75: random_tests .........................   Passed    6.26 sec\r\n        Start 120: coinselector_tests\r\n105/134 Test #117: validation_tests .....................   Passed    0.79 sec\r\n        Start 121: feebumper_tests\r\n106/134 Test #107: txrequest_tests ......................   Passed    2.85 sec\r\n        Start 122: group_outputs_tests\r\n107/134 Test #118: validationinterface_tests ............   Passed    0.91 sec\r\n        Start 123: init_tests\r\n108/134 Test #121: feebumper_tests ......................   Passed    0.74 sec\r\n        Start 124: ismine_tests\r\n109/134 Test   #7: exhaustive_tests .....................   Passed   15.05 sec\r\n        Start 125: psbt_wallet_tests\r\n110/134 Test #123: init_tests ...........................   Passed    0.72 sec\r\n        Start 126: wallet_util_tests\r\n111/134 Test #109: txvalidationcache_tests ..............   Passed    3.71 sec\r\n        Start 127: scriptpubkeyman_tests\r\n112/134 Test #119: versionbits_tests ....................   Passed    1.76 sec\r\n        Start 128: spend_tests\r\n113/134 Test #124: ismine_tests .........................   Passed    0.72 sec\r\n        Start 129: wallet_crypto_tests\r\n114/134 Test #126: wallet_util_tests ....................   Passed    0.53 sec\r\n        Start 130: wallet_tests\r\n115/134 Test #122: group_outputs_tests ..................   Passed    1.42 sec\r\n        Start 131: wallet_transaction_tests\r\n116/134 Test #127: scriptpubkeyman_tests ................   Passed    0.69 sec\r\n        Start 132: walletdb_tests\r\n117/134 Test  #29: coins_tests ..........................   Passed   13.92 sec\r\n        Start 133: walletload_tests\r\n118/134 Test #125: psbt_wallet_tests ....................   Passed    0.99 sec\r\n        Start 134: db_tests\r\n119/134 Test #102: transaction_tests ....................   Passed    5.40 sec\r\n120/134 Test #131: wallet_transaction_tests .............   Passed    0.80 sec\r\n121/134 Test #115: validation_chainstatemanager_tests ...   Passed    3.91 sec\r\n122/134 Test #132: walletdb_tests .......................   Passed    0.83 sec\r\n123/134 Test #113: validation_block_tests ...............   Passed    4.51 sec\r\n124/134 Test #134: db_tests .............................   Passed    1.13 sec\r\n125/134 Test #128: spend_tests ..........................   Passed    2.06 sec\r\n126/134 Test #129: wallet_crypto_tests ..................   Passed    1.99 sec\r\n127/134 Test #133: walletload_tests .....................   Passed    2.69 sec\r\n128/134 Test #130: wallet_tests .........................   Passed    5.94 sec\r\n129/134 Test #120: coinselector_tests ...................   Passed   15.95 sec\r\n130/134 Test   #1: util_test_runner .....................   Passed   30.28 sec\r\n131/134 Test   #5: noverify_tests .......................   Passed   73.37 sec\r\n132/134 Test   #6: tests ................................   Passed  143.15 sec\r\n133/134 Test  #16: base64_tests .........................   Passed  144.17 sec\r\n134/134 Test   #3: univalue_test ........................   Passed  144.20 sec\r\n\r\n100% tests passed, 0 tests failed out of 134\r\n\r\nTotal Test time (real) = 144.21 sec\r\n```\r\n\r\n</details>\r\n",
      "created_at": "2024-09-08T13:22:02Z",
      "updated_at": "2024-09-08T13:22:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749231491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749231491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749233940",
      "pull_request_review_id": 2288536326,
      "id": 1749233940,
      "node_id": "PRRC_kwDOABII585oQzEU",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you list the steps to make that happen, on a vanilla system. Given the steps in our instructions aren't currently sufficient.",
      "created_at": "2024-09-08T13:29:21Z",
      "updated_at": "2024-09-08T13:30:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749233940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749233940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749269436",
      "pull_request_review_id": 2288558975,
      "id": 1749269436,
      "node_id": "PRRC_kwDOABII585oQ7u8",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure! Here are the steps to cross-compile for Windows and run unit test on a _fresh_ Ubuntu 24.04 installation:\r\n```\r\n$ sudo apt install binfmt-support cmake curl git g++-mingw-w64-x86-64-posix make pkg-config wine-binfmt\r\n$ sudo update-binfmts --enable wine\r\n$ git clone https://github.com/bitcoin/bitcoin.git\r\n$ cd bitcoin\r\n$ gmake -C depends -j $(nproc) HOST=x86_64-w64-mingw32 NO_QT=1\r\n$ cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\r\n$ cmake --build build -j $(nproc)\r\n$ ctest --test-dir build -j $(nproc)\r\n```",
      "created_at": "2024-09-08T15:29:48Z",
      "updated_at": "2024-09-08T15:29:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749269436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749269436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749270148",
      "pull_request_review_id": 2288559481,
      "id": 1749270148,
      "node_id": "PRRC_kwDOABII585oQ76E",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok. That is what I did; so I'll have to retest. Although, above you said we'd have to do wine configuration etc, and that was a reason to not add it to the docs. However I don't see anything like that here?",
      "created_at": "2024-09-08T15:32:20Z",
      "updated_at": "2024-09-08T15:32:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749270148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749270148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271047",
      "pull_request_review_id": 2288559990,
      "id": 1749271047,
      "node_id": "PRRC_kwDOABII585oQ8IH",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Although, above you said we'd have to do wine configuration etc, and that was a reason to not add it to the docs. However I don't see anything like that here?\r\n\r\n```\r\n$ sudo update-binfmts --enable wine\r\n```",
      "created_at": "2024-09-08T15:35:29Z",
      "updated_at": "2024-09-08T15:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749271047",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271553",
      "pull_request_review_id": 2288560326,
      "id": 1749271553,
      "node_id": "PRRC_kwDOABII585oQ8QB",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+# Copyright (c) 2023-present The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or https://opensource.org/license/mit/.\n+\n+include_guard(GLOBAL)\n+include(CheckCXXSourceCompiles)\n+\n+#[=[\n+Add language-wide flags, which will be passed to all invocations of the compiler.\n+This includes invocations that drive compiling and those that drive linking.\n+\n+Usage examples:\n+\n+  try_append_cxx_flags(\"-Wformat -Wformat-security\" VAR warn_cxx_flags)\n+\n+\n+  try_append_cxx_flags(\"-Wsuggest-override\" VAR warn_cxx_flags\n+    SOURCE \"struct A { virtual void f(); }; struct B : A { void f() final; };\"\n+  )\n+\n+\n+  try_append_cxx_flags(\"-fsanitize=${SANITIZERS}\" TARGET core_interface\n+    RESULT_VAR cxx_supports_sanitizers\n+  )\n+  if(NOT cxx_supports_sanitizers)\n+    message(FATAL_ERROR \"Compiler did not accept requested flags.\")\n+  endif()\n+\n+\n+  try_append_cxx_flags(\"-Wunused-parameter\" TARGET core_interface\n+    IF_CHECK_PASSED \"-Wno-unused-parameter\"\n+  )\n+\n+\n+  try_append_cxx_flags(\"-Werror=return-type\" TARGET core_interface\n+    IF_CHECK_FAILED \"-Wno-error=return-type\"\n+    SOURCE \"#include <cassert>\\nint f(){ assert(false); }\"\n+  )\n+\n+\n+In configuration output, this function prints a string by the following pattern:\n+\n+  -- Performing Test CXX_SUPPORTS_[flags]\n+  -- Performing Test CXX_SUPPORTS_[flags] - Success\n+\n+]=]\n+function(try_append_cxx_flags flags)\n+  cmake_parse_arguments(PARSE_ARGV 1\n+    TACXXF                            # prefix\n+    \"SKIP_LINK\"                       # options\n+    \"TARGET;VAR;SOURCE;RESULT_VAR\"    # one_value_keywords\n+    \"IF_CHECK_PASSED;IF_CHECK_FAILED\" # multi_value_keywords\n+  )\n+\n+  set(flags_as_string \"${flags}\")\n+  separate_arguments(flags)\n+\n+  string(MAKE_C_IDENTIFIER \"${flags_as_string}\" id_string)\n+  string(TOUPPER \"${id_string}\" id_string)\n+\n+  set(source \"int main() { return 0; }\")\n+  if(DEFINED TACXXF_SOURCE AND NOT TACXXF_SOURCE STREQUAL source)\n+    set(source \"${TACXXF_SOURCE}\")\n+    string(SHA256 source_hash \"${source}\")\n+    string(SUBSTRING ${source_hash} 0 4 source_hash_head)\n+    string(APPEND id_string _${source_hash_head})\n+  endif()\n+\n+  # This avoids running a linker.\n+  set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)\n+  set(CMAKE_REQUIRED_FLAGS \"${flags_as_string} ${working_compiler_werror_flag}\")\n+  set(compiler_result CXX_SUPPORTS_${id_string})\n+  check_cxx_source_compiles(\"${source}\" ${compiler_result})\n+\n+  if(${compiler_result})\n+    if(DEFINED TACXXF_IF_CHECK_PASSED)\n+      if(DEFINED TACXXF_TARGET)\n+        target_compile_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_PASSED})\n+      endif()\n+      if(DEFINED TACXXF_VAR)\n+        string(STRIP \"${${TACXXF_VAR}} ${TACXXF_IF_CHECK_PASSED}\" ${TACXXF_VAR})\n+      endif()\n+    else()\n+      if(DEFINED TACXXF_TARGET)\n+        target_compile_options(${TACXXF_TARGET} INTERFACE ${flags})\n+      endif()\n+      if(DEFINED TACXXF_VAR)\n+        string(STRIP \"${${TACXXF_VAR}} ${flags_as_string}\" ${TACXXF_VAR})\n+      endif()\n+    endif()\n+  elseif(DEFINED TACXXF_IF_CHECK_FAILED)\n+    if(DEFINED TACXXF_TARGET)\n+      target_compile_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_FAILED})\n+    endif()\n+    if(DEFINED TACXXF_VAR)\n+      string(STRIP \"${${TACXXF_VAR}} ${TACXXF_IF_CHECK_FAILED}\" ${TACXXF_VAR})\n+    endif()\n+  endif()\n+\n+  if(DEFINED TACXXF_VAR)\n+    set(${TACXXF_VAR} \"${${TACXXF_VAR}}\" PARENT_SCOPE)\n+  endif()\n+\n+  if(DEFINED TACXXF_RESULT_VAR)\n+    set(${TACXXF_RESULT_VAR} \"${${compiler_result}}\" PARENT_SCOPE)\n+  endif()\n+\n+  if(NOT ${compiler_result} OR TACXXF_SKIP_LINK)\n+    return()\n+  endif()\n+\n+  # This forces running a linker.\n+  set(CMAKE_TRY_COMPILE_TARGET_TYPE EXECUTABLE)\n+  set(CMAKE_REQUIRED_FLAGS \"${flags_as_string}\")\n+  set(CMAKE_REQUIRED_LINK_OPTIONS ${working_linker_werror_flag})\n+  set(linker_result LINKER_SUPPORTS_${id_string})\n+  check_cxx_source_compiles(\"${source}\" ${linker_result})\n+\n+  if(${linker_result})\n+    if(DEFINED TACXXF_IF_CHECK_PASSED)\n+      if(DEFINED TACXXF_TARGET)\n+        target_link_options(${TACXXF_TARGET} INTERFACE ${TACXXF_IF_CHECK_PASSED})\n+      endif()\n+    else()\n+      if(DEFINED TACXXF_TARGET)\n+        target_link_options(${TACXXF_TARGET} INTERFACE ${flags})\n+      endif()\n+    endif()\n+  else()\n+    message(WARNING \"'${flags_as_string}' fail(s) to link.\")\n+  endif()\n+endfunction()\n+\n+if(MSVC)\n+  try_append_cxx_flags(\"/WX /options:strict\" VAR working_compiler_werror_flag SKIP_LINK)\n+else()\n+  try_append_cxx_flags(\"-Werror\" VAR working_compiler_werror_flag SKIP_LINK)",
      "path": "cmake/module/TryAppendCXXFlags.cmake",
      "position": 137,
      "original_position": 137,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "4a0af29697b62d32af6f60d3ec70cd2ed4d7243c",
      "in_reply_to_id": 1723106474,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The unused dead code has been deleted in https://github.com/bitcoin/bitcoin/pull/30803.",
      "created_at": "2024-09-08T15:37:34Z",
      "updated_at": "2024-09-08T15:37:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749271553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 137,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271611",
      "pull_request_review_id": 2288560355,
      "id": 1749271611,
      "node_id": "PRRC_kwDOABII585oQ8Q7",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was under the impression that happened automatically on wine installation. Will also re-test.",
      "created_at": "2024-09-08T15:37:49Z",
      "updated_at": "2024-09-08T15:37:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749271611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749271611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749272494",
      "pull_request_review_id": 2288560905,
      "id": 1749272494,
      "node_id": "PRRC_kwDOABII585oQ8eu",
      "diff_hunk": "@@ -62,21 +62,12 @@ Note that for WSL the Bitcoin Core source path MUST be somewhere in the default\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n-Additional WSL Note: WSL support for [launching Win32 applications](https://learn.microsoft.com/en-us/archive/blogs/wsl/windows-and-ubuntu-interoperability#launching-win32-applications-from-within-wsl)\n-results in `Autoconf` configure scripts being able to execute Windows Portable Executable files. This can cause\n-unexpected behaviour during the build, such as Win32 error dialogs for missing libraries. The recommended approach\n-is to temporarily disable WSL support for Win32 applications.\n-\n Build using:\n \n-    sudo bash -c \"echo 0 > /proc/sys/fs/binfmt_misc/status\" # Disable WSL support for Win32 applications.\n-    cd depends\n-    make HOST=x86_64-w64-mingw32\n-    cd ..\n-    ./autogen.sh\n-    CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\n-    make # use \"-j N\" for N parallel jobs\n-    sudo bash -c \"echo 1 > /proc/sys/fs/binfmt_misc/status\" # Enable WSL support for Win32 applications.\n+    gmake -C depends HOST=x86_64-w64-mingw32  # Use \"-j N\" for N parallel jobs.\n+    cmake -B build --toolchain depends/x86_64-w64-mingw32/toolchain.cmake\n+    cmake --build build     # Use \"-j N\" for N parallel jobs.\n+    ctest --test-dir build  # Use \"-j N\" for N parallel tests. Some tests are disabled if Python 3 is not available.",
      "path": "doc/build-windows.md",
      "position": 58,
      "original_position": 58,
      "commit_id": "41051290ab3b6c36312cec26a27f787cea9961b4",
      "original_commit_id": "6ce50fd9d0ae6850d54bf883e7a7c1bcb6912c5c",
      "in_reply_to_id": 1727632112,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I was under the impression that happened automatically on wine installation.\r\n\r\nI'm not sure, but it can depend on a distro.",
      "created_at": "2024-09-08T15:41:05Z",
      "updated_at": "2024-09-08T15:41:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30454#discussion_r1749272494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749272494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30454"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    }
  ]
}