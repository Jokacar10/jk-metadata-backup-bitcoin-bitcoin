{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
    "id": 1708766324,
    "node_id": "PR_kwDOABII585l2bR0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29370",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29370.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29370.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9d9a7458a2570f7db56ab626b22010591089c312",
    "number": 29370,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "assumeutxo: Get rid of faked nTx and nChainTx values",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `PopulateAndValidateSnapshot` function introduced in f6e2da5fb7c6406c37612c838c998078ea8d2252 from #19806 has been setting fake `nTx` and `nChainTx` values that can show up in RPC results (https://github.com/bitcoin/bitcoin/issues/29328) and make `CBlockIndex` state hard to reason about, because it is difficult to know whether the values are real or fake.\r\n\r\nRevert to previous behavior of setting `nTx` and `nChainTx` to 0 when the values are unknown, instead of faking them. Also drop no-longer needed `BLOCK_ASSUMED_VALID` flag.\r\n\r\nDropping the faked values also fixes assert failures in the `CheckBlockIndex` `(pindex->nChainTx == pindex->nTx + prev_chain_tx)` check that could happen previously if forked or out-of-order blocks before the snapshot got submitted while the snapshot was being validated. The PR includes two commits adding tests for these failures and describing them in detail.\r\n\r\nCompatibility note: This change could cause new `-checkblockindex` failures if a snapshot was loaded by a previous version of Bitcoin Core and not fully validated, because fake `nTx` values will have been saved to the block index. It would be pretty easy to avoid these failures by adding some compatibility code to `LoadBlockIndex` and changing `nTx` values from 1 to 0 when they are fake (when `(pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS`), but a little simpler not to worry about being compatible in this case.",
    "labels": [],
    "created_at": "2024-02-02T16:18:52Z",
    "updated_at": "2025-03-20T07:40:11Z",
    "closed_at": "2024-03-20T16:56:58Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-03-20T16:56:58Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "b50554babdddf452acaa51bac757736766c70e81",
    "assignee": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "assignees": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_reviewers": [
      {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/nofake",
      "ref": "pr/nofake",
      "sha": "9d9a7458a2570f7db56ab626b22010591089c312",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 16,
        "watchers_count": 16,
        "size": 278616,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-19T20:49:09Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2025-02-09T01:43:29Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9a459e3ab9f983aabc9942e0989f790c9a511b9f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36947,
        "stargazers_count": 82552,
        "watchers_count": 82552,
        "size": 278646,
        "default_branch": "master",
        "open_issues_count": 684,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-20T05:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-20T06:41:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 231,
    "deletions": 156,
    "changed_files": 8,
    "commits": 8,
    "review_comments": 90,
    "comments": 27
  },
  "events": [
    {
      "event": "commented",
      "id": 1924196872,
      "node_id": "IC_kwDOABII585ysOoI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924196872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T16:18:55Z",
      "updated_at": "2024-03-20T16:49:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29370).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-2006783101), [mzumsande](https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1947455842), [maflcko](https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1948636867), [achow101](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-2010040541) |\n| Concept ACK | [fjahr](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954438224) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29656](https://github.com/bitcoin/bitcoin/pull/29656) (chainparams: Change nChainTx type to uint64_t by fjahr)\n* [#29617](https://github.com/bitcoin/bitcoin/pull/29617) (test: Validate UTXO snapshot with coin height > base height & amount > MAX_MONEY supply by jrakibi)\n* [#29553](https://github.com/bitcoin/bitcoin/pull/29553) (assumeutxo: Add dumptxoutset height param, remove shell scripts by fjahr)\n* [#28339](https://github.com/bitcoin/bitcoin/pull/28339) (validation: improve performance of CheckBlockIndex by mzumsande)\n* [#27006](https://github.com/bitcoin/bitcoin/pull/27006) (reduce cs_main scope, guard block index 'nFile' under a local mutex by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924196872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "commented",
      "id": 1924254747,
      "node_id": "IC_kwDOABII585yscwb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924254747",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T16:47:18Z",
      "updated_at": "2024-02-02T16:47:18Z",
      "author_association": "MEMBER",
      "body": "> Backwards compatibility code in LoadBlockIndex to override `nTx == 1` values set by previous code when they are fake (when ` (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS`)\r\n\r\nNot sure. This can only happen on test-chains, so I think it would be cleaner to just require the developers, if there are any, to finish their background sync, or to wipe their chainstate, or the blocksdir, or the whole test data dir.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924254747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "labeled",
      "id": 11686894489,
      "node_id": "LE_lADOABII585-FJRJzwAAAAK4l9uZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11686894489",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T17:16:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1924315726,
      "node_id": "IC_kwDOABII585ysrpO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924315726",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T17:16:09Z",
      "updated_at": "2024-02-02T17:16:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21160915955</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924315726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11687790207,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK4pYZ_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11687790207",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a3228f02f69e28960f7da76054965c916e781f27",
      "created_at": "2024-02-02T18:36:17Z"
    },
    {
      "event": "commented",
      "id": 1924479030,
      "node_id": "IC_kwDOABII585ytTg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924479030",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T18:44:52Z",
      "updated_at": "2024-02-02T18:44:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Not sure. This can only happen on test-chains, so I think it would be cleaner to just require the developers, if there are any, to finish their background sync, or to wipe their chainstate, or the blocksdir, or the whole test data dir.\r\n\r\nIt makes sense that having backwards compatibility may not be worth it, but I don't see why test chains would set `nTx` to a real value without also setting BLOCK_VALID_TRANSACTIONS. It seems like we should be able to use BLOCK_VALID_TRANSACTIONS to know if nTx is real or fake, as long as we are checking for BLOCK_VALID_TRANSACTIONS, directly, and not using the IsValid() helper which is also influenced by BLOCK_FAILED flags.\r\n\r\n---\r\n\r\nUpdated 4c70d993e3ac0e9b7923eded51826fe1faa2d004 -> a3228f02f69e28960f7da76054965c916e781f27 ([`pr/nofake.1`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.1) -> [`pr/nofake.2`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.1..pr/nofake.2)) to fix broken validation_block_tests due to a buggy check, also making some minor cleanups",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924479030",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "unlabeled",
      "id": 11689460814,
      "node_id": "UNLE_lADOABII585-FJRJzwAAAAK4vwRO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11689460814",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T21:02:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1862394105,
      "node_id": "PRR_kwDOABII585vAeD5",
      "url": null,
      "actor": null,
      "commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1862394105",
      "submitted_at": "2024-02-05T11:12:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1862459885,
      "node_id": "PRR_kwDOABII585vAuHt",
      "url": null,
      "actor": null,
      "commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1862459885",
      "submitted_at": "2024-02-05T11:14:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1927200215,
      "node_id": "IC_kwDOABII585y3r3X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927200215",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T15:00:52Z",
      "updated_at": "2024-02-05T15:00:52Z",
      "author_association": "MEMBER",
      "body": "Also, it would be good to include the test to ensure the crash no longer happens.\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "reviewed",
      "id": 1863282117,
      "node_id": "PRR_kwDOABII585vD23F",
      "url": null,
      "actor": null,
      "commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the close review! Will work on your suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1863282117",
      "submitted_at": "2024-02-05T17:24:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11710486424,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK5_9eY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11710486424",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3bdbc3fc7f116856acc7d955f591110b96f5ebd2",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3bdbc3fc7f116856acc7d955f591110b96f5ebd2",
      "created_at": "2024-02-05T22:14:39Z"
    },
    {
      "event": "reviewed",
      "id": 1863598337,
      "node_id": "PRR_kwDOABII585vFEEB",
      "url": null,
      "actor": null,
      "commit_id": "3bdbc3fc7f116856acc7d955f591110b96f5ebd2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated a3228f02f69e28960f7da76054965c916e781f27 -> 3bdbc3fc7f116856acc7d955f591110b96f5ebd2 ([`pr/nofake.2`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.2) -> [`pr/nofake.3`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.2..pr/nofake.3)) implementing all suggestions, adding test coverage for the RPCs, and adding a new commit that drops the no longer needed BLOCK_ASSUMED_VALID flag.\r\nUpdated 3bdbc3fc7f116856acc7d955f591110b96f5ebd2 -> 603a92c9881ed78e29f15c48121ce8bf35d30837 ([`pr/nofake.3`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.3) -> [`pr/nofake.4`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.3..pr/nofake.4)) removing more BLOCK_ASSUMED_VALID references",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1863598337",
      "submitted_at": "2024-02-05T22:29:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11710770846,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK6BC6e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11710770846",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at": "2024-02-05T22:43:03Z"
    },
    {
      "event": "labeled",
      "id": 11710771656,
      "node_id": "LE_lADOABII585-FJRJzwAAAAK6BDHI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11710771656",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T22:43:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1864200241,
      "node_id": "PRR_kwDOABII585vHXAx",
      "url": null,
      "actor": null,
      "commit_id": "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1864200241",
      "submitted_at": "2024-02-06T03:08:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1864605869,
      "node_id": "PRR_kwDOABII585vI6Ct",
      "url": null,
      "actor": null,
      "commit_id": "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1864605869",
      "submitted_at": "2024-02-06T09:02:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1929064411,
      "node_id": "IC_kwDOABII585y-y_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929064411",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T09:04:07Z",
      "updated_at": "2024-02-06T09:04:07Z",
      "author_association": "MEMBER",
      "body": "Needs rebase",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1929064411",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11725768291,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK66QZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11725768291",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3f0b8607f549b27e9bb0cc8b189252a5cd954a36",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3f0b8607f549b27e9bb0cc8b189252a5cd954a36",
      "created_at": "2024-02-07T01:03:18Z"
    },
    {
      "event": "commented",
      "id": 1931061991,
      "node_id": "IC_kwDOABII585zGarn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931061991",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T01:07:56Z",
      "updated_at": "2024-02-07T01:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Needs rebase\r\n\r\nYes, thanks for recognizing the CI failures.\r\n\r\nRebased 603a92c9881ed78e29f15c48121ce8bf35d30837 -> 3f0b8607f549b27e9bb0cc8b189252a5cd954a36 ([`pr/nofake.4`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.4) -> [`pr/nofake.5`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.4-rebase..pr/nofake.5)) with test fixes needed after silent conflict with #29354",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931061991",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "unlabeled",
      "id": 11726155369,
      "node_id": "UNLE_lADOABII585-FJRJzwAAAAK67u5p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11726155369",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T01:59:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1931513793,
      "node_id": "IC_kwDOABII585zII_B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931513793",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T08:25:29Z",
      "updated_at": "2024-02-07T08:25:29Z",
      "author_association": "MEMBER",
      "body": "Could include the test https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215 , or did you want to leave that for later?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931513793",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11736659660,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK7jzbM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11736659660",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2f4e7e8dc82adb60a339211cdc15408b5a6919ce",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2f4e7e8dc82adb60a339211cdc15408b5a6919ce",
      "created_at": "2024-02-07T19:08:55Z"
    },
    {
      "event": "commented",
      "id": 1932712410,
      "node_id": "IC_kwDOABII585zMtna",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932712410",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T19:19:29Z",
      "updated_at": "2024-02-07T19:19:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931513793\r\n\r\n> Could include the test [#29370 (comment)](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215) , or did you want to leave that for later?\r\n\r\nI had just forgotten about this. Added the test now, and fixed another bug uncovered by the test (forgetting to reset pindexFirstNeverProcessed after moving upwards from the snapshot block).\r\n\r\nUpdated 3f0b8607f549b27e9bb0cc8b189252a5cd954a36 -> 2f4e7e8dc82adb60a339211cdc15408b5a6919ce ([`pr/nofake.5`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.5) -> [`pr/nofake.6`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.5..pr/nofake.6)) adding maflcko's test\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1932712410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "ready_for_review",
      "id": 11736979131,
      "node_id": "RFRE_lADOABII585-FJRJzwAAAAK7lBa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11736979131",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T19:41:27Z"
    },
    {
      "event": "referenced",
      "id": 11748590405,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAK8RUNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11748590405",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "89d95bf13bbc151cefb1f6f789cf1ac94256e0c8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/89d95bf13bbc151cefb1f6f789cf1ac94256e0c8",
      "created_at": "2024-02-08T16:47:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11748590556,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAAK8RUPc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11748590556",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at": "2024-02-08T16:47:26Z"
    },
    {
      "event": "reviewed",
      "id": 1870720275,
      "node_id": "PRR_kwDOABII585vgO0T",
      "url": null,
      "actor": null,
      "commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 2f4e7e8dc82adb60a339211cdc15408b5a6919ce -> c9ca4ca4d970f9d42d0254775c04d114bd2152c3 ([`pr/nofake.6`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.6) -> [`pr/nofake.7`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.6..pr/nofake.7)) added suggested unset nChainTx check in GuessVerificationProgress",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1870720275",
      "submitted_at": "2024-02-08T16:48:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1871315375,
      "node_id": "PRR_kwDOABII585vigGv",
      "url": null,
      "actor": null,
      "commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nThis looks like a nice simplification.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1871315375",
      "submitted_at": "2024-02-09T19:13:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "referenced",
      "id": 11817767527,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALAZNJn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11817767527",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "67dd1b146d72cc87b4ba32c53ba37ebca425d3cc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/67dd1b146d72cc87b4ba32c53ba37ebca425d3cc",
      "created_at": "2024-02-15T16:14:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11817767778,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALAZNNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11817767778",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at": "2024-02-15T16:14:26Z"
    },
    {
      "event": "reviewed",
      "id": 1883156605,
      "node_id": "PRR_kwDOABII585wPrB9",
      "url": null,
      "actor": null,
      "commit_id": "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review!\r\n\r\nUpdated c9ca4ca4d970f9d42d0254775c04d114bd2152c3 -> 8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b ([`pr/nofake.7`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.7) -> [`pr/nofake.8`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.7..pr/nofake.8)) with suggestions\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1883156605",
      "submitted_at": "2024-02-15T16:15:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "labeled",
      "id": 11818890728,
      "node_id": "LE_lADOABII585-FJRJzwAAAALAdfXo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11818890728",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T17:49:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1890683967,
      "node_id": "PRR_kwDOABII585wsYw_",
      "url": null,
      "actor": null,
      "commit_id": "50273702d7d5dafc1c912ca34fde58fcf88e2a85",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1890683967",
      "submitted_at": "2024-02-20T15:07:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1954438224,
      "node_id": "IC_kwDOABII5850flxQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954438224",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T15:16:01Z",
      "updated_at": "2024-02-20T15:16:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, looks good at first sight, will do a deeper review when it's clear if the CI failure is an issue. I couldn't reproduce it locally so far...",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954438224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "commented",
      "id": 1954448961,
      "node_id": "IC_kwDOABII5850foZB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954448961",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T15:20:50Z",
      "updated_at": "2024-02-20T15:20:50Z",
      "author_association": "MEMBER",
      "body": "To reproduce locally, you'll have to compile with the `integer` sanitizer (not to be confused by the `undefined` sanitizer)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954448961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "commented",
      "id": 1954455499,
      "node_id": "IC_kwDOABII5850fp_L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954455499",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T15:24:01Z",
      "updated_at": "2024-02-20T15:24:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "CI failure is just a preexisting bug in a line of code that doesn't affect anything:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/45b2a91897ca8f4a3e0c1adcfb30cf570971da4e/src/rpc/blockchain.cpp#L1658\r\n\r\nTwo `nChainTx` values in the `getchaintxstats` are subtracted and this triggers the undefined behavior sanitizer because they are unsigned and the result is negative. `getchaintxstats` has a number of edge case problems like this that should be cleaned up but don't really affect anything. I'll probably just add a ubsan suppression in this PR.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954455499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "commented",
      "id": 1954457409,
      "node_id": "IC_kwDOABII5850fqdB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954457409",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T15:24:58Z",
      "updated_at": "2024-02-20T15:24:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> To reproduce locally, you'll have to compile with the `integer` sanitizer (not to be confused by the `undefined` sanitizer)\r\n\r\nThanks! I was just trying to reproduce this locally using the undefined sanitizer.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954457409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 11866675230,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALDTxge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11866675230",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cecf618b68d874ed90949c8c10959437b3047f71",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/cecf618b68d874ed90949c8c10959437b3047f71",
      "created_at": "2024-02-20T19:47:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11866675405,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALDTxjN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11866675405",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at": "2024-02-20T19:47:57Z"
    },
    {
      "event": "commented",
      "id": 1954946598,
      "node_id": "IC_kwDOABII5850hh4m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954946598",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T19:50:05Z",
      "updated_at": "2024-02-20T19:50:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b -> 8afcd99435b693f69b8c3a918b0573ef12559b22 ([`pr/nofake.8`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.8) -> [`pr/nofake.9`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.8..pr/nofake.9)) adding suppression to avoid getchaintxstats ubsan integer overflow errors exposed by new test coverage",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954946598",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "unlabeled",
      "id": 11868656614,
      "node_id": "UNLE_lADOABII585-FJRJzwAAAALDbVPm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11868656614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T23:48:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1895496933,
      "node_id": "PRR_kwDOABII585w-vzl",
      "url": null,
      "actor": null,
      "commit_id": "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1895496933",
      "submitted_at": "2024-02-22T11:55:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1895813376,
      "node_id": "PRR_kwDOABII585w_9EA",
      "url": null,
      "actor": null,
      "commit_id": "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 8afcd99435b693f69b8c3a918b0573ef12559b22 🤗\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 8afcd99435b693f69b8c3a918b0573ef12559b22 🤗\r\npDg2BPKGH9xuFZAcu+QXuXdu2fcqOaeS2y/Crj2fW2R6q67lpuPvQS+Iq51IomT4ZBoP+oCfeUSQY6QiyCRLCg==\r\n```\r\n\r\n</details>\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1895813376",
      "submitted_at": "2024-02-22T16:31:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "review_requested",
      "id": 11893709534,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALE65re",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11893709534",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T16:31:20Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11893709730,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALE65ui",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11893709730",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T16:31:20Z",
      "requested_reviewer": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1896432015,
      "node_id": "PRR_kwDOABII585xCUGP",
      "url": null,
      "actor": null,
      "commit_id": "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review. Tried to answer some questions below and I will work on the suggestions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1896432015",
      "submitted_at": "2024-02-22T17:52:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "assigned",
      "id": 11924864336,
      "node_id": "AE_lADOABII585-FJRJzwAAAALGxv1Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11924864336",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-26T17:28:43Z",
      "assignee": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 11924890262,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALGx2KW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11924890262",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b64dc6d303194245651adb7aa17b0b85a3cec03c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b64dc6d303194245651adb7aa17b0b85a3cec03c",
      "created_at": "2024-02-26T17:30:50Z"
    },
    {
      "event": "referenced",
      "id": 11924890287,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALGx2Kv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11924890287",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "85dfb7160c01e39e0a1977fdd3fedcd6300c7722",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/85dfb7160c01e39e0a1977fdd3fedcd6300c7722",
      "created_at": "2024-02-26T17:30:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11924890436,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALGx2NE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11924890436",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7081caca03b8f0d1c96415e0fc839bf4836257be",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7081caca03b8f0d1c96415e0fc839bf4836257be",
      "created_at": "2024-02-26T17:30:51Z"
    },
    {
      "event": "commented",
      "id": 1964718181,
      "node_id": "IC_kwDOABII5851Gzhl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1964718181",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-26T17:32:29Z",
      "updated_at": "2024-02-26T17:50:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 8afcd99435b693f69b8c3a918b0573ef12559b22 -> 7081caca03b8f0d1c96415e0fc839bf4836257be ([`pr/nofake.9`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.9) -> [`pr/nofake.10`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.9..pr/nofake.10)) adding check for final nTx and nChainTx values to the python test, moving ubsan suppressions to another commit, and improving setBlockIndexCandidates checks and adding better comments.\r\nUpdated 7081caca03b8f0d1c96415e0fc839bf4836257be -> 2f3a692cdad60cb771e390bb79bf4da2b40146c9 ([`pr/nofake.10`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.10) -> [`pr/nofake.11`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.10..pr/nofake.11)) making minor edits to comments",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1964718181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 11925104046,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALGyqWu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11925104046",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c015050cb2cf35303c05c7eb86d3546403e330eb",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/c015050cb2cf35303c05c7eb86d3546403e330eb",
      "created_at": "2024-02-26T17:49:30Z"
    },
    {
      "event": "referenced",
      "id": 11925104082,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALGyqXS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11925104082",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "created_at": "2024-02-26T17:49:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11925104293,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALGyqal",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11925104293",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at": "2024-02-26T17:49:31Z"
    },
    {
      "event": "reviewed",
      "id": 1904970718,
      "node_id": "PRR_kwDOABII585xi4ve",
      "url": null,
      "actor": null,
      "commit_id": "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1904970718",
      "submitted_at": "2024-02-27T23:02:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1969573251,
      "node_id": "IC_kwDOABII5851ZU2D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1969573251",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T18:18:09Z",
      "updated_at": "2024-02-28T18:18:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 2f3a692cdad60cb771e390bb79bf4da2b40146c9 - I reviewed the code, and did some testing running with `-checkblockindex` on signet.\r\n\r\nWould be great if @jamesob you could have a quick look. Not necessarily an in-depth review - I'd just want too make sure we're not missing some historical context from the time when the faked values and the `BLOCK_ASSUMED_VALID` flag were introduced originally.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1969573251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "mentioned",
      "id": 11955566423,
      "node_id": "MEE_lADOABII585-FJRJzwAAAALIm3dX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955566423",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T18:18:10Z"
    },
    {
      "event": "subscribed",
      "id": 11955566436,
      "node_id": "SE_lADOABII585-FJRJzwAAAALIm3dk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955566436",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T18:18:10Z"
    },
    {
      "event": "review_requested",
      "id": 11955567036,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALIm3m8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955567036",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T18:18:13Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 11971672258,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALJkTjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11971672258",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "created_at": "2024-02-29T21:26:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11971672369,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALJkTkx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11971672369",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at": "2024-02-29T21:26:48Z"
    },
    {
      "event": "reviewed",
      "id": 1909903494,
      "node_id": "PRR_kwDOABII585x1tCG",
      "url": null,
      "actor": null,
      "commit_id": "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 2f3a692cdad60cb771e390bb79bf4da2b40146c9 -> 7ce1a0e375a2b27614be0ff148aea989d1100ff8 ([`pr/nofake.11`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.11) -> [`pr/nofake.12`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.11..pr/nofake.12)) adding new commit 438ac1ffc23ec5134f2ac74cee75ff145078df09 to fix a pre-existing bug https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232 in CheckBlockIndex\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1909903494",
      "submitted_at": "2024-02-29T21:39:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1912039200,
      "node_id": "PRR_kwDOABII585x92cg",
      "url": null,
      "actor": null,
      "commit_id": "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The situation with a snapshot block that is sent out of order is still asserting (in two places). As mentioned before, I'd understand if you wanted to delay the fix to a different PR.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1912039200",
      "submitted_at": "2024-03-01T22:02:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1912222187,
      "node_id": "PRR_kwDOABII585x-jHr",
      "url": null,
      "actor": null,
      "commit_id": "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review. It seems like my workaround for the (preexisting) bug reported in the https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078 thread doesn't work, and I'm undecided whether it's better to make tweaks to fix it or just leave it alone to be solved separately. @mzumsande I'm really curious how you're testing it, because it is a little hard to reason about abstractly without a test.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1912222187",
      "submitted_at": "2024-03-01T23:25:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1974096225,
      "node_id": "IC_kwDOABII5851qlFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974096225",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T23:53:40Z",
      "updated_at": "2024-03-01T23:55:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @mzumsande I'm really curious how you're testing it, because it is a little hard to reason about abstractly without a test.\r\n\r\nI've been testing this in two ways:\r\n1) On signet, syncing from a snapshot I created until I am close to the point where the background chainstate is finished, and then running with `-checkblockindex` for the last couple of blocks until it crashes. After several tries I've now saved a copy of a datadir where the background sync is finished up to `snapshot_height - 150`  or so, and then I run only the last few blocks with the slow `-checkblockindex`. The signet testing is also how I encountered #29519.\r\n\r\n2) Adjusting `feature_assumeutxo.py`, so far I've just added the code \r\n```\r\n        # Send snapshot block to n1 out of order, to test checkblockindex behavior\r\n        snapshot_hash = n0.getblockhash(SNAPSHOT_BASE_HEIGHT)\r\n        snapshot_block = n0.getblock(snapshot_hash, 0)\r\n        n1.submitblock(snapshot_block)\r\n```\r\nbefore `self.connect_nodes(0, 1)` in line ~308. This triggers the bug at the snapshot height, but is not ideal otherwise, because it means that the order of blocks is really strange, e.g. we receive the block snapshot+1 after snapshot which would not usually happening when syncing. I've run into additional asserts failures this way (not mentioned above) that will hopefully be no longer an issue after changing the logic in `ReceivedBlockTransactions`. But I'm thinking of generalising this approach - maybe even randomize the order in which all blocks are sent - but I haven't done that yet.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "mentioned",
      "id": 11985325351,
      "node_id": "MEE_lADOABII585-FJRJzwAAAALKYY0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985325351",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T23:53:41Z"
    },
    {
      "event": "subscribed",
      "id": 11985325357,
      "node_id": "SE_lADOABII585-FJRJzwAAAALKYY0t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985325357",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T23:53:41Z"
    },
    {
      "event": "commented",
      "id": 1974116871,
      "node_id": "IC_kwDOABII5851qqIH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974116871",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T00:11:40Z",
      "updated_at": "2024-03-02T00:11:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you that is very helpful! I should have thought of submitting the snapshot block to test this. For some reason I was thinking the bug would be harder to trigger.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974116871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "reviewed",
      "id": 1925693330,
      "node_id": "PRR_kwDOABII585yx7-S",
      "url": null,
      "actor": null,
      "commit_id": "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Fixing the issue in ReceivedBlockTransactions turned out to be really simple, see 4cba9f4f0693ecae23f8c02afe354c5893c2684c in  [202403_assumeutxo_nchaintx](https://github.com/mzumsande/bitcoin/tree/202403_assumeutxo_nchaintx) that builds on this branch, and also adds a test to submit blocks in a randomized order.\r\nSo I'm not sure if it's really worth the effort to get the checks right in the current world where nChainTx for the snapshot block can be set back to 0.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1925693330",
      "submitted_at": "2024-03-08T19:25:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "commented",
      "id": 1986330508,
      "node_id": "IC_kwDOABII5852ZP-M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986330508",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T19:53:37Z",
      "updated_at": "2024-03-08T19:53:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Fixing the issue in ReceivedBlockTransactions turned out to be really simple, see [4cba9f4](https://github.com/bitcoin/bitcoin/commit/4cba9f4f0693ecae23f8c02afe354c5893c2684c) in [202403_assumeutxo_nchaintx](https://github.com/mzumsande/bitcoin/tree/202403_assumeutxo_nchaintx) that builds on this branch, and also adds a test to submit blocks in a randomized order. So I'm not sure if it's really worth the effort to get the checks right in the current world where nChainTx for the snapshot block can be set back to 0.\r\n\r\nYeah after putting in more effort, I gave up on the checks and came to a similar conclusion. My fix is more strict, though and looks like:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3590,7 +3590,14 @@ void ChainstateManager::ReceivedBlockTransactions(const CBlock& block, CBlockInd\r\n {\r\n     AssertLockHeld(cs_main);\r\n     pindexNew->nTx = block.vtx.size();\r\n-    pindexNew->nChainTx = 0;\r\n+    // Typically nChainTx will be 0 at this point, but it can be nonzero if this\r\n+    // is a pruned block which is being downloaded again, or if this is an\r\n+    // assumeutxo snapshot block which has a hardcoded nChainTx value from the\r\n+    // snapshot metadata. If the pindex is not the snapshot block and the nChainTx\r\n+    // value is not zero, assert that value is actually correct.\r\n+    assert(pindexNew->nChainTx == 0 ||\r\n+           pindexNew->nChainTx == (pindexNew->pprev ? pindexNew->pprev->nChainTx : 0) + pindexNew->nTx ||\r\n+           pindexNew == GetSnapshotBaseBlock());\r\n     pindexNew->nFile = pos.nFile;\r\n     pindexNew->nDataPos = pos.nPos;\r\n     pindexNew->nUndoPos = 0;\r\n@@ -3610,7 +3617,13 @@ void ChainstateManager::ReceivedBlockTransactions(const CBlock& block, CBlockInd\r\n         while (!queue.empty()) {\r\n             CBlockIndex *pindex = queue.front();\r\n             queue.pop_front();\r\n-            pindex->nChainTx = (pindex->pprev ? pindex->pprev->nChainTx : 0) + pindex->nTx;\r\n+            auto chain_tx{(pindex->pprev ? pindex->pprev->nChainTx : 0) + pindex->nTx};\r\n+            // Before setting nChainTx assert that it is 0 or already set to\r\n+            // the correct value. This assert will fail after receiving the\r\n+            // assumeutxo snapshot block if assumeutxo snapshot metadata has an\r\n+            // incorrect AssumeutxoData::nChainTx value.\r\n+            assert(pindex->nChainTx == 0 || pindex->nChainTx == chain_tx);\r\n+            pindex->nChainTx = chain_tx;\r\n             pindex->nSequenceId = nBlockSequenceId++;\r\n             for (Chainstate *c : GetAll()) {\r\n                 c->TryAddBlockIndexCandidate(pindex);\r\n```\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1986330508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "commented",
      "id": 1986395287,
      "node_id": "IC_kwDOABII5852ZfyX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986395287",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T20:48:18Z",
      "updated_at": "2024-03-08T20:48:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> My fix is more strict, though and looks like: (...)\r\n\r\nSeems fine to me, though I'm not in favor of adding nontrivial asserts like this outside of `CheckBlockIndex` - I'd prefer them to be `Assume` in production code, since the consequences of them breaking at some point could be very serious, whereas the consequence of a wrong (non-zero) `nChainTx` value would be mostly just that progress estimation logging would be broken. \r\n\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1986395287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 12060433918,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALO253-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060433918",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fdabd745d11d8cf3efc6f7d9d0a5e593f4da4fcc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/fdabd745d11d8cf3efc6f7d9d0a5e593f4da4fcc",
      "created_at": "2024-03-08T20:48:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12060433995,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALO255L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060433995",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "35b0964954afb88a4ac0e64ebe777f194946bf38",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/35b0964954afb88a4ac0e64ebe777f194946bf38",
      "created_at": "2024-03-08T20:49:00Z"
    },
    {
      "event": "reviewed",
      "id": 1925782030,
      "node_id": "PRR_kwDOABII585yyRoO",
      "url": null,
      "actor": null,
      "commit_id": "35b0964954afb88a4ac0e64ebe777f194946bf38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 7ce1a0e375a2b27614be0ff148aea989d1100ff8 -> 35b0964954afb88a4ac0e64ebe777f194946bf38 ([`pr/nofake.12`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.12) -> [`pr/nofake.13`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.12..pr/nofake.13)) incorporating a different fix for the bug reported https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232 triggered by test code in https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225. Instead of updating CheckBlockIndex asserts to cope with ReceivedBlockTransactions temporarily setting the snapshot block nChainTx to 0 if it is downloaded out of order, it updates ReceivedBlockTransactions not to do that. This avoids problems with the previous fix reported https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1912039200 which made CheckBlockIndex checks more complicated",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1925782030",
      "submitted_at": "2024-03-08T20:56:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "referenced",
      "id": 12060621420,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALO3nps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060621420",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "95474d9f3b96675d91c8109887b09ce2e643eb33",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/95474d9f3b96675d91c8109887b09ce2e643eb33",
      "created_at": "2024-03-08T21:11:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12060621474,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALO3nqi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060621474",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1e227bc2139bffe6fd3e3f25d0594c9443836420",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/1e227bc2139bffe6fd3e3f25d0594c9443836420",
      "created_at": "2024-03-08T21:11:01Z"
    },
    {
      "event": "commented",
      "id": 1986426585,
      "node_id": "IC_kwDOABII5852ZnbZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986426585",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T21:12:40Z",
      "updated_at": "2024-03-08T21:21:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1986395287\r\n\r\n> Seems fine to me, though I'm not in favor of adding nontrivial asserts like this outside of `CheckBlockIndex` - I'd prefer them to be `Assume` in production code, since the consequences of them breaking at some point could be very serious, whereas the consequence of a wrong (non-zero) `nChainTx` value would be mostly just that progress estimation logging would be broken.\r\n\r\nUpdated 35b0964954afb88a4ac0e64ebe777f194946bf38 -> 1e227bc2139bffe6fd3e3f25d0594c9443836420 ([`pr/nofake.13`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.13) -> [`pr/nofake.14`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.13..pr/nofake.14)) replacing assert with Assume\r\nUpdated 1e227bc2139bffe6fd3e3f25d0594c9443836420 -> 065952806234e5a0a6b87df5a5067d0f4062d25e ([`pr/nofake.14`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.14) -> [`pr/nofake.15`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.14..pr/nofake.15)) fixing lint error https://cirrus-ci.com/task/6070075329871872?logs=lint#L743",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1986426585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 12060690271,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALO34df",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060690271",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "85233b203231f39c4436017860248ff9ad08ad42",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/85233b203231f39c4436017860248ff9ad08ad42",
      "created_at": "2024-03-08T21:20:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12060690338,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALO34ei",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060690338",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "065952806234e5a0a6b87df5a5067d0f4062d25e",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/065952806234e5a0a6b87df5a5067d0f4062d25e",
      "created_at": "2024-03-08T21:20:18Z"
    },
    {
      "event": "labeled",
      "id": 12060691254,
      "node_id": "LE_lADOABII585-FJRJzwAAAALO34s2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12060691254",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T21:20:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1986435123,
      "node_id": "IC_kwDOABII5852Zpgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986435123",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T21:20:24Z",
      "updated_at": "2024-03-08T21:20:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22453844886</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1986435123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "unlabeled",
      "id": 12061135620,
      "node_id": "UNLE_lADOABII585-FJRJzwAAAALO5lME",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12061135620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T22:15:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unassigned",
      "id": 12074708435,
      "node_id": "UNE_lADOABII585-FJRJzwAAAALPtW3T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12074708435",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T14:37:21Z",
      "assignee": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1928263810,
      "node_id": "PRR_kwDOABII585y7viC",
      "url": null,
      "actor": null,
      "commit_id": "065952806234e5a0a6b87df5a5067d0f4062d25e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I'm still reviewing, but I like how the last commit 065952806234e5a0a6b87df5a5067d0f4062d25e makes it clear that quite a bit of complexity goes away.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1928263810",
      "submitted_at": "2024-03-11T16:39:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "referenced",
      "id": 12078006951,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALP58Kn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12078006951",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7811676331c2c7b5b41f5d3d8f8d133788a9e806",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7811676331c2c7b5b41f5d3d8f8d133788a9e806",
      "created_at": "2024-03-11T18:10:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12078007108,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALP58NE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12078007108",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "69f9f5df4df73d02c4cd184addc36b9fc8f3f507",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/69f9f5df4df73d02c4cd184addc36b9fc8f3f507",
      "created_at": "2024-03-11T18:10:24Z"
    },
    {
      "event": "reviewed",
      "id": 1928627248,
      "node_id": "PRR_kwDOABII585y9IQw",
      "url": null,
      "actor": null,
      "commit_id": "065952806234e5a0a6b87df5a5067d0f4062d25e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 065952806234e5a0a6b87df5a5067d0f4062d25e -> 69f9f5df4df73d02c4cd184addc36b9fc8f3f507 ([`pr/nofake.15`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.15) -> [`pr/nofake.16`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.16), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.15..pr/nofake.16)) adding back a comment and splitting commits as suggested.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1928627248",
      "submitted_at": "2024-03-11T18:10:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1928680238,
      "node_id": "PRR_kwDOABII585y9VMu",
      "url": null,
      "actor": null,
      "commit_id": "69f9f5df4df73d02c4cd184addc36b9fc8f3f507",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1928680238",
      "submitted_at": "2024-03-11T18:26:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1928988924,
      "node_id": "PRR_kwDOABII585y-gj8",
      "url": null,
      "actor": null,
      "commit_id": "69f9f5df4df73d02c4cd184addc36b9fc8f3f507",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Mostly happy with 69f9f5df4df73d02c4cd184addc36b9fc8f3f507\r\n\r\n`snap_update_firsts` makes me a bit dizzy, mostly because I don't understand what the original code is trying to achieve. I'll try to wrap my ahead around that another time.\r\n\r\n_Update 2024-03-12:_ ok, I wrapped my ahead around it. The call sites for `snap_update_firsts` are where we are navigating to the next `CBlockIndex` to check.\r\n\r\nThere are two sets of `pindexFirst...` variables. The first set starts from genesis + 1 and does not involve assumeutxo. The second set starts from `snapshot`. Blocks are checked depth-first starting from genesis + 1. At some point we _may_ encounter a snapshot block, at which point `snap_update_firsts` swaps the `pindexFirst...` variables. Since we may have a few stale blocks below the snapshot, or even entire fork that replaces the snapshot, `snap_update_firsts` is also called on the way down / sideways.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1928988924",
      "submitted_at": "2024-03-11T19:53:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1930888729,
      "node_id": "PRR_kwDOABII585zFwYZ",
      "url": null,
      "actor": null,
      "commit_id": "69f9f5df4df73d02c4cd184addc36b9fc8f3f507",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 69f9f5df4df73d02c4cd184addc36b9fc8f3f507\r\n\r\nI tested loading the signet snapshot with `-checkblockindex` (didn't wait for tip or background sync to finish though).\r\n\r\nNote for anyone else testing this: the headers pre-sync phase is agonisingly slow, so you may want to do that bit without `-checkblockindex`. I also ran into #29519 where _all_ my peers were stuck downloading only the background thread (fixed by toggling `setnetworkactive`).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1930888729",
      "submitted_at": "2024-03-12T12:15:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "review_requested",
      "id": 12088258085,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALQhC4l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12088258085",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T12:15:17Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 12090309440,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALQo3tA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090309440",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f37038758d5ff473aca0505f2f3604ea8f1418c7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/f37038758d5ff473aca0505f2f3604ea8f1418c7",
      "created_at": "2024-03-12T14:33:00Z"
    },
    {
      "event": "referenced",
      "id": 12090309483,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALQo3tr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090309483",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "187e96b42a84cc0dea8ec864f18b7413a91a1f16",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/187e96b42a84cc0dea8ec864f18b7413a91a1f16",
      "created_at": "2024-03-12T14:33:00Z"
    },
    {
      "event": "referenced",
      "id": 12090309584,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALQo3vQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090309584",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5b334a821cd101e4a96397f8db548b1291eda1bf",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5b334a821cd101e4a96397f8db548b1291eda1bf",
      "created_at": "2024-03-12T14:33:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12090309843,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALQo3zT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090309843",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce9388084cb130825ab9faf2ee9e5a6b548a1a07",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ce9388084cb130825ab9faf2ee9e5a6b548a1a07",
      "created_at": "2024-03-12T14:33:02Z"
    },
    {
      "event": "reviewed",
      "id": 1929148269,
      "node_id": "PRR_kwDOABII585y_Hdt",
      "url": null,
      "actor": null,
      "commit_id": "ce9388084cb130825ab9faf2ee9e5a6b548a1a07",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review!\r\n\r\nUpdated 69f9f5df4df73d02c4cd184addc36b9fc8f3f507 -> ce9388084cb130825ab9faf2ee9e5a6b548a1a07 ([`pr/nofake.16`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.16) -> [`pr/nofake.17`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.17), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.16..pr/nofake.17)) adding more comments to clarify things and adding early return in GuessVerificationProgress if Assume check fails\r\nUpdated ce9388084cb130825ab9faf2ee9e5a6b548a1a07 -> ae0d1c266898dc1e3c2f72e0d7a7d4d57b164f45 ([`pr/nofake.17`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.17) -> [`pr/nofake.18`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.18), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.17..pr/nofake.18)) fixing new comments.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1929148269",
      "submitted_at": "2024-03-12T14:34:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "referenced",
      "id": 12090405771,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALQpPOL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090405771",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2f2c0a210da213c1f51cbabc9def9eb05549a27",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b2f2c0a210da213c1f51cbabc9def9eb05549a27",
      "created_at": "2024-03-12T14:39:05Z"
    },
    {
      "event": "referenced",
      "id": 12090405863,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALQpPPn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090405863",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "babe5d0c2096ffea253d59369d8028ac80483766",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/babe5d0c2096ffea253d59369d8028ac80483766",
      "created_at": "2024-03-12T14:39:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12090406096,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALQpPTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12090406096",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ae0d1c266898dc1e3c2f72e0d7a7d4d57b164f45",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ae0d1c266898dc1e3c2f72e0d7a7d4d57b164f45",
      "created_at": "2024-03-12T14:39:07Z"
    },
    {
      "event": "commented",
      "id": 1991859020,
      "node_id": "IC_kwDOABII5852uVtM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1991859020",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T15:01:02Z",
      "updated_at": "2024-03-12T15:01:02Z",
      "author_association": "MEMBER",
      "body": "re-ACK ae0d1c266898dc1e3c2f72e0d7a7d4d57b164f45",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1991859020",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 12102920705,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALRY-oB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12102920705",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe0633e6dfb16230369c880b6243287962bfbd10",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/fe0633e6dfb16230369c880b6243287962bfbd10",
      "created_at": "2024-03-13T12:42:17Z"
    },
    {
      "event": "referenced",
      "id": 12102920755,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALRY-oz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12102920755",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "da18416b7f3311b942a8007387c75e0f31e6fcf6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/da18416b7f3311b942a8007387c75e0f31e6fcf6",
      "created_at": "2024-03-13T12:42:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12102921012,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALRY-s0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12102921012",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "37e54d798a29b4798402db5c4163537046caf536",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/37e54d798a29b4798402db5c4163537046caf536",
      "created_at": "2024-03-13T12:42:18Z"
    },
    {
      "event": "referenced",
      "id": 12103628592,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALRbrcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12103628592",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "187b4df52189ef46b7f014f5a3d2ed16eb7ce69a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/187b4df52189ef46b7f014f5a3d2ed16eb7ce69a",
      "created_at": "2024-03-13T13:32:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12103628811,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALRbrgL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12103628811",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "345ac98bb893da7c1f0b573d4da73711b2139391",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/345ac98bb893da7c1f0b573d4da73711b2139391",
      "created_at": "2024-03-13T13:32:45Z"
    },
    {
      "event": "commented",
      "id": 1994422539,
      "node_id": "IC_kwDOABII58524HkL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994422539",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-13T13:35:39Z",
      "updated_at": "2024-03-13T13:35:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated ae0d1c266898dc1e3c2f72e0d7a7d4d57b164f45 -> 37e54d798a29b4798402db5c4163537046caf536 ([`pr/nofake.18`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.18) -> [`pr/nofake.19`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.19), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.18..pr/nofake.19)) trying to improve a few comments.\r\nUpdated 37e54d798a29b4798402db5c4163537046caf536 -> 345ac98bb893da7c1f0b573d4da73711b2139391 ([`pr/nofake.19`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.19) -> [`pr/nofake.20`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.20), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.19..pr/nofake.20)) adding back nChainTx = 0 fallback in ReceivedBlockTransactions",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1994422539",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "labeled",
      "id": 12107225109,
      "node_id": "LE_lADOABII585-FJRJzwAAAALRpZgV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107225109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-13T17:53:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1939983351,
      "node_id": "PRR_kwDOABII585zocv3",
      "url": null,
      "actor": null,
      "commit_id": "345ac98bb893da7c1f0b573d4da73711b2139391",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code looks good to me after a latest pass, I will quickly re-review once this has been rebased.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1939983351",
      "submitted_at": "2024-03-15T20:32:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyNTJlNjg3ZWM5NGI2Y2NhZmI1YmM0NGI3ZGYzZGFlYjQ3M2ZkZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f252e687ec94b6ccafb5bc44b7df3daeb473fdea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f252e687ec94b6ccafb5bc44b7df3daeb473fdea",
      "tree": {
        "sha": "3d92b025a1d995a3bb916f63f2f9986e37cea4df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d92b025a1d995a3bb916f63f2f9986e37cea4df"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a459e3ab9f983aabc9942e0989f790c9a511b9f",
          "sha": "9a459e3ab9f983aabc9942e0989f790c9a511b9f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a459e3ab9f983aabc9942e0989f790c9a511b9f"
        }
      ],
      "message": "assumeutxo test: Add RPC test for fake nTx and nChainTx values\n\nThe fake values will be removed in an upcoming commit, so it is useful to have\ntest coverage confirming the change in behavior.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-05T21:16:14Z"
      },
      "sha": "f252e687ec94b6ccafb5bc44b7df3daeb473fdea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzZThmYzkxMmMyMWEyZjViNDdlOGVhYjEwZmIxM2M2MDRhZmVkODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63e8fc912c21a2f5b47e8eab10fb13c604afed85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/63e8fc912c21a2f5b47e8eab10fb13c604afed85",
      "tree": {
        "sha": "50028b0829b252e970bb036e4668e3331a0ca6d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50028b0829b252e970bb036e4668e3331a0ca6d8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f252e687ec94b6ccafb5bc44b7df3daeb473fdea",
          "sha": "f252e687ec94b6ccafb5bc44b7df3daeb473fdea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f252e687ec94b6ccafb5bc44b7df3daeb473fdea"
        }
      ],
      "message": "ci: add getchaintxstats ubsan suppressions\n\nAdd ubsan suppressions for integer overflows in the getchaintxstats RPC.\n\ngetchainstatstx line \"int nTxDiff = pindex->nChainTx - past_block.nChainTx\" can\ntrigger ubsan integer overflows when assumeutxo snapshots are loaded, from\nsubtracting unsigned values and assigning the result to a signed int.\n\nThe overflow behavior probably exists in current code but is hard to trigger\nbecause it would require calling getchainstatstx at the right time with\nspecific parameters as background blocks are being downloaded. But the overflow\nbehavior becomes easier to trigger in the upcoming commit removing fake\nnChainTx values, so a suppression needs to be added before then for CI to pass.\n\ngetchainstatstx should probably be improved separately in another PR to not\nneed this suppression, and handle edge cases and missing nChainTx values more\ncarefully.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-05T21:16:14Z"
      },
      "sha": "63e8fc912c21a2f5b47e8eab10fb13c604afed85"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBmZDkxNWVlNmJlZjYzYmIzNjBjY2M1YzAzOWEzYzExNjc2YzM4ZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fd915ee6bef63bb360ccc5c039a3c11676c38e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0fd915ee6bef63bb360ccc5c039a3c11676c38e3",
      "tree": {
        "sha": "d10c5ce4767a07fefcc6daf068456cea50ae94a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d10c5ce4767a07fefcc6daf068456cea50ae94a2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63e8fc912c21a2f5b47e8eab10fb13c604afed85",
          "sha": "63e8fc912c21a2f5b47e8eab10fb13c604afed85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/63e8fc912c21a2f5b47e8eab10fb13c604afed85"
        }
      ],
      "message": "validation: Check GuessVerificationProgress is not called with disconnected block\n\nUse Assume macro as suggested https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479427801",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-08T16:37:19Z"
      },
      "sha": "0fd915ee6bef63bb360ccc5c039a3c11676c38e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliOTdkNWJiZjk4MGQ2NTdhMjc3Yzg1ZDExM2MyYWUzZTg3MGUwZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
      "tree": {
        "sha": "a9ef98ac258baa9d7a1587c4cf0d595371f86732",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9ef98ac258baa9d7a1587c4cf0d595371f86732"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fd915ee6bef63bb360ccc5c039a3c11676c38e3",
          "sha": "0fd915ee6bef63bb360ccc5c039a3c11676c38e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0fd915ee6bef63bb360ccc5c039a3c11676c38e3"
        }
      ],
      "message": "doc: Improve comments describing setBlockIndexCandidates checks\n\nThe checks are changing slightly in the next commit, so try to explains the\nones that exist to avoid confusion\n(https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079)",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-02T15:59:24Z"
      },
      "sha": "9b97d5bbf980d657a277c85d113c2ae3e870e0ec"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVmMjljOGI2NjIzMDlhNDM4MTIxYTgzZjI3ZmQ3YmRkMTc3OTcwMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef29c8b662309a438121a83f27fd7bdd1779700c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ef29c8b662309a438121a83f27fd7bdd1779700c",
      "tree": {
        "sha": "f01d0382e05f2cf1b5fa1b4310932c0ae9a40dd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f01d0382e05f2cf1b5fa1b4310932c0ae9a40dd8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
          "sha": "9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b97d5bbf980d657a277c85d113c2ae3e870e0ec"
        }
      ],
      "message": "assumeutxo: Get rid of faked nTx and nChainTx values\n\nThe `PopulateAndValidateSnapshot` function introduced in\nf6e2da5fb7c6406c37612c838c998078ea8d2252 from #19806 has been setting fake\n`nTx` and `nChainTx` values that can show up in RPC results (see #29328) and\nmake `CBlockIndex` state hard to reason about, because it is difficult to know\nwhether the values are real or fake.\n\nRevert to previous behavior of setting `nTx` and `nChainTx` to 0 when the\nvalues are unknown, instead of faking them.\n\nThis commit fixes at least two assert failures in the (pindex->nChainTx ==\npindex->nTx + prev_chain_tx) check that would happen previously. Tests for\nthese failures are added separately in the next two commits.\n\nCompatibility note: This change could result in -checkblockindex failures if a\nsnapshot was loaded by a previous version of Bitcoin Core and not fully\nvalidated, because fake nTx values will have been saved to the block index. It\nwould be pretty easy to avoid these failures by adding some compatibility code\nto `LoadBlockIndex` and changing `nTx` values from 1 to 0 when they are fake\n(when `(pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS`), but a\nlittle simpler not to worry about being compatible in this case.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-02T15:59:24Z"
      },
      "sha": "ef29c8b662309a438121a83f27fd7bdd1779700c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzOTE0NThkNzY3Yjg0MmE3OTI1Nzg1YTcwNTM0MDBjMGUxY2I1NWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0391458d767b842a7925785a7053400c0e1cb55a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0391458d767b842a7925785a7053400c0e1cb55a",
      "tree": {
        "sha": "2559d852d988ef312c4f113601ba309dddf5b442",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2559d852d988ef312c4f113601ba309dddf5b442"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef29c8b662309a438121a83f27fd7bdd1779700c",
          "sha": "ef29c8b662309a438121a83f27fd7bdd1779700c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ef29c8b662309a438121a83f27fd7bdd1779700c"
        }
      ],
      "message": "test: assumeutxo stale block CheckBlockIndex crash test\n\nAdd a test for a CheckBlockIndex crash that would happen before previous\n\"assumeutxo: Get rid of faked nTx and nChainTx values\" commit.\n\nThe crash was an assert failure in the (pindex->nChainTx == pindex->nTx +\nprev_chain_tx) check that would previously happen if a snapshot was loaded, and\na block was submitted which forked from the chain before the snapshot block and\nafter the last downloaded background chain block. This block would not be\nmarked assumed-valid because it would not be an ancestor of the snapshot, and\nit would have nTx set, nChainTx unset, and prev->nChainTx set with a fake\nvalue, so the assert would fail. After the fix, prev->nChainTx is unset instead\nof being set to a fake value, so the assert succeeds. This test was originally\nposted by maflcko in\nhttps://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945\n\nCo-authored-by: MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-02T15:59:24Z"
      },
      "sha": "0391458d767b842a7925785a7053400c0e1cb55a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVmMTc0ZTllZDIxYzA4ZjM4ZTVkNGI1MzdiNmRlY2ZkMWY2NDZkYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef174e9ed21c08f38e5d4b537b6decfd1f646db9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ef174e9ed21c08f38e5d4b537b6decfd1f646db9",
      "tree": {
        "sha": "5b01bef21deb125a1fe903b10914ba4830b29b2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b01bef21deb125a1fe903b10914ba4830b29b2b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0391458d767b842a7925785a7053400c0e1cb55a",
          "sha": "0391458d767b842a7925785a7053400c0e1cb55a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0391458d767b842a7925785a7053400c0e1cb55a"
        }
      ],
      "message": "test: assumeutxo snapshot block CheckBlockIndex crash test\n\nAdd a test for a CheckBlockIndex crash that would happen before previous\n\"assumeutxo: Get rid of faked nTx and nChainTx values\" commit.\n\nThe crash was an assert failure in the (pindex->nChainTx == pindex->nTx +\nprev_chain_tx) check that would previously happen if the snapshot block was\nsubmitted after loading the snapshot and downloading a few blocks after the\nsnapshot. In that case ReceivedBlockTransactions() previously would overwrite\nthe nChainTx value of the submitted snapshot block with a fake value based on\nthe previous block, so the (pindex->nChainTx == pindex->nTx + prev_chain_tx)\ncheck would later fail on the first block after the snapshot. This test was\noriginally posted by Martin Zumsande <mzumsande@gmail.com> in\nhttps://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-02T15:59:24Z"
      },
      "sha": "ef174e9ed21c08f38e5d4b537b6decfd1f646db9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkOWE3NDU4YTI1NzBmN2RiNTZhYjYyNmIyMjAxMDU5MTA4OWMzMTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d9a7458a2570f7db56ab626b22010591089c312",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d9a7458a2570f7db56ab626b22010591089c312",
      "tree": {
        "sha": "efaf719708835161ade2922c96aa56d70cd8a921",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efaf719708835161ade2922c96aa56d70cd8a921"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef174e9ed21c08f38e5d4b537b6decfd1f646db9",
          "sha": "ef174e9ed21c08f38e5d4b537b6decfd1f646db9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ef174e9ed21c08f38e5d4b537b6decfd1f646db9"
        }
      ],
      "message": "assumeutxo: Remove BLOCK_ASSUMED_VALID flag\n\nFlag adds complexity and is not currently used for anything.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-03-18T16:28:40Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-02-05T22:10:27Z"
      },
      "sha": "9d9a7458a2570f7db56ab626b22010591089c312"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12156834799,
      "node_id": "HRFPE_lADOABII585-FJRJzwAAAALUmpPv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12156834799",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/9d9a7458a2570f7db56ab626b22010591089c312",
      "created_at": "2024-03-18T18:00:32Z"
    },
    {
      "event": "referenced",
      "id": 12156856697,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALUmul5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12156856697",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "302b878ba2794af0dec52f56e065d349141d298c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/302b878ba2794af0dec52f56e065d349141d298c",
      "created_at": "2024-03-18T18:02:06Z"
    },
    {
      "event": "referenced",
      "id": 12156856725,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALUmumV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12156856725",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d1edd8ee36624b756a325d8355aaa08f6d621470",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d1edd8ee36624b756a325d8355aaa08f6d621470",
      "created_at": "2024-03-18T18:02:06Z"
    },
    {
      "event": "referenced",
      "id": 12156856805,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALUmunl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12156856805",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e634078a1ac844d3986ab1c0c640a37c546d144",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6e634078a1ac844d3986ab1c0c640a37c546d144",
      "created_at": "2024-03-18T18:02:06Z"
    },
    {
      "event": "reviewed",
      "id": 1943835536,
      "node_id": "PRR_kwDOABII585z3JOQ",
      "url": null,
      "actor": null,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 345ac98bb893da7c1f0b573d4da73711b2139391 -> 9d9a7458a2570f7db56ab626b22010591089c312 ([`pr/nofake.20`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.20) -> [`pr/nofake.21`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.21), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.20-rebase..pr/nofake.21)) due to conflict with #29478\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1943835536",
      "submitted_at": "2024-03-18T18:12:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "unlabeled",
      "id": 12157318744,
      "node_id": "UNLE_lADOABII585-FJRJzwAAAALUofZY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12157318744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T18:35:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2006783101,
      "node_id": "IC_kwDOABII5853nRR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2006783101",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T10:42:06Z",
      "updated_at": "2024-03-19T10:42:06Z",
      "author_association": "MEMBER",
      "body": "re-ACK 9d9a7458a2570f7db56ab626b22010591089c312\r\n\r\nI also tried generating and loading a signet snapshot with this PR combined with #29612.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-2006783101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "review_requested",
      "id": 12167244724,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALVOWu0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12167244724",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T10:42:13Z",
      "requested_reviewer": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1947455842,
      "node_id": "PRR_kwDOABII5850E9Fi",
      "url": null,
      "actor": null,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK 9d9a7458a2570f7db56ab626b22010591089c312\r\n\r\nI reviewed the code and tested this running with `checkblockindex` on signet.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1947455842",
      "submitted_at": "2024-03-19T21:45:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "reviewed",
      "id": 1948414332,
      "node_id": "PRR_kwDOABII5850InF8",
      "url": null,
      "actor": null,
      "commit_id": "9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1948414332",
      "submitted_at": "2024-03-20T10:07:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "review_requested",
      "id": 12182367492,
      "node_id": "RRE_lADOABII585-FJRJzwAAAALWIC0E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12182367492",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T10:07:12Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1948636867,
      "node_id": "PRR_kwDOABII5850JdbD",
      "url": null,
      "actor": null,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 9d9a7458a2570f7db56ab626b22010591089c312 🎯\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK 9d9a7458a2570f7db56ab626b22010591089c312 🎯\r\nm+XWEuj+TMxTAm2vqwQ2KlIlqiGQf/ADm9CzC8dphRCYKKQo4VacrJ9sy4MIZjiOABr94CzwXsoVSmSPlrElBw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1948636867",
      "submitted_at": "2024-03-20T11:47:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
    },
    {
      "event": "assigned",
      "id": 12187708809,
      "node_id": "AE_lADOABII585-FJRJzwAAAALWca2J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12187708809",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T16:25:46Z",
      "assignee": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2010040541,
      "node_id": "IC_kwDOABII5853zsjd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010040541",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T16:49:08Z",
      "updated_at": "2024-03-20T16:49:08Z",
      "author_association": "MEMBER",
      "body": "ACK 9d9a7458a2570f7db56ab626b22010591089c312",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-2010040541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "merged",
      "id": 12188159046,
      "node_id": "ME_lADOABII585-FJRJzwAAAALWeIxG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188159046",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b50554babdddf452acaa51bac757736766c70e81",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b50554babdddf452acaa51bac757736766c70e81",
      "created_at": "2024-03-20T16:56:58Z"
    },
    {
      "event": "closed",
      "id": 12188159096,
      "node_id": "CE_lADOABII585-FJRJzwAAAALWeIx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188159096",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T16:56:58Z"
    },
    {
      "event": "commented",
      "id": 2010411674,
      "node_id": "IC_kwDOABII58531HKa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2010411674",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T19:11:15Z",
      "updated_at": "2024-03-20T19:11:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Post merge utACK 9d9a7458a2570f7db56ab626b22010591089c312",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-2010411674",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29370"
    },
    {
      "event": "referenced",
      "id": 12315243763,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALeC7Tz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12315243763",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "be8406d69a287d33593627644f77f44268bd9454",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/be8406d69a287d33593627644f77f44268bd9454",
      "created_at": "2024-04-01T20:04:39Z"
    },
    {
      "event": "referenced",
      "id": 12315243786,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALeC7UK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12315243786",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5fd24fe61f92ea1efdbf220948a6ab5f8ab5d90a",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/5fd24fe61f92ea1efdbf220948a6ab5f8ab5d90a",
      "created_at": "2024-04-01T20:04:39Z"
    },
    {
      "event": "referenced",
      "id": 12315243838,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALeC7U-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12315243838",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "25f919cd89f0bb6af7ed38fa5f5f7ffbaddefadf",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/25f919cd89f0bb6af7ed38fa5f5f7ffbaddefadf",
      "created_at": "2024-04-01T20:04:39Z"
    },
    {
      "event": "referenced",
      "id": 12382314939,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALiCyG7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12382314939",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "877976afec6aa078fde862debe32721f7d9068ee",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/877976afec6aa078fde862debe32721f7d9068ee",
      "created_at": "2024-04-06T20:00:12Z"
    },
    {
      "event": "referenced",
      "id": 12382314941,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALiCyG9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12382314941",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44210fad83d52ae3af2fb3b393a65885f6c9e327",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/44210fad83d52ae3af2fb3b393a65885f6c9e327",
      "created_at": "2024-04-06T20:00:12Z"
    },
    {
      "event": "referenced",
      "id": 12382314943,
      "node_id": "REFE_lADOABII585-FJRJzwAAAALiCyG_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12382314943",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7c0157f9a25a423bf7352b7bc7588451696113cd",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/7c0157f9a25a423bf7352b7bc7588451696113cd",
      "created_at": "2024-04-06T20:00:12Z"
    },
    {
      "event": "referenced",
      "id": 13446153581,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAMhdAVt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13446153581",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5239e935cf009b6b292829c5278237d0033fe805",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5239e935cf009b6b292829c5278237d0033fe805",
      "created_at": "2024-07-09T20:13:22Z"
    },
    {
      "event": "referenced",
      "id": 13828099023,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAM4OAvP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13828099023",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa04511e44bc6c740ff1c4f912f689b2bc3d1288",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa04511e44bc6c740ff1c4f912f689b2bc3d1288",
      "created_at": "2024-08-10T15:05:09Z"
    },
    {
      "event": "referenced",
      "id": 13845573279,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAM5Qq6f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13845573279",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "40c11ac3188752362c4a0f9907c68c8563121a98",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40c11ac3188752362c4a0f9907c68c8563121a98",
      "created_at": "2024-08-12T10:10:49Z"
    },
    {
      "event": "referenced",
      "id": 14292388111,
      "node_id": "REFE_lADOABII585-FJRJzwAAAANT5IkP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14292388111",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fc4692797121b54de0c54e5b09ee47f322c038a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fc4692797121b54de0c54e5b09ee47f322c038a",
      "created_at": "2024-09-17T14:27:39Z"
    },
    {
      "event": "referenced",
      "id": 15831293758,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAOvnl8-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15831293758",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "acc6274c2ac2cd20da78a1e2bf76010f0f90f0e7",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/acc6274c2ac2cd20da78a1e2bf76010f0f90f0e7",
      "created_at": "2025-01-06T21:51:32Z"
    },
    {
      "event": "referenced",
      "id": 16145537629,
      "node_id": "REFE_lADOABII585-FJRJzwAAAAPCWVpd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16145537629",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "85f96b01b77b779dba71b906d73e0e4a3f84b330",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85f96b01b77b779dba71b906d73e0e4a3f84b330",
      "created_at": "2025-01-31T20:45:21Z"
    },
    {
      "event": "locked",
      "id": 16894363520,
      "node_id": "LOE_lADOABII585-FJRJzwAAAAPu-4eA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16894363520",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T07:40:11Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477981888",
      "pull_request_review_id": 1862394105,
      "id": 1477981888,
      "node_id": "PRRC_kwDOABII585YGDbA",
      "diff_hunk": "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "path": "src/chain.h",
      "position": 67,
      "original_position": 25,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Any reason to touch this LOC?",
      "created_at": "2024-02-05T10:39:14Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477981888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 185,
      "original_line": 185,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477996772",
      "pull_request_review_id": 1862394105,
      "id": 1477996772,
      "node_id": "PRRC_kwDOABII585YGHDk",
      "diff_hunk": "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n            index->nChainTx = 0;\r\n```\r\n\r\nisn't this always true? Maybe you meant to type `-` instead of `<`?\r\n\r\nIn any case, the test seems to be passing either way, so this is \"dead\" code, similar to a code comment.",
      "created_at": "2024-02-05T10:51:34Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477996772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 472,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998490",
      "pull_request_review_id": 1862394105,
      "id": 1477998490,
      "node_id": "PRRC_kwDOABII585YGHea",
      "diff_hunk": "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "path": "src/test/util/chainstate.h",
      "position": 20,
      "original_position": 14,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Any reason to change the sequence id? I think this isn't changed in `loadtxoutset` either?",
      "created_at": "2024-02-05T10:53:08Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998941",
      "pull_request_review_id": 1862394105,
      "id": 1477998941,
      "node_id": "PRRC_kwDOABII585YGHld",
      "diff_hunk": "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;\n+            index->nSequenceId = 0;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same (sequence id)",
      "created_at": "2024-02-05T10:53:33Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 473,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478006900",
      "pull_request_review_id": 1862394105,
      "id": 1478006900,
      "node_id": "PRRC_kwDOABII585YGJh0",
      "diff_hunk": "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is removing the validity check intended?",
      "created_at": "2024-02-05T11:00:32Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478006900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4754,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478018977",
      "pull_request_review_id": 1862394105,
      "id": 1478018977,
      "node_id": "PRRC_kwDOABII585YGMeh",
      "diff_hunk": "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n-        }\n+        // There there should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        const bool snap_block = pindex == GetSnapshotBaseBlock();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can this be further limited to only mark the snap_block if it has ASSUMED_VALID set? Otherwise, nodes which never used loadtxoutset will assume that some block is a \"snapshot block\", even though they never used that feature.",
      "created_at": "2024-02-05T11:11:04Z",
      "updated_at": "2024-02-05T11:12:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478018977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478018977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478022794",
      "pull_request_review_id": 1862459885,
      "id": 1478022794,
      "node_id": "PRRC_kwDOABII585YGNaK",
      "diff_hunk": "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "path": "src/validation.cpp",
      "position": 116,
      "original_position": 78,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Any reason to remove this check?",
      "created_at": "2024-02-05T11:14:35Z",
      "updated_at": "2024-02-05T11:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478022794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5097,
      "original_line": 5097,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478549351",
      "pull_request_review_id": 1863282117,
      "id": 1478549351,
      "node_id": "PRRC_kwDOABII585YIN9n",
      "diff_hunk": "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "path": "src/chain.h",
      "position": 67,
      "original_position": 25,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477981888,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888\r\n\r\n> Any reason to touch this LOC?\r\n\r\nNo, will restore. I only meant to update the comments around it.",
      "created_at": "2024-02-05T16:40:57Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478549351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478549351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 185,
      "original_line": 185,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478561706",
      "pull_request_review_id": 1863282117,
      "id": 1478561706,
      "node_id": "PRRC_kwDOABII585YIQ-q",
      "diff_hunk": "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "path": "src/test/util/chainstate.h",
      "position": 20,
      "original_position": 14,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477998490,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490\r\n\r\n> Any reason to change the sequence id? I think this isn't changed in `loadtxoutset` either?\r\n\r\nI'll double check and add a comment. I think this might be needed to satisfy an assert that ensures nChainTx is set if nSequenceId is set, since these are both set when a block is received and all blocks before it have also been received.",
      "created_at": "2024-02-05T16:43:34Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478561706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478561706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478567668",
      "pull_request_review_id": 1863282117,
      "id": 1478567668,
      "node_id": "PRRC_kwDOABII585YISb0",
      "diff_hunk": "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477996772,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772\r\n\r\n> isn't this always true? Maybe you meant to type `-` instead of `<`?\r\n> \r\n> In any case, the test seems to be passing either way, so this is \"dead\" code, similar to a code comment.\r\n\r\nI think it was supposed to be i < last_assumed_valid_idx - 1, to preserve nChainTx in the snapshot block, and only set nChainTx to 0 before the snapshot block, so the test matches what happens in reality. But it does seem like this is not necessary so will simplify.",
      "created_at": "2024-02-05T16:47:16Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478567668",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478567668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 472,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478584012",
      "pull_request_review_id": 1863282117,
      "id": 1478584012,
      "node_id": "PRRC_kwDOABII585YIWbM",
      "diff_hunk": "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1478006900,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900\r\n\r\n> Is removing the validity check intended?\r\n\r\nIt was intended, but on second thought it is probably better to add back. The reason for removing it is that the block reaching VALID_TRANSACTIONS level is not really significant, because what is actually needed is for the block and all its ancestors back to the snapshot block or genesis block to reach VALID_TRANACTIONS level, and HaveNumChainTxs() is the direct and efficient way to check for that.\r\n\r\nBut it should still be useful to call the IsValid() function because it additionally checks for BLOCK_FAILED flags. So it would be good to add back to avoid changing behavior, and be more efficient if there are invalid blocks.",
      "created_at": "2024-02-05T16:59:53Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478584012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478584012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4754,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478594492",
      "pull_request_review_id": 1863282117,
      "id": 1478594492,
      "node_id": "PRRC_kwDOABII585YIY-8",
      "diff_hunk": "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "path": "src/validation.cpp",
      "position": 116,
      "original_position": 78,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1478022794,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794\r\n\r\n> Any reason to remove this check?\r\n\r\nNo, good catch, I'll add it back. I was thinking it wasn't really related to the other checks here, and trying to eliminate unnecessary uses of BLOCK_ASSUMED_VALID / IsAssumedValid in general. But as long as we have the assumed valid flag, might as well check this.",
      "created_at": "2024-02-05T17:08:36Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478594492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478594492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5097,
      "original_line": 5097,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478604893",
      "pull_request_review_id": 1863282117,
      "id": 1478604893,
      "node_id": "PRRC_kwDOABII585YIbhd",
      "diff_hunk": "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n-        }\n+        // There there should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        const bool snap_block = pindex == GetSnapshotBaseBlock();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1478018977,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478018977\r\n\r\n> Can this be further limited to only mark the snap_block if it has ASSUMED_VALID set? Otherwise, nodes which never used loadtxoutset will assume that some block is a \"snapshot block\", even though they never used that feature.\r\n\r\nI'm pretty sure I can do that, but it should not change anything. If loadtxoutset is not used, GetSnapshotBaseBlock will return null and snap_block should already be false. The only case where the suggestion would change the checks performed (when GetSnapshotBaseBlock() == pindex && !pindex->IsAssumedValid()) is the case where background chain has been downloaded and fully validated, and the snapshot block loses it's assumed_valid flag after it become validated. In that case, none of the snap_block conditions will ever be reached. Whether a snapshot block is still considered a snapshot block after the snapshot is validated is just a semantic question.",
      "created_at": "2024-02-05T17:17:43Z",
      "updated_at": "2024-02-05T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478604893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478604893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478757569",
      "pull_request_review_id": 1863598337,
      "id": 1478757569,
      "node_id": "PRRC_kwDOABII585YJAzB",
      "diff_hunk": "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "path": "src/test/util/chainstate.h",
      "position": 20,
      "original_position": 14,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477998490,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490\r\n\r\nAdded a comment. It is necessary to set nSequenceId to avoid an assert failure in CheckBlockIndex. I think it's also a reasonable thing to do to make the block look like it was never received.",
      "created_at": "2024-02-05T19:03:01Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478757569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478757569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766159",
      "pull_request_review_id": 1863598337,
      "id": 1478766159,
      "node_id": "PRRC_kwDOABII585YJC5P",
      "diff_hunk": "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477996772,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772\r\n\r\nThanks, removed this",
      "created_at": "2024-02-05T19:12:18Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 472,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766291",
      "pull_request_review_id": 1863598337,
      "id": 1478766291,
      "node_id": "PRRC_kwDOABII585YJC7T",
      "diff_hunk": "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;\n+            index->nSequenceId = 0;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477998941,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998941\r\n\r\n> Same (sequence id)\r\n\r\nThanks, removed this",
      "created_at": "2024-02-05T19:12:26Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 473,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478776687",
      "pull_request_review_id": 1863598337,
      "id": 1478776687,
      "node_id": "PRRC_kwDOABII585YJFdv",
      "diff_hunk": "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1478006900,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900\r\n\r\nThanks, reverted this",
      "created_at": "2024-02-05T19:23:17Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478776687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478776687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4754,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478943273",
      "pull_request_review_id": 1863598337,
      "id": 1478943273,
      "node_id": "PRRC_kwDOABII585YJuIp",
      "diff_hunk": "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "path": "src/chain.h",
      "position": 67,
      "original_position": 25,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1477981888,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888\r\n\r\nThanks, restored this line",
      "created_at": "2024-02-05T21:46:40Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478943273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478943273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 185,
      "original_line": 185,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478947294",
      "pull_request_review_id": 1863598337,
      "id": 1478947294,
      "node_id": "PRRC_kwDOABII585YJvHe",
      "diff_hunk": "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "path": "src/validation.cpp",
      "position": 116,
      "original_position": 78,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "a3228f02f69e28960f7da76054965c916e781f27",
      "in_reply_to_id": 1478022794,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794\r\n\r\nRestored this check",
      "created_at": "2024-02-05T21:51:28Z",
      "updated_at": "2024-02-05T22:29:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478947294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478947294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5097,
      "original_line": 5097,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479169504",
      "pull_request_review_id": 1864200241,
      "id": 1479169504,
      "node_id": "PRRC_kwDOABII585YKlXg",
      "diff_hunk": "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "path": "src/validation.cpp",
      "position": 294,
      "original_position": 176,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would `GuessVerificationProgress` lose accuracy with the removal or was the comment wrong?",
      "created_at": "2024-02-06T03:07:51Z",
      "updated_at": "2024-02-06T03:08:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479169504",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479169504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5709,
      "original_line": 5709,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479427801",
      "pull_request_review_id": 1864604493,
      "id": 1479427801,
      "node_id": "PRRC_kwDOABII585YLkbZ",
      "diff_hunk": "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "path": "src/validation.cpp",
      "position": 294,
      "original_position": 176,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "in_reply_to_id": 1479169504,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the comment was wrong, or do you have a code path where nChainTx is read when it was wrong (previously) or is unset (now)?\r\n\r\nGenerally, `GuessVerificationProgress` is only called to estimate the IBD progress at the tip, in which case nChainTx is set to the correct value. It is also used to guess rescan progress, which is not possible for blocks outside the active chain or blocks that have data missing, so nChainTx should be correct there as well.\r\n\r\nunrelated to this pull: Maybe an `Assume(nchaintx)` can be added to `GuessVerificationProgress`?",
      "created_at": "2024-02-06T09:01:17Z",
      "updated_at": "2024-02-06T09:01:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479427801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479427801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5709,
      "original_line": 5709,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479428612",
      "pull_request_review_id": 1864605869,
      "id": 1479428612,
      "node_id": "PRRC_kwDOABII585YLkoE",
      "diff_hunk": "@@ -199,6 +199,34 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the\n+        # getchaintxstats RPC, which returns differences of nChainTx values\n+        # between two blocks at the beginning and end of a specified window.\n+\n+        # nChainTx of the snapshot block should be SNAPSHOT_BASE_HEIGHT+1\n+        # because every block has one transaction. nChainTx of the previous\n+        # block should be 0. Confirm expected difference of these values.\n+        stats = n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)\n+        assert_equal(stats[\"window_tx_count\"], SNAPSHOT_BASE_HEIGHT+1)\n+\n+        # nChainTx of all blocks after START_HEIGHT and before\n+        # SNAPSHOT_BASE_HEIGHT should be 0. Confirm expected difference at\n+        # beginning and end of this window.\n+        stats = n1.getchaintxstats(nblocks=SNAPSHOT_BASE_HEIGHT-START_HEIGHT-2, blockhash=snapshot_prev_hash)\n+        assert_equal(stats[\"window_tx_count\"], 0)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 30,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "unrelated to this pull: May be better to throw here, instead of returning wrong data, but this can be done in a follow-up.",
      "created_at": "2024-02-06T09:02:02Z",
      "updated_at": "2024-02-06T09:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479428612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479428612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480436573",
      "pull_request_review_id": 1866151418,
      "id": 1480436573,
      "node_id": "PRRC_kwDOABII585YPatd",
      "diff_hunk": "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "path": "src/validation.cpp",
      "position": 294,
      "original_position": 176,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "in_reply_to_id": 1479169504,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> do you have a code path where nChainTx is read when it was wrong (previously) or is unset (now)\r\n\r\nno, I never understood how the fake `nChainTx` values would help with guessing progress, but also wasn't 100% sure.",
      "created_at": "2024-02-06T19:27:10Z",
      "updated_at": "2024-02-06T19:27:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1480436573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480436573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5709,
      "original_line": 5709,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483275071",
      "pull_request_review_id": 1870720275,
      "id": 1483275071,
      "node_id": "PRRC_kwDOABII585YaPs_",
      "diff_hunk": "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "path": "src/validation.cpp",
      "position": 294,
      "original_position": 176,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "in_reply_to_id": 1479169504,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479169504\r\n\r\n> unrelated to this pull: Maybe an `Assume(nchaintx)` can be added to `GuessVerificationProgress`?\r\n\r\nI went ahead and added this in a separate commit\r\n",
      "created_at": "2024-02-08T16:35:39Z",
      "updated_at": "2024-02-08T16:48:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483275071",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483275071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5709,
      "original_line": 5709,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483625151",
      "pull_request_review_id": 1871315375,
      "id": 1483625151,
      "node_id": "PRRC_kwDOABII585YblK_",
      "diff_hunk": "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why check these values indirectly instead of directly (field `txcount`)?",
      "created_at": "2024-02-08T21:42:57Z",
      "updated_at": "2024-02-09T19:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483625151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483625151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483671675",
      "pull_request_review_id": 1871315375,
      "id": 1483671675,
      "node_id": "PRRC_kwDOABII585Ybwh7",
      "diff_hunk": "@@ -173,21 +177,19 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that",
      "path": "src/chain.h",
      "position": null,
      "original_position": 33,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "207a171769a662421c5490f6f3ddca9098ae3e78",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "comment can be removed, it's no longer faked.",
      "created_at": "2024-02-08T22:40:29Z",
      "updated_at": "2024-02-09T19:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483671675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483671675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484705186",
      "pull_request_review_id": 1871315375,
      "id": 1484705186,
      "node_id": "PRRC_kwDOABII585Yfs2i",
      "diff_hunk": "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "path": "src/chain.h",
      "position": 44,
      "original_position": 19,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.",
      "created_at": "2024-02-09T19:07:57Z",
      "updated_at": "2024-02-09T19:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484705186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484708844",
      "pull_request_review_id": 1871315375,
      "id": 1484708844,
      "node_id": "PRRC_kwDOABII585Yftvs",
      "diff_hunk": "@@ -51,12 +51,6 @@ The utility script\n \n ## Design notes\n \n-- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "path": "doc/design/assumeutxo.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The next paragraph refers to this deleted comment (\"using\r\n  the nStatus flag mentioned above\") and should be updated too.",
      "created_at": "2024-02-09T19:12:13Z",
      "updated_at": "2024-02-09T19:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484708844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484708844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484742841",
      "pull_request_review_id": 1873099729,
      "id": 1484742841,
      "node_id": "PRRC_kwDOABII585Yf2C5",
      "diff_hunk": "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "in_reply_to_id": 1483625151,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Why check these values indirectly instead of directly (field `txcount`)?\r\n\r\nWow, I did not notice that field 🤦. That will make the test a lot better.",
      "created_at": "2024-02-09T19:51:19Z",
      "updated_at": "2024-02-09T19:51:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484742841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484742841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224522",
      "pull_request_review_id": 1883156605,
      "id": 1491224522,
      "node_id": "PRRC_kwDOABII585Y4kfK",
      "diff_hunk": "@@ -51,12 +51,6 @@ The utility script\n \n ## Design notes\n \n-- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "path": "doc/design/assumeutxo.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": 1484708844,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484708844\r\n\r\n> The next paragraph refers to this deleted comment (\"using the nStatus flag mentioned above\") and should be updated too.\r\n\r\nThanks, fixed",
      "created_at": "2024-02-15T15:46:33Z",
      "updated_at": "2024-02-15T16:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224648",
      "pull_request_review_id": 1883156605,
      "id": 1491224648,
      "node_id": "PRRC_kwDOABII585Y4khI",
      "diff_hunk": "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "path": "src/chain.h",
      "position": 44,
      "original_position": 19,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": 1484705186,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186\r\n\r\n> Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.\r\n\r\nThis is mostly just for documentation. I think it's useful to keep a note that the field was previously used and may be saved to disk. Probably though it would not break anything if the field were reused in the future, so it should be possible to reclaim this if we were running out of flags.",
      "created_at": "2024-02-15T15:46:39Z",
      "updated_at": "2024-02-15T16:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224965",
      "pull_request_review_id": 1883156605,
      "id": 1491224965,
      "node_id": "PRRC_kwDOABII585Y4kmF",
      "diff_hunk": "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "in_reply_to_id": 1483625151,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483625151\r\n\r\n> Why check these values indirectly instead of directly (field `txcount`)?\r\n\r\nThanks, checking these values directly now",
      "created_at": "2024-02-15T15:46:54Z",
      "updated_at": "2024-02-15T16:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491225507",
      "pull_request_review_id": 1883156605,
      "id": 1491225507,
      "node_id": "PRRC_kwDOABII585Y4kuj",
      "diff_hunk": "@@ -173,21 +177,19 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that",
      "path": "src/chain.h",
      "position": null,
      "original_position": 33,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "207a171769a662421c5490f6f3ddca9098ae3e78",
      "in_reply_to_id": 1483671675,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483671675\r\n\r\n> comment can be removed, it's no longer faked.\r\n\r\nGood catch, dropped this comment.",
      "created_at": "2024-02-15T15:47:15Z",
      "updated_at": "2024-02-15T16:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491225507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491225507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491287980",
      "pull_request_review_id": 1883296887,
      "id": 1491287980,
      "node_id": "PRRC_kwDOABII585Y4z-s",
      "diff_hunk": "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "path": "src/chain.h",
      "position": 44,
      "original_position": 19,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": 1484705186,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186\r\n\r\n> Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.\r\n\r\nIf this asking whether dropping the placeholder would change the underlying enum type, I think it wouldn't because it it's declared 32-bit unsigned explicitly (`enum BlockStatus : uint32_t`)\r\n",
      "created_at": "2024-02-15T16:28:06Z",
      "updated_at": "2024-02-15T16:28:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491287980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491287980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1494616142",
      "pull_request_review_id": 1888522953,
      "id": 1494616142,
      "node_id": "PRRC_kwDOABII585ZFghO",
      "diff_hunk": "@@ -199,6 +199,34 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the\n+        # getchaintxstats RPC, which returns differences of nChainTx values\n+        # between two blocks at the beginning and end of a specified window.\n+\n+        # nChainTx of the snapshot block should be SNAPSHOT_BASE_HEIGHT+1\n+        # because every block has one transaction. nChainTx of the previous\n+        # block should be 0. Confirm expected difference of these values.\n+        stats = n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)\n+        assert_equal(stats[\"window_tx_count\"], SNAPSHOT_BASE_HEIGHT+1)\n+\n+        # nChainTx of all blocks after START_HEIGHT and before\n+        # SNAPSHOT_BASE_HEIGHT should be 0. Confirm expected difference at\n+        # beginning and end of this window.\n+        stats = n1.getchaintxstats(nblocks=SNAPSHOT_BASE_HEIGHT-START_HEIGHT-2, blockhash=snapshot_prev_hash)\n+        assert_equal(stats[\"window_tx_count\"], 0)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 30,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "in_reply_to_id": 1479428612,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would need to add a suppression for now?\r\n\r\n```\r\n node1 stderr rpc/blockchain.cpp:1658:42: runtime error: unsigned integer overflow: 0 - 200 cannot be represented in type 'unsigned int'\r\n    #0 0x5622afcfe34c in getchaintxstats()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/rpc/blockchain.cpp:1658:42\r\n    #1 0x5622afcfe34c in UniValue std::__invoke_impl<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/invoke.h:61:14\r\n    #2 0x5622afcfe34c in std::enable_if<is_invocable_r_v<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/invoke.h:114:9\r\n    #3 0x5622afcfe34c in std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), getchaintxstats()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:290:9\r\n    #4 0x5622b0be25a6 in std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #5 0x5622b0be25a6 in RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:620:20\r\n    #6 0x5622afd5574a in CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:107:91\r\n    #7 0x5622affb821e in std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #8 0x5622affb821e in ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:537:20\r\n    #9 0x5622affb821e in ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:504:13\r\n    #10 0x5622affb4fa1 in CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:524:13\r\n    #11 0x5622b02e0d82 in HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:203:40\r\n    #12 0x5622b030a5ad in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #13 0x5622b030a5ad in HTTPWorkItem::operator()() src/httpserver.cpp:60:9\r\n    #14 0x5622b03102b6 in WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13\r\n    #15 0x5622b02f939c in HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:404:12\r\n    #16 0x7f71dd506b83  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xeab83) (BuildId: befd6a93d352d7d294804769783f60c9cc0cb5f5)\r\n    #17 0x5622af76219e in asan_thread_start(void*) asan_interceptors.cpp.o\r\n    #18 0x7f71dd17aac9  (/lib/x86_64-linux-gnu/libc.so.6+0x97ac9) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #19 0x7f71dd20b47b  (/lib/x86_64-linux-gnu/libc.so.6+0x12847b) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\nSUMMARY: UndefinedBehaviorSanitizer: unsigned-integer-overflow rpc/blockchain.cpp:1658:42 in \r\n```\r\n\r\nhttps://cirrus-ci.com/task/5549867297144832?logs=ci#L2930",
      "created_at": "2024-02-19T14:17:54Z",
      "updated_at": "2024-02-19T14:17:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1494616142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1494616142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495983754",
      "pull_request_review_id": 1890683967,
      "id": 1495983754,
      "node_id": "PRRC_kwDOABII585ZKuaK",
      "diff_hunk": "@@ -216,20 +224,19 @@ def run_test(self):\n         snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n         snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n \n-        # nTx of the starting block should be 1 because it actually has one\n-        # transaction. nTx of later blocks should be fake 1 values set by\n-        # snapshot loading code.\n+        # nTx of the starting block should be 1 because it has one transaction.\n+        # nTx of later blocks should be unset.\n         assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n \n         # nChainTx of the starting block should be its height + 1. nChainTx of\n         # the snapshot block should be snapshot_nchaintx. nChainTx of blocks in\n-        # between these should be fake values set by snapshot loading code.\n+        # between these should be unset.\n         assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_hash)[\"txcount\"], START_HEIGHT + 1)\n-        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], START_HEIGHT + 2)\n-        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_prev_hash)[\"txcount\"], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], 0)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "50273702d7d5dafc1c912ca34fde58fcf88e2a85",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "CI failed on this line: https://cirrus-ci.com/task/5549867297144832?logs=ci#L2880",
      "created_at": "2024-02-20T15:07:01Z",
      "updated_at": "2024-02-20T15:07:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1495983754",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495983754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499026543",
      "pull_request_review_id": 1895496933,
      "id": 1499026543,
      "node_id": "PRRC_kwDOABII585ZWVRv",
      "diff_hunk": "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 36,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "32481c30a55d697b361a6f840be5a136ef951ee4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in the first commit: Why claim they are fake when one can test which ones are fake?\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_assumeutxo.py b/test/functional/feature_assumeutxo.py\r\nindex 49cd2d8ec1..1f0d4bb309 100755\r\n--- a/test/functional/feature_assumeutxo.py\r\n+++ b/test/functional/feature_assumeutxo.py\r\n@@ -309,6 +309,17 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n         }\r\n         self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\r\n \r\n+        self.log.info(\"Re-check nTx and nChainTx values\")\r\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\r\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 2)\r\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\r\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 2)\r\n+\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_hash)[\"txcount\"], START_HEIGHT + 1)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], START_HEIGHT + 3)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_prev_hash)[\"txcount\"], snapshot_nchaintx - 2)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)[\"txcount\"], snapshot_nchaintx)\r\n+\r\n \r\n         for i in (0, 1):\r\n             n = self.nodes[i]\r\n",
      "created_at": "2024-02-22T10:33:39Z",
      "updated_at": "2024-02-22T11:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499026543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499033207",
      "pull_request_review_id": 1895496933,
      "id": 1499033207,
      "node_id": "PRRC_kwDOABII585ZWW53",
      "diff_hunk": "@@ -61,6 +62,7 @@ implicit-integer-sign-change:CBlockPolicyEstimator::processBlockTx\n implicit-integer-sign-change:SetStdinEcho\n implicit-integer-sign-change:compressor.h\n implicit-integer-sign-change:crypto/\n+implicit-integer-sign-change:getchaintxstats*",
      "path": "test/sanitizer_suppressions/ubsan",
      "position": 12,
      "original_position": 12,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "32481c30a55d697b361a6f840be5a136ef951ee4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: In the first commit. I tested this locally, and the suppressions were not needed. The cirrus link you provide says:\r\n\r\n```\r\n node1 stderr rpc/blockchain.cpp:1658:42: runtime error: unsigned integer overflow: 0 - 200 cannot be represented in type 'unsigned int'\r\n```\r\n\r\nLooking at the `0`, it seems more likely that this was introduced in a later commit.\r\n\r\nAlso, Cirrus will clear the log in 90 days, so it may be better to not link to it.",
      "created_at": "2024-02-22T10:38:54Z",
      "updated_at": "2024-02-22T11:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499033207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499033207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499040796",
      "pull_request_review_id": 1895496933,
      "id": 1499040796,
      "node_id": "PRRC_kwDOABII585ZWYwc",
      "diff_hunk": "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogPrintf(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "cecf618b68d874ed90949c8c10959437b3047f71",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "second commit: LogPrintf is deprecated. Also, could use `STR_INTERNAL_BUG` to reduce boilerplate.",
      "created_at": "2024-02-22T10:43:33Z",
      "updated_at": "2024-02-22T11:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499040796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499040796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499216412",
      "pull_request_review_id": 1895813376,
      "id": 1499216412,
      "node_id": "PRRC_kwDOABII585ZXDoc",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There there should only be an nTx value if we have",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "594336ae8aad026dacb5d536df63bd374e3a89c7: there there",
      "created_at": "2024-02-22T13:08:24Z",
      "updated_at": "2024-02-22T16:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499216412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499216412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4932,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499230459",
      "pull_request_review_id": 1895813376,
      "id": 1499230459,
      "node_id": "PRRC_kwDOABII585ZXHD7",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7: Would be good to avoid the use of `=` in C++, when possible, as it narrowing and possibly confusing when used in contexts with `==`.\r\n\r\n```cpp\r\nconst bool is_active{c == &ActiveChainstate()};",
      "created_at": "2024-02-22T13:19:18Z",
      "updated_at": "2024-02-22T16:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499230459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499230459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499266054",
      "pull_request_review_id": 1895813376,
      "id": 1499266054,
      "node_id": "PRRC_kwDOABII585ZXPwG",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nAn alternative may be to split the assumption out into a separate assert.",
      "created_at": "2024-02-22T13:45:46Z",
      "updated_at": "2024-02-22T16:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499266054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499266054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499519079",
      "pull_request_review_id": 1895813376,
      "id": 1499519079,
      "node_id": "PRRC_kwDOABII585ZYNhn",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why would the *background* chainstate have the *snapshot* base? The comment seems wrong and the second branch of the if condition is never taken, no?",
      "created_at": "2024-02-22T16:20:49Z",
      "updated_at": "2024-02-22T16:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499519079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499608826",
      "pull_request_review_id": 1896432015,
      "id": 1499608826,
      "node_id": "PRRC_kwDOABII585ZYjb6",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499266054,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499266054\r\n\r\n> Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nIt's meant to be a real check. I should probably add a comment about it. The idea is that on the snapshot chain, the snapshot block should be in `setBlockIndexCandidates` even though earlier transactions may not be downloaded.\r\n\r\nI don't think `pindex == snap_base` implies anything about `is_active`, because the `for ... GetAll` loop above should be iterating over all chains and only one of them should be active.\r\n\r\nHowever, I think it might be true right now that the snapshot block is added to `setBlockIndexCandidates` for all chains when it is missing transaction data, even though it only makes sense to add it on the snapshot chain. So the checks below may happen to succeed even if `is_active` is false. But if that's the case, it's just a side-effect of the way some sloppy code around TryAddBlockIndexCandidate is written, not something we should rely on here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1ac627c485a43e50a9a49baddce186ee3ad4daad/src/validation.cpp#L4602-L4613\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1ac627c485a43e50a9a49baddce186ee3ad4daad/src/test/validation_chainstatemanager_tests.cpp#L519-L522\r\n\r\nI think we will probably want a separate PR to clean up code around `TryAddBlockIndexCandidate` and only add blocks to `setBlockIndexCandidates` that really belong there.",
      "created_at": "2024-02-22T17:24:48Z",
      "updated_at": "2024-02-22T17:52:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499608826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499608826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499641472",
      "pull_request_review_id": 1896432015,
      "id": 1499641472,
      "node_id": "PRRC_kwDOABII585ZYraA",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499519079,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079\r\n\r\n> Why would the _background_ chainstate have the _snapshot_ base? The comment seems wrong and the second branch of the if condition is never taken, no?\r\n\r\nI think the comment is just saying that if pindex is an ancestor of the snapshot base, it should be in setBlockIndexCandidates. It's possible the snapshot base could be in there too, but the code is only checking for it to be there if the chain is active, or if all transactions in and before the snapshot base were downloaded.",
      "created_at": "2024-02-22T17:48:10Z",
      "updated_at": "2024-02-22T17:52:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499641472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499641472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502615711",
      "pull_request_review_id": 1900881113,
      "id": 1502615711,
      "node_id": "PRRC_kwDOABII585ZkBif",
      "diff_hunk": "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 36,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "32481c30a55d697b361a6f840be5a136ef951ee4",
      "in_reply_to_id": 1499026543,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543\r\n\r\n> nit in the first commit: Why claim they are fake when one can test which ones are fake?",
      "created_at": "2024-02-26T13:29:26Z",
      "updated_at": "2024-02-26T13:56:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502615711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502615711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502654993",
      "pull_request_review_id": 1900881113,
      "id": 1502654993,
      "node_id": "PRRC_kwDOABII585ZkLIR",
      "diff_hunk": "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 36,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "32481c30a55d697b361a6f840be5a136ef951ee4",
      "in_reply_to_id": 1499026543,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543\r\n\r\n> nit in the first commit: Why claim they are fake when one can test which ones are fake?\r\n\r\nThis PR is removing the fake values, so the parts of this test that refer to fake values only last for two commits then are removed along with the fake values. \r\n\r\nI think it would make this test too fragile and difficult to maintain if it hardcoded expressions like START_HEIGHT + 3, and snapshot_nchaintx - 2 that depend on the i % 3 == 0 condition ~150 lines earlier in the test setup. It could be useful to check final nTx and nChainTx values though, not just initial ones after loading the snapshot I expanded the test to check for these values by storing them instead of hardcoding them.",
      "created_at": "2024-02-26T13:56:17Z",
      "updated_at": "2024-02-26T13:58:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502654993",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502654993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502659435",
      "pull_request_review_id": 1900953535,
      "id": 1502659435,
      "node_id": "PRRC_kwDOABII585ZkMNr",
      "diff_hunk": "@@ -61,6 +62,7 @@ implicit-integer-sign-change:CBlockPolicyEstimator::processBlockTx\n implicit-integer-sign-change:SetStdinEcho\n implicit-integer-sign-change:compressor.h\n implicit-integer-sign-change:crypto/\n+implicit-integer-sign-change:getchaintxstats*",
      "path": "test/sanitizer_suppressions/ubsan",
      "position": 12,
      "original_position": 12,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "32481c30a55d697b361a6f840be5a136ef951ee4",
      "in_reply_to_id": 1499033207,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499033207\r\n\r\n> nit: In the first commit. I tested this locally, and the suppressions were not needed. \r\n\r\nThanks, I updated the commit description, dropped the link, and moved the ubsan suppressions into a new commit",
      "created_at": "2024-02-26T13:59:28Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502659435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502659435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502660518",
      "pull_request_review_id": 1900953535,
      "id": 1502660518,
      "node_id": "PRRC_kwDOABII585ZkMem",
      "diff_hunk": "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogPrintf(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "cecf618b68d874ed90949c8c10959437b3047f71",
      "in_reply_to_id": 1499040796,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499040796\r\n\r\n> second commit: LogPrintf is deprecated. Also, could use `STR_INTERNAL_BUG` to reduce boilerplate.\r\n\r\nChanged LogPrintf to LogWarning. I'm still not using STR_INTERNAL_BUG for now though. I actually tried to use STR_INTERNAL_BUG initially here but it seemed like an awkward fit because it prints a multiline string to the log which seems like it would complicate log parsing, and it also duplicates file/line/function name in the log. It would be nice to have a version of STR_INTERNAL_BUG, maybe integrated with the Assume macro that works better for logging, but right now it appears like STR_INTERNAL_BUG is better suited and mostly used for throwing exceptions, not for logging.",
      "created_at": "2024-02-26T14:00:15Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502660518",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502660518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502661422",
      "pull_request_review_id": 1900953535,
      "id": 1502661422,
      "node_id": "PRRC_kwDOABII585ZkMsu",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499519079,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499519079\r\n\r\n> Why would the _background_ chainstate have the _snapshot_ base? The comment seems wrong and the second branch of the if condition is never taken, no?\r\n\r\nAnswered this in https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499641472, but now added better comments to the code as well.\r\n",
      "created_at": "2024-02-26T14:00:52Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502661422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502661422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662368",
      "pull_request_review_id": 1900953535,
      "id": 1502662368,
      "node_id": "PRRC_kwDOABII585ZkM7g",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499266054,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499266054\r\n\r\n> Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nReviewing this more, my comments above about `pindex == snap_base` being orthogonal to `is_active`, and about TryAddBlockIndexCandidate adding the snapshot block as a candidate to the background validation chainstate unnecessarily are still accurate, but my conclusion that it makes sense to keep `is_active` instead of dropping it is wrong.\r\n\r\nIt makes more sense to drop `is_active &&` condition to avoid hitting the `c->setBlockIndexCandidates.count(pindex) == 0` assert below, and not trigger an error if the snapshot block is added unnecessarily to the background chain candidate set, which can happen in LoadBlockIndex if the node is restarted during background validation as described above.\r\n\r\nSo the new push drops `is_active &&` here and should be safer and clearer. I also wrote a lot of new comments to help clarify this code.",
      "created_at": "2024-02-26T14:01:34Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662950",
      "pull_request_review_id": 1900953535,
      "id": 1502662950,
      "node_id": "PRRC_kwDOABII585ZkNEm",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499230459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499230459\r\n\r\n> nit in [594336a](https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7): Would be good to avoid the use of `=` in C++, when possible, as it narrowing and possibly confusing when used in contexts with `==`.\r\n\r\nMakes sense. In the newest update I was able to eliminate some uses of is_active and drop this.",
      "created_at": "2024-02-26T14:01:59Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502663415",
      "pull_request_review_id": 1900953535,
      "id": 1502663415,
      "node_id": "PRRC_kwDOABII585ZkNL3",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There there should only be an nTx value if we have",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499216412,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499216412\r\n\r\n> [594336a](https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7): there there\r\n\r\nThanks, fixed",
      "created_at": "2024-02-26T14:02:18Z",
      "updated_at": "2024-02-26T17:51:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502663415",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502663415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4932,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505114232",
      "pull_request_review_id": 1904970718,
      "id": 1505114232,
      "node_id": "PRRC_kwDOABII585Ztjh4",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that this criterion can fail during the point in time where the background chainstate catches up with the snapshot block.\r\nWe will request the snapshot block from a peer, and if it doesn't arrive in order, we can't connect it yet. Therefore, in in `ReceivedBlockTransactions` we'll set `nTx` to some value but since there are predecessors that haven't arrived yet we'll set `nChainTx` (which was previously set to the chainparams value) back to 0. As a result, we have `pindex == snap_base` and  `pindex->HaveNumChainTxs()==false` and the assert will be hit.",
      "created_at": "2024-02-27T22:56:25Z",
      "updated_at": "2024-02-27T23:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505114232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505146598",
      "pull_request_review_id": 1905017572,
      "id": 1505146598,
      "node_id": "PRRC_kwDOABII585Ztrbm",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\r\n\r\nIn commit \"assumeutxo: Get rid of faked nTx and nChainTx values\" (d351ea2f887dc81993799010ac2fb6a220f07561)\r\n\r\n> we'll set `nChainTx` (which was previously set to the chainparams value) back to 0\r\n\r\nWow, great catch. It never occurred to me that we would set the `nChainTx` back to 0 after setting it to another value. But that's exactly what we do at the beginning of ReceivedBlockTransactions():\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba907f96ad37c09c49c0e1532fad118fcb8dd4a8/src/validation.cpp#L3616\r\n\r\nIt looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n\r\nIn light of that, I guess the check we would need here is:\r\n\r\n```c++\r\nif (pindex->HaveNumChainTxs()) {\r\n    assert(pindexFirstNeverProcessed == nullptr || pindex == snap_base);\r\n} else {\r\n    assert(pindexFirstNeverProcessed != nullptr);   \r\n}\r\n```\r\n\r\nBut I think a better change would be to make ReceivedBlockTransactions() not reset nChainTx to 0 at all. Setting the snapshot block `nChainTx` to a real value, then back to 0, then back to a real value again seems like confusing behavior that could break other code aside from this assert.",
      "created_at": "2024-02-27T23:36:28Z",
      "updated_at": "2024-02-27T23:36:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505146598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506224490",
      "pull_request_review_id": 1906693636,
      "id": 1506224490,
      "node_id": "PRRC_kwDOABII585Zxylq",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n\r\nYes, I encountered this issue testing this branch on signet (and hadn't tried that with master), but it should also fail on master. So I think it would also be ok to fix this not here but in a separate PR.\r\n\r\nSlightly related: I wonder if we should do something differently in the situation where the chainparams-provided `nChainTx` turns out to be wrong. Of course that's trusted data and shouldn't be incorrect normally - but if it is anyway I think that we'd currently continue with the inconsistent `nChainTx` data and wouldn't even log an error - unless `-checkblockindex` is enabled, in which case we'd terminate with an assert.\r\n",
      "created_at": "2024-02-28T16:15:37Z",
      "updated_at": "2024-02-28T16:15:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506224490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506224490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506346712",
      "pull_request_review_id": 1906886247,
      "id": 1506346712,
      "node_id": "PRRC_kwDOABII585ZyQbY",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > It looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n> \r\n> Yes, I encountered this issue testing this branch on signet (and hadn't tried that with master), but it should also fail on master. So I think it would also be ok to fix this not here but in a separate PR.\r\n\r\nAgree it should probably be a separate PR. It might be easier to implement that PR after this one, so the fake values are gone and and ReceivedBlockTransactions could assert that nTx and nChainTx are 0 for new, non-snapshot blocks.\r\n\r\n> Slightly related: I wonder if we should do something differently in the situation where the chainparams-provided `nChainTx` turns out to be wrong. Of course that's trusted data and shouldn't be incorrect normally - but if it is anyway I think that we'd currently continue with the inconsistent `nChainTx` data and wouldn't even log an error - unless `-checkblockindex` is enabled, in which case we'd terminate with an assert.\r\n\r\nAgree. We have errors and specific code to handle cases when other trusted data is wrong, so it probably makes sense to handle this case as well. It might be easier to check for this case after the fake values are gone since nonzero nChainTx values should not be changing after that.",
      "created_at": "2024-02-28T17:42:48Z",
      "updated_at": "2024-02-28T17:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506346712",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506346712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506379814",
      "pull_request_review_id": 1906943001,
      "id": 1506379814,
      "node_id": "PRRC_kwDOABII585ZyYgm",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Agree it should probably be a separate PR. \r\n\r\nok - I can work on a follow-up that fixes the bug (preferably in `ReceivedBlockTransactions` instead of just adjusting the checks) , and add a test case that would trigger the assert on master.",
      "created_at": "2024-02-28T18:10:29Z",
      "updated_at": "2024-02-28T18:10:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506379814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506379814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506468176",
      "pull_request_review_id": 1907089957,
      "id": 1506468176,
      "node_id": "PRRC_kwDOABII585ZyuFQ",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> ok - I can work on a follow-up that fixes the bug (preferably in `ReceivedBlockTransactions` instead of just adjusting the checks) , and add a test case that would trigger the assert on master.\r\n\r\nThat would be great, and I'd be happy to review. Let me know if you think I should update the CheckBlockIndex assert in this PR as described above https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598 too here.\r\n\r\nI did experiment a little with adding asserts to ReceivedBlockTransactions:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3589,6 +3589,8 @@ void Chainstate::TryAddBlockIndexCandidate(CBlockIndex* pindex)\r\n void ChainstateManager::ReceivedBlockTransactions(const CBlock& block, CBlockIndex* pindexNew, const FlatFilePos& pos)\r\n {\r\n     AssertLockHeld(cs_main);\r\n+    assert(pindexNew->nTx == 0);\r\n+    assert(pindexNew->nChainTx == 0);\r\n     pindexNew->nTx = block.vtx.size();\r\n     pindexNew->nChainTx = 0;\r\n     pindexNew->nFile = pos.nFile;\r\n```\r\n\r\nThis makes the two assumeutxo tests fail as expected, but it also makes the `rpc_getblockfrompeer.py` test fail the `nTx == 0` check for some reason. Hopefully a straightforward fix ReceivedBlockTransactions should be possible, though.",
      "created_at": "2024-02-28T19:20:31Z",
      "updated_at": "2024-02-28T19:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506468176",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506468176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508080078",
      "pull_request_review_id": 1909688739,
      "id": 1508080078,
      "node_id": "PRRC_kwDOABII585Z43nO",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Let me know if you think I should update the CheckBlockIndex assert in this PR as described above https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598 too here.\r\n\r\nUp to you, but I think it'd be good to have this fixed and would be happy to re-ACK.",
      "created_at": "2024-02-29T19:14:58Z",
      "updated_at": "2024-02-29T19:14:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508080078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508212488",
      "pull_request_review_id": 1909903494,
      "id": 1508212488,
      "node_id": "PRRC_kwDOABII585Z5X8I",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078\r\n\r\n> Up to you, but I think it'd be good to have this fixed and would be happy to re-ACK.\r\n\r\nOk, I updated the assertion in a new commit 438ac1ffc23ec5134f2ac74cee75ff145078df09, which could also be a standalone PR. (I'm assuming by \"fixed\" you mean changing the assertion, not changing ReceivedBlockTransactions, which I think would be harder to do correctly.)",
      "created_at": "2024-02-29T21:26:48Z",
      "updated_at": "2024-02-29T21:39:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508212488",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508212488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509552384",
      "pull_request_review_id": 1912039200,
      "id": 1509552384,
      "node_id": "PRRC_kwDOABII585Z-fEA",
      "diff_hunk": "@@ -4930,8 +4931,22 @@ void ChainstateManager::CheckBlockIndex()\n             assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n+        // However, an exception to this is possible for the snapshot base\n+        // block. In rare cases, the snapshot base block, which has a non-zero\n+        // nChainTx value initialized from snapshot metadata, may temporarily\n+        // have its nChainTx value set to 0 by ReceivedBlockTransations if it is\n+        // downloaded out of order, before one of its parent blocks. This is\n+        // confusing behavior, but not a bug as long as the check below is\n+        // written to account for it. More work should be done later to clean up\n+        // the behavior and simplify the check, see\n+        // https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        if (pindex->HaveNumChainTxs()) {\n+            assert(pindexFirstNotTransactionsValid == nullptr);\n+        } else {\n+            const bool unprocessed_snapshot_block{pindex == snap_base && pindex->nTx == 0};\n+            assert(pindexFirstNotTransactionsValid != nullptr || unprocessed_snapshot_block);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it must be `pindex->nTx != 0` in the line above - since the situation is that we have received the snapshot block transactions (so `nTx!=0`), but can't connect the block yet (so `nChainTx==0`).\r\nAlso, maybe `unconnected_snapshot_block` is a better name? ",
      "created_at": "2024-03-01T21:21:28Z",
      "updated_at": "2024-03-01T22:02:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509552384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509611419",
      "pull_request_review_id": 1912039200,
      "id": 1509611419,
      "node_id": "PRRC_kwDOABII585Z-teb",
      "diff_hunk": "@@ -4959,14 +4965,17 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));",
      "path": "src/validation.cpp",
      "position": 155,
      "original_position": 127,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "6c154da50e7bf1ea2d21bf5e0fcc7746eacca24d",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is also violated in the situation of a snapshot block that is sent out of order (`pindex->nChainTx == 0`, `pindex == snap_base` )",
      "created_at": "2024-03-01T21:57:50Z",
      "updated_at": "2024-03-01T22:02:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509611419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5148,
      "original_line": 5148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509658225",
      "pull_request_review_id": 1912222187,
      "id": 1509658225,
      "node_id": "PRRC_kwDOABII585Z-45x",
      "diff_hunk": "@@ -4930,8 +4931,22 @@ void ChainstateManager::CheckBlockIndex()\n             assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n+        // However, an exception to this is possible for the snapshot base\n+        // block. In rare cases, the snapshot base block, which has a non-zero\n+        // nChainTx value initialized from snapshot metadata, may temporarily\n+        // have its nChainTx value set to 0 by ReceivedBlockTransations if it is\n+        // downloaded out of order, before one of its parent blocks. This is\n+        // confusing behavior, but not a bug as long as the check below is\n+        // written to account for it. More work should be done later to clean up\n+        // the behavior and simplify the check, see\n+        // https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        if (pindex->HaveNumChainTxs()) {\n+            assert(pindexFirstNotTransactionsValid == nullptr);\n+        } else {\n+            const bool unprocessed_snapshot_block{pindex == snap_base && pindex->nTx == 0};\n+            assert(pindexFirstNotTransactionsValid != nullptr || unprocessed_snapshot_block);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "in_reply_to_id": 1509552384,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384\r\n\r\n> I think it must be `pindex->nTx != 0` in the line above - since the situation is that we have received the snapshot block transactions (so `nTx!=0`), but can't connect the block yet (so `nChainTx==0`). Also, maybe `unconnected_snapshot_block` is a better name?\r\n\r\nOh, I forgot that nTx would still be set in that case. I was trying to make the check stricter so snap_base would have to have nChainTx set after it was fully connected, and it wouldn't be able to escape this check after that happened. But I guess there is no way to determine that and the best that can be done is to check that it nChainTx is nonzero after it is validated. Can make that update",
      "created_at": "2024-03-01T23:11:33Z",
      "updated_at": "2024-03-01T23:26:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509658225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509658225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509662408",
      "pull_request_review_id": 1912222187,
      "id": 1509662408,
      "node_id": "PRRC_kwDOABII585Z-57I",
      "diff_hunk": "@@ -4959,14 +4965,17 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));",
      "path": "src/validation.cpp",
      "position": 155,
      "original_position": 127,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "6c154da50e7bf1ea2d21bf5e0fcc7746eacca24d",
      "in_reply_to_id": 1509611419,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419\r\n\r\n> This is also violated in the situation of a snapshot block that is sent out of order (`pindex->nChainTx == 0`, `pindex == snap_base` )\r\n\r\nOk, I guess it needs to be changed to:\r\n\r\n```c++\r\nassert(pindex->nChainTx == 0 || pindex == snap_base);\r\n```",
      "created_at": "2024-03-01T23:19:44Z",
      "updated_at": "2024-03-01T23:27:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509662408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509662408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5148,
      "original_line": 5148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518258466",
      "pull_request_review_id": 1925782030,
      "id": 1518258466,
      "node_id": "PRRC_kwDOABII585afski",
      "diff_hunk": "@@ -4930,8 +4931,22 @@ void ChainstateManager::CheckBlockIndex()\n             assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n+        // However, an exception to this is possible for the snapshot base\n+        // block. In rare cases, the snapshot base block, which has a non-zero\n+        // nChainTx value initialized from snapshot metadata, may temporarily\n+        // have its nChainTx value set to 0 by ReceivedBlockTransations if it is\n+        // downloaded out of order, before one of its parent blocks. This is\n+        // confusing behavior, but not a bug as long as the check below is\n+        // written to account for it. More work should be done later to clean up\n+        // the behavior and simplify the check, see\n+        // https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        if (pindex->HaveNumChainTxs()) {\n+            assert(pindexFirstNotTransactionsValid == nullptr);\n+        } else {\n+            const bool unprocessed_snapshot_block{pindex == snap_base && pindex->nTx == 0};\n+            assert(pindexFirstNotTransactionsValid != nullptr || unprocessed_snapshot_block);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "in_reply_to_id": 1509552384,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384\r\n\r\nCould reproduce this failure with the test change suggested in https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225. Changing this to `const bool unprocessed_snapshot_block{pindex == snap_base && (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_SCRIPTS}` did fix this but then there was just another assert failure in the `assert((pindex->nChainTx != 0) == (pindex == snap_base));` line below, so opted to revert this and make a fix in `ReceivedBlockTransactions` instead",
      "created_at": "2024-03-08T20:25:52Z",
      "updated_at": "2024-03-08T20:56:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1518258466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518258466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518261925",
      "pull_request_review_id": 1925782030,
      "id": 1518261925,
      "node_id": "PRRC_kwDOABII585aftal",
      "diff_hunk": "@@ -4959,14 +4965,17 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));",
      "path": "src/validation.cpp",
      "position": 155,
      "original_position": 127,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "6c154da50e7bf1ea2d21bf5e0fcc7746eacca24d",
      "in_reply_to_id": 1509611419,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419\r\n\r\nCould reproduce this failure with the test change suggested in https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225. It actually needed a slightly different fix `assert(pindex->nChainTx == 0 || pindex == snap_base || pindex->pprev == snap_base)` because there if the snapshot block temporarily had nChainTx set to 0, and the block after the snapshot block was previously downloaded, the assert could trigger again without the `pindex->pprev == snap_base` condition. Explaining this in another code comment seemed too complicated though, so opted to revert this and make a fix in `ReceivedBlockTransactions` instead",
      "created_at": "2024-03-08T20:30:36Z",
      "updated_at": "2024-03-08T20:56:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1518261925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518261925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5148,
      "original_line": 5148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518266878",
      "pull_request_review_id": 1925782030,
      "id": 1518266878,
      "node_id": "PRRC_kwDOABII585afun-",
      "diff_hunk": "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "path": "src/validation.cpp",
      "position": 129,
      "original_position": 88,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "d351ea2f887dc81993799010ac2fb6a220f07561",
      "in_reply_to_id": 1505114232,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508212488\r\n\r\n> Ok, I updated the assertion in a new commit [438ac1f](https://github.com/bitcoin/bitcoin/commit/438ac1ffc23ec5134f2ac74cee75ff145078df09), which could also be a standalone PR. (I'm assuming by \"fixed\" you mean changing the assertion, not changing ReceivedBlockTransactions, which I think would be harder to do correctly.)\r\n\r\nNew asserts had some problems reported https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1912039200 with a test case triggering failures posted https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225. It was possible to fix the asserts in CheckBlockIndex to cope with ReceivedBlockTransactions setting 0 nChainTx values, but the checks started getting more complicated and it turned out to be simpler to just update ReceivedBlockTransactions not to mess up nChainTx instead.\r\n\r\nAlso debugging the test case revealed that the new crash it was triggering with this PR was not the same as the crash it was triggering before this PR. So commit 438ac1ffc23ec5134f2ac74cee75ff145078df09 would not actually fix anything. The test case works by submitting a snapshot block after loading the snapshot, out of order before previous blocks were downloaded. Before this PR, this would cause ReceivedBlockTransactions to set a fake nChainTx value on the snapshot block and the `pindex->nChainTx == pindex->nTx + prev_chain_tx` check on the next block to fail. After this PR it would cause ReceivedBlockTransactions to set a 0 nChainTx value and the `assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());` check to fail.",
      "created_at": "2024-03-08T20:36:19Z",
      "updated_at": "2024-03-08T20:56:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1518266878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518266878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5125,
      "original_line": 5125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519982536",
      "pull_request_review_id": 1928263810,
      "id": 1519982536,
      "node_id": "PRRC_kwDOABII585amRfI",
      "diff_hunk": "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "path": "src/chain.h",
      "position": 44,
      "original_position": 19,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": 1484705186,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we keep the comment, perhaps add that this has never been set for any (released or master branch) mainnet node. So it can be repurposed, especially if at some point in the future both signet and testnet have been reset.  ",
      "created_at": "2024-03-11T16:06:41Z",
      "updated_at": "2024-03-11T16:40:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1519982536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519982536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520015210",
      "pull_request_review_id": 1928263810,
      "id": 1520015210,
      "node_id": "PRRC_kwDOABII585amZdq",
      "diff_hunk": "@@ -5579,21 +5576,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     CBlockIndex* index = nullptr;\n \n     // Don't make any modifications to the genesis block.\n-    // This is especially important because we don't want to erroneously\n-    // apply BLOCK_ASSUMED_VALID to genesis, which would happen if we didn't skip\n-    // it here (since it apparently isn't BLOCK_VALID_SCRIPTS).",
      "path": "src/validation.cpp",
      "position": 280,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "065952806234e5a0a6b87df5a5067d0f4062d25e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One useful bit of this comment might be worth preserving:\r\n\r\n```h\r\n// Note that the genesis block isn't BLOCK_VALID_SCRIPTS.\r\n```",
      "created_at": "2024-03-11T16:22:06Z",
      "updated_at": "2024-03-11T16:39:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520015210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520015210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5698,
      "original_line": 5698,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520020544",
      "pull_request_review_id": 1928263810,
      "id": 1520020544,
      "node_id": "PRRC_kwDOABII585amaxA",
      "diff_hunk": "@@ -247,6 +254,15 @@ def check_tx_counts(final: bool) -> None:\n \n         assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n \n+        self.log.info(\"Submit a stale block that forked off the chain before the snapshot\")",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 78,
      "original_position": 45,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "85233b203231f39c4436017860248ff9ad08ad42",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "85233b203231f39c4436017860248ff9ad08ad42: This is the test mentioned in the PR description? Maybe introduce it in a separate commit so it's a bit easier to test the bug fix.\r\n\r\nWhen I undo the changes in `chain.h` and `validation.cpp` the test fails earlier (line 243), so it tricky to test this part now.",
      "created_at": "2024-03-11T16:25:44Z",
      "updated_at": "2024-03-11T16:39:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520020544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520020544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520175905",
      "pull_request_review_id": 1928627248,
      "id": 1520175905,
      "node_id": "PRRC_kwDOABII585anAsh",
      "diff_hunk": "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "path": "src/chain.h",
      "position": 44,
      "original_position": 19,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "in_reply_to_id": 1484705186,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1519982536\r\n\r\n> If we keep the comment, perhaps add that this has never been set for any (released or master branch) mainnet node. So it can be repurposed, especially if at some point in the future both signet and testnet have been reset.\r\n\r\nWould prefer not to do this, since part of the point of the comment is to discourage reusing the flag. I think just the fact that flag isn't used, should be enough clue that it could be used if necessary.",
      "created_at": "2024-03-11T17:53:19Z",
      "updated_at": "2024-03-11T18:10:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520175905",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520175905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520201099",
      "pull_request_review_id": 1928680238,
      "id": 1520201099,
      "node_id": "PRRC_kwDOABII585anG2L",
      "diff_hunk": "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogWarning(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",\n+                   pindex->nHeight, PACKAGE_NAME, FormatFullVersion(), PACKAGE_BUGREPORT);",
      "path": "src/validation.cpp",
      "position": 266,
      "original_position": 6,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c015050cb2cf35303c05c7eb86d3546403e330eb",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "c015050cb2cf35303c05c7eb86d3546403e330eb: maybe also `return 0.0;`?",
      "created_at": "2024-03-11T18:05:34Z",
      "updated_at": "2024-03-11T18:26:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520201099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520201099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5347,
      "original_line": 5347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520203982",
      "pull_request_review_id": 1928627248,
      "id": 1520203982,
      "node_id": "PRRC_kwDOABII585anHjO",
      "diff_hunk": "@@ -5579,21 +5576,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     CBlockIndex* index = nullptr;\n \n     // Don't make any modifications to the genesis block.\n-    // This is especially important because we don't want to erroneously\n-    // apply BLOCK_ASSUMED_VALID to genesis, which would happen if we didn't skip\n-    // it here (since it apparently isn't BLOCK_VALID_SCRIPTS).",
      "path": "src/validation.cpp",
      "position": 280,
      "original_position": 39,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "065952806234e5a0a6b87df5a5067d0f4062d25e",
      "in_reply_to_id": 1520015210,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520015210\r\n\r\n> One useful bit of this comment might be worth preserving:\r\n\r\nThanks, added this back",
      "created_at": "2024-03-11T18:08:10Z",
      "updated_at": "2024-03-11T18:10:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520203982",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520203982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5698,
      "original_line": 5698,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520205475",
      "pull_request_review_id": 1928627248,
      "id": 1520205475,
      "node_id": "PRRC_kwDOABII585anH6j",
      "diff_hunk": "@@ -247,6 +254,15 @@ def check_tx_counts(final: bool) -> None:\n \n         assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n \n+        self.log.info(\"Submit a stale block that forked off the chain before the snapshot\")",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 78,
      "original_position": 45,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "85233b203231f39c4436017860248ff9ad08ad42",
      "in_reply_to_id": 1520020544,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520020544\r\n\r\n> [85233b2](https://github.com/bitcoin/bitcoin/commit/85233b203231f39c4436017860248ff9ad08ad42): This is the test mentioned in the PR description? Maybe introduce it in a separate commit so it's a bit easier to test the bug fix.\r\n\r\nGood idea, I moved the tests for the two crashes into separate commits.",
      "created_at": "2024-03-11T18:09:36Z",
      "updated_at": "2024-03-11T18:10:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520205475",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520205475"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520231273",
      "pull_request_review_id": 1928680238,
      "id": 1520231273,
      "node_id": "PRRC_kwDOABII585anONp",
      "diff_hunk": "@@ -4955,19 +4955,35 @@ void ChainstateManager::CheckBlockIndex()\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n             if (c->m_chain.Tip() == nullptr) continue;\n+            // Two main factors determine whether pindex is a candidate in\n+            // setBlockIndexCandidates:\n+            //\n+            // - If pindex has less work than the chain tip, it should not be a\n+            //   candidate, and this will be asserted below. Otherwise it is a\n+            //   potential candidate.\n+            //\n+            // - If pindex or one of its parent blocks never downloaded\n+            //   transactions (pindexFirstNeverProcessed is non-null), it should\n+            //   not be a candidate, and this will be asserted below. Otherwise\n+            //   it is a potential candidate.\n             if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+                // If pindex was detected as invalid (pindexFirstInvalid is\n+                // non-null), it is not required to be in\n+                // setBlockIndexCandidates.\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n-                    // If this block sorts at least as good as the current tip and\n-                    // is valid and we have all data for its parents, it must be in\n-                    // setBlockIndexCandidates.  m_chain.Tip() must also be there\n-                    // even if some data has been pruned.\n+                    // If pindex and all its parents downloaded transactions, and\n+                    // the transactions were not pruned (pindexFirstMissing is\n+                    // null), it is a potential candidate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11: the description matches the code, but I'm a bit confused why an index with a pruned ancestor can't be a candidate. Or is it the case that it _may_ be a candidate, but we just don't have a check for that?",
      "created_at": "2024-03-11T18:21:14Z",
      "updated_at": "2024-03-11T18:26:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520231273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520231273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520288254",
      "pull_request_review_id": 1928868972,
      "id": 1520288254,
      "node_id": "PRRC_kwDOABII585ancH-",
      "diff_hunk": "@@ -247,6 +254,15 @@ def check_tx_counts(final: bool) -> None:\n \n         assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n \n+        self.log.info(\"Submit a stale block that forked off the chain before the snapshot\")",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 78,
      "original_position": 45,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "85233b203231f39c4436017860248ff9ad08ad42",
      "in_reply_to_id": 1520020544,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, I was able to produce the crashes - by reverting the main commit and then keeping _one_ of the two crash test commits. Didn't look at the crash log itself.",
      "created_at": "2024-03-11T19:04:04Z",
      "updated_at": "2024-03-11T19:04:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520288254",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520288254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520325091",
      "pull_request_review_id": 1928973813,
      "id": 1520325091,
      "node_id": "PRRC_kwDOABII585anlHj",
      "diff_hunk": "@@ -4955,19 +4955,35 @@ void ChainstateManager::CheckBlockIndex()\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n             if (c->m_chain.Tip() == nullptr) continue;\n+            // Two main factors determine whether pindex is a candidate in\n+            // setBlockIndexCandidates:\n+            //\n+            // - If pindex has less work than the chain tip, it should not be a\n+            //   candidate, and this will be asserted below. Otherwise it is a\n+            //   potential candidate.\n+            //\n+            // - If pindex or one of its parent blocks never downloaded\n+            //   transactions (pindexFirstNeverProcessed is non-null), it should\n+            //   not be a candidate, and this will be asserted below. Otherwise\n+            //   it is a potential candidate.\n             if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+                // If pindex was detected as invalid (pindexFirstInvalid is\n+                // non-null), it is not required to be in\n+                // setBlockIndexCandidates.\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n-                    // If this block sorts at least as good as the current tip and\n-                    // is valid and we have all data for its parents, it must be in\n-                    // setBlockIndexCandidates.  m_chain.Tip() must also be there\n-                    // even if some data has been pruned.\n+                    // If pindex and all its parents downloaded transactions, and\n+                    // the transactions were not pruned (pindexFirstMissing is\n+                    // null), it is a potential candidate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "in_reply_to_id": 1520231273,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520231273\r\n\r\n> [49426f8](https://github.com/bitcoin/bitcoin/commit/49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11): the description matches the code, but I'm a bit confused why an index with a pruned ancestor can't be a candidate. Or is it the case that it _may_ be a candidate, but we just don't have a check for that?\r\n\r\nI think it's the latter. It may be a candidate but we can't have a check ensuring that it is a candidate because if blocks are missing between pindex and the current chain tip, FindMostWorkChain could remove it from the candidate set:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a945f09fa6e0f94cc424da9e06516f9cfa192545/src/validation.cpp#L3073\r\n\r\nProbably ideally the check below would be `pindexFirstMissingSinceChainTip == nullptr` instead of `pindexFirstMissing == nullptr`, but it would take more work to be able to write that.\r\n\r\n",
      "created_at": "2024-03-11T19:33:12Z",
      "updated_at": "2024-03-11T19:36:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520325091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520325091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330095",
      "pull_request_review_id": 1928988924,
      "id": 1520330095,
      "node_id": "PRRC_kwDOABII585anmVv",
      "diff_hunk": "@@ -4852,13 +4871,30 @@ void ChainstateManager::CheckBlockIndex()\n     size_t nNodes = 0;\n     int nHeight = 0;\n     CBlockIndex* pindexFirstInvalid = nullptr; // Oldest ancestor of pindex which is invalid.\n-    CBlockIndex* pindexFirstMissing = nullptr; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA.\n-    CBlockIndex* pindexFirstNeverProcessed = nullptr; // Oldest ancestor of pindex for which nTx == 0.\n+    CBlockIndex* pindexFirstMissing = nullptr; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA, since assumeutxo snapshot.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "6096542e4c195825d5e279310bb330411a2893c0",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do you mean \"since assumeutxo snapshot if used\"?",
      "created_at": "2024-03-11T19:37:02Z",
      "updated_at": "2024-03-11T19:53:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520330095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520383303",
      "pull_request_review_id": 1929148269,
      "id": 1520383303,
      "node_id": "PRRC_kwDOABII585anzVH",
      "diff_hunk": "@@ -4852,13 +4871,30 @@ void ChainstateManager::CheckBlockIndex()\n     size_t nNodes = 0;\n     int nHeight = 0;\n     CBlockIndex* pindexFirstInvalid = nullptr; // Oldest ancestor of pindex which is invalid.\n-    CBlockIndex* pindexFirstMissing = nullptr; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA.\n-    CBlockIndex* pindexFirstNeverProcessed = nullptr; // Oldest ancestor of pindex for which nTx == 0.\n+    CBlockIndex* pindexFirstMissing = nullptr; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA, since assumeutxo snapshot.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "6096542e4c195825d5e279310bb330411a2893c0",
      "in_reply_to_id": 1520330095,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520330095\r\n\r\n> Do you mean \"since assumeutxo snapshot if used\"?\r\n\r\nYes, added \"if used\" to clarify",
      "created_at": "2024-03-11T20:21:28Z",
      "updated_at": "2024-03-12T14:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520383303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520383303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521129298",
      "pull_request_review_id": 1930523671,
      "id": 1521129298,
      "node_id": "PRRC_kwDOABII585aqpdS",
      "diff_hunk": "@@ -4955,19 +4955,35 @@ void ChainstateManager::CheckBlockIndex()\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n             if (c->m_chain.Tip() == nullptr) continue;\n+            // Two main factors determine whether pindex is a candidate in\n+            // setBlockIndexCandidates:\n+            //\n+            // - If pindex has less work than the chain tip, it should not be a\n+            //   candidate, and this will be asserted below. Otherwise it is a\n+            //   potential candidate.\n+            //\n+            // - If pindex or one of its parent blocks never downloaded\n+            //   transactions (pindexFirstNeverProcessed is non-null), it should\n+            //   not be a candidate, and this will be asserted below. Otherwise\n+            //   it is a potential candidate.\n             if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+                // If pindex was detected as invalid (pindexFirstInvalid is\n+                // non-null), it is not required to be in\n+                // setBlockIndexCandidates.\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n-                    // If this block sorts at least as good as the current tip and\n-                    // is valid and we have all data for its parents, it must be in\n-                    // setBlockIndexCandidates.  m_chain.Tip() must also be there\n-                    // even if some data has been pruned.\n+                    // If pindex and all its parents downloaded transactions, and\n+                    // the transactions were not pruned (pindexFirstMissing is\n+                    // null), it is a potential candidate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "in_reply_to_id": 1520231273,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That makes sense. So instead of checking if there is a block with missing data between the tip and the new candidate, the code here checks if there's any missing data between genesis and the new candidate. Which is typically the case on a pruned node, which means this check is useless on a pruned node. But that's outside the scope of this PR.",
      "created_at": "2024-03-12T09:26:32Z",
      "updated_at": "2024-03-12T09:26:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1521129298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521129298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521572265",
      "pull_request_review_id": 1929148269,
      "id": 1521572265,
      "node_id": "PRRC_kwDOABII585asVmp",
      "diff_hunk": "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogWarning(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",\n+                   pindex->nHeight, PACKAGE_NAME, FormatFullVersion(), PACKAGE_BUGREPORT);",
      "path": "src/validation.cpp",
      "position": 266,
      "original_position": 6,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "c015050cb2cf35303c05c7eb86d3546403e330eb",
      "in_reply_to_id": 1520201099,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520201099\r\n\r\n> [c015050](https://github.com/bitcoin/bitcoin/commit/c015050cb2cf35303c05c7eb86d3546403e330eb): maybe also `return 0.0;`?\r\n\r\nGood idea, added",
      "created_at": "2024-03-12T14:28:38Z",
      "updated_at": "2024-03-12T14:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1521572265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521572265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5347,
      "original_line": 5347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521578519",
      "pull_request_review_id": 1929148269,
      "id": 1521578519,
      "node_id": "PRRC_kwDOABII585asXIX",
      "diff_hunk": "@@ -4955,19 +4955,35 @@ void ChainstateManager::CheckBlockIndex()\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n             if (c->m_chain.Tip() == nullptr) continue;\n+            // Two main factors determine whether pindex is a candidate in\n+            // setBlockIndexCandidates:\n+            //\n+            // - If pindex has less work than the chain tip, it should not be a\n+            //   candidate, and this will be asserted below. Otherwise it is a\n+            //   potential candidate.\n+            //\n+            // - If pindex or one of its parent blocks never downloaded\n+            //   transactions (pindexFirstNeverProcessed is non-null), it should\n+            //   not be a candidate, and this will be asserted below. Otherwise\n+            //   it is a potential candidate.\n             if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+                // If pindex was detected as invalid (pindexFirstInvalid is\n+                // non-null), it is not required to be in\n+                // setBlockIndexCandidates.\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n-                    // If this block sorts at least as good as the current tip and\n-                    // is valid and we have all data for its parents, it must be in\n-                    // setBlockIndexCandidates.  m_chain.Tip() must also be there\n-                    // even if some data has been pruned.\n+                    // If pindex and all its parents downloaded transactions, and\n+                    // the transactions were not pruned (pindexFirstMissing is\n+                    // null), it is a potential candidate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "49426f84b9a15aaae1b3a3c9c5d2ac4ee5855b11",
      "in_reply_to_id": 1520231273,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1520231273\r\n\r\n> That makes sense. So instead of checking if there is a block with missing data between the tip and the new candidate, the code here checks if there's any missing data between genesis and the new candidate.\r\n\r\nYes, it's pretty confusing so I added some more comments to help clarify.",
      "created_at": "2024-03-12T14:32:19Z",
      "updated_at": "2024-03-12T14:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1521578519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521578519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526681305",
      "pull_request_review_id": 1939983351,
      "id": 1526681305,
      "node_id": "PRRC_kwDOABII585a_07Z",
      "diff_hunk": "@@ -91,13 +91,16 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                // Remove all data and validity flags by just setting",
      "path": "src/test/util/chainstate.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "b3d695f913462b53bd5108c5fa81416ae03aaacb",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The comment above (`Reset the HAVE_DATA flags...`) could be removed or at least changed to match the changed code here.",
      "created_at": "2024-03-15T18:30:03Z",
      "updated_at": "2024-03-15T20:32:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1526681305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526681305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529031663",
      "pull_request_review_id": 1943835536,
      "id": 1529031663,
      "node_id": "PRRC_kwDOABII585bIyvv",
      "diff_hunk": "@@ -91,13 +91,16 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                // Remove all data and validity flags by just setting",
      "path": "src/test/util/chainstate.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "b3d695f913462b53bd5108c5fa81416ae03aaacb",
      "in_reply_to_id": 1526681305,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1526681305\r\n\r\n> The comment above (`Reset the HAVE_DATA flags...`) could be removed or at least changed to match the changed code here.\r\n\r\nThe comment above is still accurate and still describes the main thing this is trying to do. Now just other flags are reset as well. Happy to change any of the comments if you have a specific suggestion though.",
      "created_at": "2024-03-18T18:10:28Z",
      "updated_at": "2024-03-18T18:12:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1529031663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529031663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529343737",
      "pull_request_review_id": 1944296895,
      "id": 1529343737,
      "node_id": "PRRC_kwDOABII585bJ-75",
      "diff_hunk": "@@ -91,13 +91,16 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                // Remove all data and validity flags by just setting",
      "path": "src/test/util/chainstate.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "b3d695f913462b53bd5108c5fa81416ae03aaacb",
      "in_reply_to_id": 1526681305,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Before the comment could be clearly matched to what was happening below because the HAVE_DATA flags were unset explicitly. Now they are unset implicitly and the new comment states what is going on again more clearly. So this would be confusing as we would have two split comments making the same statement in different words and I would think I might be missing something special about the HAVE_DATA here.\r\n\r\nTo keep it simple, I would change this:\r\n\r\n```\r\n            // Reset the HAVE_DATA flags below the snapshot height, simulating\r\n            // never-having-downloaded them in the first place.\r\n```\r\n\r\nto this:\r\n\r\n```\r\n            // Simulate never-having-downloaded the blocks below the snapshot height.\r\n```",
      "created_at": "2024-03-18T22:03:08Z",
      "updated_at": "2024-03-18T22:03:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1529343737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529343737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529364454",
      "pull_request_review_id": 1944341214,
      "id": 1529364454,
      "node_id": "PRRC_kwDOABII585bKD_m",
      "diff_hunk": "@@ -91,13 +91,16 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                // Remove all data and validity flags by just setting",
      "path": "src/test/util/chainstate.h",
      "position": 11,
      "original_position": 11,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "b3d695f913462b53bd5108c5fa81416ae03aaacb",
      "in_reply_to_id": 1526681305,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a nit, so feel free to keep as is unless you have to retouch.",
      "created_at": "2024-03-18T22:23:57Z",
      "updated_at": "2024-03-18T22:23:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1529364454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1529364454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531789314",
      "pull_request_review_id": 1948414332,
      "id": 1531789314,
      "node_id": "PRRC_kwDOABII585bTUAC",
      "diff_hunk": "@@ -5126,19 +5126,42 @@ void ChainstateManager::CheckBlockIndex()\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n             if (c->m_chain.Tip() == nullptr) continue;\n+            // Two main factors determine whether pindex is a candidate in\n+            // setBlockIndexCandidates:\n+            //\n+            // - If pindex has less work than the chain tip, it should not be a\n+            //   candidate, and this will be asserted below. Otherwise it is a\n+            //   potential candidate.\n+            //\n+            // - If pindex or one of its parent blocks never downloaded\n+            //   transactions (pindexFirstNeverProcessed is non-null), it should\n+            //   not be a candidate, and this will be asserted below. Otherwise\n+            //   it is a potential candidate.\n             if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+                // If pindex was detected as invalid (pindexFirstInvalid is\n+                // non-null), it is not required to be in\n+                // setBlockIndexCandidates.\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n-                    // If this block sorts at least as good as the current tip and\n-                    // is valid and we have all data for its parents, it must be in\n-                    // setBlockIndexCandidates.  m_chain.Tip() must also be there\n-                    // even if some data has been pruned.\n+                    // If pindex and all its parents downloaded transactions,\n+                    // and the transactions were not pruned (pindexFirstMissing\n+                    // is null), it is a potential candidate. The check\n+                    // excludes pruned blocks, because if any blocks were\n+                    // pruned between pindex the current chain tip, pindex will",
      "path": "src/validation.cpp",
      "position": 190,
      "original_position": 29,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "9b97d5bbf980d657a277c85d113c2ae3e870e0ec",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: 9b97d5bbf980d657a277c85d113c2ae3e870e0ec: `pindex *and* the current`",
      "created_at": "2024-03-20T09:56:54Z",
      "updated_at": "2024-03-20T10:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1531789314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531789314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5177,
      "original_line": 5149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531805390",
      "pull_request_review_id": 1948414332,
      "id": 1531805390,
      "node_id": "PRRC_kwDOABII585bTX7O",
      "diff_hunk": "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "in_reply_to_id": 1499519079,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I incorrectly assumed that `GetSnapshotBaseBlock` was a function on the chainstate, which then would return nullptr for the background chainstate. However, it is a function on the chainstatemanager and it should not return a nullptr if a second chainstate (background chainstate) is loaded. Otherwise, it would be a nullptr deref anyway.",
      "created_at": "2024-03-20T10:07:08Z",
      "updated_at": "2024-03-20T10:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1531805390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531805390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4977,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531933627",
      "pull_request_review_id": 1948636867,
      "id": 1531933627,
      "node_id": "PRRC_kwDOABII585bT3O7",
      "diff_hunk": "@@ -324,6 +324,16 @@ def check_tx_counts(final: bool) -> None:\n \n         self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n         self.restart_node(1, extra_args=self.extra_args[1])\n+\n+        # Send snapshot block to n1 out of order. This makes the test less\n+        # realistic because normally the snapshot block is one of the last\n+        # blocks downloaded, but its useful to test because it triggers more\n+        # corner cases in ReceivedBlockTransactions() and CheckBlockIndex()\n+        # setting and testing nChainTx values, and it exposed previous bugs.\n+        snapshot_hash = n0.getblockhash(SNAPSHOT_BASE_HEIGHT)\n+        snapshot_block = n0.getblock(snapshot_hash, 0)\n+        n1.submitblock(snapshot_block)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 102,
      "original_position": 12,
      "commit_id": "9d9a7458a2570f7db56ab626b22010591089c312",
      "original_commit_id": "ef174e9ed21c08f38e5d4b537b6decfd1f646db9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in ef174e9ed21c08f38e5d4b537b6decfd1f646db9:\r\n\r\nI wonder if it would be better to randomly either submit or not submit the block, because the test should be passing in both cases.\r\n\r\nIf a crash were to happen, it would be intermittent. However, it would still be deterministic, because the randomness seed is printed/logged.",
      "created_at": "2024-03-20T11:35:41Z",
      "updated_at": "2024-03-20T11:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1531933627",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531933627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    }
  ]
}