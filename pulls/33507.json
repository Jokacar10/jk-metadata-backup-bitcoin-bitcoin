{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507",
    "id": 2872611307,
    "node_id": "PR_kwDOABII586rOJHr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33507",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33507.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33507.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33507",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33507/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fca25c57efd408683044352d77da08fbafcc104e",
    "number": 33507,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "RPC: add sendrawtransactiontopeer",
    "user": {
      "login": "polespinasa",
      "id": 57642229,
      "node_id": "MDQ6VXNlcjU3NjQyMjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/polespinasa",
      "html_url": "https://github.com/polespinasa",
      "followers_url": "https://api.github.com/users/polespinasa/followers",
      "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
      "organizations_url": "https://api.github.com/users/polespinasa/orgs",
      "repos_url": "https://api.github.com/users/polespinasa/repos",
      "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/polespinasa/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Adds a new RPC `sendrawtransactiontopeer`, which sends a single tx to a specific peer.\r\nAfter the transaction is sent to the peer it is forgotten and not stored in the local mempool.\r\n\r\nThis rpc can serve several purposes. For example, it allows you to “spoof” an initial retransmission from a different \"trusted\" peer, making it appear as if the original participant was never aware of the transaction. It can also be useful in testing and simulation environments.\r\n\r\n\r\n\r\nSolves #28636 and #21876 (Partially - see https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2389659427)\r\n\r\n",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2025-09-30T01:58:10Z",
    "updated_at": "2025-09-30T08:41:03Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "e7ab115b173e307b9a0ffbdff7610155da7e5384",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "polespinasa:2025-09-29-sendrawtransactiontopeer",
      "ref": "2025-09-29-sendrawtransactiontopeer",
      "sha": "fca25c57efd408683044352d77da08fbafcc104e",
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 879841478,
        "node_id": "R_kgDONHFQxg",
        "name": "bitcoin",
        "full_name": "polespinasa/bitcoin",
        "owner": {
          "login": "polespinasa",
          "id": 57642229,
          "node_id": "MDQ6VXNlcjU3NjQyMjI5",
          "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/polespinasa",
          "html_url": "https://github.com/polespinasa",
          "followers_url": "https://api.github.com/users/polespinasa/followers",
          "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
          "organizations_url": "https://api.github.com/users/polespinasa/orgs",
          "repos_url": "https://api.github.com/users/polespinasa/repos",
          "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/polespinasa/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/polespinasa/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/polespinasa/bitcoin",
        "archive_url": "https://api.github.com/repos/polespinasa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/polespinasa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/polespinasa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/polespinasa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/polespinasa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/polespinasa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/polespinasa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/polespinasa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/polespinasa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/polespinasa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/polespinasa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/polespinasa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/polespinasa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/polespinasa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/polespinasa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/polespinasa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/polespinasa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/polespinasa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/polespinasa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/polespinasa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/polespinasa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/polespinasa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/polespinasa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/polespinasa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/polespinasa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/polespinasa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/polespinasa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/polespinasa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/polespinasa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:polespinasa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/polespinasa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/polespinasa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/polespinasa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/polespinasa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/polespinasa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/polespinasa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/polespinasa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/polespinasa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/polespinasa/bitcoin/hooks",
        "svn_url": "https://github.com/polespinasa/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 251438,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-30T02:08:06Z",
        "created_at": "2024-10-28T16:32:04Z",
        "updated_at": "2025-09-29T18:17:54Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d8fe258cd6105704bf4427eda048dd7085ca516d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37900,
        "stargazers_count": 85767,
        "watchers_count": 85767,
        "size": 294230,
        "default_branch": "master",
        "open_issues_count": 807,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-30T07:17:43Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-30T08:20:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 106,
    "deletions": 0,
    "changed_files": 4,
    "commits": 2,
    "review_comments": 14,
    "comments": 2
  },
  "events": [
    {
      "event": "labeled",
      "id": 19997154393,
      "node_id": "LE_lADOABII587Oqc7NzwAAAASn7FxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19997154393",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-30T01:58:13Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 3349657271,
      "node_id": "IC_kwDOABII587Hp7a3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3349657271",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-30T01:58:15Z",
      "updated_at": "2025-09-30T02:08:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33507.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- on the local mempool -> in the local mempool [“in the mempool” is the correct preposition for storing items within a pool; “on the mempool” is ungrammatical]\n\n<sup>drahtbot_id_5_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#issuecomment-3349657271",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33507"
    },
    {
      "event": "reviewed",
      "id": 3282340148,
      "node_id": "PRR_kwDOABII587DpIk0",
      "url": null,
      "actor": null,
      "commit_id": "5e4b8120af266026cfbc3ca29fc98ebb4fcf8f55",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T02:01:48Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#pullrequestreview-3282340148",
      "submitted_at": "2025-09-30T02:01:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
    },
    {
      "event": "reviewed",
      "id": 3282340692,
      "node_id": "PRR_kwDOABII587DpItU",
      "url": null,
      "actor": null,
      "commit_id": "5e4b8120af266026cfbc3ca29fc98ebb4fcf8f55",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T02:02:15Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#pullrequestreview-3282340692",
      "submitted_at": "2025-09-30T02:02:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
    },
    {
      "event": "commented",
      "id": 3349669141,
      "node_id": "IC_kwDOABII587Hp-UV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3349669141",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-30T02:04:35Z",
      "updated_at": "2025-09-30T02:04:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Have you seen https://github.com/bitcoin/bitcoin/pull/29415? Is there a reason you would want this if we had private broadcast?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#issuecomment-3349669141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33507"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2MGE4ZWFkZTY0M2U5Nzg1YzcwMTE5NDgwZmI4NGM3MDBhMWRkYmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f60a8eade643e9785c70119480fb84c700a1ddbc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f60a8eade643e9785c70119480fb84c700a1ddbc",
      "tree": {
        "sha": "441d3bc4867b075c9d883b03d9e78281d4f58753",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/441d3bc4867b075c9d883b03d9e78281d4f58753"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 441d3bc4867b075c9d883b03d9e78281d4f58753\nparent d8fe258cd6105704bf4427eda048dd7085ca516d\nauthor Pol Espinasa <pol.espinasa@uab.cat> 1759186403 +0200\ncommitter Pol Espinasa <pol.espinasa@uab.cat> 1759198074 +0200\n\nrpc: Add sendrawtransactiontopeer RPC\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYKADMWIQRd8IHT46QaaYw3spsoRwkHtAvybQUCaNs7fRUccG9sLmVzcGlu\nYXNhQHVhYi5jYXQACgkQKEcJB7QL8m1D2AEAt8kKeI+3A7hoH53mYGak+e+u5QJ8\nIKjM4l4JXkwhu3oA/3lpaiyscKXyZuUjdro58+1QToISTbv12L9JlJ+5VT8G\n=Cg3F\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8fe258cd6105704bf4427eda048dd7085ca516d",
          "sha": "d8fe258cd6105704bf4427eda048dd7085ca516d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d8fe258cd6105704bf4427eda048dd7085ca516d"
        }
      ],
      "message": "rpc: Add sendrawtransactiontopeer RPC",
      "committer": {
        "name": "Pol Espinasa",
        "email": "pol.espinasa@uab.cat",
        "date": "2025-09-30T02:07:54Z"
      },
      "author": {
        "name": "Pol Espinasa",
        "email": "pol.espinasa@uab.cat",
        "date": "2025-09-29T22:53:23Z"
      },
      "sha": "f60a8eade643e9785c70119480fb84c700a1ddbc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjYTI1YzU3ZWZkNDA4NjgzMDQ0MzUyZDc3ZGEwOGZiYWZjYzEwNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca25c57efd408683044352d77da08fbafcc104e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fca25c57efd408683044352d77da08fbafcc104e",
      "tree": {
        "sha": "3a14a3de85c8770632c3f279dfc32d451ae145a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a14a3de85c8770632c3f279dfc32d451ae145a3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3a14a3de85c8770632c3f279dfc32d451ae145a3\nparent f60a8eade643e9785c70119480fb84c700a1ddbc\nauthor Pol Espinasa <pol.espinasa@uab.cat> 1759191498 +0200\ncommitter Pol Espinasa <pol.espinasa@uab.cat> 1759198077 +0200\n\ntest: test sendrawtransactiontopeer\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYKADMWIQRd8IHT46QaaYw3spsoRwkHtAvybQUCaNs7fRUccG9sLmVzcGlu\nYXNhQHVhYi5jYXQACgkQKEcJB7QL8m3xEQD9GKN5Zf+/a0sqsMpAE34chRCFVi4L\n5UDgcl57E04Z+WMA/iWyhj1Cn0Ong5v4GjgmZBr9FneJTZIBBbIpnVM/gBAL\n=pGVU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f60a8eade643e9785c70119480fb84c700a1ddbc",
          "sha": "f60a8eade643e9785c70119480fb84c700a1ddbc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f60a8eade643e9785c70119480fb84c700a1ddbc"
        }
      ],
      "message": "test: test sendrawtransactiontopeer",
      "committer": {
        "name": "Pol Espinasa",
        "email": "pol.espinasa@uab.cat",
        "date": "2025-09-30T02:07:57Z"
      },
      "author": {
        "name": "Pol Espinasa",
        "email": "pol.espinasa@uab.cat",
        "date": "2025-09-30T00:18:18Z"
      },
      "sha": "fca25c57efd408683044352d77da08fbafcc104e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19997251568,
      "node_id": "HRFPE_lADOABII587Oqc7NzwAAAASn7dfw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19997251568",
      "actor": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "commit_url": "https://api.github.com/repos/polespinasa/bitcoin/commits/fca25c57efd408683044352d77da08fbafcc104e",
      "created_at": "2025-09-30T02:08:07Z"
    },
    {
      "event": "reviewed",
      "id": 3282802262,
      "node_id": "PRR_kwDOABII587Dq5ZW",
      "url": null,
      "actor": null,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T06:33:14Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#pullrequestreview-3282802262",
      "submitted_at": "2025-09-30T06:33:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
    },
    {
      "event": "reviewed",
      "id": 3283182194,
      "node_id": "PRR_kwDOABII587DsWJy",
      "url": null,
      "actor": null,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T08:24:03Z",
      "author_association": "NONE",
      "body": "This change introduces a new RPC command, `sendrawtransactiontopeer`, which allows users to send a raw transaction directly to a specified peer without storing it in the local node's mempool. This is a valuable addition for testing transaction propagation and peer-to-peer interactions.\r\n\r\n**Key Changes:**\r\n- Added a new RPC command `sendrawtransactiontopeer` to submit a raw transaction to a specific peer.\r\n- The new command takes `hexstring`, `peer_id`, and an optional `maxburnamount` as arguments.\r\n- Transactions sent via `sendrawtransactiontopeer` are validated against burn amount limits and undergo a `test_accept` check, but are explicitly *not* stored in the local node's mempool.\r\n- The transaction is sent directly to the specified peer using `CConnman::PushMessage`.\r\n- Error handling is included for transaction decoding, burn amount exceeding limits, mempool rejection reasons, and failure to send to the peer.\r\n- The new RPC command is registered in `src/rpc/mempool.cpp` and added to the RPC conversion parameters in `src/rpc/client.cpp`.\r\n- Added `sendrawtransactiontopeer` to the list of RPC commands safe for fuzzing in `src/test/fuzz/rpc.cpp`.\r\n- New functional tests for `sendrawtransactiontopeer` were added in `test/functional/rpc_rawtransaction.py`, covering cases like missing inputs, successful sending, and sending to a non-existent peer.\r\n\r\n",
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#pullrequestreview-3283182194",
      "submitted_at": "2025-09-30T08:17:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
    },
    {
      "event": "reviewed",
      "id": 3283253090,
      "node_id": "PRR_kwDOABII587Dsndi",
      "url": null,
      "actor": null,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T08:41:03Z",
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#pullrequestreview-3283253090",
      "submitted_at": "2025-09-30T08:41:03Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2389659427",
      "pull_request_review_id": 3282340148,
      "id": 2389659427,
      "node_id": "PRRC_kwDOABII586Ob08j",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR_HEX, \"\", \"The transaction hash in hex\"\n+        },\n+        RPCExamples{\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+\n+            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);\n+\n+            CMutableTransaction mtx;\n+            if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+            }\n+\n+            for (const auto& out : mtx.vout) {\n+                if((out.scriptPubKey.IsUnspendable() || !out.scriptPubKey.HasValidOps()) && out.nValue > max_burn_amount) {\n+                    throw JSONRPCTransactionError(TransactionError::MAX_BURN_EXCEEDED);\n+                }\n+            }\n+\n+            CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            ChainstateManager& chainman = EnsureChainman(node);\n+            const PackageMempoolAcceptResult package_result = [&] {\n+                LOCK(::cs_main);\n+                return PackageMempoolAcceptResult(tx->GetWitnessHash(),\n+                                                  chainman.ProcessTransaction(tx, /*test_accept=*/true));\n+            }();\n+\n+            const auto& tx_result = package_result.m_tx_results.find(tx->GetWitnessHash())->second;\n+            if (tx_result.m_result_type != MempoolAcceptResult::ResultType::VALID && tx_result.m_result_type != MempoolAcceptResult::ResultType::MEMPOOL_ENTRY) {",
      "path": "src/rpc/mempool.cpp",
      "position": 59,
      "original_position": 59,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "5e4b8120af266026cfbc3ca29fc98ebb4fcf8f55",
      "in_reply_to_id": null,
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Even if the tx is already in the mempool `m_result_type` is never `ResultType::MEMPOOL_ENTRY` making it throw a `JSONTransactionError`.\r\n\r\nThis can be seen in the last test case in 5e4b8120af266026cfbc3ca29fc98ebb4fcf8f55.\r\nThis should not be the behavior, but I didn't find a solution yet.",
      "created_at": "2025-09-30T02:01:48Z",
      "updated_at": "2025-09-30T02:01:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2389659427",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2389659427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 165,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2389659844",
      "pull_request_review_id": 3282340692,
      "id": 2389659844,
      "node_id": "PRRC_kwDOABII586Ob1DE",
      "diff_hunk": "@@ -444,6 +446,27 @@ def sendrawtransaction_testmempoolaccept_tests(self):\n             assert_equal(testres['reject-reason'], 'txn-already-known')\n             assert_raises_rpc_error(-27, 'Transaction outputs already in utxo set', node.sendrawtransaction, tx['hex'])\n \n+    def sendrawtransactiontopeer(self):\n+        self.log.info(\"Test sendrawtransactiontopeer with missing input\")\n+        inputs = [{'txid': TXID, 'vout': 1}] # won't exist\n+        address = getnewdestination()[2]\n+        outputs = {address: 4.998}\n+        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n+        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, rawtx, 0)\n+\n+        self.log.info(\"Test sendrawtransactiontopeer\")\n+        rawtx1 = self.wallet.create_self_transfer()['hex']\n+        with self.nodes[0].assert_debug_log(expected_msgs=[\"received: tx\"]):\n+            self.nodes[2].sendrawtransactiontopeer(hexstring=rawtx1, peer_id=0)\n+\n+        self.log.info(\"Test error for sendrawtransactiontopeer to non-existing peer\")\n+        rawtx2 = self.wallet.create_self_transfer()['hex']\n+        assert_raises_rpc_error(-1, \"Error: Could not send transaction to peer\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx2, peer_id=100)\n+\n+        self.log.info(\"Test error for sendrawtransactiontopeer of txs already in the mempool\")",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 37,
      "original_position": 37,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "5e4b8120af266026cfbc3ca29fc98ebb4fcf8f55",
      "in_reply_to_id": null,
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This test case should be deleted as this is not the expected behavior, see https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2389659427",
      "created_at": "2025-09-30T02:02:14Z",
      "updated_at": "2025-09-30T02:02:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2389659844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2389659844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 466,
      "original_line": 466,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390009870",
      "pull_request_review_id": 3282802262,
      "id": 2390009870,
      "node_id": "PRRC_kwDOABII586OdKgO",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },",
      "path": "src/rpc/mempool.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You'll also have to check the fee? Otherwise, this just seems like a duplicate of `sendmsgtopeer 0 \"tx\" \"$txhex\"`?",
      "created_at": "2025-09-30T06:33:14Z",
      "updated_at": "2025-09-30T06:33:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390009870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390009870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": 117,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284264",
      "pull_request_review_id": 3283182194,
      "id": 2390284264,
      "node_id": "PRRC_kwDOABII586OeNfo",
      "diff_hunk": "@@ -127,6 +127,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"signrawtransactionwithwallet\", 1, \"prevtxs\" },\n     { \"sendrawtransaction\", 1, \"maxfeerate\" },\n     { \"sendrawtransaction\", 2, \"maxburnamount\" },\n+    { \"sendrawtransactiontopeer\", 1, \"peer_id\" },",
      "path": "src/rpc/client.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Code Issue\r\n\r\n**Lines:** 130-131\r\n\r\n```cpp\r\n{ \"sendrawtransactiontopeer\", 1, \"peer_id\" },\r\n{ \"sendrawtransactiontopeer\", 2, \"maxburnamount\" },\r\n```\r\n\r\nThese entries define parameter conversions for `sendrawtransactiontopeer`. However, if `maxfeerate` is also an optional parameter for this command (similar to `sendrawtransaction`), it is missing from this list, potentially causing inconsistencies in RPC help or parameter handling.",
      "created_at": "2025-09-30T08:17:19Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284264",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284359",
      "pull_request_review_id": 3283182194,
      "id": 2390284359,
      "node_id": "PRRC_kwDOABII586OeNhH",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR_HEX, \"\", \"The transaction hash in hex\"\n+        },\n+        RPCExamples{\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+\n+            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);",
      "path": "src/rpc/mempool.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Code Issue\r\n\r\n**Lines:** 141-141\r\n\r\n```cpp\r\n            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);\r\n```\r\n\r\nThe `maxburnamount` argument has a `Default` value specified in `RPCHelpMan`. However, the handler explicitly checks `request.params[2].isNull()` and sets `max_burn_amount` to `0` if true. This implies that passing `null` for `maxburnamount` is treated differently from omitting the argument (which would use `DEFAULT_MAX_BURN_AMOUNT`). This behavior is not explicitly documented in the RPC help text, which could lead to confusion for users expecting the `Default` value to apply universally when the argument is not provided or is `null`.",
      "created_at": "2025-09-30T08:17:21Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284359",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284443",
      "pull_request_review_id": 3283182194,
      "id": 2390284443,
      "node_id": "PRRC_kwDOABII586OeNib",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR_HEX, \"\", \"The transaction hash in hex\"\n+        },\n+        RPCExamples{\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+\n+            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);\n+\n+            CMutableTransaction mtx;\n+            if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+            }\n+\n+            for (const auto& out : mtx.vout) {\n+                if((out.scriptPubKey.IsUnspendable() || !out.scriptPubKey.HasValidOps()) && out.nValue > max_burn_amount) {\n+                    throw JSONRPCTransactionError(TransactionError::MAX_BURN_EXCEEDED);\n+                }\n+            }\n+\n+            CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            ChainstateManager& chainman = EnsureChainman(node);\n+            const PackageMempoolAcceptResult package_result = [&] {\n+                LOCK(::cs_main);\n+                return PackageMempoolAcceptResult(tx->GetWitnessHash(),\n+                                                  chainman.ProcessTransaction(tx, /*test_accept=*/true));\n+            }();\n+\n+            const auto& tx_result = package_result.m_tx_results.find(tx->GetWitnessHash())->second;",
      "path": "src/rpc/mempool.cpp",
      "position": 58,
      "original_position": 58,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Code Issue\r\n\r\n**Lines:** 164-164\r\n\r\n```cpp\r\n            const auto& tx_result = package_result.m_tx_results.find(tx->GetWitnessHash())->second;\r\n```\r\n\r\nThe code assumes that the transaction hash will always be found in `package_result.m_tx_results` after calling `chainman.ProcessTransaction`. If `ProcessTransaction` encounters an early package-level rejection or for some other reason does not include the transaction's hash in the results map, dereferencing the iterator returned by `find()` could lead to undefined behavior or a crash.",
      "created_at": "2025-09-30T08:17:22Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284443",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284527",
      "pull_request_review_id": 3283182194,
      "id": 2390284527,
      "node_id": "PRRC_kwDOABII586OeNjv",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR_HEX, \"\", \"The transaction hash in hex\"\n+        },\n+        RPCExamples{\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+\n+            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);\n+\n+            CMutableTransaction mtx;\n+            if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+            }\n+\n+            for (const auto& out : mtx.vout) {\n+                if((out.scriptPubKey.IsUnspendable() || !out.scriptPubKey.HasValidOps()) && out.nValue > max_burn_amount) {\n+                    throw JSONRPCTransactionError(TransactionError::MAX_BURN_EXCEEDED);\n+                }\n+            }\n+\n+            CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            ChainstateManager& chainman = EnsureChainman(node);\n+            const PackageMempoolAcceptResult package_result = [&] {\n+                LOCK(::cs_main);\n+                return PackageMempoolAcceptResult(tx->GetWitnessHash(),\n+                                                  chainman.ProcessTransaction(tx, /*test_accept=*/true));\n+            }();\n+\n+            const auto& tx_result = package_result.m_tx_results.find(tx->GetWitnessHash())->second;\n+            if (tx_result.m_result_type != MempoolAcceptResult::ResultType::VALID && tx_result.m_result_type != MempoolAcceptResult::ResultType::MEMPOOL_ENTRY) {\n+                throw JSONRPCTransactionError(node::TransactionError::MEMPOOL_REJECTED, tx_result.m_state.GetRejectReason());\n+            }\n+\n+            const NodeId peer_id{request.params[1].getInt<int64_t>()};\n+            CConnman& connman = EnsureConnman(node);\n+            CSerializedNetMsg msg_ser;\n+            msg_ser.data = TryParseHex<unsigned char>(request.params[0].get_str()).value();",
      "path": "src/rpc/mempool.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Code Issue\r\n\r\n**Lines:** 172-172\r\n\r\n```cpp\r\n            msg_ser.data = TryParseHex<unsigned char>(request.params[0].get_str()).value();\r\n```\r\n\r\nThe hex string `request.params[0].get_str()` is parsed twice: once by `DecodeHexTx` on line 144 to create `CMutableTransaction`, and again by `TryParseHex` on line 172 to get raw bytes for `CSerializedNetMsg`. While `DecodeHexTx` ensures the string is valid hex, re-parsing the same string is a minor inefficiency. If the raw bytes could be captured or derived from the first parse, it would be more efficient.",
      "created_at": "2025-09-30T08:17:24Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284527",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 172,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284640",
      "pull_request_review_id": 3283182194,
      "id": 2390284640,
      "node_id": "PRRC_kwDOABII586OeNlg",
      "diff_hunk": "@@ -167,6 +167,7 @@ const std::vector<std::string> RPC_COMMANDS_SAFE_FOR_FUZZING{\n     \"scantxoutset\",\n     \"sendmsgtopeer\", // when no peers are connected, no p2p message is sent\n     \"sendrawtransaction\",\n+    \"sendrawtransactiontopeer\",",
      "path": "src/test/fuzz/rpc.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Line:** 170\r\n\r\nThe `sendrawtransactiontopeer` command, similar to `sendmsgtopeer` (line 168), involves network interaction. For clarity and consistency within the `RPC_COMMANDS_SAFE_FOR_FUZZING` list, it would be beneficial to add a comment explaining its safety considerations or potential side effects during fuzzing, especially if its behavior or safety profile is conditional (e.g., when peers are connected versus not connected).\r\n\r\n**Example Fix:**\r\n```diff\r\n--- a/src/test/fuzz/rpc.cpp\r\n+++ b/src/test/fuzz/rpc.cpp\r\n@@ -167,6 +167,7 @@ const std::vector<std::string> RPC_COMMANDS_SAFE_FOR_FUZZING{\r\n     \"scantxoutset\",\r\n     \"sendmsgtopeer\", // when no peers are connected, no p2p message is sent\r\n     \"sendrawtransaction\",\r\n-    \"sendrawtransactiontopeer\",\r\n+    \"sendrawtransactiontopeer\", // Consider adding a comment explaining its safety for fuzzing, similar to sendmsgtopeer.\r\n     \"setmocktime\",\r\n     \"setnetworkactive\",\r\n     \"signmessagewithprivkey\",\r\n```",
      "created_at": "2025-09-30T08:17:25Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284640",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284784",
      "pull_request_review_id": 3283182194,
      "id": 2390284784,
      "node_id": "PRRC_kwDOABII586OeNnw",
      "diff_hunk": "@@ -444,6 +446,27 @@ def sendrawtransaction_testmempoolaccept_tests(self):\n             assert_equal(testres['reject-reason'], 'txn-already-known')\n             assert_raises_rpc_error(-27, 'Transaction outputs already in utxo set', node.sendrawtransaction, tx['hex'])\n \n+    def sendrawtransactiontopeer(self):\n+        self.log.info(\"Test sendrawtransactiontopeer with missing input\")\n+        inputs = [{'txid': TXID, 'vout': 1}] # won't exist\n+        address = getnewdestination()[2]\n+        outputs = {address: 4.998}\n+        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n+        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, rawtx, 0)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 26,
      "original_position": 26,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Line:** 455\r\n\r\nFor consistency and clarity, it is recommended to use the `hexstring` keyword argument for all calls to `sendrawtransactiontopeer`, matching the usage in lines 460, 464, and 468. This makes the code more readable and explicit about the argument's purpose.\r\n\r\n**Fix:**\r\n```diff\r\n--- a/test/functional/rpc_rawtransaction.py\r\n+++ b/test/functional/rpc_rawtransaction.py\r\n@@ -452,4 +452,4 @@\r\n         address = getnewdestination()[2]\r\n         outputs = {address: 4.998}\r\n         rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\r\n-        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, rawtx, 0)\r\n+        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx, peer_id=0)\r\n```",
      "created_at": "2025-09-30T08:17:27Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284784",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 455,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284878",
      "pull_request_review_id": 3283182194,
      "id": 2390284878,
      "node_id": "PRRC_kwDOABII586OeNpO",
      "diff_hunk": "@@ -444,6 +446,27 @@ def sendrawtransaction_testmempoolaccept_tests(self):\n             assert_equal(testres['reject-reason'], 'txn-already-known')\n             assert_raises_rpc_error(-27, 'Transaction outputs already in utxo set', node.sendrawtransaction, tx['hex'])\n \n+    def sendrawtransactiontopeer(self):\n+        self.log.info(\"Test sendrawtransactiontopeer with missing input\")\n+        inputs = [{'txid': TXID, 'vout': 1}] # won't exist\n+        address = getnewdestination()[2]\n+        outputs = {address: 4.998}\n+        rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\n+        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, rawtx, 0)",
      "path": "test/functional/rpc_rawtransaction.py",
      "position": 26,
      "original_position": 26,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Line:** 455\r\n\r\nThe `peer_id=0` argument in lines 455, 460, and 468 assumes that `self.nodes[0]` is always assigned peer ID 0 by `self.nodes[2]`. While this is often the case in test setups, relying on a fixed peer ID can make the test brittle if the network topology or peer connection order changes. It would be more robust to dynamically retrieve the `peer_id` of `self.nodes[0]` from `self.nodes[2]`'s `getpeerinfo` before using it.\r\n\r\n**Fix:**\r\n```diff\r\n--- a/test/functional/rpc_rawtransaction.py\r\n+++ b/test/functional/rpc_rawtransaction.py\r\n@@ -450,14 +450,19 @@\r\n         self.log.info(\"Test sendrawtransactiontopeer with missing input\")\r\n         inputs = [{'txid': TXID, 'vout': 1}] # won't exist\r\n         address = getnewdestination()[2]\r\n+        # Dynamically find the peer_id for node 0 from node 2's perspective\r\n+        peer_id_node0 = -1\r\n+        for peer in self.nodes[2].getpeerinfo():\r\n+            if peer['addr'].startswith(f\"127.0.0.1:{self.nodes[0].port}\"):\r\n+                peer_id_node0 = peer['id']\r\n+                break\r\n+        assert_ne(peer_id_node0, -1, \"Could not find peer_id for node 0\")\r\n+\r\n         outputs = {address: 4.998}\r\n         rawtx = self.nodes[2].createrawtransaction(inputs, outputs)\r\n-        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, rawtx, 0)\r\n-  \r\n+        assert_raises_rpc_error(-26, \"bad-txns-inputs-missingorspent\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx, peer_id=peer_id_node0)\r\n         self.log.info(\"Test sendrawtransactiontopeer\")\r\n         rawtx1 = self.wallet.create_self_transfer()['hex']\r\n         with self.nodes[0].assert_debug_log(expected_msgs=[\"received: tx\"]):\r\n-            self.nodes[2].sendrawtransactiontopeer(hexstring=rawtx1, peer_id=0)\r\n-  \r\n+            self.nodes[2].sendrawtransactiontopeer(hexstring=rawtx1, peer_id=peer_id_node0)\r\n         self.log.info(\"Test error for sendrawtransactiontopeer to non-existing peer\")\r\n         rawtx2 = self.wallet.create_self_transfer()['hex']\r\n         assert_raises_rpc_error(-1, \"Error: Could not send transaction to peer\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx2, peer_id=100)\r\n-  \r\n+ \r\n         self.log.info(\"Test error for sendrawtransactiontopeer of txs already in the mempool\")\r\n         rawtx3 = self.wallet.send_self_transfer(from_node=self.nodes[2])['hex']\r\n-        assert_raises_rpc_error(-26, \"txn-already-in-mempool\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx3, peer_id=0)\r\n-  \r\n+        assert_raises_rpc_error(-26, \"txn-already-in-mempool\", self.nodes[2].sendrawtransactiontopeer, hexstring=rawtx3, peer_id=peer_id_node0)\r\n```",
      "created_at": "2025-09-30T08:17:29Z",
      "updated_at": "2025-09-30T08:17:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390284878",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390284878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 455,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390335595",
      "pull_request_review_id": 3283253090,
      "id": 2390335595,
      "node_id": "PRRC_kwDOABII586OeaBr",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},",
      "path": "src/rpc/mempool.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This feels better as a named-only param.",
      "created_at": "2025-09-30T08:32:00Z",
      "updated_at": "2025-09-30T08:41:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390335595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390335595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390338390",
      "pull_request_review_id": 3283253090,
      "id": 2390338390,
      "node_id": "PRRC_kwDOABII586OeatW",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},",
      "path": "src/rpc/mempool.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Probably should include the (more likely to be used) \"maxfeerate\" option too?",
      "created_at": "2025-09-30T08:33:01Z",
      "updated_at": "2025-09-30T08:41:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390338390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390338390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390359165",
      "pull_request_review_id": 3283253090,
      "id": 2390359165,
      "node_id": "PRRC_kwDOABII586Oefx9",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n ",
      "path": "src/rpc/mempool.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This doesn't belong in rpc/mempool since it never touches the mempool...?",
      "created_at": "2025-09-30T08:40:17Z",
      "updated_at": "2025-09-30T08:41:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390359165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390359165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390361071",
      "pull_request_review_id": 3283253090,
      "id": 2390361071,
      "node_id": "PRRC_kwDOABII586OegPv",
      "diff_hunk": "@@ -107,6 +107,85 @@ static RPCHelpMan sendrawtransaction()\n     };\n }\n \n+\n+static RPCHelpMan sendrawtransactiontopeer()\n+{\n+    return RPCHelpMan{\n+        \"sendrawtransactiontopeer\",\n+        \"Submit a raw transaction (serialized, hex-encoded) to a peer node but don't store the transaction on the local mempool.\\n\"\n+        \"\\nRelated RPCs: createrawtransaction, signrawtransactionwithkey\\n\",\n+        {\n+            {\"hexstring\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hex string of the raw transaction\"},\n+            {\"peer_id\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The peer to send the message to.\"},\n+            {\"maxburnamount\", RPCArg::Type::AMOUNT, RPCArg::Default{FormatMoney(DEFAULT_MAX_BURN_AMOUNT)},\n+             \"Reject transactions with provably unspendable outputs (e.g. 'datacarrier' outputs that use the OP_RETURN opcode) greater than the specified value, expressed in \" + CURRENCY_UNIT + \".\\n\"\n+             \"If burning funds through unspendable outputs is desired, increase this value.\\n\"\n+             \"This check is based on heuristics and does not guarantee spendability of outputs.\\n\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::STR_HEX, \"\", \"The transaction hash in hex\"\n+        },\n+        RPCExamples{\n+            \"\\nCreate a transaction\\n\"\n+            + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n+            \"Sign the transaction, and get back the hex\\n\"\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n+            \"\\nSend the transaction (signed hex)\\n\"\n+            + HelpExampleCli(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"sendrawtransactiontopeer\", \"\\\"signedhex\\\" \\\"peer_id\\\"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+\n+            const CAmount max_burn_amount = request.params[2].isNull() ? 0 : AmountFromValue(request.params[2]);\n+\n+            CMutableTransaction mtx;\n+            if (!DecodeHexTx(mtx, request.params[0].get_str())) {\n+                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed. Make sure the tx has at least one input.\");\n+            }\n+\n+            for (const auto& out : mtx.vout) {\n+                if((out.scriptPubKey.IsUnspendable() || !out.scriptPubKey.HasValidOps()) && out.nValue > max_burn_amount) {\n+                    throw JSONRPCTransactionError(TransactionError::MAX_BURN_EXCEEDED);\n+                }\n+            }\n+\n+            CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n+\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            ChainstateManager& chainman = EnsureChainman(node);\n+            const PackageMempoolAcceptResult package_result = [&] {\n+                LOCK(::cs_main);\n+                return PackageMempoolAcceptResult(tx->GetWitnessHash(),\n+                                                  chainman.ProcessTransaction(tx, /*test_accept=*/true));\n+            }();\n+\n+            const auto& tx_result = package_result.m_tx_results.find(tx->GetWitnessHash())->second;\n+            if (tx_result.m_result_type != MempoolAcceptResult::ResultType::VALID && tx_result.m_result_type != MempoolAcceptResult::ResultType::MEMPOOL_ENTRY) {\n+                throw JSONRPCTransactionError(node::TransactionError::MEMPOOL_REJECTED, tx_result.m_state.GetRejectReason());\n+            }\n+\n+            const NodeId peer_id{request.params[1].getInt<int64_t>()};\n+            CConnman& connman = EnsureConnman(node);\n+            CSerializedNetMsg msg_ser;\n+            msg_ser.data = TryParseHex<unsigned char>(request.params[0].get_str()).value();\n+            msg_ser.m_type = NetMsgType::TX;\n+\n+            bool success = connman.ForNode(peer_id, [&](CNode* node) {\n+                connman.PushMessage(node, std::move(msg_ser));\n+                return true;",
      "path": "src/rpc/mempool.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "original_commit_id": "fca25c57efd408683044352d77da08fbafcc104e",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like this ought to check if the peer accepted it, and if not, return the rejection reason.",
      "created_at": "2025-09-30T08:40:58Z",
      "updated_at": "2025-09-30T08:41:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33507#discussion_r2390361071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390361071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33507"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    }
  ]
}