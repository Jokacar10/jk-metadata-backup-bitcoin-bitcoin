{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253",
    "id": 2771272268,
    "node_id": "PR_kwDOABII586lLkJM",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33253",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33253.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33253.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3aa3fc83e4d1edcf42c79872336842ff337402b6",
    "number": 33253,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Revert compact block cache inefficiencies",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Reconstructing compact blocks is on the hot path for block relay, so revert changes from #28391 and #29752 that made it slower. Also add a benchmark to validate reconstruction performance, and a comment giving some background as to the approach.",
    "labels": [],
    "created_at": "2025-08-25T10:03:37Z",
    "updated_at": "2025-08-26T04:17:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "dae283c6e5b7ad792160885791f224f745e145f6",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ajtowns:202508-cache-friendly-compactblock",
      "ref": "202508-cache-friendly-compactblock",
      "sha": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 8,
        "watchers_count": 8,
        "size": 322249,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-26T03:44:03Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2025-07-16T22:11:43Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ca6f3b37b992591726bd13b494369bee3bd6468",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37662,
        "stargazers_count": 85199,
        "watchers_count": 85199,
        "size": 291722,
        "default_branch": "master",
        "open_issues_count": 757,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-25T21:12:06Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-26T03:47:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 161,
    "deletions": 28,
    "changed_files": 9,
    "commits": 3,
    "review_comments": 20,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 3219628428,
      "node_id": "IC_kwDOABII586_56GM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3219628428",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:03:43Z",
      "updated_at": "2025-08-26T03:52:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33253.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/33253#pullrequestreview-3152574449), [polespinasa](https://github.com/bitcoin/bitcoin/pull/33253#pullrequestreview-3153218666) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33191](https://github.com/bitcoin/bitcoin/pull/33191) (net: Provide block templates to peers on request by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3219628428",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "commented",
      "id": 3219632528,
      "node_id": "IC_kwDOABII586_57GQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3219632528",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:05:06Z",
      "updated_at": "2025-08-25T10:05:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "On my dev machine with a release build, I see a 64% performance gain on the benchmark after the reversion patches are applied.\r\n\r\ncc @sipa @gmaxwell ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3219632528",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "mentioned",
      "id": 19319104642,
      "node_id": "MEE_lADOABII587Hv5MWzwAAAAR_giSC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319104642",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:05:08Z"
    },
    {
      "event": "subscribed",
      "id": 19319104687,
      "node_id": "SE_lADOABII587Hv5MWzwAAAAR_giSv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319104687",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:05:08Z"
    },
    {
      "event": "mentioned",
      "id": 19319104716,
      "node_id": "MEE_lADOABII587Hv5MWzwAAAAR_giTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319104716",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:05:09Z"
    },
    {
      "event": "subscribed",
      "id": 19319104736,
      "node_id": "SE_lADOABII587Hv5MWzwAAAAR_giTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319104736",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:05:09Z"
    },
    {
      "event": "labeled",
      "id": 19319531989,
      "node_id": "LE_lADOABII587Hv5MWzwAAAAR_iKnV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319531989",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:29:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3219706102,
      "node_id": "IC_kwDOABII586_6ND2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3219706102",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T10:29:16Z",
      "updated_at": "2025-08-25T10:29:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `ARM, unit tests, no functional tests`: https://github.com/bitcoin/bitcoin/runs/48805674537</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a segmentation fault in the bench_sanity_check test.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3219706102",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19319704175,
      "node_id": "HRFPE_lADOABII587Hv5MWzwAAAAR_i0pv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19319704175",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "65af9be307d89a5e668e0c1a82d6f80cd7ea5ece",
      "commit_url": "https://api.github.com/repos/ajtowns/bitcoin/commits/65af9be307d89a5e668e0c1a82d6f80cd7ea5ece",
      "created_at": "2025-08-25T10:40:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19320773018,
      "node_id": "HRFPE_lADOABII587Hv5MWzwAAAAR_m5ma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19320773018",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0d474c5fb0878f4612655e3879609c78fc87157d",
      "commit_url": "https://api.github.com/repos/ajtowns/bitcoin/commits/0d474c5fb0878f4612655e3879609c78fc87157d",
      "created_at": "2025-08-25T11:47:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19321464676,
      "node_id": "HRFPE_lADOABII587Hv5MWzwAAAAR_pidk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19321464676",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "commit_url": "https://api.github.com/repos/ajtowns/bitcoin/commits/decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "created_at": "2025-08-25T12:27:06Z"
    },
    {
      "event": "unlabeled",
      "id": 19323554426,
      "node_id": "UNLE_lADOABII587Hv5MWzwAAAAR_xgp6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19323554426",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T14:14:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 19323884243,
      "node_id": "RRE_lADOABII587Hv5MWzwAAAAR_yxLT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19323884243",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T14:30:08Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 3220576303,
      "node_id": "IC_kwDOABII586_9hgv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3220576303",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T14:41:28Z",
      "updated_at": "2025-08-25T14:41:28Z",
      "author_association": "MEMBER",
      "body": "related comment: https://github.com/bitcoin/bitcoin/pull/29752#issuecomment-3216827263\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3220576303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "commented",
      "id": 3220639788,
      "node_id": "IC_kwDOABII586_9xAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3220639788",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T14:59:00Z",
      "updated_at": "2025-08-25T15:28:50Z",
      "author_association": "MEMBER",
      "body": "Seems like a03aef9cec35b0d03aa63d7e8093f0420cd4b40b is the problematic commit for my machine? Doubles the runtime.\r\n\r\nBoth reverted:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,955,234.00 |              511.45 |    2.1% |      0.02 | `BlockEncoding`\r\n\r\nNo reversions:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        3,945,310.00 |              253.47 |    3.0% |      0.05 | `BlockEncoding`\r\n\r\na8203e94123b6ea6e4f4a6320e3ad20457f44a28 reverted only:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        3,929,789.00 |              254.47 |    3.6% |      0.05 | `BlockEncoding`\r\n\r\na03aef9cec35b0d03aa63d7e8093f0420cd4b40b reverted only:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,964,505.00 |              509.03 |    2.8% |      0.02 | `BlockEncoding`\r\n\r\nedit:\r\n\r\n> _aj_> instagibbs: re: 33253, the benchmark doesn't exercise a8203e9 -- it just passes an empty vector of extra transactions",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3220639788",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "reviewed",
      "id": 3152074460,
      "node_id": "PRR_kwDOABII58674Nbc",
      "url": null,
      "actor": null,
      "commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T15:55:38Z",
      "author_association": "MEMBER",
      "body": "ARM64 M1 Max (2022), macOS 15.6.1\r\n\r\nbenchmark only\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,643,000.00 |              378.36 |    1.5% |      0.03 | `BlockEncoding`\r\n```\r\n\r\nbenchmark with reversions (the difference is from the last commit, `Revert \"[refactor] rewrite vTxHashes as a vector of CTransactionRef`)\r\n\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,268,791.00 |              440.76 |    1.1% |      0.03 | `BlockEncoding`\r\n```\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#pullrequestreview-3152074460",
      "submitted_at": "2025-08-25T15:53:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
    },
    {
      "event": "commented",
      "id": 3221526194,
      "node_id": "IC_kwDOABII587ABJay",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3221526194",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-25T19:44:39Z",
      "updated_at": "2025-08-25T20:01:54Z",
      "author_association": "MEMBER",
      "body": "> _aj_> instagibbs: re: 33253, the benchmark doesn't exercise [a8203e9](https://github.com/bitcoin/bitcoin/commit/a8203e94123b6ea6e4f4a6320e3ad20457f44a28) -- it just passes an empty vector of extra transactions\r\n\r\nCan we bench that? Maybe as a separate benchmark instead of having this one benchmark include both.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3221526194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    },
    {
      "event": "reviewed",
      "id": 3152574449,
      "node_id": "PRR_kwDOABII58676Hfx",
      "url": null,
      "actor": null,
      "commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T21:24:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, excellent find.\r\n\r\nI redid the benchmarks, got more modest changes with GCC and Clang:\r\n\r\n<details>\r\n<summary>C++ compiler .......................... GNU 14.2.0</summary>\r\n\r\n```bash\r\necho \">  C++ compiler .......................... GNU $(gcc -dumpfullversion)\" && rm -rf build && cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ >/dev/null 2>&1 && cmake --build build -j$(nproc) >/dev/null 2>&1 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>228.64 ops/s before</summary>\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        4,386,276.06 |              227.98 |    0.2% |   17,156,885.24 |   15,741,370.59 |  1.090 |   1,287,419.20 |    3.2% |      5.40 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        4,373,623.58 |              228.64 |    0.2% |   17,156,871.09 |   15,696,695.56 |  1.093 |   1,287,418.38 |    3.2% |      5.41 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        4,380,919.51 |              228.26 |    0.2% |   17,156,870.18 |   15,719,209.66 |  1.091 |   1,287,418.17 |    3.2% |      5.40 | `BlockEncoding`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>315.60 ops/s after</summary>\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,168,586.91 |              315.60 |    0.1% |   17,156,847.31 |   11,378,141.35 |  1.508 |   1,287,390.88 |    3.2% |      5.29 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,241,851.00 |              308.47 |    0.2% |   17,156,842.43 |   11,640,138.08 |  1.474 |   1,287,385.26 |    3.2% |      5.29 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,173,445.04 |              315.11 |    0.1% |   17,156,847.31 |   11,394,621.15 |  1.506 |   1,287,390.88 |    3.2% |      5.28 | `BlockEncoding`\r\n\r\n</details>\r\n\r\ni.e. 38% improvement with gcc\r\n\r\n------\r\n\r\n<details>\r\n<summary>C++ compiler .......................... clang 20.1.7</summary>\r\n\r\n```C++\r\necho \">  C++ compiler .......................... clang $(clang -dumpversion)\" && rm -rf build && cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ >/dev/null 2>&1 && cmake --build build -j$(nproc) >/dev/null 2>&1 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000 && build/bin/bench_bitcoin -filter='BlockEncoding' -min-time=5000\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>252.05 ops/s before</summary>\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,967,492.38 |              252.05 |    0.1% |   15,494,632.58 |   14,241,688.80 |  1.088 |   1,070,986.04 |    4.0% |      5.37 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,984,996.65 |              250.94 |    0.1% |   15,494,608.15 |   14,303,936.25 |  1.083 |   1,070,973.80 |    4.0% |      5.38 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        4,078,221.50 |              245.20 |    0.1% |   15,494,616.62 |   14,638,662.82 |  1.058 |   1,070,976.86 |    4.0% |      5.37 | `BlockEncoding`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>326.06 ops/s after</summary>\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,066,879.10 |              326.06 |    0.0% |   15,497,664.10 |   11,011,637.17 |  1.407 |   1,070,979.09 |    4.0% |      5.28 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,135,228.99 |              318.96 |    0.1% |   15,497,665.21 |   11,253,673.49 |  1.377 |   1,070,979.81 |    4.0% |      5.29 | `BlockEncoding`\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,127,079.54 |              319.79 |    0.1% |   15,497,665.71 |   11,223,561.21 |  1.381 |   1,070,979.87 |    4.0% |      5.30 | `BlockEncoding`\r\n\r\n</details>\r\n\r\ni.e. 29% improvement for clang\r\n\r\n----\r\n\r\nSimilarly to other people before me, I think we could include a few more scenarios in the benchmark. I left a few suggestions explaining my suggestions, but it's probably easier if I post the final benchmark code here as well:\r\n\r\n<details>\r\n<summary>blockencodings.cpp</summary>\r\n\r\n```C++\r\n// Copyright (c) 2025-present The Bitcoin Core developers\r\n// Distributed under the MIT software license, see the accompanying\r\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n\r\n#include <bench/bench.h>\r\n#include <blockencodings.h>\r\n#include <consensus/amount.h>\r\n#include <kernel/cs_main.h>\r\n#include <primitives/transaction.h>\r\n#include <script/script.h>\r\n#include <sync.h>\r\n#include <test/util/setup_common.h>\r\n#include <test/util/txmempool.h>\r\n#include <txmempool.h>\r\n#include <util/check.h>\r\n\r\n#include <memory>\r\n#include <unordered_set>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nstatic void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\r\n{\r\n    LockPoints lp;\r\n    AddToMempool(pool, CTxMemPoolEntry{tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp});\r\n}\r\n\r\nnamespace {\r\nCTransactionRef CreateTestTransaction(std::span<const std::byte> sigspam, size_t index)\r\n{\r\n    CMutableTransaction tx;\r\n    tx.vin.resize(1);\r\n    tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\r\n    tx.vin[0].scriptWitness.stack.push_back({1});\r\n    tx.vout.resize(1);\r\n    tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\r\n    tx.vout[0].nValue = index;\r\n    return MakeTransactionRef(tx);\r\n}\r\n\r\nCBlock DummyBlock()\r\n{\r\n    CBlock block;\r\n    block.nVersion = 5;\r\n    block.hashPrevBlock.SetNull();\r\n    block.hashMerkleRoot.SetNull();\r\n    block.nTime = 1231006505;\r\n    block.nBits = 0x1d00ffff;\r\n    block.nNonce = 2083236893;\r\n    block.fChecked = false;\r\n    CMutableTransaction tx;\r\n    tx.vin.resize(1);\r\n    tx.vout.resize(1);\r\n    block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\r\n    return block;\r\n}\r\n\r\nstruct BenchCBHAST : CBlockHeaderAndShortTxIDs\r\n{\r\n    BenchCBHAST(FastRandomContext& rng, int txs, bool duplicates) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\r\n    {\r\n        std::unordered_set<uint64_t> seen;\r\n        shorttxids.reserve(txs);\r\n        while (txs-- > 0) {\r\n            uint64_t id{rng.randbits<SHORTTXIDS_LENGTH * 8>()};\r\n            assert(seen.insert(id).second);\r\n            shorttxids.push_back(id);\r\n        }\r\n        if (duplicates) shorttxids.at(shorttxids.size() - 1) = shorttxids.at(0);\r\n    }\r\n};\r\n} // anon namespace\r\n\r\nstatic void BlockEncoding(benchmark::Bench& bench)\r\n{\r\n    constexpr size_t mempool_size{50'000}, sigspam_size{200}, extra_tx_count{10}, shortid_count{3'000};\r\n\r\n    const auto testing_setup{MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN)};\r\n    auto& pool{*Assert(testing_setup->m_node.mempool)};\r\n\r\n    FastRandomContext rng{/*fDeterministic=*/true};\r\n    const auto sigspam{rng.randbytes<sigspam_size>()};\r\n\r\n    LOCK2(cs_main, pool.cs);\r\n    std::vector<std::pair<Wtxid, CTransactionRef>> extra_txn;\r\n\r\n    {\r\n        // a reasonably large mempool of 50k txs, ~10MB total\r\n        std::vector<CTransactionRef> refs;\r\n        refs.reserve(mempool_size);\r\n        for (size_t i{0}; i < mempool_size; ++i) {\r\n            refs.emplace_back(CreateTestTransaction(sigspam, i));\r\n        }\r\n\r\n        // ensure mempool ordering is different to memory ordering of transactions,\r\n        // to simulate a mempool that has changed over time\r\n        std::ranges::shuffle(refs, rng);\r\n\r\n        extra_txn.reserve(extra_tx_count);\r\n        for (size_t i{0}; i < extra_tx_count; ++i) {\r\n            size_t index{i < (extra_tx_count / 2) ? mempool_size + i : mempool_size - i}; // some overlap with mempool\r\n            auto tx{CreateTestTransaction(sigspam, index)};\r\n            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\r\n        }\r\n\r\n        for (const auto& tx : refs) {\r\n            AddTx(tx, /*fee=*/tx->vout[0].nValue, pool);\r\n        }\r\n    }\r\n\r\n    for (const auto duplicates : {false, true}) {\r\n        BenchCBHAST cmpctblock{rng, /*txs=*/shortid_count, duplicates};\r\n        for (const auto& extra : {extra_txn, std::vector<std::pair<Wtxid, CTransactionRef>>{}}) {\r\n            bench.name(strprintf(\"reconstructions %s%s\", extra.empty() ? \"without extra\" : \"with extra\", duplicates ? \" (dup)\" : \"\"))\r\n                 .run([&] {\r\n                     PartiallyDownloadedBlock pdb{&pool};\r\n                     const auto status{pdb.InitData(cmpctblock, extra)};\r\n                     assert(status == (duplicates ? READ_STATUS_FAILED : READ_STATUS_OK));\r\n                 });\r\n        }\r\n    }\r\n}\r\n\r\nBENCHMARK(BlockEncoding, benchmark::PriorityLevel::HIGH);\r\n\r\n```\r\n\r\n</details>\r\n\r\nEdit: what is the expected memory increase because of the change?\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#pullrequestreview-3152574449",
      "submitted_at": "2025-08-25T21:15:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
    },
    {
      "event": "reviewed",
      "id": 3153218666,
      "node_id": "PRR_kwDOABII58678kxq",
      "url": null,
      "actor": null,
      "commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T23:10:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nNice catch\r\nNo reversions eb1920a82ffa2086c3e8e3e8946b9f43053455aa:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,163,341.00 |              462.25 |    7.4% |      0.03 | `BlockEncoding`\r\n\r\n\r\nOnly f2b9cbed7196617880d177c089332e4fd48f28ca reverted\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,097,861.00 |              476.68 |    5.3% |      0.03 | `BlockEncoding`\r\n\r\n\r\nOnly decb48a607fb3911a25e5e8b37628a5e15b3ce17 reverted\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,727,394.00 |              578.91 |    2.4% |      0.02 | `BlockEncoding`\r\n\r\nBoth reverted\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,697,419.00 |              589.13 |    2.2% |      0.02 | `BlockEncoding`\r\n\r\n",
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#pullrequestreview-3153218666",
      "submitted_at": "2025-08-25T23:10:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzMWY4NjU1MWY0YzYwMmFiYTk4NzUxNmExN2IxMDU4Y2Q0NzQyOTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/531f86551f4c602aba987516a17b1058cd474296",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/531f86551f4c602aba987516a17b1058cd474296",
      "tree": {
        "sha": "29531bb790e4625a3215d1e782332fc797ca93e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29531bb790e4625a3215d1e782332fc797ca93e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9703b7e6d563ea58f83a6eca819562365404f4ab",
          "sha": "9703b7e6d563ea58f83a6eca819562365404f4ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9703b7e6d563ea58f83a6eca819562365404f4ab"
        }
      ],
      "message": "bench/blockencodings: add compact block reconstruction benchmark",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-26T03:43:14Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-25T07:32:45Z"
      },
      "sha": "531f86551f4c602aba987516a17b1058cd474296"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5N2YwY2FhZmU5MjUyZWQyMGVjZWE2NTEwNDYwYTM1YzA4YjI2M2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/197f0caafe9252ed20ecea6510460a35c08b263c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/197f0caafe9252ed20ecea6510460a35c08b263c",
      "tree": {
        "sha": "1abfc995ae18efecbe29d14b81ed2fff098fd600",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1abfc995ae18efecbe29d14b81ed2fff098fd600"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/531f86551f4c602aba987516a17b1058cd474296",
          "sha": "531f86551f4c602aba987516a17b1058cd474296",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/531f86551f4c602aba987516a17b1058cd474296"
        }
      ],
      "message": "Revert \"refactor: Simplify `extra_txn` to be a vec of CTransactionRef instead of a vec of pair<Wtxid, CTransactionRef>\"\n\nThis reverts commit a8203e94123b6ea6e4f4a6320e3ad20457f44a28.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-26T03:43:14Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-25T05:58:59Z"
      },
      "sha": "197f0caafe9252ed20ecea6510460a35c08b263c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNhYTNmYzgzZTRkMWVkY2Y0MmM3OTg3MjMzNjg0MmZmMzM3NDAyYjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "tree": {
        "sha": "15e98ff74d34b72b09d907ea0a89a790e9d79a2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15e98ff74d34b72b09d907ea0a89a790e9d79a2c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/197f0caafe9252ed20ecea6510460a35c08b263c",
          "sha": "197f0caafe9252ed20ecea6510460a35c08b263c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/197f0caafe9252ed20ecea6510460a35c08b263c"
        }
      ],
      "message": "Revert \"[refactor] rewrite vTxHashes as a vector of CTransactionRef\"\n\nThis reverts commit a03aef9cec35b0d03aa63d7e8093f0420cd4b40b.",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-26T03:43:14Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2025-08-25T06:17:05Z"
      },
      "sha": "3aa3fc83e4d1edcf42c79872336842ff337402b6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19334605616,
      "node_id": "HRFPE_lADOABII587Hv5MWzwAAAASAbqsw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19334605616",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "commit_url": "https://api.github.com/repos/ajtowns/bitcoin/commits/3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "created_at": "2025-08-26T03:44:05Z"
    },
    {
      "event": "commented",
      "id": 3222540332,
      "node_id": "IC_kwDOABII587AFBAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3222540332",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T04:06:15Z",
      "updated_at": "2025-08-26T04:06:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Can we bench that? Maybe as a separate benchmark instead of having this one benchmark include both.\r\n\r\nAdded benchmarks with 50k txs in mempool and 0, 100 (default), and 5000 entries in extra pool. For reference [datum](https://github.com/OCEAN-xyz/datum_gateway) recommends setting the value to 1M.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#issuecomment-3222540332",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33253"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298807140",
      "pull_request_review_id": 3152574449,
      "id": 2298807140,
      "node_id": "PRRC_kwDOABII586JBQNk",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we might as well reserve `50'000` here",
      "created_at": "2025-08-25T18:25:41Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298807140",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298807140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298808174",
      "pull_request_review_id": 3152574449,
      "id": 2298808174,
      "node_id": "PRRC_kwDOABII586JBQdu",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `std::ranges::shuffle` might be simpler:\r\n```suggestion\r\n        std::ranges::shuffle(refs, rng);\r\n```",
      "created_at": "2025-08-25T18:26:13Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298808174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298808174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298810753",
      "pull_request_review_id": 3152574449,
      "id": 2298810753,
      "node_id": "PRRC_kwDOABII586JBRGB",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);\n+\n+        for (size_t i = 0; i < refs.size(); ++i) {\n+            AddTx(refs[i], /*fee=*/refs[i]->vout[0].nValue, pool);\n+        }\n+    }\n+\n+    BenchCBHAST cmpctblock{rng, 3000};\n+\n+    bench.run([&] {\n+        PartiallyDownloadedBlock pdb{&pool};\n+        (void)pdb.InitData(cmpctblock, {});",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we could consume the result to make sure the benchmark isn't optimized away and that we're measuring the success/failure scenario correctly",
      "created_at": "2025-08-25T18:27:33Z",
      "updated_at": "2025-08-25T21:18:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298810753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298810753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298811715",
      "pull_request_review_id": 3152574449,
      "id": 2298811715,
      "node_id": "PRRC_kwDOABII586JBRVD",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);\n+\n+        for (size_t i = 0; i < refs.size(); ++i) {\n+            AddTx(refs[i], /*fee=*/refs[i]->vout[0].nValue, pool);\n+        }\n+    }\n+\n+    BenchCBHAST cmpctblock{rng, 3000};\n+\n+    bench.run([&] {\n+        PartiallyDownloadedBlock pdb{&pool};\n+        (void)pdb.InitData(cmpctblock, {});\n+    });\n+}\n+\n+BENCHMARK(BlockEncoding, benchmark::PriorityLevel::HIGH);",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: newline at the very end is customary for the linter and formatter to not complain",
      "created_at": "2025-08-25T18:28:01Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298811715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298811715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298820059",
      "pull_request_review_id": 3152574449,
      "id": 2298820059,
      "node_id": "PRRC_kwDOABII586JBTXb",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "alternatively this may be slightly more descriptive than `11` and it could even be used to init the `sigspam`:\n```suggestion\n    FastRandomContext rng{/*fDeterministic=*/true};\n    auto sigspam{rng.randbytes<200>()};\n```",
      "created_at": "2025-08-25T18:32:39Z",
      "updated_at": "2025-08-26T03:02:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298820059",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298820059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298827191",
      "pull_request_review_id": 3152574449,
      "id": 2298827191,
      "node_id": "PRRC_kwDOABII586JBVG3",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);\n+\n+        for (size_t i = 0; i < refs.size(); ++i) {\n+            AddTx(refs[i], /*fee=*/refs[i]->vout[0].nValue, pool);\n+        }",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: direct iteration would be slightly simpler:\r\n```suggestion\r\n        for (auto& tx : refs) {\r\n            AddTx(tx, /*fee=*/tx->vout[0].nValue, pool);\r\n        }\r\n```",
      "created_at": "2025-08-25T18:36:10Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298827191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298827191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298835726",
      "pull_request_review_id": 3152574449,
      "id": 2298835726,
      "node_id": "PRRC_kwDOABII586JBXMO",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: for consistency we might as well use `emplace_back` like we do in `DummyBlock`",
      "created_at": "2025-08-25T18:40:38Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298835726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298835726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298873346",
      "pull_request_review_id": 3152574449,
      "id": 2298873346,
      "node_id": "PRRC_kwDOABII586JBgYC",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);\n+\n+        for (size_t i = 0; i < refs.size(); ++i) {\n+            AddTx(refs[i], /*fee=*/refs[i]->vout[0].nValue, pool);\n+        }\n+    }\n+\n+    BenchCBHAST cmpctblock{rng, 3000};",
      "path": "src/bench/blockencodings.cpp",
      "position": 100,
      "original_position": 94,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "eb1920a82ffa2086c3e8e3e8946b9f43053455aa",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    BenchCBHAST cmpctblock{rng, /*txs=*/3'000};\r\n```",
      "created_at": "2025-08-25T18:59:43Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298873346",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298873346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298886174",
      "pull_request_review_id": 3152574449,
      "id": 2298886174,
      "node_id": "PRRC_kwDOABII586JBjge",
      "diff_hunk": "@@ -144,8 +144,8 @@ class PartiallyDownloadedBlock {\n \n     explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n \n-    // extra_txn is a list of extra orphan/conflicted/etc transactions to look at\n-    ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<CTransactionRef>& extra_txn);\n+    // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form",
      "path": "src/blockencodings.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "f2b9cbed7196617880d177c089332e4fd48f28ca",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I redid the a8203e94123b6ea6e4f4a6320e3ad20457f44a28 cherry-pick, this line and the top comment are new additions (+ some conflicts were resolved slightly differently to how I have, but the result seems correct to me)",
      "created_at": "2025-08-25T19:06:38Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298886174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298886174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 147,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298907638",
      "pull_request_review_id": 3152574449,
      "id": 2298907638,
      "node_id": "PRRC_kwDOABII586JBov2",
      "diff_hunk": "@@ -114,12 +114,12 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n     std::vector<bool> have_txn(txn_available.size());\n     {\n     LOCK(pool->cs);\n-    for (const auto& tx : pool->txns_randomized) {\n-        uint64_t shortid = cmpctblock.GetShortID(tx->GetWitnessHash());\n+    for (const auto& [wtxid, txit] : pool->txns_randomized) {",
      "path": "src/blockencodings.cpp",
      "position": 23,
      "original_position": 6,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "redid the a03aef9cec35b0d03aa63d7e8093f0420cd4b40b revert, after resolving the conflicts I ended up with a very similar change - except for some comments, some `vTxHashes` vs `txns_randomized` changes which weren't reverted",
      "created_at": "2025-08-25T19:16:06Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2298907638",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2298907638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299068765",
      "pull_request_review_id": 3152574449,
      "id": 2299068765,
      "node_id": "PRRC_kwDOABII586JCQFd",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;\n+    sigspam.fill(std::byte(42));\n+    InsecureRandomContext rng(11);\n+\n+    LOCK2(cs_main, pool.cs);\n+\n+    {\n+        // a reasonably large mempool of 50k txs, ~10MB total\n+        std::vector<CTransactionRef> refs;\n+        for (size_t i = 0; i < 50000; ++i) {\n+            CMutableTransaction tx = CMutableTransaction();\n+            tx.vin.resize(1);\n+            tx.vin[0].scriptSig = CScript() << sigspam << OP_1;\n+            tx.vin[0].scriptWitness.stack.push_back({1});\n+            tx.vout.resize(1);\n+            tx.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+            tx.vout[0].nValue = i;\n+            refs.push_back(MakeTransactionRef(tx));\n+        }\n+\n+        // ensure mempool ordering is different to memory ordering of transactions,\n+        // to simulate a mempool that has changed over time\n+        std::shuffle(refs.begin(), refs.end(), rng);\n+\n+        for (size_t i = 0; i < refs.size(); ++i) {\n+            AddTx(refs[i], /*fee=*/refs[i]->vout[0].nValue, pool);\n+        }\n+    }\n+\n+    BenchCBHAST cmpctblock{rng, 3000};\n+\n+    bench.run([&] {\n+        PartiallyDownloadedBlock pdb{&pool};\n+        (void)pdb.InitData(cmpctblock, {});",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as mentioned by @instagibbs and @achow101, we could add two benches here, for empty extra and with some (partially overlapping) one, something like:\r\n```C++\r\n    std::vector<std::pair<Wtxid, CTransactionRef>> extra_txn;\r\n    // ...\r\n        extra_txn.reserve(extra_tx_count);\r\n        for (size_t i{0}; i < extra_tx_count; ++i) {\r\n            size_t index{i < (extra_tx_count / 2) ? mempool_size + i : mempool_size - i}; // some overlap with mempool\r\n            auto tx{CreateTestTransaction(sigspam, index)};\r\n            extra_txn.emplace_back(tx->GetWitnessHash(), tx);\r\n        }\r\n```\r\n",
      "created_at": "2025-08-25T20:32:00Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299068765",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299068765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299070778",
      "pull_request_review_id": 3152574449,
      "id": 2299070778,
      "node_id": "PRRC_kwDOABII586JCQk6",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());\n+        }\n+    }\n+};\n+} // anon namespace\n+\n+static void BlockEncoding(benchmark::Bench& bench)\n+{\n+    const auto testing_setup = MakeNoLogFileContext<const ChainTestingSetup>(ChainType::MAIN);\n+    CTxMemPool& pool = *Assert(testing_setup->m_node.mempool);\n+    std::array<std::byte,200> sigspam;",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We could extract the constant used here to the front, like:\r\n```C++\r\n    constexpr size_t mempool_size{50'000}, sigspam_size{200}, extra_tx_count{10}, shortid_count{3'000};\r\n```",
      "created_at": "2025-08-25T20:32:48Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299070778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299070778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299112890",
      "pull_request_review_id": 3152574449,
      "id": 2299112890,
      "node_id": "PRRC_kwDOABII586JCa26",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());",
      "path": "src/bench/blockencodings.cpp",
      "position": 54,
      "original_position": 55,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we're lucky that this doesn't generate any duplicates, but we could test those cases as well:\r\n```C++\r\nstruct BenchCBHAST : CBlockHeaderAndShortTxIDs\r\n{\r\n    BenchCBHAST(FastRandomContext& rng, int txs, bool duplicates) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\r\n    {\r\n        std::unordered_set<uint64_t> seen;\r\n        shorttxids.reserve(txs);\r\n        while (txs-- > 0) {\r\n            uint64_t id{rng.randbits<SHORTTXIDS_LENGTH * 8>()};\r\n            assert(seen.insert(id).second);\r\n            shorttxids.push_back(id);\r\n        }\r\n        if (duplicates) shorttxids.at(shorttxids.size() - 1) = shorttxids.at(0);\r\n    }\r\n};\r\n```\r\nand we could bench all 4 possibilities:\r\n```C++\r\nfor (const auto duplicates : {false, true}) {\r\n    BenchCBHAST cmpctblock{rng, /*txs=*/shortid_count, duplicates};\r\n    for (const auto& extra : {extra_txn, std::vector<std::pair<Wtxid, CTransactionRef>>{}}) {\r\n        bench.name(strprintf(\"reconstructions %s%s\", extra.empty() ? \"without extra\" : \"with extra\", duplicates ? \" (dup)\" : \"\"))\r\n             .run([&] {\r\n                 PartiallyDownloadedBlock pdb{&pool};\r\n                 const auto status{pdb.InitData(cmpctblock, extra)};\r\n                 assert(status == (duplicates ? READ_STATUS_FAILED : READ_STATUS_OK));\r\n             });\r\n    }\r\n}\r\n```\r\nresulting in something like:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,371,045.12 |              729.37 |    1.3% |      5.36 | `reconstructions without extra`\r\n|        1,309,789.19 |              763.48 |    2.8% |      5.35 | `reconstructions with extra`\r\n|           71,741.96 |           13,938.84 |    2.3% |      5.42 | `reconstructions without extra (dup)`\r\n|           70,113.89 |           14,262.51 |    1.2% |      5.50 | `reconstructions with extra (dup)`",
      "created_at": "2025-08-25T20:52:01Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299112890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299112890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299138683",
      "pull_request_review_id": 3152574449,
      "id": 2299138683,
      "node_id": "PRRC_kwDOABII586JChJ7",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers",
      "path": "src/bench/blockencodings.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n// Copyright (c) 2025-present The Bitcoin Core developers\r\n```",
      "created_at": "2025-08-25T21:07:00Z",
      "updated_at": "2025-08-25T21:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299138683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299138683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299139614",
      "pull_request_review_id": 3152574449,
      "id": 2299139614,
      "node_id": "PRRC_kwDOABII586JChYe",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>",
      "path": "src/bench/blockencodings.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`#include <univalue.h>` and `#include <rpc/mempool.h>` don't seem to be needed",
      "created_at": "2025-08-25T21:07:35Z",
      "updated_at": "2025-08-25T21:15:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299139614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299139614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299140521",
      "pull_request_review_id": 3152574449,
      "id": 2299140521,
      "node_id": "PRRC_kwDOABII586JChmp",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));",
      "path": "src/bench/blockencodings.cpp",
      "position": 25,
      "original_position": 26,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`CTxMemPoolEntry{}` would indicate slightly better that it's a constructor",
      "created_at": "2025-08-25T21:08:03Z",
      "updated_at": "2025-08-25T21:15:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299140521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299140521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299271743",
      "pull_request_review_id": 3153218666,
      "id": 2299271743,
      "node_id": "PRRC_kwDOABII586JDBo_",
      "diff_hunk": "@@ -152,7 +157,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                 // Note that we don't want duplication between extra_txn and mempool to\n                 // trigger this case, so we compare witness hashes first\n                 if (txn_available[idit->second] &&\n-                        txn_available[idit->second]->GetWitnessHash() != extra_txn[i]->GetWitnessHash()) {\n+                        txn_available[idit->second]->GetWitnessHash() != extra_txn[i].second->GetWitnessHash()) {",
      "path": "src/blockencodings.cpp",
      "position": 55,
      "original_position": 39,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "f2b9cbed7196617880d177c089332e4fd48f28ca",
      "in_reply_to_id": null,
      "user": {
        "login": "polespinasa",
        "id": 57642229,
        "node_id": "MDQ6VXNlcjU3NjQyMjI5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57642229?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/polespinasa",
        "html_url": "https://github.com/polespinasa",
        "followers_url": "https://api.github.com/users/polespinasa/followers",
        "following_url": "https://api.github.com/users/polespinasa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/polespinasa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/polespinasa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/polespinasa/subscriptions",
        "organizations_url": "https://api.github.com/users/polespinasa/orgs",
        "repos_url": "https://api.github.com/users/polespinasa/repos",
        "events_url": "https://api.github.com/users/polespinasa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/polespinasa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this should be:\r\n```c++\r\nif (txn_available[idit->second] && \r\n    txn_available[idit->second]->GetWitnessHash() != extra_txn[i].first) { ...\r\n```",
      "created_at": "2025-08-25T22:21:28Z",
      "updated_at": "2025-08-25T23:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299271743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299271743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 160,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299685034",
      "pull_request_review_id": 3153790157,
      "id": 2299685034,
      "node_id": "PRRC_kwDOABII586JEmiq",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());",
      "path": "src/bench/blockencodings.cpp",
      "position": 54,
      "original_position": 55,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": 2299112890,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is just testing how quickly we can iterate through all the txs in the mempool when looking at a compact block -- which is the worst case scenario that can still be fast (if we finish solving the block with transactions from the extra pool, and don't need to go back to the network). Hitting duplicates automatically puts us in the slow resolve-via-network path, so benching that shouldn't be terribly interesting.",
      "created_at": "2025-08-26T03:56:42Z",
      "updated_at": "2025-08-26T03:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299685034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299685034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299690928",
      "pull_request_review_id": 3153797521,
      "id": 2299690928,
      "node_id": "PRRC_kwDOABII586JEn-w",
      "diff_hunk": "@@ -152,7 +157,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                 // Note that we don't want duplication between extra_txn and mempool to\n                 // trigger this case, so we compare witness hashes first\n                 if (txn_available[idit->second] &&\n-                        txn_available[idit->second]->GetWitnessHash() != extra_txn[i]->GetWitnessHash()) {\n+                        txn_available[idit->second]->GetWitnessHash() != extra_txn[i].second->GetWitnessHash()) {",
      "path": "src/blockencodings.cpp",
      "position": 55,
      "original_position": 39,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "f2b9cbed7196617880d177c089332e4fd48f28ca",
      "in_reply_to_id": 2299271743,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Once we've found a shortid match, looking up the actual tx is fine, so I don't think this warrants changing.",
      "created_at": "2025-08-26T04:02:20Z",
      "updated_at": "2025-08-26T04:02:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299690928",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299690928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 160,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299706227",
      "pull_request_review_id": 3153816123,
      "id": 2299706227,
      "node_id": "PRRC_kwDOABII586JErtz",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2011-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockencodings.h>\n+#include <consensus/amount.h>\n+#include <kernel/cs_main.h>\n+#include <primitives/transaction.h>\n+#include <rpc/mempool.h>\n+#include <script/script.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <test/util/txmempool.h>\n+#include <txmempool.h>\n+#include <univalue.h>\n+#include <util/check.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+\n+static void AddTx(const CTransactionRef& tx, const CAmount& fee, CTxMemPool& pool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, pool.cs)\n+{\n+    LockPoints lp;\n+    AddToMempool(pool, CTxMemPoolEntry(tx, fee, /*time=*/0, /*entry_height=*/1, /*entry_sequence=*/0, /*spends_coinbase=*/false, /*sigops_cost=*/4, lp));\n+}\n+\n+namespace {\n+class BenchCBHAST : public CBlockHeaderAndShortTxIDs\n+{\n+private:\n+    static CBlock DummyBlock()\n+    {\n+        CBlock block;\n+        block.nVersion = 5;\n+        block.hashPrevBlock.SetNull();\n+        block.hashMerkleRoot.SetNull();\n+        block.nTime = 1231006505;\n+        block.nBits = 0x1d00ffff;\n+        block.nNonce = 2083236893;\n+        block.fChecked = false;\n+        CMutableTransaction tx;\n+        tx.vin.resize(1);\n+        tx.vout.resize(1);\n+        block.vtx.emplace_back(MakeTransactionRef(tx)); // dummy coinbase\n+        return block;\n+    }\n+\n+public:\n+    BenchCBHAST(InsecureRandomContext& rng, int txs) : CBlockHeaderAndShortTxIDs(DummyBlock(), rng.rand64())\n+    {\n+        shorttxids.reserve(txs);\n+        while (txs-- > 0) {\n+            shorttxids.push_back(rng.randbits<SHORTTXIDS_LENGTH*8>());",
      "path": "src/bench/blockencodings.cpp",
      "position": 54,
      "original_position": 55,
      "commit_id": "3aa3fc83e4d1edcf42c79872336842ff337402b6",
      "original_commit_id": "decb48a607fb3911a25e5e8b37628a5e15b3ce17",
      "in_reply_to_id": 2299112890,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To make sure that's what we're testing, we should still assert the outcome of `InitData` was `READ_STATUS_OK` - otherwise it would be possible that we accidentally generated duplicates here.",
      "created_at": "2025-08-26T04:17:53Z",
      "updated_at": "2025-08-26T04:17:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33253#discussion_r2299706227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2299706227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33253"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    }
  ]
}