{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436",
    "id": 1966221777,
    "node_id": "PR_kwDOABII5851MinR",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30436",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30436.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30436.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/09ce3501fa2ea2885a857e380eddb74605f7038c",
    "number": 30436,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "fix: Make TxidFromString() respect string_view length",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "### Problem\r\n\r\nPrior to this, `TxidFromString()` was passing `string_view::data()` into `uint256S()` which meant it would only receive the a naked `char*` pointer and potentially scan past the `string_view::length()` until it found a null terminator (or some other non-hex character).\r\n\r\nAppears to have been a fully dormant bug as callers were either passing a string literal or `std::string` directly to `TxidFromFromString()`, meaning a null terminator always existed at `pointer[length()]`. Bug existed since original merge of `TxidFromString()`.\r\n\r\n### Solution\r\n\r\nMake `uint256S()` (and `base_blob::SetHex()`) take and operate on `std::string_view` instead of `const char*` and have `TxidFromString()` pass that in.\r\n\r\n\r\n(PR was prompted by comment in https://github.com/bitcoin/bitcoin/pull/30377#issuecomment-2208857200 (referring to https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378)).",
    "labels": [],
    "created_at": "2024-07-12T09:07:31Z",
    "updated_at": "2025-08-21T11:29:49Z",
    "closed_at": "2024-07-23T18:19:37Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-07-23T18:19:37Z",
    "merged_by": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "7cc00bfc86b4dece2e3baef5b12e910d79c822a1",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hodlinator:2024-07_fix_TxidFromString",
      "ref": "2024-07_fix_TxidFromString",
      "sha": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 247260,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-19T10:40:19Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2025-06-26T18:53:11Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "51ac4792e571623af69a6c3e1031900ea962dce1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37649,
        "stargazers_count": 85120,
        "watchers_count": 85120,
        "size": 291637,
        "default_branch": "master",
        "open_issues_count": 757,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-21T11:18:40Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-21T11:22:38Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 192,
    "deletions": 184,
    "changed_files": 8,
    "commits": 5,
    "review_comments": 128,
    "comments": 14
  },
  "events": [
    {
      "event": "commented",
      "id": 2225151232,
      "node_id": "IC_kwDOABII586EoR0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225151232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:07:34Z",
      "updated_at": "2024-07-23T19:07:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30436).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [paplorinc](https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194041190), [maflcko](https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2245579974), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194357807) |\n| Stale ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242614404) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30482](https://github.com/bitcoin/bitcoin/pull/30482) (rest: Reject truncated hex txid early in getutxos parsing by maflcko)\n* [#30377](https://github.com/bitcoin/bitcoin/pull/30377) (refactor: Add consteval uint256(\"str\") and ParseHex(\"str\") by hodlinator)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2225151232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2174408053,
      "node_id": "PRR_kwDOABII586BmtV1",
      "url": null,
      "actor": null,
      "commit_id": "be23937392195c773811fdfc0d723783b2dace67",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-12T10:41:18Z",
      "author_association": "MEMBER",
      "body": "left some comments",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174408053",
      "submitted_at": "2024-07-12T10:41:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13486294275,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMj2IUD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13486294275",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9b6c6c55377d2d21adfe2b2889c37a15a3633d51",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/9b6c6c55377d2d21adfe2b2889c37a15a3633d51",
      "created_at": "2024-07-12T12:00:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13486307936,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMj2Lpg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13486307936",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/fcec222ae9386342ff1342e096255ca1ff74964d",
      "created_at": "2024-07-12T12:01:52Z"
    },
    {
      "event": "reviewed",
      "id": 2174597881,
      "node_id": "PRR_kwDOABII586Bnbr5",
      "url": null,
      "actor": null,
      "commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-12T12:21:53Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174597881",
      "submitted_at": "2024-07-12T12:21:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2174609468,
      "node_id": "PRR_kwDOABII586Bneg8",
      "url": null,
      "actor": null,
      "commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-12T12:28:28Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2174609468",
      "submitted_at": "2024-07-12T12:28:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13491453703,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMkJz8H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13491453703",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/3d0aec126f8103310b741a5c21e94cf537fcd191",
      "created_at": "2024-07-12T19:25:08Z"
    },
    {
      "event": "reviewed",
      "id": 2179521737,
      "node_id": "PRR_kwDOABII586B6NzJ",
      "url": null,
      "actor": null,
      "commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-16T08:06:34Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179521737",
      "submitted_at": "2024-07-16T08:06:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13517355588,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlsnpE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13517355588",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "735865af6308bd76063d48d145ca5761fc839405",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/735865af6308bd76063d48d145ca5761fc839405",
      "created_at": "2024-07-16T08:46:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13517678424,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlt2dY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13517678424",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "created_at": "2024-07-16T09:10:26Z"
    },
    {
      "event": "reviewed",
      "id": 2179724266,
      "node_id": "PRR_kwDOABII586B6_Pq",
      "url": null,
      "actor": null,
      "commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-16T09:34:49Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179724266",
      "submitted_at": "2024-07-16T09:34:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2179725098,
      "node_id": "PRR_kwDOABII586B6_cq",
      "url": null,
      "actor": null,
      "commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-16T09:35:12Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2179725098",
      "submitted_at": "2024-07-16T09:35:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13518608098,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMlxZbi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13518608098",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/c3a9c71c7077324bf0aa40f834f7537a14619340",
      "created_at": "2024-07-16T10:16:22Z"
    },
    {
      "event": "reviewed",
      "id": 2180659057,
      "node_id": "PRR_kwDOABII586B-jdx",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-19T20:49:21Z",
      "author_association": "MEMBER",
      "body": "ACK c3a9c71c7077324bf0aa40f834f7537a14619340 🐞\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: ACK c3a9c71c7077324bf0aa40f834f7537a14619340 🐞\r\n0oe/WjDO2mSwVc5Blutf21rEvpYjnqCdQdO76x2UhqHObkUZghAnaWmbpcKtyptM6F8bw8dIl8IU3+TJAkcnBg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2180659057",
      "submitted_at": "2024-07-16T15:41:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13538022192,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMm7dMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13538022192",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T14:46:37Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2183757955,
      "node_id": "PRR_kwDOABII586CKYCD",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-17T18:36:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK c3a9c71c7077324bf0aa40f834f7537a14619340",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2183757955",
      "submitted_at": "2024-07-17T18:36:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13541490928,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMnIsDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13541490928",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/4923d908356813405dc89cfe59da1dd06a37157e",
      "created_at": "2024-07-17T19:04:47Z"
    },
    {
      "event": "reviewed",
      "id": 2184843613,
      "node_id": "PRR_kwDOABII586COhFd",
      "url": null,
      "actor": null,
      "commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-18T06:36:09Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2184843613",
      "submitted_at": "2024-07-18T06:36:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13551220922,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMntzi6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13551220922",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/c3a9c71c7077324bf0aa40f834f7537a14619340",
      "created_at": "2024-07-18T07:37:18Z"
    },
    {
      "event": "reviewed",
      "id": 2186195988,
      "node_id": "PRR_kwDOABII586CTrQU",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-19T20:49:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c3a9c71c7077324bf0aa40f834f7537a14619340\r\n\r\nI think the changes are all good, but the PR and the most important commit \"fix: Make TxidFromString() respect string length\" (c3a9c71c7077324bf0aa40f834f7537a14619340) are lacking a good description that actually says what the bug is.\r\n\r\nI think they should say that currently `TxidFromString` takes a string_view parameter, but internally it is calling the `uint256S` function which expects a nul-terminated string. If `TxidFromString` is called with a string that not contain `\\0`, the implementation will read the string and potentially uninitialized memory after it until it finds any character which is not a hex digit.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2186195988",
      "submitted_at": "2024-07-18T16:08:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13558932680,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMoLOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13558932680",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T16:08:18Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2185910679,
      "node_id": "PRR_kwDOABII586CSlmX",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-19T20:49:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK c3a9c71c7077324bf0aa40f834f7537a14619340,\r\n\r\n> are lacking a good description that actually says what the bug is.\r\n\r\nI agree, I spent quite a bit of time getting to the bottom of this and more documentation would have sped that up\r\n\r\n> but internally it is calling the uint256S function which expects a nul-terminated string\r\n\r\nMaybe I'm being too pedantic (or wrong), but I'm not sure this is 100% correct? I don't think the `uint256S(std::string_view str)` `str` needs to be null-terminated. Rather, I think the problem is that by removing the string length data in `TxidFromstring` (by passing `std::string_view::data` instead of `std::string_view`), `uint256S` has to construct a `std::string_view` from the `const char*` without length information, which is dangerous (as you describe) when the initial `string_view` was not null-terminated, e.g. because it is a substring?\r\n\r\nFor example, this test (with a non-null terminated string) fails before c3a9c71c7077324bf0aa40f834f7537a14619340 and succeeds after:\r\n\r\n```cp\r\n//txid \"0x74d681e0e03bafa802c8aa084379aa98d9fcd632ddc2ed9782b586ec87451f20\"\r\nconst char arr[66] = {\r\n    '7', '4', 'd', '6', '8', '1', 'e', '0', 'e', '0', '3', 'b', 'a', 'f', 'a', '8',\r\n    '0', '2', 'c', '8', 'a', 'a', '0', '8', '4', '3', '7', '9', 'a', 'a', '9', '8',\r\n    'd', '9', 'f', 'c', 'd', '6', '3', '2', 'd', 'd', 'c', '2', 'e', 'd', '9', '7',\r\n    '8', '2', 'b', '5', '8', '6', 'e', 'c', '8', '7', '4', '5', '1', 'f', '2', '0',\r\n    'a', 'b' // extra 2 characters\r\n};\r\nconst char* ptr = arr;  // not null-terminated\r\nstd::string_view view{ptr, 64};\r\nBOOST_CHECK_EQUAL(TxidFromString(view).ToString(), view);\r\n```",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2185910679",
      "submitted_at": "2024-07-18T20:56:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2187172873,
      "node_id": "PRR_kwDOABII586CXZwJ",
      "url": null,
      "actor": null,
      "commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-19T02:17:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2185910679\r\n\r\n> > but internally it is calling the uint256S function which expects a nul-terminated string\r\n> \r\n> Maybe I'm being too pedantic (or wrong), but I'm not sure this is 100% correct? I don't think the `uint256S(std::string_view str)` `str` needs to be null-terminated.\r\n\r\nYes, both explanations are saying the same thing but mine is unnecessarily confusing. The `uint256S` function \"expects\" a nul-terminated string because it accepts a bare `char*`  argument, and in C bare `char*` strings are almost always nul-terminated. But it does not \"need\" a nul-terminated string. The string can be terminated with any character other than `0123456789AaBbCcDdEeFf`, as mentioned in the next sentence.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2187172873",
      "submitted_at": "2024-07-19T02:17:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "commented",
      "id": 2238241424,
      "node_id": "IC_kwDOABII586FaNqQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2238241424",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T05:42:00Z",
      "updated_at": "2024-07-19T05:42:00Z",
      "author_association": "MEMBER",
      "body": "> > are lacking a good description that actually says what the bug is.\r\n> \r\n> I agree, I spent quite a bit of time getting to the bottom of this and more documentation would have sped that up\r\n\r\nI agree as well. Thanks for brining it up! This should be fixed before merge, other than that, I'd say it is ready.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2238241424",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "commented",
      "id": 2239279118,
      "node_id": "IC_kwDOABII586FeLAO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2239279118",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T14:14:23Z",
      "updated_at": "2024-07-19T14:14:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Side note: we can use [bugprone-suspicious-stringview-data-usage](https://clang.llvm.org/extra/clang-tidy/checks/bugprone/suspicious-stringview-data-usage.html) (from unreleased clang-19) to catch this going forward, when we have clang-19. I tried running clang-tidy-19 locally from master branch for longer than I probably should have, and eventually gave up.\r\n\r\nAs a poor man's alternative, I looked for other stringview data misusage based on some rough grepping, and couldn't find anything, but that was definitely not an exhaustive search either.\r\n",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2239279118",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13580943659,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMpfMEr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13580943659",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "649c88d4df0c97cd0109c0cd0e54bc76f2287ef2",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/649c88d4df0c97cd0109c0cd0e54bc76f2287ef2",
      "created_at": "2024-07-19T20:43:45Z"
    },
    {
      "event": "commented",
      "id": 2240082764,
      "node_id": "IC_kwDOABII586FhPNM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2240082764",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T20:47:31Z",
      "updated_at": "2024-07-19T20:51:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the feedback! Helped me realize I was being too terse. (I think it was a mistake alone just to not have `string_view` in the title for the sake of keeping under 51 chars).\r\n\r\n(Edit: where/were typo)\r\n\r\nOnly modified commit message:\r\n```diff\r\n--- c3a9c71c7077324bf0aa40f834f7537a14619340\t2024-07-19 22:42:56.019823786 +0200\r\n+++ 788fe9cc9ab979c5e14f544ae05dc46436892b81\t2024-07-19 22:48:26.785770275 +0200\r\n@@ -1,3 +1,5 @@\r\n-fix: Make TxidFromString() respect string length\r\n+fix: Make TxidFromString() respect string_view length\r\n \r\n-Appears to have been a fully dormant bug. Introduced since inception of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.\r\n+Prior to this, passing in string_view::data() meant uint256S() would only receive the a naked char* pointer and scan past the string_view::length() until it found a null terminator.\r\n+\r\n+Appears to have been a fully dormant bug as callers were either passing a string literal or std::string directly to TxidFromFromString(), meaning null terminator always existed at pointer[length()]. Bug existed since original merge of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2240082764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13580995065,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMpfYn5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13580995065",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "created_at": "2024-07-19T20:49:21Z"
    },
    {
      "event": "commented",
      "id": 2242466297,
      "node_id": "IC_kwDOABII586FqVH5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242466297",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:09:37Z",
      "updated_at": "2024-07-22T09:09:37Z",
      "author_association": "MEMBER",
      "body": "Checked that the code didn't change in the last push, only the commit message, which looked fine on a glance.\r\n\r\nIf you re-touch you can change \"and scan past\" to \"and may scan past\", or \"and possibly scan past\". Otherwise, it seems to imply this bug was actually hit.\r\n\r\nAlso, you can adjust the pull request description with a motivation and fix. Otherwise, it is just two random links, and reviewers will have a hard time seeing the motivation and gist of the changes.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242466297",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "commented",
      "id": 2242466411,
      "node_id": "IC_kwDOABII586FqVJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242466411",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:09:41Z",
      "updated_at": "2024-07-22T09:09:41Z",
      "author_association": "MEMBER",
      "body": "\r\nre-ACK 788fe9cc9ab979c5e14f544ae05dc46436892b81  🔃\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 788fe9cc9ab979c5e14f544ae05dc46436892b81  🔃\r\nZi5Q+ybp7u54gWlNWvoEWUh7VWj3zjslDq1FeleNTzCp50J7LrQhAJBN27yFxvHPL327HAvBdJgZppjE7Nc2DA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242466411",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "review_requested",
      "id": 13598087403,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMqgljr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598087403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:09:48Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13598087617,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMqglnB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598087617",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:09:48Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2242614404,
      "node_id": "IC_kwDOABII586Fq5SE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242614404",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:23:07Z",
      "updated_at": "2024-07-22T10:23:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 788fe9cc9ab979c5e14f544ae05dc46436892b81 \r\n\r\nNo changes except for commit message update.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242614404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2191194232,
      "node_id": "PRR_kwDOABII586Cmvh4",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-22T11:01:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for tackling these, please my comments, most of them originally posted to https://github.com/bitcoin/bitcoin/pull/30482/files",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2191194232",
      "submitted_at": "2024-07-22T11:01:20Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "commented",
      "id": 2242837403,
      "node_id": "IC_kwDOABII586Frvub",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242837403",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T12:28:17Z",
      "updated_at": "2024-07-22T12:28:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, you can adjust the pull request description with a motivation and fix. Otherwise, it is just two random links, and reviewers will have a hard time seeing the motivation and gist of the changes.\r\n\r\nDone. Thank you for you patience @maflcko.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242837403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "mentioned",
      "id": 13600535678,
      "node_id": "MEE_lADOABII586PWwz2zwAAAAMqp7R-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13600535678",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T12:28:18Z"
    },
    {
      "event": "subscribed",
      "id": 13600535698,
      "node_id": "SE_lADOABII586PWwz2zwAAAAMqp7SS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13600535698",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T12:28:18Z"
    },
    {
      "event": "commented",
      "id": 2242896872,
      "node_id": "IC_kwDOABII586Fr-Po",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242896872",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T12:57:50Z",
      "updated_at": "2024-07-23T09:38:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "~NACK 788fe9cc9ab979c5e14f544ae05dc46436892b81, because of https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686336262 mostly.~ updated since",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2242896872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2191568788,
      "node_id": "PRR_kwDOABII586CoK-U",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-22T13:22:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 788fe9cc9ab979c5e14f544ae05dc46436892b81. No changes since my last review other than a commit message change.\r\n\r\nThis might be ready for merge since it has 3 acks and is definitely an improvement over the status quo. But I haven't read through the comments yet or looked into the concerns behind the one nack. It also does seem like this PR might still be a little rough around the edges, so maybe it wouldn't hurt to iterate a little more.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/30436#issue-2405108982\r\n\r\n> Prior to this, `TxidFromString()` was passing `string_view::data()` into `uint256S()` which meant it would only receive the a naked `char*` pointer and potentially scan past the `string_view::length()` until it found a null terminator.\r\n\r\nThis is a helpful summary, but not 100% accurate. `uint256S()` does currently require a terminator, but it doesn't have to be a `\\0` terminator. Any character other than `01234567890ABCDEFabcdef` will work as a terminator and stop reading the string.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2191568788",
      "submitted_at": "2024-07-22T13:22:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "commented",
      "id": 2243013595,
      "node_id": "IC_kwDOABII586Fsavb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2243013595",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T13:49:49Z",
      "updated_at": "2024-07-22T13:49:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this would benefit from a unit test. Would suggest including following test in `transaction_tests.cpp` in the first commit:\r\n\r\n```c++\r\nBOOST_AUTO_TEST_CASE(test_txid)\r\n{\r\n    // TxidFromString currently ignores string_view length and reads the whole\r\n    // string, not the specified substring.\r\n    BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\").substr(0, 4)).ToString(),\r\n        \"00000000000000000000000000000000000000000000000000000000abcd1234\");\r\n}\r\n```\r\n\r\nAnd then updating the test in the bugfix commit to make it clear how the bugfix changes behavior:\r\n\r\n```c++\r\nBOOST_AUTO_TEST_CASE(test_txid)\r\n{\r\n    // Make sure TxidFromString respects string_view length and stops reading at\r\n    // end of the substring.\r\n    BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\").substr(0, 4)).ToString(),\r\n        \"000000000000000000000000000000000000000000000000000000000000abcd\");\r\n}\r\n```\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2243013595",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2191641211,
      "node_id": "PRR_kwDOABII586Cocp7",
      "url": null,
      "actor": null,
      "commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-22T14:37:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Responded to a bunch of comments, but after reading them I do think this PR looks ok in its current form, and is an improvement.\r\n\r\nWould be happy to merge as is, or re-ack if there are more changes.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2191641211",
      "submitted_at": "2024-07-22T14:37:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "commented",
      "id": 2243900791,
      "node_id": "IC_kwDOABII586FvzV3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2243900791",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T22:13:13Z",
      "updated_at": "2024-07-22T22:13:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This is a helpful summary, but not 100% accurate. `uint256S()` does currently require a terminator, but it doesn't have to be a `\\0` terminator. Any character other than `01234567890ABCDEFabcdef` will work as a terminator and stop reading the string.\r\n\r\n(Updated summary slightly).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2243900791",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13611463424,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMrTnMA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611463424",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cdbfee6f2de73f7fe97a9933e8cbe3a00edd4f72",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/cdbfee6f2de73f7fe97a9933e8cbe3a00edd4f72",
      "created_at": "2024-07-23T07:52:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13611490232,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMrTtu4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611490232",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b7bfbab04f73ca6b9256b4e01f1eec3da5cb541",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/1b7bfbab04f73ca6b9256b4e01f1eec3da5cb541",
      "created_at": "2024-07-23T07:54:13Z"
    },
    {
      "event": "commented",
      "id": 2244516617,
      "node_id": "IC_kwDOABII586FyJsJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2244516617",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T07:58:01Z",
      "updated_at": "2024-07-23T07:58:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "1b7bfbab04f73ca6b9256b4e01f1eec3da5cb541 - Applied many of the suggestions from @paplorinc and @ryanofsky.\r\nHopefully this will achieve even more ACKs.\r\n\r\nAdded commit replacing `BOOST_CHECK()` with `BOOST_CHECK_*()` versions in **uint256_tests.cpp**.\r\n\r\nDropped change to `RemovePrefixView()` as @paplorinc's benchmark shows no improvement https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686678529\r\n\r\nAdded `TxidFromString()`-test, demonstrating fix as per @ryanofsky's suggestion.\r\n\r\nTook @paplorinc's version of the final loop in `SetHex()`, but changed it to range-for:\r\n```C++\r\n    for (auto& elem : m_data) {\r\n        auto hi = (digits > 0) ? ::HexDigit(trimmed[--digits]) : 0;\r\n        elem = (digits > 0) ? hi | (::HexDigit(trimmed[--digits]) << 4) : hi;\r\n    }\r\n```\r\n\r\nReplaced first loop in `SetHex()` with `find_if()`:\r\n```C++\r\n    size_t digits = std::ranges::find_if(trimmed, [](char c) { return ::HexDigit(c) == -1; }) - trimmed.begin();\r\n```\r\nLet me know if you prefer:\r\n```C++\r\n    size_t digits = 0;\r\n    for (const char c : trimmed) {\r\n        if (::HexDigit(c) == -1) break;\r\n        ++digits;\r\n    }\r\n```\r\n\r\nDocumented endianness of hex strings as per @paplorinc's suggestion + added test.\r\n\r\nSorry about the extra rebase, I'm holding one of the git commands wrongly. [Comparison between previously reviewed and current](https://github.com/bitcoin/bitcoin/compare/788fe9cc9ab979c5e14f544ae05dc46436892b81..1b7bfbab04f73ca6b9256b4e01f1eec3da5cb541)",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2244516617",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "mentioned",
      "id": 13611542429,
      "node_id": "MEE_lADOABII586PWwz2zwAAAAMrT6ed",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611542429",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T07:58:03Z"
    },
    {
      "event": "subscribed",
      "id": 13611542443,
      "node_id": "SE_lADOABII586PWwz2zwAAAAMrT6er",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611542443",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T07:58:03Z"
    },
    {
      "event": "mentioned",
      "id": 13611542458,
      "node_id": "MEE_lADOABII586PWwz2zwAAAAMrT6e6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611542458",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T07:58:03Z"
    },
    {
      "event": "subscribed",
      "id": 13611542471,
      "node_id": "SE_lADOABII586PWwz2zwAAAAMrT6fH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611542471",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T07:58:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13611586885,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMrUFVF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13611586885",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "created_at": "2024-07-23T08:01:12Z"
    },
    {
      "event": "reviewed",
      "id": 2193273134,
      "node_id": "PRR_kwDOABII586CurEu",
      "url": null,
      "actor": null,
      "commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T15:17:31Z",
      "author_association": "MEMBER",
      "body": "weak Nack, based on https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687659582 . Not sure why a reviewed pull request for a fix is changed to add in refactoring that isn't needed for the fix and can be  done later, if it isn't redundant at all.\r\n\r\nPlease keep \"refactor\" changes to the absolute minimum in real code.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2193273134",
      "submitted_at": "2024-07-23T08:15:44Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2193359685,
      "node_id": "PRR_kwDOABII586CvANF",
      "url": null,
      "actor": null,
      "commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T09:36:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for fixing this!\r\nACK bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2193359685",
      "submitted_at": "2024-07-23T09:36:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13612947646,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMrZRi-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13612947646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T09:36:35Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwZWVlZTJkYzEzMjliMDY0N2RmMDliZWE5Y2NjMDM5NWJiODI2OTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0eeee2dc1329b0647df09bea9ccc0395bb82698",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f0eeee2dc1329b0647df09bea9ccc0395bb82698",
      "tree": {
        "sha": "7b2aee828f5dc9b0ae01cae15009d1be4451bdbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b2aee828f5dc9b0ae01cae15009d1be4451bdbc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7b2aee828f5dc9b0ae01cae15009d1be4451bdbc\nparent 33af14e31b9fa436029a2bb8c2b11de8feb32f86\nauthor Ryan Ofsky <ryan@ofsky.org> 1721736371 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721736526 +0200\n\ntest: Add test for TxidFromString() behavior\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBLI64kIghNp2+nzgQjzF0/aW1+xEdhiUezInWrsUaDCgiY+bDSfyQcNHHH46Tdnlc\nq9awFNUtcopeB4cPf4yg0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "sha": "33af14e31b9fa436029a2bb8c2b11de8feb32f86",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33af14e31b9fa436029a2bb8c2b11de8feb32f86"
        }
      ],
      "message": "test: Add test for TxidFromString() behavior",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:08:46Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-23T12:06:11Z"
      },
      "sha": "f0eeee2dc1329b0647df09bea9ccc0395bb82698"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxMWY4MTY4MDBhYzUyMDA2NGExZTk2ODcxZDBiNGNjOTYwMWNlZDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f11f816800ac520064a1e96871d0b4cc9601ced7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f11f816800ac520064a1e96871d0b4cc9601ced7",
      "tree": {
        "sha": "143c5e2e9c34470c597b740c21eced57807456fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/143c5e2e9c34470c597b740c21eced57807456fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 143c5e2e9c34470c597b740c21eced57807456fc\nparent f0eeee2dc1329b0647df09bea9ccc0395bb82698\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721736939 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721736939 +0200\n\nrefactor: Make uint256_tests no longer use deprecated BOOST_CHECK()\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBcjRXaJgVoPVTnI+s2QrPdfiP3Md0hX3rvLXi/KACyCbqaLnksNI4UTpCHCuTufra\n9vqxmXdq9w0m1T1qO4/wg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0eeee2dc1329b0647df09bea9ccc0395bb82698",
          "sha": "f0eeee2dc1329b0647df09bea9ccc0395bb82698",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f0eeee2dc1329b0647df09bea9ccc0395bb82698"
        }
      ],
      "message": "refactor: Make uint256_tests no longer use deprecated BOOST_CHECK()",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:15:39Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:15:39Z"
      },
      "sha": "f11f816800ac520064a1e96871d0b4cc9601ced7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJmNTU3N2RjMmU3YmE2Njg3OThhODlhMmY2ZWY3Mjc5NWRiNmMyODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f5577dc2e7ba668798a89a2f6ef72795db6c285",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2f5577dc2e7ba668798a89a2f6ef72795db6c285",
      "tree": {
        "sha": "4f7f207face567a02dc071d078eb75ed7e5f23f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f7f207face567a02dc071d078eb75ed7e5f23f4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4f7f207face567a02dc071d078eb75ed7e5f23f4\nparent f11f816800ac520064a1e96871d0b4cc9601ced7\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721738670 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721738670 +0200\n\ntest: uint256 - Garbage suffixes and zero padding\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBLVSlTVPPuUpSUG5dttSxQB/k6H3wJhaDXfHxDjwKvTYlnDVwTC+qdh5VyGqyRvN8\n0dua7UlLWv7W07Ur0LMAY=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f11f816800ac520064a1e96871d0b4cc9601ced7",
          "sha": "f11f816800ac520064a1e96871d0b4cc9601ced7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f11f816800ac520064a1e96871d0b4cc9601ced7"
        }
      ],
      "message": "test: uint256 - Garbage suffixes and zero padding",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:44:30Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:44:30Z"
      },
      "sha": "2f5577dc2e7ba668798a89a2f6ef72795db6c285"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAxZTMxNGNlMGFlMzAyMjg3NDJiNmYxOWQyZjEyYTA1MGFiOTdlNGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01e314ce0ae30228742b6f19d2f12a050ab97e4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/01e314ce0ae30228742b6f19d2f12a050ab97e4d",
      "tree": {
        "sha": "7818b7fe9d44f8ee7cad990209f88844df5e79f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7818b7fe9d44f8ee7cad990209f88844df5e79f9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7818b7fe9d44f8ee7cad990209f88844df5e79f9\nparent 2f5577dc2e7ba668798a89a2f6ef72795db6c285\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721739096 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721739096 +0200\n\nrefactor: Change base_blob::SetHex() to take std::string_view\n\nClarify that hex strings are parsed as little-endian.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQJvJVUwgSl6uhtjog1kfRyvQoAeGnowvCVsp6oGSiHITAkcOe+JM0SYqW7q6g+CkDE\nr+dE7VoLoFNS1aR6e75wk=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f5577dc2e7ba668798a89a2f6ef72795db6c285",
          "sha": "2f5577dc2e7ba668798a89a2f6ef72795db6c285",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2f5577dc2e7ba668798a89a2f6ef72795db6c285"
        }
      ],
      "message": "refactor: Change base_blob::SetHex() to take std::string_view\n\nClarify that hex strings are parsed as little-endian.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:51:36Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:51:36Z"
      },
      "sha": "01e314ce0ae30228742b6f19d2f12a050ab97e4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5Y2UzNTAxZmEyZWEyODg1YTg1N2UzODBlZGRiNzQ2MDVmNzAzOGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09ce3501fa2ea2885a857e380eddb74605f7038c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09ce3501fa2ea2885a857e380eddb74605f7038c",
      "tree": {
        "sha": "b9dd03cae8f411d9d13039e918678151b21d8258",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9dd03cae8f411d9d13039e918678151b21d8258"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b9dd03cae8f411d9d13039e918678151b21d8258\nparent 01e314ce0ae30228742b6f19d2f12a050ab97e4d\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1720783615 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1721739099 +0200\n\nfix: Make TxidFromString() respect string_view length\n\nPrior to this, passing string_view::data() into uint256S() meant the latter would only receive the a naked char* pointer and potentially scan past the string_view::length() until it found a null terminator (or some other non-hex character).\n\nAppears to have been a fully dormant bug as callers were either passing a string literal or std::string directly to TxidFromFromString(), meaning null terminator always existed at pointer[length()]. Bug existed since original merge of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMOwoDGqChcaZRrQAO7e+ectmgplQeVPxZu8mVDx3EyfvBnsBEgAyYoQIVsFaqnlqi\nmXwpdM3en8Q+nLy3b95ws=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01e314ce0ae30228742b6f19d2f12a050ab97e4d",
          "sha": "01e314ce0ae30228742b6f19d2f12a050ab97e4d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/01e314ce0ae30228742b6f19d2f12a050ab97e4d"
        }
      ],
      "message": "fix: Make TxidFromString() respect string_view length\n\nPrior to this, passing string_view::data() into uint256S() meant the latter would only receive the a naked char* pointer and potentially scan past the string_view::length() until it found a null terminator (or some other non-hex character).\n\nAppears to have been a fully dormant bug as callers were either passing a string literal or std::string directly to TxidFromFromString(), meaning null terminator always existed at pointer[length()]. Bug existed since original merge of TxidFromString(), discussed in https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-23T12:51:39Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-07-12T11:26:55Z"
      },
      "sha": "09ce3501fa2ea2885a857e380eddb74605f7038c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13615553702,
      "node_id": "HRFPE_lADOABII586PWwz2zwAAAAMrjNym",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13615553702",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/09ce3501fa2ea2885a857e380eddb74605f7038c",
      "created_at": "2024-07-23T13:04:02Z"
    },
    {
      "event": "commented",
      "id": 2245200216,
      "node_id": "IC_kwDOABII586F0wlY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245200216",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T13:06:01Z",
      "updated_at": "2024-07-23T13:06:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Credit @ryanofsky as author of `TxidFromString()` test with a minor transformation.\r\n\r\nUse `BOOST_CHECK_EQUAL_COLLECTIONS()`.\r\n\r\n`SetHex()` - Largely reset back to previously reviewed implementation with 3 ACKs. Sacrificing both my `find_if()` and @paplorinc & mine's very nice final loop. Keeping the `trimmed` `string_view` variable and `const`ed the parameter as a hat-tip to @paplorinc.\r\n\r\nAs I was changing `SetHex()` I initially forgot to bring back `std::fill(m_data.begin(), m_data.end(), 0);`, **but unit tests still succeeded**, so I added a test to catch that.\r\n\r\nHope this strikes a good balance. Thank you again for your patience and hopefully my intuition in doing async review online has been refined.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2245200216",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "mentioned",
      "id": 13615583018,
      "node_id": "MEE_lADOABII586PWwz2zwAAAAMrjU8q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13615583018",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T13:06:02Z"
    },
    {
      "event": "subscribed",
      "id": 13615583043,
      "node_id": "SE_lADOABII586PWwz2zwAAAAMrjU9D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13615583043",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T13:06:02Z"
    },
    {
      "event": "mentioned",
      "id": 13615583066,
      "node_id": "MEE_lADOABII586PWwz2zwAAAAMrjU9a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13615583066",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T13:06:02Z"
    },
    {
      "event": "subscribed",
      "id": 13615583085,
      "node_id": "SE_lADOABII586PWwz2zwAAAAMrjU9t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13615583085",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T13:06:02Z"
    },
    {
      "event": "reviewed",
      "id": 2194030280,
      "node_id": "PRR_kwDOABII586Cxj7I",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T13:40:30Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194030280",
      "submitted_at": "2024-07-23T13:40:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2194035448,
      "node_id": "PRR_kwDOABII586CxlL4",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T13:42:27Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194035448",
      "submitted_at": "2024-07-23T13:42:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2194041190,
      "node_id": "PRR_kwDOABII586Cxmlm",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T13:44:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 09ce3501fa2ea2885a857e380eddb74605f7038c\r\n\r\nNote: adding co-authorship for the commits that reviewers have contributed to is a good way to make sure all participants are motivated to continue doing it.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194041190",
      "submitted_at": "2024-07-23T13:44:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "review_requested",
      "id": 13617560948,
      "node_id": "RRE_lADOABII586PWwz2zwAAAAMrq310",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13617560948",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T15:17:36Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2245579974,
      "node_id": "IC_kwDOABII586F2NTG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245579974",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T15:34:58Z",
      "updated_at": "2024-07-23T15:34:58Z",
      "author_association": "MEMBER",
      "body": "re-ACK 09ce3501fa2ea2885a857e380eddb74605f7038c 🕓\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 09ce3501fa2ea2885a857e380eddb74605f7038c 🕓\r\nnckkzWnlpOSIdef04sGXd+awRj6JrntK6TIzwwCm2K3hhSnHCUyW+8VcOS4IzMWnefV3XMunu4gyoYA/oKIwCg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#issuecomment-2245579974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30436"
    },
    {
      "event": "reviewed",
      "id": 2194357807,
      "node_id": "PRR_kwDOABII586Cyz4v",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T17:14:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 09ce3501fa2ea2885a857e380eddb74605f7038c. I think the current code changes are about as small as you could make to fix the bug without introducing a string copy, and the surrounding test improvements are all very nice and welcome.\r\n\r\nIt seems like may be some suggestions from paplorinc that could be responded to, but they are pretty minor. So this looks ready for merge.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194357807",
      "submitted_at": "2024-07-23T17:14:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "merged",
      "id": 13619712499,
      "node_id": "ME_lADOABII586PWwz2zwAAAAMrzFHz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13619712499",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7cc00bfc86b4dece2e3baef5b12e910d79c822a1",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cc00bfc86b4dece2e3baef5b12e910d79c822a1",
      "created_at": "2024-07-23T18:19:37Z"
    },
    {
      "event": "closed",
      "id": 13619712532,
      "node_id": "CE_lADOABII586PWwz2zwAAAAMrzFIU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13619712532",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T18:19:37Z"
    },
    {
      "event": "reviewed",
      "id": 2194332792,
      "node_id": "PRR_kwDOABII586Cytx4",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T18:52:24Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194332792",
      "submitted_at": "2024-07-23T18:52:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "reviewed",
      "id": 2194917738,
      "node_id": "PRR_kwDOABII586C08lq",
      "url": null,
      "actor": null,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-23T19:42:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "post-merge ACK 09ce3501fa2ea2885a857e380eddb74605f7038c",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#pullrequestreview-2194917738",
      "submitted_at": "2024-07-23T19:42:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
    },
    {
      "event": "head_ref_deleted",
      "id": 13622032827,
      "node_id": "HRDE_lADOABII586PWwz2zwAAAAMr77m7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13622032827",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T22:03:21Z"
    },
    {
      "event": "referenced",
      "id": 13646782554,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMtaWBa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13646782554",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "82312c0c7b259ef6ec4f769d4d78f6820d5d1db6",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/82312c0c7b259ef6ec4f769d4d78f6820d5d1db6",
      "created_at": "2024-07-25T14:30:53Z"
    },
    {
      "event": "referenced",
      "id": 13651893094,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMtt1tm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651893094",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7f71275db05fa62ae8227c51fe4610a2191ec35e",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/7f71275db05fa62ae8227c51fe4610a2191ec35e",
      "created_at": "2024-07-25T19:08:25Z"
    },
    {
      "event": "referenced",
      "id": 13659954451,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMuMl0T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13659954451",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f01848fb03353de29930d47226db299dcdbf2e78",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/f01848fb03353de29930d47226db299dcdbf2e78",
      "created_at": "2024-07-26T11:27:39Z"
    },
    {
      "event": "referenced",
      "id": 13683217008,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMvlVJw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683217008",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "created_at": "2024-07-29T16:21:07Z"
    },
    {
      "event": "referenced",
      "id": 13732248507,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMygXu7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13732248507",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f352d9c1a63aae2062f88a314e45d82e483097a2",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/f352d9c1a63aae2062f88a314e45d82e483097a2",
      "created_at": "2024-08-01T21:08:57Z"
    },
    {
      "event": "referenced",
      "id": 13732409151,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMyg-8_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13732409151",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/0828a3601c7f323f815598a41dd7854ef25265a7",
      "created_at": "2024-08-01T21:20:34Z"
    },
    {
      "event": "referenced",
      "id": 13733304669,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMykZld",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304669",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e75283ac60a8fc7545702a95ce73ea6316a03201",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/e75283ac60a8fc7545702a95ce73ea6316a03201",
      "created_at": "2024-08-01T22:51:33Z"
    },
    {
      "event": "referenced",
      "id": 13733304684,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMykZls",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304684",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7a9f5c07a4d9dc731f5cec1c7695ef3f5bbafb22",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/7a9f5c07a4d9dc731f5cec1c7695ef3f5bbafb22",
      "created_at": "2024-08-01T22:51:33Z"
    },
    {
      "event": "referenced",
      "id": 13733304699,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMykZl7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304699",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f2999640e9c5d86c54c21871e35213b3543672e9",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/f2999640e9c5d86c54c21871e35213b3543672e9",
      "created_at": "2024-08-01T22:51:33Z"
    },
    {
      "event": "referenced",
      "id": 13733304709,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMykZmF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304709",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f027fb93affe78dbff9d1bdc53e6e32ab7769f38",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/f027fb93affe78dbff9d1bdc53e6e32ab7769f38",
      "created_at": "2024-08-01T22:51:33Z"
    },
    {
      "event": "referenced",
      "id": 13733304732,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMykZmc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304732",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fffa0ff1f6eb8734c4be60b8af995db428cfa4cf",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/fffa0ff1f6eb8734c4be60b8af995db428cfa4cf",
      "created_at": "2024-08-01T22:51:34Z"
    },
    {
      "event": "referenced",
      "id": 13751623949,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMzqSEN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13751623949",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/73e3fa10b4dd63b7767d6b6f270df66971067341",
      "created_at": "2024-08-03T20:02:05Z"
    },
    {
      "event": "referenced",
      "id": 13757102522,
      "node_id": "REFE_lADOABII586PWwz2zwAAAAMz_Lm6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13757102522",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1a7d20509f46f0cd38302da78dba9a0c9bb24226",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a7d20509f46f0cd38302da78dba9a0c9bb24226",
      "created_at": "2024-08-05T02:27:21Z"
    },
    {
      "event": "referenced",
      "id": 14091878955,
      "node_id": "REFE_lADOABII586PWwz2zwAAAANH8QIr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14091878955",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b52d54736168bed82775e3c9e66c6320c7b83626",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b52d54736168bed82775e3c9e66c6320c7b83626",
      "created_at": "2024-08-31T14:18:10Z"
    },
    {
      "event": "locked",
      "id": 19264336132,
      "node_id": "LOE_lADOABII586PWwz2zwAAAAR8PnEE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19264336132",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-21T11:29:49Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675652818",
      "pull_request_review_id": 2174408053,
      "id": 1675652818,
      "node_id": "PRRC_kwDOABII585j4G7S",
      "diff_hunk": "@@ -68,7 +68,7 @@ using Wtxid = transaction_identifier<true>;\n \n inline Txid TxidFromString(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));",
      "path": "src/util/transaction_identifier.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "a4ead4e51c04c75c7837fb53116062e79f502bbd",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in a4ead4e51c04c75c7837fb53116062e79f502bbd (commit message): Could link directly to the discussion https://github.com/bitcoin/bitcoin/pull/28922#discussion_r1404437378 ?",
      "created_at": "2024-07-12T10:26:47Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675652818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675652818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675658574",
      "pull_request_review_id": 2174408053,
      "id": 1675658574,
      "node_id": "PRRC_kwDOABII585j4IVO",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Both sides are trimmed. My recommendation would be to drop the first commit and instead add a unit test:\r\n\r\n```diff\r\ndiff --git a/src/test/uint256_tests.cpp b/src/test/uint256_tests.cpp\r\nindex b7892a2139..5602b33e17 100644\r\n--- a/src/test/uint256_tests.cpp\r\n+++ b/src/test/uint256_tests.cpp\r\n@@ -102,6 +102,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint256S(\"0x\"+MaxL.ToString()) == MaxL);\r\n     BOOST_CHECK(uint256S(R1L.ToString()) == R1L);\r\n     BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"   \") == R1L);\r\n+    BOOST_CHECK(uint256S(\"   0x\" + R1L.ToString() + \"-trash;%^&   \") == R1L);\r\n+    BOOST_CHECK(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\" + R1L.ToString() + \"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \") == R1L);\r\n     BOOST_CHECK(uint256S(\"\") == ZeroL);\r\n     BOOST_CHECK(R1L == uint256S(R1ArrayHex));\r\n     BOOST_CHECK(uint256(R1L) == R1L);\r\n@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\r\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\r\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\r\n+    BOOST_CHECK(uint160S(\"   0x\" + R1S.ToString() + \"-trash;%^&   \") == R1S);\r\n+    BOOST_CHECK(uint160S(\" \\t \\n  \\n \\f\\n\\r\\t\\v\\t  0x\" + R1S.ToString() + \"   \\t \\n  \\n \\f\\n\\r\\t\\v\\t\") == R1S);\r\n     BOOST_CHECK(uint160S(\"\") == ZeroS);\r\n     BOOST_CHECK(R1S == uint160S(R1ArrayHex));\r\n \r\n```\r\n\r\nThen, you can replace this call in the second commit with the existing string view Trim function.\r\n\r\n(The unit test also checks that trailing trash is ignored. (Which is sad, but existing behavior, so probably good to keep for now))",
      "created_at": "2024-07-12T10:32:20Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675658574",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675658574"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665249",
      "pull_request_review_id": 2174408053,
      "id": 1675665249,
      "node_id": "PRRC_kwDOABII585j4J9h",
      "diff_hunk": "@@ -58,8 +58,9 @@ class base_blob\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n     std::string GetHex() const;\n-    void SetHex(const char* psz);\n-    void SetHex(const std::string& str);\n+    void SetHex(std::string_view str);\n+    inline void SetHex(const char* psz) { SetHex(std::string_view{psz}); }\n+    inline void SetHex(const std::string& str) { SetHex(std::string_view{str}); }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 8,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The compiler will generate those, no? So seems fine to remove?",
      "created_at": "2024-07-12T10:39:02Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675665249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665868",
      "pull_request_review_id": 2174408053,
      "id": 1675665868,
      "node_id": "PRRC_kwDOABII585j4KHM",
      "diff_hunk": "@@ -132,5 +133,15 @@ inline uint256 uint256S(const std::string& str)\n     rv.SetHex(str);\n     return rv;\n }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 15,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same (the compiler will generate those)?",
      "created_at": "2024-07-12T10:39:41Z",
      "updated_at": "2024-07-12T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675665868",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675665868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675666153",
      "pull_request_review_id": 2174408053,
      "id": 1675666153,
      "node_id": "PRRC_kwDOABII585j4KLp",
      "diff_hunk": "@@ -132,5 +133,15 @@ inline uint256 uint256S(const std::string& str)\n     rv.SetHex(str);\n     return rv;\n }",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 15,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675665868,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also, the same for `inline uint160 uint160S(`.",
      "created_at": "2024-07-12T10:39:58Z",
      "updated_at": "2024-07-12T10:41:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675666153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675666153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675668347",
      "pull_request_review_id": 2174432766,
      "id": 1675668347,
      "node_id": "PRRC_kwDOABII585j4Kt7",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also, could add a unit test that truncated input is parsed? (Sad as well, but again existing behavior, so probably good to keep for now)",
      "created_at": "2024-07-12T10:42:07Z",
      "updated_at": "2024-07-12T10:42:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675668347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675668347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675687795",
      "pull_request_review_id": 2174464053,
      "id": 1675687795,
      "node_id": "PRRC_kwDOABII585j4Pdz",
      "diff_hunk": "@@ -68,7 +68,7 @@ using Wtxid = transaction_identifier<true>;\n \n inline Txid TxidFromString(std::string_view str)\n {\n-    return Txid::FromUint256(uint256S(str.data()));\n+    return Txid::FromUint256(uint256S(str));",
      "path": "src/util/transaction_identifier.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "a4ead4e51c04c75c7837fb53116062e79f502bbd",
      "in_reply_to_id": 1675652818,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(same commit): Also, you'd have to fix `WtxidFromString(` in the same commit?",
      "created_at": "2024-07-12T11:02:18Z",
      "updated_at": "2024-07-12T11:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675687795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675687795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675758398",
      "pull_request_review_id": 2174582054,
      "id": 1675758398,
      "node_id": "PRRC_kwDOABII585j4gs-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the feedback, I really enjoyed removing the overloads based on the other comments! :)\r\n\r\nMessed up the first force-push somehow, here is a comparison between what you reviewed and the current state:\r\nhttps://github.com/bitcoin/bitcoin/compare/be23937392195c773811fdfc0d723783b2dace67..fcec222ae9386342ff1342e096255ca1ff74964d\r\n\r\n> Also, could add a unit test that truncated input is parsed?\r\n\r\nDo you mean that `base_blob::SetHex()` allows parsing \"half bytes\" like `\"0xF\"`, while `ParseHex()` would fail on `\"F\"` and require `\"0F\"` (maybe `\"F0\"`)?",
      "created_at": "2024-07-12T12:12:35Z",
      "updated_at": "2024-07-12T12:12:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675758398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675758398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675767961",
      "pull_request_review_id": 2174597881,
      "id": 1675767961,
      "node_id": "PRRC_kwDOABII585j4jCZ",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is wrong and not a refactor. It crashes the node for me. Previously it did not crash.\r\n\r\n```\r\n node0 stderr terminate called after throwing an instance of 'std::out_of_range'\r\n  what():  basic_string_view::substr: __pos (which is 67) > __size (which is 66) \r\n```",
      "created_at": "2024-07-12T12:21:53Z",
      "updated_at": "2024-07-12T12:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675767961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675767961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675771306",
      "pull_request_review_id": 2174603411,
      "id": 1675771306,
      "node_id": "PRRC_kwDOABII585j4j2q",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Do you mean that `base_blob::SetHex()` allows parsing \"half bytes\" like `\"0xF\"`, while `ParseHex()` would fail on `\"F\"` and require `\"0F\"` (maybe `\"F0\"`)?\r\n\r\nYeah,  it looks like this is already tested in `BOOST_AUTO_TEST_CASE(parse)`:\r\n\r\n```cpp\r\n    {\r\n        std::string s_1{uint256::ONE.GetHex()};\r\n        BOOST_CHECK_EQUAL(uint256S(\"1\\0\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(std::string{\"1\\0\", 2}).GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\"0x1\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\" 0x1\").GetHex(), s_1);\r\n        BOOST_CHECK_EQUAL(uint256S(\" 1\").GetHex(), s_1);\r\n    }\r\n",
      "created_at": "2024-07-12T12:25:03Z",
      "updated_at": "2024-07-12T12:25:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675771306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675771306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675773282",
      "pull_request_review_id": 2174606323,
      "id": 1675773282,
      "node_id": "PRRC_kwDOABII585j4kVi",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::LeftTrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "7d8dfe2fafc703709891c37c7504f63e4e5dbcd0",
      "in_reply_to_id": 1675658574,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Messed up the first force-push somehow, here is a comparison between what you reviewed and the current state:\r\n> https://github.com/bitcoin/bitcoin/compare/be23937392195c773811fdfc0d723783b2dace67..fcec222ae9386342ff1342e096255ca1ff74964d\r\n\r\nNo worries. I do proper reviews locally anyway, as I don't trust GitHub, due to its history of data loss and data corruption.",
      "created_at": "2024-07-12T12:26:43Z",
      "updated_at": "2024-07-12T12:26:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675773282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675773282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675775175",
      "pull_request_review_id": 2174609468,
      "id": 1675775175,
      "node_id": "PRRC_kwDOABII585j4kzH",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is a separate function because the constructor uint256(std::string_view str) can result\n+ * in dangerously catching uint256(0) via std::string_view(const char*).",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 19,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is fixed in C++23. Also, most C++17 compilers would already issue a compile warning for this.",
      "created_at": "2024-07-12T12:28:28Z",
      "updated_at": "2024-07-12T12:28:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675775175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675775175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675824921",
      "pull_request_review_id": 2174687444,
      "id": 1675824921,
      "node_id": "PRRC_kwDOABII585j4w8Z",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675767961,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm.. may have managed to figure out why it would not fail before. Old code:\r\n```C++\r\nstd::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\r\nstd::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\r\n```\r\nIf `.find('-')` returned `npos` and `npos = size_type(-1)`, then `+1` would make it `0`, so it would not throw in `substr()`. This would happen for an empty `uriParts[i]`, or non-empty not containing `-` (in this latter case it might have failed parsing `strOutput` if encountering `A-F`).\r\n",
      "created_at": "2024-07-12T13:00:36Z",
      "updated_at": "2024-07-12T13:00:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675824921",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675824921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676377257",
      "pull_request_review_id": 2175597723,
      "id": 1676377257,
      "node_id": "PRRC_kwDOABII585j63yp",
      "diff_hunk": "@@ -789,8 +789,9 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::string_view part{uriParts[i]};\n+            const std::string_view strTxid{part.substr(0, part.find('-'))};\n+            const std::string_view strOutput{part.substr(strTxid.size()+1)};",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675767961,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Improved testing and error reporting in 01fa92928e6f9509935840a8c57d29774a0d14a1.\r\n\r\nMade 3d0aec126f8103310b741a5c21e94cf537fcd191 use `util::Split`. It allocates a vector for each parsed UTXO but is more readable than my former approach.",
      "created_at": "2024-07-12T19:31:56Z",
      "updated_at": "2024-07-12T19:31:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1676377257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676377257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676379848",
      "pull_request_review_id": 2175601673,
      "id": 1676379848,
      "node_id": "PRRC_kwDOABII585j64bI",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is a separate function because the constructor uint256(std::string_view str) can result\n+ * in dangerously catching uint256(0) via std::string_view(const char*).",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 19,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "fcec222ae9386342ff1342e096255ca1ff74964d",
      "in_reply_to_id": 1675775175,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "e9a436b7796cb285730d179fb3317ad50234ab04 changed it to: `This is not a uint256 constructor because of historical fears of uint256(0) resolving to a NULL string and crashing.`",
      "created_at": "2024-07-12T19:34:56Z",
      "updated_at": "2024-07-12T19:34:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1676379848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676379848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678947516",
      "pull_request_review_id": 2179521737,
      "id": 1678947516,
      "node_id": "PRRC_kwDOABII585kErS8",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is probably fine to rework the error strings in `rest.cpp`, but seems better to leave for a follow-up, given that there are other follow-ups as well: https://github.com/bitcoin/bitcoin/pull/30444#issuecomment-2227109971 ?\r\n\r\nThis way, the changes here would be focussed on one thing (fixing the possible UB).",
      "created_at": "2024-07-16T08:06:34Z",
      "updated_at": "2024-07-16T08:06:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1678947516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678947516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679008780",
      "pull_request_review_id": 2179619081,
      "id": 1679008780,
      "node_id": "PRRC_kwDOABII585kE6QM",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated to avoid changing existing error strings. Also reordered commits, let me know if you prefer I break off the last 2 into a separate PR.\r\n\r\n(Also added some info to commit message for 735865af6308bd76063d48d145ca5761fc839405 and used curly-initialization for the `Split()` result).",
      "created_at": "2024-07-16T08:49:38Z",
      "updated_at": "2024-07-16T08:52:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679008780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679008780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679027950",
      "pull_request_review_id": 2179649435,
      "id": 1679027950,
      "node_id": "PRRC_kwDOABII585kE-7u",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I'd say a separate PR would be better.",
      "created_at": "2024-07-16T09:02:22Z",
      "updated_at": "2024-07-16T09:02:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679027950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679027950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679040564",
      "pull_request_review_id": 2179670044,
      "id": 1679040564,
      "node_id": "PRRC_kwDOABII585kFCA0",
      "diff_hunk": "@@ -789,8 +789,11 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         for (size_t i = (fCheckMemPool) ? 1 : 0; i < uriParts.size(); i++)\n         {\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n+            const std::vector<std::string_view> utxo_pair = util::Split<std::string_view>(uriParts[i], '-');\n+            if (utxo_pair.size() != 2)\n+                return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: expected one '-' separator for UTXO in \\\"\" + uriParts[i] + \"\\\"\");\n+            const auto strTxid{utxo_pair[0]};\n+            const auto strOutput{utxo_pair[1]};\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error: couldn't read \\\"<hexadecimal txid>-<decimal output index>\\\" from \\\"\" + uriParts[i] + \"\\\"\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "3d0aec126f8103310b741a5c21e94cf537fcd191",
      "in_reply_to_id": 1678947516,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped 2 commits from this PR.",
      "created_at": "2024-07-16T09:11:41Z",
      "updated_at": "2024-07-16T09:11:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679040564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679040564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 799,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679074765",
      "pull_request_review_id": 2179724266,
      "id": 1679074765,
      "node_id": "PRRC_kwDOABII585kFKXN",
      "diff_hunk": "@@ -68,11 +68,11 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view TrimStringView(std::string_view str, std::string_view pattern = \" \\f\\n\\r\\t\\v\")\n {\n-    std::string::size_type front = str.find_first_not_of(pattern);\n+    std::string_view::size_type front = str.find_first_not_of(pattern);\n     if (front == std::string::npos) {",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about this change. The types are the same either way and below is still using `std::string::npos`. Also, it has nothing to do with `base_blob` in the commit.",
      "created_at": "2024-07-16T09:34:48Z",
      "updated_at": "2024-07-16T09:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679074765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679074765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "LEFT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679075260",
      "pull_request_review_id": 2179725098,
      "id": 1679075260,
      "node_id": "PRRC_kwDOABII585kFKe8",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same here. Has nothing to do with the `base_blob` commit.",
      "created_at": "2024-07-16T09:35:11Z",
      "updated_at": "2024-07-16T09:35:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679075260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679075260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679085201",
      "pull_request_review_id": 2179740302,
      "id": 1679085201,
      "node_id": "PRRC_kwDOABII585kFM6R",
      "diff_hunk": "@@ -68,11 +68,11 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view TrimStringView(std::string_view str, std::string_view pattern = \" \\f\\n\\r\\t\\v\")\n {\n-    std::string::size_type front = str.find_first_not_of(pattern);\n+    std::string_view::size_type front = str.find_first_not_of(pattern);\n     if (front == std::string::npos) {",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 6,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": 1679074765,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems very harmless to correct the type. But yeah, should have fixed the `npos` if we go with this change.\r\n\r\nI'll remove it from this PR for now if it goes outside of the \"PR style\" of the project.",
      "created_at": "2024-07-16T09:42:05Z",
      "updated_at": "2024-07-16T09:42:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679085201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679085201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 71,
      "start_side": "LEFT",
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679138796",
      "pull_request_review_id": 2179827141,
      "id": 1679138796,
      "node_id": "PRRC_kwDOABII585kFZ_s",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "d20fc9cdffbf029bf1c6162ed22eaac6c320fa1a",
      "in_reply_to_id": 1679075260,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`base_blob` now calls `RemovePrefixView()` which it did not previously do. I want to make it as efficient as possible compared to the prior `base_blob` implementation, hence this change.",
      "created_at": "2024-07-16T10:14:12Z",
      "updated_at": "2024-07-16T10:14:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679138796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679138796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681559119",
      "pull_request_review_id": 2183757955,
      "id": 1681559119,
      "node_id": "PRRC_kwDOABII585kOo5P",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 20,
      "original_position": 18,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I interpret \"historical fears\" as \"the fears are no longer applicable\", in which case I think it should just be a constructor and this helper function removed. But, it [seems](https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675775175) like until C++23 this is indeed an issue (even if the ambiguous overload with the `uint8_t` should prevent compilation), so the current wording is confusing to me.\r\n\r\nSuggested alternative:\r\n\r\n```\r\n/* uint256 from std::string_view.\r\n * This is not a uint256 constructor to avoid the ambiguity of\r\n * uint256(0) being interpreted as initialization from a nullptr.\r\n *\r\n * This helper can be replaced with a constructor when we require c++23,\r\n * which prohibits constructing a string_view from a nullptr, see\r\n * https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2166r1.html\r\n */\r\n```",
      "created_at": "2024-07-17T18:35:24Z",
      "updated_at": "2024-07-17T18:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1681559119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681559119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681594420",
      "pull_request_review_id": 2183815708,
      "id": 1681594420,
      "node_id": "PRRC_kwDOABII585kOxg0",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 20,
      "original_position": 18,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1681559119,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for the correction! Applied with some minor adjustments.",
      "created_at": "2024-07-17T19:06:22Z",
      "updated_at": "2024-07-17T19:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1681594420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681594420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682274787",
      "pull_request_review_id": 2184843613,
      "id": 1682274787,
      "node_id": "PRRC_kwDOABII585kRXnj",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure the latest push is a good change. I don't think this should be replaced with a constructor in the future, but it should be removed completely.\r\n\r\nA new function (for example `static std::optional<base_blob<N>> base_blob<N>::FromHex(std::string_view)` can be added that parses and then returns an `std::optional`. Similar to TryParseHex.\r\n\r\nIn any case, the doxygen comment here is probably the wrong place to track brainstorming issues.\r\n\r\nIf we really wanted to turn this into a constructor, it could be done today. As mentioned earlier, C++17 compilers will already warn when a string_view is initialized with a nullptr. It should be easy to turn this into a compile error, or simply compile once with C++23 in CI. However, I don't think we want a constructor here.",
      "created_at": "2024-07-18T06:36:09Z",
      "updated_at": "2024-07-18T06:36:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682274787",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682274787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682324270",
      "pull_request_review_id": 2184921945,
      "id": 1682324270,
      "node_id": "PRRC_kwDOABII585kRjsu",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Tried:\r\n```diff\r\ndiff --git a/src/test/uint256_tests.cpp b/src/test/uint256_tests.cpp\r\nindex 2053a42d24..e8dfb03d18 100644\r\n--- a/src/test/uint256_tests.cpp\r\n+++ b/src/test/uint256_tests.cpp\r\n@@ -119,6 +119,10 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\r\n     BOOST_CHECK(uint160(R1S) == R1S);\r\n     BOOST_CHECK(uint160(ZeroS) == ZeroS);\r\n     BOOST_CHECK(uint160(OneS) == OneS);\r\n+\r\n+    uint256{0};\r\n+    uint256{NULL};\r\n+    uint256{nullptr};\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\r\ndiff --git a/src/uint256.h b/src/uint256.h\r\nindex 19faaca91f..39b776ed0f 100644\r\n--- a/src/uint256.h\r\n+++ b/src/uint256.h\r\n@@ -107,6 +107,7 @@ public:\r\n     constexpr uint256() = default;\r\n     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\r\n     constexpr explicit uint256(Span<const unsigned char> vch) : base_blob<256>(vch) {}\r\n+    explicit uint256(std::string_view str) { SetHex(str); }\r\n     static const uint256 ZERO;\r\n     static const uint256 ONE;\r\n };\r\n```\r\n\r\nG++13.2.0 warns against both `NULL` and `nullptr`. `0` and `NULL` resolve to the `uint256(uint8_t v)` ctor:\r\n```\r\ntest/uint256_tests.cpp: In member function ‘void uint256_tests::basics::test_method()’:\r\ntest/uint256_tests.cpp:124:17: warning: passing NULL to non-pointer argument 1 of ‘constexpr uint256::uint256(uint8_t)’ [-Wconversion-null]\r\n  124 |     uint256{NULL};\r\n      |                 ^\r\n...\r\n./uint256.h:108:40: note:   declared here\r\n  108 |     constexpr explicit uint256(uint8_t v) : base_blob<256>(v) {}\r\n      |                                ~~~~~~~~^\r\ntest/uint256_tests.cpp:125:20: warning: argument 1 null where non-null expected [-Wnonnull]\r\n  125 |     uint256{nullptr};\r\n      |                    ^\r\n...\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/string_view:140:7: note: in a call to function ‘constexpr std::basic_string_view<_CharT, _Traits>::basic_string_view(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>]’ declared ‘nonnull’\r\n  140 |       basic_string_view(const _CharT* __str) noexcept\r\n      |       ^~~~~~~~~~~~~~~~~\r\n...\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/bits/char_traits.h:409:32: warning: argument 1 null where non-null expected [-Wnonnull]\r\n  409 |         return __builtin_strlen(__s);\r\n      |                ~~~~~~~~~~~~~~~~^~~~~\r\n/nix/store/14c6s4xzhy14i2b05s00rjns2j93gzz4-gcc-13.2.0/include/c++/13.2.0/bits/char_traits.h:409:32: note: in a call to built-in function ‘long unsigned int __builtin_strlen(const char*)’\r\n```\r\nClang++(17.0.6) warns as well:\r\n```\r\ntest/uint256_tests.cpp:124:13: warning: implicit conversion of NULL constant to 'uint8_t' (aka 'unsigned char') [-Wnull-conversion]\r\n  124 |     uint256{NULL};\r\n      |     ~~~~~~~ ^~~~\r\n      |             '\\0'\r\ntest/uint256_tests.cpp:125:13: warning: null passed to a callee that requires a non-null argument [-Wnonnull]\r\n  125 |     uint256{nullptr};\r\n      |             ^~~~~~~\r\n2 warnings generated.\r\n```\r\nBoth continue compilation and segfault when running the tests.\r\n\r\nDoes CI have a stricter warnings-as-errors policy?",
      "created_at": "2024-07-18T07:16:32Z",
      "updated_at": "2024-07-18T07:17:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682324270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682324270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682344482",
      "pull_request_review_id": 2184954456,
      "id": 1682344482,
      "node_id": "PRRC_kwDOABII585kRooi",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Does CI have a stricter warnings-as-errors policy?\r\n\r\nYeah, IIRC it should treat warnings as error.\r\n\r\nEven if it didn't, the compile warning and `nullptr` in code would still have to pass the eyes of the developer and reviewers. Also, the CI would fail later on with a segfault anyway.\r\n\r\nAs for the others:\r\n\r\n* `0` is intentional and used in code today, see:\r\n```\r\nconst uint256 uint256::ZERO(0);\r\nconst uint256 uint256::ONE(1);\r\n```\r\n\r\n* NULL is forbidden by clang-tidy, see `modernize-use-nullptr`.",
      "created_at": "2024-07-18T07:29:16Z",
      "updated_at": "2024-07-18T07:29:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682344482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682344482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682359897",
      "pull_request_review_id": 2184979122,
      "id": 1682359897,
      "node_id": "PRRC_kwDOABII585kRsZZ",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reset back to prior version. As you say it seems we could convert `uint256S()` to a constructor already thanks to the pre-C++23 warnings by Clang & GCC, but I think that is outside the scope of this PR.",
      "created_at": "2024-07-18T07:39:55Z",
      "updated_at": "2024-07-18T07:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682359897",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682359897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682361588",
      "pull_request_review_id": 2184981667,
      "id": 1682361588,
      "node_id": "PRRC_kwDOABII585kRsz0",
      "diff_hunk": "@@ -112,21 +111,11 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor because of historical fears of uint256(0)",
      "path": "src/uint256.h",
      "position": 20,
      "original_position": 18,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1681559119,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reset back to prior version, see https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682274787.",
      "created_at": "2024-07-18T07:41:08Z",
      "updated_at": "2024-07-18T07:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682361588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682361588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682619292",
      "pull_request_review_id": 2185432632,
      "id": 1682619292,
      "node_id": "PRRC_kwDOABII585kSruc",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for your comprehensive input here @maflcko. You're right that this is safe as long as one CI job fails, there's no need to ensure this fails on every single compiler, which indeed makes the fear historical. My apologies for the back and forth.\r\n\r\nYour suggestion for a `FromHex()` method also seems better than a `std::string_view` ctor.",
      "created_at": "2024-07-18T10:39:01Z",
      "updated_at": "2024-07-18T10:39:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682619292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682619292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682745543",
      "pull_request_review_id": 2185662382,
      "id": 1682745543,
      "node_id": "PRRC_kwDOABII585kTKjH",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree `uint256::FromHex()` is more self-explanatory than `uint256S()`. Making it return `std::optional` might be good if we want stricter parsing and non-fatal failures. This PR feels large enough for now though.",
      "created_at": "2024-07-18T12:23:42Z",
      "updated_at": "2024-07-18T12:23:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682745543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682745543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682755930",
      "pull_request_review_id": 2185678524,
      "id": 1682755930,
      "node_id": "PRRC_kwDOABII585kTNFa",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, all of this should happen later, because it is unrelated to fixing possible UB/crashes (the goal of this pull).",
      "created_at": "2024-07-18T12:31:18Z",
      "updated_at": "2024-07-18T12:31:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682755930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682755930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682892102",
      "pull_request_review_id": 2185910679,
      "id": 1682892102,
      "node_id": "PRRC_kwDOABII585kTuVG",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~review note: it seems the `while` loop was replaced with `for` loop purely for readability, I don't see any functional change here.~\r\n\r\nedit: this is incorrect, as pointed out in the following comments.",
      "created_at": "2024-07-18T13:56:31Z",
      "updated_at": "2024-07-19T07:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682892102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682892102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683055614",
      "pull_request_review_id": 2186195988,
      "id": 1683055614,
      "node_id": "PRRC_kwDOABII585kUWP-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Change base_blob::SetHex() to take std::string_view\" (f77d961d926405637dfbdfb9a9baea1fab4f1b7b)\r\n\r\nNote: This line isn't directly equivalent to previous code because it trims whitespace from the end of the string, not just the beginning, but the net effect is the same because any whitespace at the end of the string would be ignored anyway.\r\n\r\nI'm surprised looking at the implementation of SetHex to see how unreliable it is in general. Since it can't report errors it winds up just ignoring unexpected input:\r\n\r\n- Any input following the first non-hex character is ignored.\r\n  -  So if there is a space in the string, or a 1 replaced with an I, it is treated like the end of input, and the resulting blob may have a combination of new and old values.\r\n- If the hex string provided is too long to fit in the blob, the end of the string will be ignored.\r\n\r\n\r\n\r\n",
      "created_at": "2024-07-18T15:29:23Z",
      "updated_at": "2024-07-18T16:08:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683055614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683055614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683086730",
      "pull_request_review_id": 2186195988,
      "id": 1683086730,
      "node_id": "PRRC_kwDOABII585kUd2K",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Change base_blob::SetHex() to take std::string_view\" (f77d961d926405637dfbdfb9a9baea1fab4f1b7b)\r\n\r\nIt seems not great, especially in the light of the unterminated string bug, that this will iterate over the entire string when only the beginning portion of the string may be needed. For example, if the string is 1MB and the blob is 32 bytes, this will iterate over 1MB. Would changing this to:\r\n```c++\r\nwhile (digits < str.size() && digits < WIDTH*2 && ::HexDigit(str[digits]) != -1) {\r\n    ++digits;\r\n}\r\n```\r\n\r\nThis would also allow dropping the `pend` variable below as a further simplification.",
      "created_at": "2024-07-18T15:51:43Z",
      "updated_at": "2024-07-18T16:08:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683086730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683221641",
      "pull_request_review_id": 2186448462,
      "id": 1683221641,
      "node_id": "PRRC_kwDOABII585kU-yJ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm surprised looking at the implementation of SetHex to see how unreliable it is in general. Since it can't report errors it winds up just ignoring unexpected input:\r\n\r\nYes, those are known shortcomings. The function will be removed completely in the future, but this will be done in a follow-up.",
      "created_at": "2024-07-18T17:15:01Z",
      "updated_at": "2024-07-18T17:15:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683221641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683221641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683226283",
      "pull_request_review_id": 2186455377,
      "id": 1683226283,
      "node_id": "PRRC_kwDOABII585kU_6r",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It seems not great\r\n\r\nI don't think this is a change in behavior (previously this was the behavior and afterward this remains the behavior), and the function will be removed completely in the future anyway, so I am not sure how much time should be spent on playing code-golf here.\r\n\r\nHappy to re-ACK a trivial fixup, but if it takes more than a few seconds to review it is probably not worth it.",
      "created_at": "2024-07-18T17:19:07Z",
      "updated_at": "2024-07-18T17:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683226283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683226283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683245538",
      "pull_request_review_id": 2186486004,
      "id": 1683245538,
      "node_id": "PRRC_kwDOABII585kVEni",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I did not know this function will be removed. It would be helpful to mention in the PR description that it will be removed, so reviewers can know how worried to be about the quality of the code.",
      "created_at": "2024-07-18T17:37:10Z",
      "updated_at": "2024-07-18T17:37:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683245538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683245538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683252772",
      "pull_request_review_id": 2186500464,
      "id": 1683252772,
      "node_id": "PRRC_kwDOABII585kVGYk",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Thanks, I did not know this function will be removed. It would be helpful to mention in the PR description that it will be removed, so reviewers can know how worried to be about the quality of the code.\r\n\r\nWell, it will be removed, given that someone writes the code and reviews it. A tracking issue can be created, if you want, but I think the pull request description is the wrong place for this tracking stuff. As for reviewers: I'd say reviewers should worry the most about any regression or worsening of the code. Follow-up improvements are great to mention, but shouldn't hold up a possible UB/crash fix.",
      "created_at": "2024-07-18T17:43:29Z",
      "updated_at": "2024-07-18T17:43:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683252772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683252772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683689226",
      "pull_request_review_id": 2187172873,
      "id": 1683689226,
      "node_id": "PRRC_kwDOABII585kWw8K",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1682892102,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1682892102\r\n\r\n> review note: it seems the `while` loop was replaced with `for` loop purely for readability, I don't see any functional change here.\r\n\r\nTo be sure, replacing the previous while loop is an important part of the fix. If the previous while loop was kept, it could iterate past the end of the of `string_view` and read uninitialized memory. This for loop (and the while loop I suggested in https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730) avoid the bug by stopping iteration at the end of the `string_view`.",
      "created_at": "2024-07-19T02:15:51Z",
      "updated_at": "2024-07-19T02:17:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683689226",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683689226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683831519",
      "pull_request_review_id": 2187369595,
      "id": 1683831519,
      "node_id": "PRRC_kwDOABII585kXTrf",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> * So if there is a space in the string, or a 1 replaced with an I, it is treated like the end of input, and the resulting blob may have a combination of new and old values.\r\n\r\nI don't think this is true. All \"old\" values will zeroed in the first line of `SetHex`.\r\n\r\nThe other shortcomings (no length check and no hex check) are true.",
      "created_at": "2024-07-19T05:56:29Z",
      "updated_at": "2024-07-19T05:56:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683831519",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683831519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683934569",
      "pull_request_review_id": 2187521186,
      "id": 1683934569,
      "node_id": "PRRC_kwDOABII585kXs1p",
      "diff_hunk": "@@ -112,21 +111,15 @@ class uint256 : public base_blob<256> {\n     static const uint256 ONE;\n };\n \n-/* uint256 from const char *.\n- * This is a separate function because the constructor uint256(const char*) can result\n- * in dangerously catching uint256(0).\n+/* uint256 from std::string_view.\n+ * This is not a uint256 constructor to avoid the ambiguity of uint256(0) being\n+ * interpreted as initialization from a nullptr.\n+ *\n+ * This helper can be replaced with a constructor when we require C++23, which",
      "path": "src/uint256.h",
      "position": null,
      "original_position": 21,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "4923d908356813405dc89cfe59da1dd06a37157e",
      "in_reply_to_id": 1682274787,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A partial fix is in https://github.com/bitcoin/bitcoin/pull/30482. It will be continued in the future.",
      "created_at": "2024-07-19T07:23:17Z",
      "updated_at": "2024-07-19T07:23:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683934569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683934569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683934828",
      "pull_request_review_id": 2187521627,
      "id": 1683934828,
      "node_id": "PRRC_kwDOABII585kXs5s",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Yes, those are known shortcomings. The function will be removed completely in the future, but this will be done in a follow-up.\r\n\r\nA partial fix is in https://github.com/bitcoin/bitcoin/pull/30482. It will be continued in the future.",
      "created_at": "2024-07-19T07:23:34Z",
      "updated_at": "2024-07-19T07:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683934828",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683934828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683935476",
      "pull_request_review_id": 2187522643,
      "id": 1683935476,
      "node_id": "PRRC_kwDOABII585kXtD0",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683086730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Well, it will be removed, given that someone writes the code and reviews it.\r\n\r\nA partial fix is in https://github.com/bitcoin/bitcoin/pull/30482. It will be continued in the future.",
      "created_at": "2024-07-19T07:24:13Z",
      "updated_at": "2024-07-19T07:24:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683935476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683935476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683976467",
      "pull_request_review_id": 2187588411,
      "id": 1683976467,
      "node_id": "PRRC_kwDOABII585kX3ET",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "c3a9c71c7077324bf0aa40f834f7537a14619340",
      "in_reply_to_id": 1682892102,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> it could iterate past the end of the of `string_view` and read uninitialized memory.\r\n\r\nRight, because on master we rely on stopping when `HexDigit()` returns a `-1`, which is fine when the string is null-terminated but is not safe otherwise. Thanks for pointing this out, this also clarifies my misunderstanding about your [earlier comment](https://github.com/bitcoin/bitcoin/pull/30436/#pullrequestreview-2186195988).",
      "created_at": "2024-07-19T07:59:54Z",
      "updated_at": "2024-07-19T07:59:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683976467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1683976467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684699856",
      "pull_request_review_id": 2188780862,
      "id": 1684699856,
      "node_id": "PRRC_kwDOABII585kanrQ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1683055614,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Note: This line isn't directly equivalent to previous code because it trims whitespace from the end of the string, not just the beginning, but the net effect is the same because any whitespace at the end of the string would be ignored anyway.\r\n\r\n@ryanofsky yes, that's why my first pushed implementation added `LeftTrimStringView` in 8f4293d892358ce145eb9a099f2e5f256c4d9c73. But got pushback in https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675658574 and trimming the end of the string means we save checking one character later when range-for iterating over the trimmed `string_view` to count digits.",
      "created_at": "2024-07-19T17:36:47Z",
      "updated_at": "2024-07-19T17:36:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1684699856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1684699856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686320395",
      "pull_request_review_id": 2191194232,
      "id": 1686320395,
      "node_id": "PRRC_kwDOABII585kgzUL",
      "diff_hunk": "@@ -102,6 +102,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint256S(\"0x\"+MaxL.ToString()) == MaxL);\n     BOOST_CHECK(uint256S(R1L.ToString()) == R1L);\n     BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"   \") == R1L);\n+    BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \") == R1L);\n+    BOOST_CHECK(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \") == R1L);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see that `BOOST_CHECK` was use throughout, but we could use `BOOST_CHECK_EQUAL` in a few places for better error messages - at least for the new code:\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \"), R1L);\r\n```\r\n\r\nWe could do the old ones in a different PR, but let's not introduce already deprecated code.\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27#r1685455576",
      "created_at": "2024-07-22T10:18:19Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686320395",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686320395"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686322412",
      "pull_request_review_id": 2191194232,
      "id": 1686322412,
      "node_id": "PRRC_kwDOABII585kgzzs",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We have many different flavors of hex parsers, to document the differences better, let's add a test where  e.g. `TryParseHash` would behave differently, e.g. `\"0123456789 ABCDEF\"` where `TryParseHex` continues, `SetHexFragile` stops:\r\n```python\r\nTryParseHex: 0123456789abcdef\r\nSetHexFragile: efcdab8967452301000000000000000000000000000000000000000000000000\r\n```\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/commits/801404719dbdbbc327b2f1bc24cb11b6d52e3f27#r1685500849",
      "created_at": "2024-07-22T10:19:52Z",
      "updated_at": "2024-07-22T11:01:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686322412",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686322412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686328446",
      "pull_request_review_id": 2191194232,
      "id": 1686328446,
      "node_id": "PRRC_kwDOABII585kg1R-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we could keep the const here as well (and simplify a few other structures, please see my other comments for details):\r\n```C++\r\ntemplate <unsigned int BITS>\r\nvoid base_blob<BITS>::SetHex(const std::string_view str)\r\n{\r\n    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\r\n    size_t digits = 0;\r\n    while (digits < trimmed.size() && ::HexDigit(trimmed[digits]) != -1)\r\n        ++digits;\r\n    for (auto it = m_data.begin(); it < m_data.end(); ++it) {\r\n        auto lo = (digits > 0) ? ::HexDigit(trimmed[--digits]) : 0;\r\n        *it = (digits > 0) ? lo | (::HexDigit(trimmed[--digits]) << 4) : lo;\r\n    }\r\n}\r\n```\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/files#r1685498559",
      "created_at": "2024-07-22T10:25:24Z",
      "updated_at": "2024-07-23T07:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686328446",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686328446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686329623",
      "pull_request_review_id": 2191194232,
      "id": 1686329623,
      "node_id": "PRRC_kwDOABII585kg1kX",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "previous version was cleaner in my opinion.\r\nSince str is random access, we could simplify to:\r\n```suggestion\r\n    while (digits < trimmed.size() && ::HexDigit(trimmed[digits]) != -1)\r\n        ++digits;\r\n```\r\n\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b#r1685498257",
      "created_at": "2024-07-22T10:26:25Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686329623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686329623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686332889",
      "pull_request_review_id": 2191194232,
      "id": 1686332889,
      "node_id": "PRRC_kwDOABII585kg2XZ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);\n         if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n+            *p1 |= ((unsigned char)::HexDigit(str[--digits]) << 4);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see this uses little-endian encoding, while e.g. `TryParseHex` uses big-endian, right?\r\nDo you happen to know what the reason is? Should we maybe document this?\r\nDo we need to keep the endianness in every scenario (since that's why we need the digit counting at the beginning) or could we use big-endian in any of the usages, e.g. if these hex strings aren't persisted or someting (in a different PR, of course)?\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b#r1685489845",
      "created_at": "2024-07-22T10:29:25Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686332889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686332889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686336262",
      "pull_request_review_id": 2191194232,
      "id": 1686336262,
      "node_id": "PRRC_kwDOABII585kg3MG",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find it quite confusing that we're sneaking in a mutation of the copy, while previously we just returned a copy directly (like in `TrimStringView`).\r\nWe could `const` the parameters if we did the same as before: \r\n```suggestion\r\n        return str.substr(prefix.size());\r\n```\r\ni.e.\r\n```C++\r\n[[nodiscard]] inline std::string_view RemovePrefixView(const std::string_view str, const std::string_view prefix)\r\n```\r\n\r\n----\r\n\r\nAlso, could you please add a test case that checks the integrity of the original (would pass because of the string_view copy now as well):\r\n```C++\r\n    auto original = \"0x123\";\r\n    BOOST_CHECK_EQUAL(RemovePrefixView(original, \"0x\"), \"123\");\r\n    BOOST_CHECK_EQUAL(original, \"0x123\"); // Ensure original string is intact\r\n```\r\nSame for `TrimStringView`, just to be sure. I'm fine with adding the test in a different PR, but I consider this mutation to a blocker.\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/commits/f77d961d926405637dfbdfb9a9baea1fab4f1b7b#r1685401233",
      "created_at": "2024-07-22T10:32:34Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686336262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686336262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686339331",
      "pull_request_review_id": 2191194232,
      "id": 1686339331,
      "node_id": "PRRC_kwDOABII585kg38D",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we should be able to keep the const in most places:\r\n```suggestion\r\ninline uint160 uint160S(const std::string_view str)\r\n```",
      "created_at": "2024-07-22T10:35:28Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686339331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686339331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686345800",
      "pull_request_review_id": 2191194232,
      "id": 1686345800,
      "node_id": "PRRC_kwDOABII585kg5hI",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);",
      "path": "src/uint256.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We shouldn't need zeroing, if we're processing the values exhaustively - but if we do, we could use\r\n```suggestion\r\n    SetNull();\r\n```\r\n\r\nSee: https://github.com/bitcoin/bitcoin/pull/30482/files#r1685396384",
      "created_at": "2024-07-22T10:41:09Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686345800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686345800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686364804",
      "pull_request_review_id": 2191194232,
      "id": 1686364804,
      "node_id": "PRRC_kwDOABII585kg-KE",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we could avoid double assignment (and casting) by using a temp variable for the high nibble as such:\r\n```C++\r\n    for (auto it = m_data.begin(); it < m_data.end(); ++it) {\r\n        auto lo = (digits > 0) ? ::HexDigit(trimmed[--digits]) : 0;\r\n        *it = (digits > 0) ? lo | (::HexDigit(trimmed[--digits]) << 4) : lo;\r\n    }\r\n```",
      "created_at": "2024-07-22T10:57:54Z",
      "updated_at": "2024-07-23T07:41:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686364804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686364804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686365416",
      "pull_request_review_id": 2191194232,
      "id": 1686365416,
      "node_id": "PRRC_kwDOABII585kg-To",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;",
      "path": "src/uint256.cpp",
      "position": 30,
      "original_position": 29,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we should be able to use `m_data.begin()` and `m_data.end()` instead",
      "created_at": "2024-07-22T10:58:30Z",
      "updated_at": "2024-07-22T11:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686365416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686365416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 35,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686476487",
      "pull_request_review_id": 2191450431,
      "id": 1686476487,
      "node_id": "PRRC_kwDOABII585khZbH",
      "diff_hunk": "@@ -102,6 +102,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint256S(\"0x\"+MaxL.ToString()) == MaxL);\n     BOOST_CHECK(uint256S(R1L.ToString()) == R1L);\n     BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"   \") == R1L);\n+    BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \") == R1L);\n+    BOOST_CHECK(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \") == R1L);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686320395,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would fully agree if we were introducing a new test function, but as it is in the middle of existing `BOOST_CHECK`s, I think it's fine. Won't sweat it if I don't show up in the `git blame` after the `BOOST_CHECK_EQUAL`-refactor. And I'm happy to review such a follow-up PR.\r\n\r\n(Original change here was suggested in https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1675658574)",
      "created_at": "2024-07-22T12:34:37Z",
      "updated_at": "2024-07-22T12:34:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686476487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686476487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686494462",
      "pull_request_review_id": 2191480268,
      "id": 1686494462,
      "node_id": "PRRC_kwDOABII585khdz-",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/30482#discussion_r1686054773",
      "created_at": "2024-07-22T12:48:22Z",
      "updated_at": "2024-07-22T12:48:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686494462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686494462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686494537",
      "pull_request_review_id": 2191480386,
      "id": 1686494537,
      "node_id": "PRRC_kwDOABII585khd1J",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about `const`ing `string_view` parameters, could only find one pre-existing case of that pattern (`GetBuriedDeployment()`). Can sympathize with forcing introduction of new names over mutation. I like how you named the first digit `hi` (maybe `high` is more precise).\r\n\r\nUltimately, my modification of the function is meant to be a straightforward transformation of the original code. Since it has received a few ACKs already, I am going to put off changing it for now. But might draw some inspiration from your version if I need to change it for other reasons.",
      "created_at": "2024-07-22T12:48:26Z",
      "updated_at": "2024-07-22T12:48:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686494537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686494537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686497693",
      "pull_request_review_id": 2191485383,
      "id": 1686497693,
      "node_id": "PRRC_kwDOABII585khemd",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> TryParseHash, TryParseHex, SetHexFragile\r\n\r\nNone of them are touched or changed in this pull, and as explained, the tests already exist in various places:\r\n\r\n```\r\nsrc/test/util_tests.cpp:    result = ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\");\r\nsrc/test/util_tests.cpp:    result = ParseHex(\"12 34 56 78\");\r\nsrc/test/util_tests.cpp:    result = ParseHex(\" 89 34 56 78\");\r\nsrc/test/util_tests.cpp:    result = ParseHex(\"     Ff        aA    \");\r\nsrc/test/util_tests.cpp:    result = ParseHex(\"\");\r\nsrc/test/util_tests.cpp:    BOOST_CHECK_EQUAL(ParseHex(\"AAF F\").size(), 0);\r\nsrc/test/util_tests.cpp:    BOOST_CHECK_EQUAL(ParseHex(with_embedded_null).size(), 0);\r\nsrc/test/util_tests.cpp:    BOOST_CHECK_EQUAL(ParseHex(\"1234 invalid 1234\").size(), 0);\r\nsrc/test/util_tests.cpp:    BOOST_CHECK_EQUAL(ParseHex(\"12 3\").size(), 0);\r\n```\r\n (etc)",
      "created_at": "2024-07-22T12:50:44Z",
      "updated_at": "2024-07-22T12:50:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686497693",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686497693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686498210",
      "pull_request_review_id": 2191486245,
      "id": 1686498210,
      "node_id": "PRRC_kwDOABII585kheui",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I did, of course, I'm more interested here in your opinion.",
      "created_at": "2024-07-22T12:51:08Z",
      "updated_at": "2024-07-22T12:51:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686498210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686498210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686502664",
      "pull_request_review_id": 2191493413,
      "id": 1686502664,
      "node_id": "PRRC_kwDOABII585khf0I",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can get a reack, let's not focus on that.\r\nI'm NACK 788fe9cc9ab979c5e14f544ae05dc46436892b81 -ing because of https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686336262 anyway.",
      "created_at": "2024-07-22T12:53:47Z",
      "updated_at": "2024-07-22T12:53:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686502664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686502664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686504600",
      "pull_request_review_id": 2191496426,
      "id": 1686504600,
      "node_id": "PRRC_kwDOABII585khgSY",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686329623,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is random access, but it's also contiguous, allowing for the safe range-`for`. If I had to do it again I might have lifted the `break;` up to the same line as the `if`. If I need to retouch and others support that change I might do that to make it slightly more terse like yours.",
      "created_at": "2024-07-22T12:54:24Z",
      "updated_at": "2024-07-22T12:54:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686504600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686504600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686507836",
      "pull_request_review_id": 2191501982,
      "id": 1686507836,
      "node_id": "PRRC_kwDOABII585khhE8",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since we're modifying the function I'm suggesting more coverage for the cases, based on what other hex parsers were testing for. It's not a difficult or unreasonable request.",
      "created_at": "2024-07-22T12:55:40Z",
      "updated_at": "2024-07-22T12:55:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686507836",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686507836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686510133",
      "pull_request_review_id": 2191505815,
      "id": 1686510133,
      "node_id": "PRRC_kwDOABII585khho1",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686329623,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You can of course redo it, I didn't review your change for us to ponder on what could have been...",
      "created_at": "2024-07-22T12:57:23Z",
      "updated_at": "2024-07-22T12:57:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686510133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686510133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686514577",
      "pull_request_review_id": 2191513041,
      "id": 1686514577,
      "node_id": "PRRC_kwDOABII585khiuR",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It's not a difficult or unreasonable request.\r\n\r\nI think full test coverage exists, but I am more than happy to review a test-only pull request adding more tests. (I'd be thrilled to review one that adds missing coverage)\r\n\r\nBut no need to hold up a bugfix based on a test-only minor nit. ",
      "created_at": "2024-07-22T13:00:33Z",
      "updated_at": "2024-07-22T13:00:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686514577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686514577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686516716",
      "pull_request_review_id": 2191516776,
      "id": 1686516716,
      "node_id": "PRRC_kwDOABII585khjPs",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);\n         if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n+            *p1 |= ((unsigned char)::HexDigit(str[--digits]) << 4);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686332889,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I know some hashes have long been represented in little-endian while other large integers are not. Do not know of a reason why. Changing it sounds dangerous. I will consider at least documenting which endian it is if I re-touch. ",
      "created_at": "2024-07-22T13:02:16Z",
      "updated_at": "2024-07-22T13:02:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686516716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686516716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686533487",
      "pull_request_review_id": 2191545500,
      "id": 1686533487,
      "node_id": "PRRC_kwDOABII585khnVv",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "* `std::string_view::remove_prefix()` itself invites mutation.\r\n* The names `TrimStringView()` and `RemovePrefixView()` imply mutation.\r\n* As I said in https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686494537, I could only find one other case of `const` `string_view` parameters in the entire codebase. I'm sorry if you are used to another way. It may well be a better way, but I'd rather not change more pre-existing things like `TrimStringView()` and `RemovePrefixView()` taking non-const `string_view` copies.\r\n\r\nI do not think introducing test cases to prove that the C++ compiler is properly copying a given parameter provides much value.",
      "created_at": "2024-07-22T13:13:50Z",
      "updated_at": "2024-07-22T13:13:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686533487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686533487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686534036",
      "pull_request_review_id": 2191546460,
      "id": 1686534036,
      "node_id": "PRRC_kwDOABII585khneU",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686339331,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686533487",
      "created_at": "2024-07-22T13:14:14Z",
      "updated_at": "2024-07-22T13:14:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686534036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686534036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686538334",
      "pull_request_review_id": 2191553831,
      "id": 1686538334,
      "node_id": "PRRC_kwDOABII585khohe",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);",
      "path": "src/uint256.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686345800,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good find. Will do if I need to retouch that commit for other reasons.",
      "created_at": "2024-07-22T13:16:52Z",
      "updated_at": "2024-07-22T13:16:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686538334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686538334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686541028",
      "pull_request_review_id": 2191558008,
      "id": 1686541028,
      "node_id": "PRRC_kwDOABII585khpLk",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But no need to hold up a bugfix based on a test-only minor nit.\r\n\r\nagree, this isn't the reason for my NACK.",
      "created_at": "2024-07-22T13:18:26Z",
      "updated_at": "2024-07-22T13:18:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686541028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686541028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686546154",
      "pull_request_review_id": 2191566638,
      "id": 1686546154,
      "node_id": "PRRC_kwDOABII585khqbq",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> std::string_view::remove_prefix() itself invites mutation.\r\n\r\nno, we din't mutate before, we returned a new view. We're also doing that now, but the copy is done implicitly in the parameters. The original `substr` way made more sense - like we're doing with `TrimStringView` as well.",
      "created_at": "2024-07-22T13:22:01Z",
      "updated_at": "2024-07-22T13:22:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686546154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686546154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686550665",
      "pull_request_review_id": 2191573945,
      "id": 1686550665,
      "node_id": "PRRC_kwDOABII585khriJ",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686339331,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure why the type is relevant here, what I'm saying is that we had a [const](https://learn.microsoft.com/en-us/cpp/cpp/const-cpp) guarantee before which we can keep.",
      "created_at": "2024-07-22T13:25:04Z",
      "updated_at": "2024-07-22T13:25:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686550665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686550665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686551381",
      "pull_request_review_id": 2191575163,
      "id": 1686551381,
      "node_id": "PRRC_kwDOABII585khrtV",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);",
      "path": "src/uint256.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686345800,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My [other suggestions](https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686364804) make this irrelevant, we can zero during iteration as well",
      "created_at": "2024-07-22T13:25:34Z",
      "updated_at": "2024-07-22T13:25:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686551381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686551381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686572142",
      "pull_request_review_id": 2191610098,
      "id": 1686572142,
      "node_id": "PRRC_kwDOABII585khwxu",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "in_reply_to_id": 1686364804,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like your version slightly more, will do if I need to re-touch the commit and others agree.\r\n\r\nSorry for being difficult. Wish your review had come in sooner.",
      "created_at": "2024-07-22T13:39:30Z",
      "updated_at": "2024-07-22T13:39:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686572142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686572142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686574857",
      "pull_request_review_id": 2191614413,
      "id": 1686574857,
      "node_id": "PRRC_kwDOABII585khxcJ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "788fe9cc9ab979c5e14f544ae05dc46436892b81",
      "in_reply_to_id": 1686364804,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Wish your review had come in sooner\r\n\r\nnothing is lost yet, we're all on the same side, people will glady reack :)",
      "created_at": "2024-07-22T13:41:10Z",
      "updated_at": "2024-07-22T13:41:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686574857",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686574857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686585389",
      "pull_request_review_id": 2191632099,
      "id": 1686585389,
      "node_id": "PRRC_kwDOABII585kh0At",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The reason for using the standard C++ `remove_prefix()` function inside of the pre-existing `RemovePrefixView()` over `substr()` was covered here:\r\nhttps://github.com/bitcoin/bitcoin/pull/30436#discussion_r1679138796 \r\n> `base_blob` now calls `RemovePrefixView()` which it did not previously do. I want to make it as efficient as possible compared to the prior `base_blob` implementation, hence this change.\r\n\r\nTo be even more clear than I was that time - please compare the implementations of [substr()](https://github.com/gcc-mirror/gcc/blob/61715e9340ab8941d40d62158fe437e9dbe3e068/libstdc%2B%2B-v3/include/std/string_view#L334) and [remove_prefix()](https://github.com/gcc-mirror/gcc/blob/61715e9340ab8941d40d62158fe437e9dbe3e068/libstdc%2B%2B-v3/include/std/string_view#L295) in GCC.",
      "created_at": "2024-07-22T13:47:32Z",
      "updated_at": "2024-07-22T13:47:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686585389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686585389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686591241",
      "pull_request_review_id": 2191641211,
      "id": 1686591241,
      "node_id": "PRRC_kwDOABII585kh1cJ",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686339331,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686339331\r\n\r\nAgain (see https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686616766) I agree with hodlinator and don't get the desire to add const to a parameter that is passed by value and can't be modified anyway. I'd be curious if there is more reasoning behind the suggestion, but it doesn't seem like an improvement off hand.",
      "created_at": "2024-07-22T13:51:02Z",
      "updated_at": "2024-07-22T14:38:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686591241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686591241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686594294",
      "pull_request_review_id": 2191641211,
      "id": 1686594294,
      "node_id": "PRRC_kwDOABII585kh2L2",
      "diff_hunk": "@@ -102,6 +102,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint256S(\"0x\"+MaxL.ToString()) == MaxL);\n     BOOST_CHECK(uint256S(R1L.ToString()) == R1L);\n     BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"   \") == R1L);\n+    BOOST_CHECK(uint256S(\"   0x\"+R1L.ToString()+\"-trash;%^&   \") == R1L);\n+    BOOST_CHECK(uint256S(\"\\t \\n  \\n \\f\\n\\r\\t\\v\\t   0x\"+R1L.ToString()+\"  \\t \\n  \\n \\f\\n\\r\\t\\v\\t \") == R1L);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686320395,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686476487\r\n\r\nMildly prefer paplorinc's suggestion, but no strong opinion",
      "created_at": "2024-07-22T13:52:57Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686594294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686594294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686605041",
      "pull_request_review_id": 2191641211,
      "id": 1686605041,
      "node_id": "PRRC_kwDOABII585kh4zx",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686541028\r\n\r\nTend to agree with marco, should avoid adding test cases if they are redundant with other ones. Better to put effort into organizing test cases and making them target specific functionality so it is more obvious if there are gaps in coverage and there is less code to maintain.",
      "created_at": "2024-07-22T13:59:15Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686605041",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686605041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686616766",
      "pull_request_review_id": 2191641211,
      "id": 1686616766,
      "node_id": "PRRC_kwDOABII585kh7q-",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686328446\r\n\r\nI don't really think it makes sense to make declare string views const, since the data they point to is already immutable, and the argument is passed by value so no changes to the view inside the function could affect the caller. I think the const just adds verbosity. Not 100% sure about this and haven't thought about it much, but would want to know a specific reason for using const here, or see some broader recommendation somewhere that would explain why to do this.",
      "created_at": "2024-07-22T14:06:51Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686616766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686616766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686625864",
      "pull_request_review_id": 2191641211,
      "id": 1686625864,
      "node_id": "PRRC_kwDOABII585kh95I",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686329623,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> You can of course redo it, I didn't review your change for us to ponder on what could have been...\r\n\r\nI think the while loop is a slightly better but range-for is also ok.\r\n\r\nI still do think as long as you are going to update the loop to respect the length of the input (instead of blowing past it) it would be better update the loop to respect the length of the output as well, and not pointlessly read more data than can actually be used, as suggested https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730.\r\n\r\nNot very important though, especially if this function will be deleted later.",
      "created_at": "2024-07-22T14:12:45Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686625864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686625864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686643778",
      "pull_request_review_id": 2191641211,
      "id": 1686643778,
      "node_id": "PRRC_kwDOABII585kiCRC",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436/files#r1686336262\r\n\r\n> I find it quite confusing that we're sneaking in a mutation of the copy\r\n\r\npaplorinc, maybe it would help if you could say more specifically what you find confusing about this code? At least to me the new implementation of this function seems more straightforward than the previous implementation, though I don't think there is a big difference.\r\n\r\nI don't love the name of the `RemovePrefixView` function, because that name sounds like it actually does modify the string view like `remove_prefix` does, instead of just returning a new string view with the prefix stripped. I think a better name for this function would just be `StripPrefix`. But that's also a subjective opinion, and renaming would be beyond the scope of this PR.",
      "created_at": "2024-07-22T14:24:02Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686643778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686643778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686654314",
      "pull_request_review_id": 2191641211,
      "id": 1686654314,
      "node_id": "PRRC_kwDOABII585kiE1q",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);",
      "path": "src/uint256.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686345800,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686345800\r\n\r\nCalling SetNull, or skipping zeroing as suggested seem like improvements, but no strong opinion. Also think the other suggestions to use begin / end and simplify the loop are good, so added :+1: \r\n\r\nI can also understand other point of view of wanting to change code as little as possible while fixing a bug, and wanting to avoid asking people to rereview code that is changing and potentially introduce new bugs. But whatever you want to do here seems fine.",
      "created_at": "2024-07-22T14:30:32Z",
      "updated_at": "2024-07-22T14:37:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686654314",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686654314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686678529",
      "pull_request_review_id": 2191788233,
      "id": 1686678529,
      "node_id": "PRRC_kwDOABII585kiKwB",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure what you mean exactly, both are the same, one creates a copy via the params (unless it's inlined, I guess, that's why I find it confusing) and modifies the copied instance, the other returns a new copied instance.\r\nI really love speed optimizations that also make the code more readable, but this does neither.\r\n\r\ngiven:\r\n```C++\r\nstatic void SetHexBenchmark(benchmark::Bench& bench)\r\n{\r\n    uint256 hash;\r\n    bench.run([&] {\r\n        hash.SetHex(\"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\");\r\n        hash.SetHex(\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\");\r\n        ankerl::nanobench::doNotOptimizeAway(hash);\r\n    });\r\n}\r\n```\r\n\r\nwith 788fe9cc9ab979c5e14f544ae05dc46436892b81 we're getting `2940379.88 ops/s` on average of 2 runs:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              340.85 |        2,933,826.25 |    0.6% |      0.01 | `SetHexBenchmark`\r\n\r\nand\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              339.34 |        2,946,933.51 |    0.1% |      0.01 | `SetHexBenchmark`\r\n\r\n\r\n\r\nwith `return str.substr(prefix.size());` it's `2936915.645 ops/s` on average for 2 runs:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              340.99 |        2,932,626.59 |    0.6% |      0.01 | `SetHexBenchmark`\r\n\r\nand\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              340.00 |        2,941,204.70 |    0.0% |      0.01 | `SetHexBenchmark`\r\n\r\n\r\nI.e. the difference of the averages is a lot smaller than the variation of individual runs.\r\n\r\nwhich is basically the same speed as `master`:\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              352.95 |        2,833,265.72 |    0.3% |      0.01 | `SetHexBenchmark`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              356.66 |        2,803,757.30 |    1.4% |      0.01 | `SetHexBenchmark`\r\n\r\n------\r\n\r\nlet's focus on making the code cleaner and more maintainable - if it's also faster, great, but let's not make it harder to reason about and maintain for an imaginary speed gain.",
      "created_at": "2024-07-22T14:43:51Z",
      "updated_at": "2024-07-22T15:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686678529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686678529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686699872",
      "pull_request_review_id": 2191826634,
      "id": 1686699872,
      "node_id": "PRRC_kwDOABII585kiP9g",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> the data they point to is already immutable\r\n\r\nThe string part, but not the leading and trailing offsets.\r\n\r\n\r\nThe `const` signals the intention of the `string_view`.\r\nBy declaring it as `const std::string_view str` I'm announcing that its value will be constant throughout the method, right?\r\nBut if it's just `std::string_view str`, I can call `str.remove_prefix` or `str.remove_prefix`, which modifies the internals of the view, so after the call its internal state is different.",
      "created_at": "2024-07-22T14:57:48Z",
      "updated_at": "2024-07-22T14:57:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686699872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686699872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686701139",
      "pull_request_review_id": 2191828693,
      "id": 1686701139,
      "node_id": "PRRC_kwDOABII585kiQRT",
      "diff_hunk": "@@ -115,6 +117,8 @@ BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n     BOOST_CHECK(uint160S(\"0x\"+MaxS.ToString()) == MaxS);\n     BOOST_CHECK(uint160S(R1S.ToString()) == R1S);\n     BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"   \") == R1S);\n+    BOOST_CHECK(uint160S(\"   0x\"+R1S.ToString()+\"-trash;%^&   \") == R1S);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "801404719dbdbbc327b2f1bc24cb11b6d52e3f27",
      "in_reply_to_id": 1686322412,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you think it's redundant, please mark this as resolved.",
      "created_at": "2024-07-22T14:58:40Z",
      "updated_at": "2024-07-22T14:58:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686701139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686701139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686709463",
      "pull_request_review_id": 2191842478,
      "id": 1686709463,
      "node_id": "PRRC_kwDOABII585kiSTX",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> imaginary speed gain.\r\n\r\n\r\nYou are correct that this is not a speed gain. I'd be surprised if the compiler-produced ASM even differed at all. They should be exactly equivalent.\r\n\r\nThis pull request has more than a 100 comments for less lines of code changed, and several reviews that say it is an improvement. There will always be room for more style nits, but I think at some point it is best to leave them for follow-ups or ignore them.",
      "created_at": "2024-07-22T15:04:18Z",
      "updated_at": "2024-07-22T15:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686709463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686709463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686711284",
      "pull_request_review_id": 2191845407,
      "id": 1686711284,
      "node_id": "PRRC_kwDOABII585kiSv0",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686339331,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's not very important in this particular method, but `inline` + `const` could help with the actual inlining - it's also clearer to the reader to understand what happens when mutating the parameter, since after inlining it should ideally avoid the copying (which is easy to do for a const).\r\nAt least this was my thinking for recommending it, let me know if I'm mistaken.",
      "created_at": "2024-07-22T15:05:32Z",
      "updated_at": "2024-07-22T15:05:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686711284",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686711284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686714441",
      "pull_request_review_id": 2191850878,
      "id": 1686714441,
      "node_id": "PRRC_kwDOABII585kiThJ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);",
      "path": "src/uint256.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686345800,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if we're afraid to modify code, it's usually a code smell, which points to not enough test coverage.\r\nInstead of being afraid, we should improve our code coverage.\r\nWe can't take a tank to battle if we're afraid we'll scratch it.",
      "created_at": "2024-07-22T15:07:51Z",
      "updated_at": "2024-07-22T15:07:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686714441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686714441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686726401",
      "pull_request_review_id": 2191870035,
      "id": 1686726401,
      "node_id": "PRRC_kwDOABII585kiWcB",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> it would help if you could say more specifically what you find confusing about this code\r\n\r\nI'll try to rephrase.\r\nFirstly, as you've mentioned as well, the name of the method hints at mutation, but it actually returns a copy of the view.\r\nSecond, it's inline + pass by value mutation, which implies it's not a simple search&replace type inline, since the parameters aren't consts, but it also can't just mutate the original values passed as parameters, so the copy of the parameter is implicit. Making the parameters const and returning a new view directly solves most of these, i.e. you can just copy the internals of the method and paste it to its usage (which helps in theory to understand how the method will behave).\r\nThird, this seems like a premature and untested optimization, which should likely be done in a separate PR, in case the code isn't more readable.",
      "created_at": "2024-07-22T15:16:04Z",
      "updated_at": "2024-07-22T15:16:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686726401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686726401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686729618",
      "pull_request_review_id": 2191875329,
      "id": 1686729618,
      "node_id": "PRRC_kwDOABII585kiXOS",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This pull request has more than a 100 comments for less lines of code changed\r\n\r\nI did all the changes I requested during review (even provided diffs to speed it up), they're not complicated.",
      "created_at": "2024-07-22T15:18:24Z",
      "updated_at": "2024-07-22T15:18:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686729618",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686729618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687164532",
      "pull_request_review_id": 2192589593,
      "id": 1687164532,
      "node_id": "PRRC_kwDOABII585kkBZ0",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686329623,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I still do think as long as you are going to update the loop to respect the length of the input (instead of blowing past it) it would be better update the loop to respect the length of the output as well, and not pointlessly read more data than can actually be used, as suggested https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683086730.\r\n\r\nI tried making the loop counting `digits` actually respect the output length (`WIDTH*2` here) as well.\r\n```C++\r\n    for (const char c : trimmed) {\r\n        if (digits == WIDTH*2 || ::HexDigit(c) == -1) break;\r\n        ++digits;\r\n    }\r\n```\r\nThis uncovered some weird behavior. Suddenly this check started failing:\r\n```C++\r\n    BOOST_CHECK(R1S == uint160S(R1ArrayHex));\r\n```\r\nBecause of how the following loop in `SetHex()` parses digits from the end, it turns out that without the limit on `digits`, **if we were given more hex digits than fit, we would read the rightmost ones rather than the leftmost ones.** :exploding_head:\r\n\r\n(The behavior of reading the rightmost hex digits predates this PR, and I'd rather not go down that rabbit hole, as the function will hopefully be removed - https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1683226283).",
      "created_at": "2024-07-22T21:32:38Z",
      "updated_at": "2024-07-22T21:33:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687164532",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687164532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687538297",
      "pull_request_review_id": 2193151529,
      "id": 1687538297,
      "node_id": "PRRC_kwDOABII585klcp5",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@paplorinc I see `hi`/`lo` is consistent with `secp256k1_uint128`, so I retract my `high` thoughts.\r\n\r\nIt strikes me that the `hi` part of your suggestion is not the one being shifted `<< 4`. Maybe it should be called `lo`?",
      "created_at": "2024-07-23T07:08:08Z",
      "updated_at": "2024-07-23T07:08:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687538297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687538297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687574482",
      "pull_request_review_id": 2193207182,
      "id": 1687574482,
      "node_id": "PRRC_kwDOABII585kllfS",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> the name of the method hints at mutation, but it actually returns a copy of the view.\r\n\r\nThis isn't changed. The function signature is identical in this branch and in current master. Both take a copy of the view and return a copy of the view.\r\n\r\n> so the copy of the parameter is implicit\r\n\r\nNo, from reading the function signature, one knows that a copy is being made when the argument is put in as a function parameter. Also, adding a `const` here does not avoid a copy or make a copy explicit in the function parameter.\r\n\r\nOverall, I don't think a style nit (which all other reviewers so far disagree with) qualifies as a  Nack.\r\n\r\nIf the style-nit was important, it could trivially be fixed up in a follow-up. (There are already two and more will be needed anyway). ",
      "created_at": "2024-07-23T07:35:34Z",
      "updated_at": "2024-07-23T07:35:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687574482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687574482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687577476",
      "pull_request_review_id": 2193212171,
      "id": 1687577476,
      "node_id": "PRRC_kwDOABII585klmOE",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "you're absolutely right, edited the example!",
      "created_at": "2024-07-23T07:38:01Z",
      "updated_at": "2024-07-23T07:38:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687577476",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687577476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687582271",
      "pull_request_review_id": 2193219602,
      "id": 1687582271,
      "node_id": "PRRC_kwDOABII585klnY_",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> No, from reading the function signature, one knows that a copy is being made when the argument is put in as a function parameter\r\n\r\nbut it's an inline function, there is no function parameter.",
      "created_at": "2024-07-23T07:41:35Z",
      "updated_at": "2024-07-23T07:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687582271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687582271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687613008",
      "pull_request_review_id": 2193267698,
      "id": 1687613008,
      "node_id": "PRRC_kwDOABII585klu5Q",
      "diff_hunk": "@@ -83,8 +83,8 @@ std::vector<T> Split(const Span<const char>& sp, char sep)\n \n [[nodiscard]] inline std::string_view RemovePrefixView(std::string_view str, std::string_view prefix)\n {\n-    if (str.substr(0, prefix.size()) == prefix) {\n-        return str.substr(prefix.size());\n+    if (str.starts_with(prefix)) {\n+        str.remove_prefix(prefix.size());",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 7,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686336262,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped `RemovePrefixView()` modification.",
      "created_at": "2024-07-23T08:03:32Z",
      "updated_at": "2024-07-23T08:03:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687613008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687613008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687617049",
      "pull_request_review_id": 2193273134,
      "id": 1687617049,
      "node_id": "PRRC_kwDOABII585klv4Z",
      "diff_hunk": "@@ -18,39 +18,19 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n-    std::fill(m_data.begin(), m_data.end(), 0);\n-\n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n-    size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n-    unsigned char* p1 = m_data.data();\n-    unsigned char* pend = p1 + WIDTH;\n-    while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n-        if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n-            p1++;\n-        }\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n+    size_t digits = std::ranges::find_if(trimmed, [](char c) { return ::HexDigit(c) == -1; }) - trimmed.begin();",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about changing code that will be obsolete in a few commits. It seems wasteful to waste review on code that will be changed or deleted down the line. It seems better to touch every line of code only once (or the least number of times possible), than to repeatedly refactor it, and then remove the \"feature\".\r\n\r\nAlso, this \"refactor\" (d38bcd39cd98dd45c8b530f415339cda2422ec9f)  is introducing new bugs and behavior changes, so it seems like a regression either way.\r\n\r\nFor example, by removing the `std::fill(m_data.begin(), m_data.end(), 0);`, two `SetHex` calls now may result in a different value, because the previous value is not zeroed, but leaked into the new value.\r\n\r\n(I haven't checked for other bugs, but I am sure one can find them by spending more than a few seconds on this)",
      "created_at": "2024-07-23T08:06:04Z",
      "updated_at": "2024-07-23T08:15:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687617049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687617049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687648309",
      "pull_request_review_id": 2193321742,
      "id": 1687648309,
      "node_id": "PRRC_kwDOABII585kl3g1",
      "diff_hunk": "@@ -18,39 +18,19 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n-    std::fill(m_data.begin(), m_data.end(), 0);\n-\n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n-    size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n-    unsigned char* p1 = m_data.data();\n-    unsigned char* pend = p1 + WIDTH;\n-    while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n-        if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n-            p1++;\n-        }\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n+    size_t digits = std::ranges::find_if(trimmed, [](char c) { return ::HexDigit(c) == -1; }) - trimmed.begin();",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "in_reply_to_id": 1687617049,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Not sure about changing code that will be obsolete in a few commits. It seems wasteful to waste review on code that will be changed or deleted down the line. It seems better to touch every line of code only once (or the least number of times possible), than to repeatedly refactor it, and then remove the \"feature\".\r\n\r\nThe function is not being removed as of #30482.\r\n\r\n> For example, by removing the `std::fill(m_data.begin(), m_data.end(), 0);`, two `SetHex` calls now may result in a different value, because the previous value is not zeroed, but leaked into the new value.\r\n\r\nThis is not true, the final loop iterates over the whole of `m_data`, filling zeroes on the remaining elements when running out of `digits`. It felt much more robust to me using a range-for, and cleaner then the previous `p1`/`pend`.",
      "created_at": "2024-07-23T08:27:41Z",
      "updated_at": "2024-07-23T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687648309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687648309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687659582",
      "pull_request_review_id": 2193338960,
      "id": 1687659582,
      "node_id": "PRRC_kwDOABII585kl6Q-",
      "diff_hunk": "@@ -18,39 +18,19 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n-    std::fill(m_data.begin(), m_data.end(), 0);\n-\n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n-    size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n-    unsigned char* p1 = m_data.data();\n-    unsigned char* pend = p1 + WIDTH;\n-    while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n-        if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n-            p1++;\n-        }\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n+    size_t digits = std::ranges::find_if(trimmed, [](char c) { return ::HexDigit(c) == -1; }) - trimmed.begin();",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "in_reply_to_id": 1687617049,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see, the code may be fine then, but I still find it odd to change a line of code repeatedly over time when it can be changed once.\r\n\r\n> The function is not being removed as of #30482.\r\n\r\nCorrect, but parsing less (or more) digits that the data structure can hold does not make sense, so seems best to remove before refactoring this \"feature\". If there is a use-case, it would be good to mention it, so that it is clear that the refactor is the last time this function needs to be touched.",
      "created_at": "2024-07-23T08:35:08Z",
      "updated_at": "2024-07-23T08:35:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687659582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687659582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687673170",
      "pull_request_review_id": 2193359685,
      "id": 1687673170,
      "node_id": "PRRC_kwDOABII585kl9lS",
      "diff_hunk": "@@ -1028,4 +1028,12 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(test_TxidFromString)",
      "path": "src/test/transaction_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "6085aebd9f106cbd29b0b7647b03c4a2f7d632db",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: if you edit again, consider adding @ryanofsky as co-author to the commit",
      "created_at": "2024-07-23T08:44:07Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687673170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687673170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1031,
      "original_line": 1031,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687692528",
      "pull_request_review_id": 2193359685,
      "id": 1687692528,
      "node_id": "PRRC_kwDOABII585kmCTw",
      "diff_hunk": "@@ -129,140 +129,140 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     for (int i = 255; i >= 0; --i) {\n         uint256 TmpL;\n         *(TmpL.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastL < TmpL );\n+        BOOST_CHECK_LT(LastL, TmpL);\n         LastL = TmpL;\n     }\n \n-    BOOST_CHECK( ZeroL < R1L );\n-    BOOST_CHECK( R2L < R1L );\n-    BOOST_CHECK( ZeroL < OneL );\n-    BOOST_CHECK( OneL < MaxL );\n-    BOOST_CHECK( R1L < MaxL );\n-    BOOST_CHECK( R2L < MaxL );\n+    BOOST_CHECK_LT(ZeroL, R1L);\n+    BOOST_CHECK_LT(R2L, R1L);\n+    BOOST_CHECK_LT(ZeroL, OneL);\n+    BOOST_CHECK_LT(OneL, MaxL);\n+    BOOST_CHECK_LT(R1L, MaxL);\n+    BOOST_CHECK_LT(R2L, MaxL);\n \n     uint160 LastS;\n     for (int i = 159; i >= 0; --i) {\n         uint160 TmpS;\n         *(TmpS.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastS < TmpS );\n+        BOOST_CHECK_LT(LastS, TmpS);\n         LastS = TmpS;\n     }\n-    BOOST_CHECK( ZeroS < R1S );\n-    BOOST_CHECK( R2S < R1S );\n-    BOOST_CHECK( ZeroS < OneS );\n-    BOOST_CHECK( OneS < MaxS );\n-    BOOST_CHECK( R1S < MaxS );\n-    BOOST_CHECK( R2S < MaxS );\n+    BOOST_CHECK_LT(ZeroS, R1S);\n+    BOOST_CHECK_LT(R2S, R1S);\n+    BOOST_CHECK_LT(ZeroS, OneS);\n+    BOOST_CHECK_LT(OneS, MaxS);\n+    BOOST_CHECK_LT(R1S, MaxS);\n+    BOOST_CHECK_LT(R2S, MaxS);\n }\n \n BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n {\n-    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n-    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n-    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n-    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    BOOST_CHECK_EQUAL(R1L.GetHex(), R1L.ToString());\n+    BOOST_CHECK_EQUAL(R2L.GetHex(), R2L.ToString());\n+    BOOST_CHECK_EQUAL(OneL.GetHex(), OneL.ToString());\n+    BOOST_CHECK_EQUAL(MaxL.GetHex(), MaxL.ToString());\n     uint256 TmpL(R1L);\n-    BOOST_CHECK(TmpL == R1L);\n-    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n-    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == uint256());\n+    BOOST_CHECK_EQUAL(TmpL, R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK_EQUAL(TmpL, R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK_EQUAL(TmpL, uint256());\n \n     TmpL.SetHex(R1L.ToString());\n-    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n-    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n-    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n-    BOOST_CHECK(R1L.size() == sizeof(R1L));\n-    BOOST_CHECK(sizeof(R1L) == 32);\n-    BOOST_CHECK(R1L.size() == 32);\n-    BOOST_CHECK(R2L.size() == 32);\n-    BOOST_CHECK(ZeroL.size() == 32);\n-    BOOST_CHECK(MaxL.size() == 32);\n-    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n-    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n-    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n-    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n-    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n-    BOOST_CHECK(GetSerializeSize(R1L) == 32);\n-    BOOST_CHECK(GetSerializeSize(ZeroL) == 32);\n+    BOOST_CHECK_EQUAL(memcmp(R1L.begin(), R1Array, 32), 0);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 179,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "32d788a94c681b86fad0b003385cac5fb0d8cba4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit (is a bit more verbose, but gives way better error during failure):\r\n```patch\r\ndiff --git a/src/test/uint256_tests.cpp b/src/test/uint256_tests.cpp\r\n--- a/src/test/uint256_tests.cpp\t(revision bfcc016825d8febf366a6b5eec5ed193c2c313bc)\r\n+++ b/src/test/uint256_tests.cpp\t(date 1721726677844)\r\n@@ -169,11 +169,11 @@\r\n     TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK_EQUAL(TmpL, uint256());\r\n \r\n     TmpL.SetHex(R1L.ToString());\r\n-    BOOST_CHECK_EQUAL(memcmp(R1L.begin(), R1Array, 32), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(TmpL.begin(), R1Array, 32), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(R2L.begin(), R2Array, 32), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(ZeroL.begin(), ZeroArray, 32), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(OneL.begin(), OneArray, 32), 0);\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());\r\n     BOOST_CHECK_EQUAL(R1L.size(), sizeof(R1L));\r\n     BOOST_CHECK_EQUAL(sizeof(R1L), 32);\r\n     BOOST_CHECK_EQUAL(R1L.size(), 32);\r\n@@ -215,11 +215,11 @@\r\n     TmpS.SetHex(ZeroS.ToString()); BOOST_CHECK_EQUAL(TmpS, uint160());\r\n \r\n     TmpS.SetHex(R1S.ToString());\r\n-    BOOST_CHECK_EQUAL(memcmp(R1S.begin(), R1Array, 20), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(TmpS.begin(), R1Array, 20), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(R2S.begin(), R2Array, 20), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(ZeroS.begin(), ZeroArray, 20), 0);\r\n-    BOOST_CHECK_EQUAL(memcmp(OneS.begin(), OneArray, 20), 0);\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1S.begin(), R1S.end(), R1Array, R1Array + R1S.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(TmpS.begin(), TmpS.end(), R1Array, R1Array + TmpS.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R2S.begin(), R2S.end(), R2Array, R2Array + R2S.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroS.begin(), ZeroS.end(), ZeroArray, ZeroArray + ZeroS.size());\r\n+    BOOST_CHECK_EQUAL_COLLECTIONS(OneS.begin(), OneS.end(), OneArray, OneArray + OneS.size());\r\n     BOOST_CHECK_EQUAL(R1S.size(), sizeof(R1S));\r\n     BOOST_CHECK_EQUAL(sizeof(R1S), 20);\r\n     BOOST_CHECK_EQUAL(R1S.size(), 20);\r\n```",
      "created_at": "2024-07-23T08:57:06Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687692528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687692528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687693556",
      "pull_request_review_id": 2193359685,
      "id": 1687693556,
      "node_id": "PRRC_kwDOABII585kmCj0",
      "diff_hunk": "@@ -79,6 +79,18 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\n static FastRandomContext g_insecure_rand_ctx_temp_path;\n \n+std::ostream& operator<<(std::ostream& os, const arith_uint256& num)",
      "path": "src/test/util/setup_common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "32d788a94c681b86fad0b003385cac5fb0d8cba4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nice!",
      "created_at": "2024-07-23T08:57:45Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687693556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687693556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687698438",
      "pull_request_review_id": 2193359685,
      "id": 1687698438,
      "node_id": "PRRC_kwDOABII585kmDwG",
      "diff_hunk": "@@ -73,54 +73,54 @@ inline uint160 uint160S(const std::string& str)\n \n BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n {\n-    BOOST_CHECK(1 == 0+1);\n+    BOOST_CHECK_EQUAL(1, 0+1);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "32d788a94c681b86fad0b003385cac5fb0d8cba4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder what this does exactly :)",
      "created_at": "2024-07-23T09:01:12Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687698438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687698438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687739273",
      "pull_request_review_id": 2193359685,
      "id": 1687739273,
      "node_id": "PRRC_kwDOABII585kmNuJ",
      "diff_hunk": "@@ -18,39 +18,19 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n-    std::fill(m_data.begin(), m_data.end(), 0);\n-\n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n-    size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n-    unsigned char* p1 = m_data.data();\n-    unsigned char* pend = p1 + WIDTH;\n-    while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n-        if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n-            p1++;\n-        }\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n+    size_t digits = std::ranges::find_if(trimmed, [](char c) { return ::HexDigit(c) == -1; }) - trimmed.begin();",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "d38bcd39cd98dd45c8b530f415339cda2422ec9f",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1",
      "created_at": "2024-07-23T09:27:42Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687739273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687739273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687749691",
      "pull_request_review_id": 2193359685,
      "id": 1687749691,
      "node_id": "PRRC_kwDOABII585kmQQ7",
      "diff_hunk": "@@ -1030,10 +1030,10 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n \n BOOST_AUTO_TEST_CASE(test_TxidFromString)\n {\n-    // TxidFromString currently ignores string_view length and reads the whole\n-    // string, not the specified substring.\n+    // Make sure TxidFromString respects string_view length and stops reading at\n+    // end of the substring.\n     BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\").substr(0, 4)).ToString(),\n-        \"00000000000000000000000000000000000000000000000000000000abcd1234\");\n+        \"000000000000000000000000000000000000000000000000000000000000abcd\");",
      "path": "src/test/transaction_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1, verified, fails as expected in previous commit\r\nnit, could probably be simplifed to:\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\", 4)),\r\n                      uint256S(\"000000000000000000000000000000000000000000000000000000000000abcd\"));\r\n```",
      "created_at": "2024-07-23T09:34:42Z",
      "updated_at": "2024-07-23T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687749691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687749691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 1035,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1036,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687805203",
      "pull_request_review_id": 2193564187,
      "id": 1687805203,
      "node_id": "PRRC_kwDOABII585kmd0T",
      "diff_hunk": "@@ -73,54 +73,54 @@ inline uint160 uint160S(const std::string& str)\n \n BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n {\n-    BOOST_CHECK(1 == 0+1);\n+    BOOST_CHECK_EQUAL(1, 0+1);",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "32d788a94c681b86fad0b003385cac5fb0d8cba4",
      "in_reply_to_id": 1687698438,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed.. saw it too. Seems like temporary code that somehow made it into the test. Guess I could remove if I retouch.",
      "created_at": "2024-07-23T10:15:00Z",
      "updated_at": "2024-07-23T10:15:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1687805203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687805203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688034493",
      "pull_request_review_id": 2193941123,
      "id": 1688034493,
      "node_id": "PRRC_kwDOABII585knVy9",
      "diff_hunk": "@@ -1030,10 +1030,10 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n \n BOOST_AUTO_TEST_CASE(test_TxidFromString)\n {\n-    // TxidFromString currently ignores string_view length and reads the whole\n-    // string, not the specified substring.\n+    // Make sure TxidFromString respects string_view length and stops reading at\n+    // end of the substring.\n     BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\").substr(0, 4)).ToString(),\n-        \"00000000000000000000000000000000000000000000000000000000abcd1234\");\n+        \"000000000000000000000000000000000000000000000000000000000000abcd\");",
      "path": "src/test/transaction_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "bfcc016825d8febf366a6b5eec5ed193c2c313bc",
      "in_reply_to_id": 1687749691,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the `.substr()` now but kept the raw string instead of wrapping the second parameter in `uint256S()`.",
      "created_at": "2024-07-23T13:08:01Z",
      "updated_at": "2024-07-23T13:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688034493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688034493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": 1035,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1036,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688088749",
      "pull_request_review_id": 2194030280,
      "id": 1688088749,
      "node_id": "PRRC_kwDOABII585knjCt",
      "diff_hunk": "@@ -129,140 +127,147 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     for (int i = 255; i >= 0; --i) {\n         uint256 TmpL;\n         *(TmpL.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastL < TmpL );\n+        BOOST_CHECK_LT(LastL, TmpL);\n         LastL = TmpL;\n     }\n \n-    BOOST_CHECK( ZeroL < R1L );\n-    BOOST_CHECK( R2L < R1L );\n-    BOOST_CHECK( ZeroL < OneL );\n-    BOOST_CHECK( OneL < MaxL );\n-    BOOST_CHECK( R1L < MaxL );\n-    BOOST_CHECK( R2L < MaxL );\n+    BOOST_CHECK_LT(ZeroL, R1L);\n+    BOOST_CHECK_LT(R2L, R1L);\n+    BOOST_CHECK_LT(ZeroL, OneL);\n+    BOOST_CHECK_LT(OneL, MaxL);\n+    BOOST_CHECK_LT(R1L, MaxL);\n+    BOOST_CHECK_LT(R2L, MaxL);\n \n     uint160 LastS;\n     for (int i = 159; i >= 0; --i) {\n         uint160 TmpS;\n         *(TmpS.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastS < TmpS );\n+        BOOST_CHECK_LT(LastS, TmpS);\n         LastS = TmpS;\n     }\n-    BOOST_CHECK( ZeroS < R1S );\n-    BOOST_CHECK( R2S < R1S );\n-    BOOST_CHECK( ZeroS < OneS );\n-    BOOST_CHECK( OneS < MaxS );\n-    BOOST_CHECK( R1S < MaxS );\n-    BOOST_CHECK( R2S < MaxS );\n+    BOOST_CHECK_LT(ZeroS, R1S);\n+    BOOST_CHECK_LT(R2S, R1S);\n+    BOOST_CHECK_LT(ZeroS, OneS);\n+    BOOST_CHECK_LT(OneS, MaxS);\n+    BOOST_CHECK_LT(R1S, MaxS);\n+    BOOST_CHECK_LT(R2S, MaxS);\n+\n+    // Verify hex strings are little-endian\n+    BOOST_CHECK_LT(uint256S(\"2000000000000000000000000000000000000000000000000000000000000001\"),\n+                   uint256S(\"1000000000000000000000000000000000000000000000000000000000000002\"));\n }\n \n BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n {\n-    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n-    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n-    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n-    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    BOOST_CHECK_EQUAL(R1L.GetHex(), R1L.ToString());\n+    BOOST_CHECK_EQUAL(R2L.GetHex(), R2L.ToString());\n+    BOOST_CHECK_EQUAL(OneL.GetHex(), OneL.ToString());\n+    BOOST_CHECK_EQUAL(MaxL.GetHex(), MaxL.ToString());\n     uint256 TmpL(R1L);\n-    BOOST_CHECK(TmpL == R1L);\n-    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n-    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == uint256());\n+    BOOST_CHECK_EQUAL(TmpL, R1L);\n+    // Verify previous values don't persist when setting to truncated string.",
      "path": "src/test/uint256_tests.cpp",
      "position": 180,
      "original_position": 180,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1",
      "created_at": "2024-07-23T13:40:30Z",
      "updated_at": "2024-07-23T13:40:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688088749",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688088749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 168,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688092025",
      "pull_request_review_id": 2194035448,
      "id": 1688092025,
      "node_id": "PRRC_kwDOABII585knj15",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(const std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n \n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : trimmed) {\n+        if (::HexDigit(c) == -1) break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: was\r\n```suggestion\r\n while (digits < trimmed.size() && ::HexDigit(trimmed[digits]) != -1)\r\n        ++digits;\r\n```\r\nalso controversial? It has a simpler diff",
      "created_at": "2024-07-23T13:42:27Z",
      "updated_at": "2024-07-23T13:42:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688092025",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688092025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 31,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688273553",
      "pull_request_review_id": 2194332792,
      "id": 1688273553,
      "node_id": "PRRC_kwDOABII585koQKR",
      "diff_hunk": "@@ -129,140 +128,140 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     for (int i = 255; i >= 0; --i) {\n         uint256 TmpL;\n         *(TmpL.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastL < TmpL );\n+        BOOST_CHECK_LT(LastL, TmpL);\n         LastL = TmpL;\n     }\n \n-    BOOST_CHECK( ZeroL < R1L );\n-    BOOST_CHECK( R2L < R1L );\n-    BOOST_CHECK( ZeroL < OneL );\n-    BOOST_CHECK( OneL < MaxL );\n-    BOOST_CHECK( R1L < MaxL );\n-    BOOST_CHECK( R2L < MaxL );\n+    BOOST_CHECK_LT(ZeroL, R1L);\n+    BOOST_CHECK_LT(R2L, R1L);\n+    BOOST_CHECK_LT(ZeroL, OneL);\n+    BOOST_CHECK_LT(OneL, MaxL);\n+    BOOST_CHECK_LT(R1L, MaxL);\n+    BOOST_CHECK_LT(R2L, MaxL);\n \n     uint160 LastS;\n     for (int i = 159; i >= 0; --i) {\n         uint160 TmpS;\n         *(TmpS.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastS < TmpS );\n+        BOOST_CHECK_LT(LastS, TmpS);\n         LastS = TmpS;\n     }\n-    BOOST_CHECK( ZeroS < R1S );\n-    BOOST_CHECK( R2S < R1S );\n-    BOOST_CHECK( ZeroS < OneS );\n-    BOOST_CHECK( OneS < MaxS );\n-    BOOST_CHECK( R1S < MaxS );\n-    BOOST_CHECK( R2S < MaxS );\n+    BOOST_CHECK_LT(ZeroS, R1S);\n+    BOOST_CHECK_LT(R2S, R1S);\n+    BOOST_CHECK_LT(ZeroS, OneS);\n+    BOOST_CHECK_LT(OneS, MaxS);\n+    BOOST_CHECK_LT(R1S, MaxS);\n+    BOOST_CHECK_LT(R2S, MaxS);\n }\n \n BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n {\n-    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n-    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n-    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n-    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    BOOST_CHECK_EQUAL(R1L.GetHex(), R1L.ToString());\n+    BOOST_CHECK_EQUAL(R2L.GetHex(), R2L.ToString());\n+    BOOST_CHECK_EQUAL(OneL.GetHex(), OneL.ToString());\n+    BOOST_CHECK_EQUAL(MaxL.GetHex(), MaxL.ToString());\n     uint256 TmpL(R1L);\n-    BOOST_CHECK(TmpL == R1L);\n-    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n-    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == uint256());\n+    BOOST_CHECK_EQUAL(TmpL, R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK_EQUAL(TmpL, R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK_EQUAL(TmpL, uint256());\n \n     TmpL.SetHex(R1L.ToString());\n-    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n-    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n-    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n-    BOOST_CHECK(R1L.size() == sizeof(R1L));\n-    BOOST_CHECK(sizeof(R1L) == 32);\n-    BOOST_CHECK(R1L.size() == 32);\n-    BOOST_CHECK(R2L.size() == 32);\n-    BOOST_CHECK(ZeroL.size() == 32);\n-    BOOST_CHECK(MaxL.size() == 32);\n-    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n-    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n-    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n-    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n-    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n-    BOOST_CHECK(GetSerializeSize(R1L) == 32);\n-    BOOST_CHECK(GetSerializeSize(ZeroL) == 32);\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());",
      "path": "src/test/uint256_tests.cpp",
      "position": 209,
      "original_position": 182,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f11f816800ac520064a1e96871d0b4cc9601ced7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in f11f816800ac520064a1e96871d0b4cc9601ced7: Seems confusing to use the left size to calculate the right end. Seems easier to just use `std::end(right)`, if it compiles?\r\n\r\nEdit: Or use `std::array` and the `begin()` and `end()` methods.",
      "created_at": "2024-07-23T15:29:39Z",
      "updated_at": "2024-07-23T18:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688273553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688273553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 175,
      "original_start_line": 169,
      "start_side": "RIGHT",
      "line": 179,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688288830",
      "pull_request_review_id": 2194357807,
      "id": 1688288830,
      "node_id": "PRRC_kwDOABII585koT4-",
      "diff_hunk": "@@ -58,13 +58,7 @@ static std::string ArrayToString(const unsigned char A[], unsigned int width)\n     return Stream.str();\n }\n \n-inline uint160 uint160S(const char *str)\n-{\n-    uint160 rv;\n-    rv.SetHex(str);\n-    return rv;\n-}\n-inline uint160 uint160S(const std::string& str)\n+inline uint160 uint160S(std::string_view str)",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 11,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686339331,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686711284\r\n\r\n> it's not very important in this particular method, but `inline` + `const` could help with the actual inlining - it's also clearer to the reader to understand what happens when mutating the parameter, since after inlining it should ideally avoid the copying (which is easy to do for a const). At least this was my thinking for recommending it, let me know if I'm mistaken.\r\n\r\nResponded in the other thread https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686699872",
      "created_at": "2024-07-23T15:39:29Z",
      "updated_at": "2024-07-23T17:14:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688288830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688288830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688337546",
      "pull_request_review_id": 2194357807,
      "id": 1688337546,
      "node_id": "PRRC_kwDOABII585kofyK",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1686699872\r\n\r\n> so after the call its internal state is different.\r\n\r\nI may not be understanding the claim correctly, but just to be clear, the string_view argument is passed by value (not by reference) so it can't be changed by the call.\r\n\r\nFrom the callers point of view there is no difference between:\r\n\r\n```c++\r\nvoid ProcessString(std::string_view str);\r\nvoid ProcessString(const std::string_view str);\r\n```\r\n\r\nEither way, whatever argument they pass will not be changed by the call. That is why my general opinion of const value parameters is that the `const` mostly adds verbosity and does not provide benefits to callers.\r\n\r\nIt is true that inside the function definition, the const could have an effect because it makes it not possible to modify or reassign the `str` variable, which could be good, but also bad. For example it would prevent changing\r\n\r\n```diff\r\n-const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\r\n+str = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\r\n```\r\n\r\nand reducing the number of slightly different variables pointing to the same hex string, which could easily prevent bugs. For example a [bug](https://github.com/bitcoin/bitcoin/pull/30386#discussion_r1683742656) was fixed last week, caused by having two slightly different variables refer to the same log string.\r\n\r\nYour other claims about inlining are interesting but I don't know enough about compilers to know if they are true. My intuition leads me to believe that because specifying `const` on a value parameter does not change semantics of the call, adding `const` does not provide the compiler with any information it didn't already have, so wouldn't affect inlining. But I could be wrong about that.",
      "created_at": "2024-07-23T16:10:05Z",
      "updated_at": "2024-07-23T17:14:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688337546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688337546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688553678",
      "pull_request_review_id": 2194801631,
      "id": 1688553678,
      "node_id": "PRRC_kwDOABII585kpUjO",
      "diff_hunk": "@@ -129,140 +128,140 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     for (int i = 255; i >= 0; --i) {\n         uint256 TmpL;\n         *(TmpL.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastL < TmpL );\n+        BOOST_CHECK_LT(LastL, TmpL);\n         LastL = TmpL;\n     }\n \n-    BOOST_CHECK( ZeroL < R1L );\n-    BOOST_CHECK( R2L < R1L );\n-    BOOST_CHECK( ZeroL < OneL );\n-    BOOST_CHECK( OneL < MaxL );\n-    BOOST_CHECK( R1L < MaxL );\n-    BOOST_CHECK( R2L < MaxL );\n+    BOOST_CHECK_LT(ZeroL, R1L);\n+    BOOST_CHECK_LT(R2L, R1L);\n+    BOOST_CHECK_LT(ZeroL, OneL);\n+    BOOST_CHECK_LT(OneL, MaxL);\n+    BOOST_CHECK_LT(R1L, MaxL);\n+    BOOST_CHECK_LT(R2L, MaxL);\n \n     uint160 LastS;\n     for (int i = 159; i >= 0; --i) {\n         uint160 TmpS;\n         *(TmpS.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastS < TmpS );\n+        BOOST_CHECK_LT(LastS, TmpS);\n         LastS = TmpS;\n     }\n-    BOOST_CHECK( ZeroS < R1S );\n-    BOOST_CHECK( R2S < R1S );\n-    BOOST_CHECK( ZeroS < OneS );\n-    BOOST_CHECK( OneS < MaxS );\n-    BOOST_CHECK( R1S < MaxS );\n-    BOOST_CHECK( R2S < MaxS );\n+    BOOST_CHECK_LT(ZeroS, R1S);\n+    BOOST_CHECK_LT(R2S, R1S);\n+    BOOST_CHECK_LT(ZeroS, OneS);\n+    BOOST_CHECK_LT(OneS, MaxS);\n+    BOOST_CHECK_LT(R1S, MaxS);\n+    BOOST_CHECK_LT(R2S, MaxS);\n }\n \n BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n {\n-    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n-    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n-    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n-    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    BOOST_CHECK_EQUAL(R1L.GetHex(), R1L.ToString());\n+    BOOST_CHECK_EQUAL(R2L.GetHex(), R2L.ToString());\n+    BOOST_CHECK_EQUAL(OneL.GetHex(), OneL.ToString());\n+    BOOST_CHECK_EQUAL(MaxL.GetHex(), MaxL.ToString());\n     uint256 TmpL(R1L);\n-    BOOST_CHECK(TmpL == R1L);\n-    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n-    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == uint256());\n+    BOOST_CHECK_EQUAL(TmpL, R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK_EQUAL(TmpL, R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK_EQUAL(TmpL, uint256());\n \n     TmpL.SetHex(R1L.ToString());\n-    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n-    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n-    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n-    BOOST_CHECK(R1L.size() == sizeof(R1L));\n-    BOOST_CHECK(sizeof(R1L) == 32);\n-    BOOST_CHECK(R1L.size() == 32);\n-    BOOST_CHECK(R2L.size() == 32);\n-    BOOST_CHECK(ZeroL.size() == 32);\n-    BOOST_CHECK(MaxL.size() == 32);\n-    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n-    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n-    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n-    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n-    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n-    BOOST_CHECK(GetSerializeSize(R1L) == 32);\n-    BOOST_CHECK(GetSerializeSize(ZeroL) == 32);\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());",
      "path": "src/test/uint256_tests.cpp",
      "position": 209,
      "original_position": 182,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f11f816800ac520064a1e96871d0b4cc9601ced7",
      "in_reply_to_id": 1688273553,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I originally did that for the +32 case, but wasn't working for the +20",
      "created_at": "2024-07-23T18:56:32Z",
      "updated_at": "2024-07-23T18:56:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688553678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688553678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 175,
      "original_start_line": 169,
      "start_side": "RIGHT",
      "line": 179,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688610458",
      "pull_request_review_id": 2194899850,
      "id": 1688610458,
      "node_id": "PRRC_kwDOABII585kpiaa",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(const std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n+    const auto trimmed = util::RemovePrefixView(util::TrimStringView(str), \"0x\");\n \n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n-\n-    // hex string to uint\n+    // Note: if we are passed a greater number of digits than would fit as bytes\n+    // in m_data, we will be discarding the leftmost ones.\n+    // str=\"12bc\" in a WIDTH=1 m_data => m_data[] == \"\\0xbc\", not \"0x12\".\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : trimmed) {\n+        if (::HexDigit(c) == -1) break;\n+        ++digits;\n+    }",
      "path": "src/uint256.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": 1688092025,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree the diff would have been simpler, in this instance I was attempting to revert back to what already had been discussed and ACK:ed before you joined the review. Thanks for helping improve this PR!",
      "created_at": "2024-07-23T19:30:36Z",
      "updated_at": "2024-07-23T19:30:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688610458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688610458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 31,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688616750",
      "pull_request_review_id": 2194909984,
      "id": 1688616750,
      "node_id": "PRRC_kwDOABII585kpj8u",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let me try a different angle: if a method is inline, I would expect to be able to copy-paste its content to the call site directly (at least conceptually, to understand its effect).\r\nIf the method is pure in a functional sense (including that it doesn't even mutate its parameters), it's a lot easier to reason about its overall behavior.\r\nDoes this resonate more?",
      "created_at": "2024-07-23T19:36:29Z",
      "updated_at": "2024-07-23T19:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688616750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688616750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688621638",
      "pull_request_review_id": 2194917738,
      "id": 1688621638,
      "node_id": "PRRC_kwDOABII585kplJG",
      "diff_hunk": "@@ -79,6 +79,18 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\n static FastRandomContext g_insecure_rand_ctx_temp_path;\n \n+std::ostream& operator<<(std::ostream& os, const arith_uint256& num)\n+{\n+    os << ArithToUint256(num).ToString();",
      "path": "src/test/util/setup_common.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is the `ArithToUint256` conversion necessary?",
      "created_at": "2024-07-23T19:41:11Z",
      "updated_at": "2024-07-23T19:42:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688621638",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688621638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688630912",
      "pull_request_review_id": 2194935875,
      "id": 1688630912,
      "node_id": "PRRC_kwDOABII585kpnaA",
      "diff_hunk": "@@ -79,6 +79,18 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\n static FastRandomContext g_insecure_rand_ctx_temp_path;\n \n+std::ostream& operator<<(std::ostream& os, const arith_uint256& num)\n+{\n+    os << ArithToUint256(num).ToString();",
      "path": "src/test/util/setup_common.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": 1688621638,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, I missed the `base_uint::ToString()` method. Not as familiar with `arith_uint256` as I am with `uint256` yet.\r\n\r\nShould probably also document endianness of `arith_uint256` strings to mirror the added comments to `uint256` in this PR.",
      "created_at": "2024-07-23T19:49:10Z",
      "updated_at": "2024-07-23T19:49:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688630912",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1688630912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692929751",
      "pull_request_review_id": 2201606798,
      "id": 1692929751,
      "node_id": "PRRC_kwDOABII585k6A7X",
      "diff_hunk": "@@ -129,140 +128,140 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     for (int i = 255; i >= 0; --i) {\n         uint256 TmpL;\n         *(TmpL.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastL < TmpL );\n+        BOOST_CHECK_LT(LastL, TmpL);\n         LastL = TmpL;\n     }\n \n-    BOOST_CHECK( ZeroL < R1L );\n-    BOOST_CHECK( R2L < R1L );\n-    BOOST_CHECK( ZeroL < OneL );\n-    BOOST_CHECK( OneL < MaxL );\n-    BOOST_CHECK( R1L < MaxL );\n-    BOOST_CHECK( R2L < MaxL );\n+    BOOST_CHECK_LT(ZeroL, R1L);\n+    BOOST_CHECK_LT(R2L, R1L);\n+    BOOST_CHECK_LT(ZeroL, OneL);\n+    BOOST_CHECK_LT(OneL, MaxL);\n+    BOOST_CHECK_LT(R1L, MaxL);\n+    BOOST_CHECK_LT(R2L, MaxL);\n \n     uint160 LastS;\n     for (int i = 159; i >= 0; --i) {\n         uint160 TmpS;\n         *(TmpS.begin() + (i>>3)) |= 1<<(7-(i&7));\n-        BOOST_CHECK( LastS < TmpS );\n+        BOOST_CHECK_LT(LastS, TmpS);\n         LastS = TmpS;\n     }\n-    BOOST_CHECK( ZeroS < R1S );\n-    BOOST_CHECK( R2S < R1S );\n-    BOOST_CHECK( ZeroS < OneS );\n-    BOOST_CHECK( OneS < MaxS );\n-    BOOST_CHECK( R1S < MaxS );\n-    BOOST_CHECK( R2S < MaxS );\n+    BOOST_CHECK_LT(ZeroS, R1S);\n+    BOOST_CHECK_LT(R2S, R1S);\n+    BOOST_CHECK_LT(ZeroS, OneS);\n+    BOOST_CHECK_LT(OneS, MaxS);\n+    BOOST_CHECK_LT(R1S, MaxS);\n+    BOOST_CHECK_LT(R2S, MaxS);\n }\n \n BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n {\n-    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n-    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n-    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n-    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    BOOST_CHECK_EQUAL(R1L.GetHex(), R1L.ToString());\n+    BOOST_CHECK_EQUAL(R2L.GetHex(), R2L.ToString());\n+    BOOST_CHECK_EQUAL(OneL.GetHex(), OneL.ToString());\n+    BOOST_CHECK_EQUAL(MaxL.GetHex(), MaxL.ToString());\n     uint256 TmpL(R1L);\n-    BOOST_CHECK(TmpL == R1L);\n-    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n-    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == uint256());\n+    BOOST_CHECK_EQUAL(TmpL, R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK_EQUAL(TmpL, R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK_EQUAL(TmpL, uint256());\n \n     TmpL.SetHex(R1L.ToString());\n-    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n-    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n-    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n-    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n-    BOOST_CHECK(R1L.size() == sizeof(R1L));\n-    BOOST_CHECK(sizeof(R1L) == 32);\n-    BOOST_CHECK(R1L.size() == 32);\n-    BOOST_CHECK(R2L.size() == 32);\n-    BOOST_CHECK(ZeroL.size() == 32);\n-    BOOST_CHECK(MaxL.size() == 32);\n-    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n-    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n-    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n-    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n-    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n-    BOOST_CHECK(GetSerializeSize(R1L) == 32);\n-    BOOST_CHECK(GetSerializeSize(ZeroL) == 32);\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());",
      "path": "src/test/uint256_tests.cpp",
      "position": 209,
      "original_position": 182,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f11f816800ac520064a1e96871d0b4cc9601ced7",
      "in_reply_to_id": 1688273553,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree it is bad form to use variable from the left side of the comparison in the right side.\r\n\r\nTested `std::end(R1Array)` but it would be off by 1 thanks to the null-terminator in the string, resulting in a size/distance-mismatch between the collections/iterators being tested.\r\n\r\nFollow-up fixing this issue: #30526",
      "created_at": "2024-07-26T11:28:23Z",
      "updated_at": "2024-07-26T11:28:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1692929751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692929751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": 175,
      "original_start_line": 169,
      "start_side": "RIGHT",
      "line": 179,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692930107",
      "pull_request_review_id": 2201607309,
      "id": 1692930107,
      "node_id": "PRRC_kwDOABII585k6BA7",
      "diff_hunk": "@@ -79,6 +79,18 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\n static FastRandomContext g_insecure_rand_ctx_temp_path;\n \n+std::ostream& operator<<(std::ostream& os, const arith_uint256& num)\n+{\n+    os << ArithToUint256(num).ToString();",
      "path": "src/test/util/setup_common.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "in_reply_to_id": 1688621638,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Follow-up fixing this issue: #30526",
      "created_at": "2024-07-26T11:28:40Z",
      "updated_at": "2024-07-26T11:28:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1692930107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692930107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692934050",
      "pull_request_review_id": 2201613595,
      "id": 1692934050,
      "node_id": "PRRC_kwDOABII585k6B-i",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)\n {\n     std::fill(m_data.begin(), m_data.end(), 0);\n \n-    // skip leading spaces\n-    while (IsSpace(*psz))\n-        psz++;\n-\n-    // skip 0x\n-    if (psz[0] == '0' && ToLower(psz[1]) == 'x')\n-        psz += 2;\n+    str = util::TrimStringView(str);\n+    str = util::RemovePrefixView(str, \"0x\");\n \n     // hex string to uint\n     size_t digits = 0;\n-    while (::HexDigit(psz[digits]) != -1)\n-        digits++;\n+    for (const char c : str) {\n+        if (::HexDigit(c) == -1)\n+            break;\n+        ++digits;\n+    }\n     unsigned char* p1 = m_data.data();\n     unsigned char* pend = p1 + WIDTH;\n     while (digits > 0 && p1 < pend) {\n-        *p1 = ::HexDigit(psz[--digits]);\n+        *p1 = ::HexDigit(str[--digits]);\n         if (digits > 0) {\n-            *p1 |= ((unsigned char)::HexDigit(psz[--digits]) << 4);\n+            *p1 |= ((unsigned char)::HexDigit(str[--digits]) << 4);",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686332889,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Endianness was documented in a re-touch - too bad I got it wrong the first time. :sweat_smile: Follow-up in #30526.",
      "created_at": "2024-07-26T11:32:30Z",
      "updated_at": "2024-07-26T11:32:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1692934050",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692934050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723577797",
      "pull_request_review_id": 2248441743,
      "id": 1723577797,
      "node_id": "PRRC_kwDOABII585mu7XF",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688616750\r\n\r\n> Let me try a different angle: if a method is inline, I would expect to be able to copy-paste its content to the call site directly (at least conceptually, to understand its effect). If the method is pure in a functional sense (including that it doesn't even mutate its parameters), it's a lot easier to reason about its overall behavior. Does this resonate more?\r\n\r\nI actually learned something new about this looking at bc3139e5a5f1bf81e4bb53417157f0f2cef86716 from #30377: apparently our CI tools do not complain if you declare parameters `const` in the function definition but omit the `const` in the function declarations. I previously thought this would cause warnings or lint errors if definitions and declarations weren't exactly the same. So it seems like this provides a good compromise. You can avoid confusing callers by not including a `const` in the declaration that doesn't mean or do anything, while keeping const in the definition if you want to make it obvious that a parameter is not mutated.\r\n\r\nI still think declaring const for function parameters passed by value doesn't make sense as a general rule, but it can make sense in certain cases for the reasons you explained.\r\n\r\nI also learned there is a clang-tidy rule [`readability-avoid-const-params-in-decls`](https://clang.llvm.org/extra/clang-tidy/checks/readability/avoid-const-params-in-decls.html) that might be nice for us to enable.\r\n",
      "created_at": "2024-08-20T16:04:41Z",
      "updated_at": "2024-08-20T16:04:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1723577797",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723577797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723625119",
      "pull_request_review_id": 2248516878,
      "id": 1723625119,
      "node_id": "PRRC_kwDOABII585mvG6f",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> function parameters passed by value doesn't make sense as a general rule\r\n\r\n[Google cpp guide](https://google.github.io/styleguide/cppguide.html#Use_of_const ) mostly aligns with your view on this. However, I approach this from a more functional programming perspective, where I want to infer the possible state changes a method can perform based solely on its signature - or at least what it cannot do.\r\n\r\nThanks for following up on this, @ryanofsky!",
      "created_at": "2024-08-20T16:35:31Z",
      "updated_at": "2024-08-20T16:35:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1723625119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723625119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723693079",
      "pull_request_review_id": 2248626426,
      "id": 1723693079,
      "node_id": "PRRC_kwDOABII585mvXgX",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I approach this from a more functional programming perspective, where I want to infer the possible state changes a method can perform based solely on its signature - or at least what it cannot do.\r\n\r\nYes, that's definitely good and desirable, but my point is that when you add `const` to a c++ function parameter that is passed by value (not passed by reference) the `const` **does not become part of the function signature**. It is completely ignored by callers and has no effect on what inputs can be passed to the function or what changes the function can make to those inputs (because c++ functions already cannot modify inputs which are passed by value).\r\n\r\nThe only effect of adding top-level const on function parameters passed by value is to make local argument variables inside the function definition constant instead of mutable. This can have benefits as well as drawbacks, just like functional programming sometimes has benefits over imperative programming, and sometimes has drawbacks. An important drawback that can happen when variables are immutable is it can lead to proliferation of similarly named variables containing slightly different values because it is not possible to replace existing values, leading to confusion between variables and bugs like https://github.com/bitcoin/bitcoin/pull/30386#discussion_r1683742656. I just think it is good idea to look at things on a case by case basis and not assume functional approaches are always or usually better.",
      "created_at": "2024-08-20T17:28:48Z",
      "updated_at": "2024-08-20T17:28:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1723693079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1723693079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1724906265",
      "pull_request_review_id": 2250563120,
      "id": 1724906265,
      "node_id": "PRRC_kwDOABII585mz_sZ",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We're in 100% agreement here, thanks for detailing your view.\r\n\r\nIn this particular case my thinking was:\r\n> initial code, parameter (copy of the original) is mutated locally, we have to keep track of state changes in our head to understand the method's behavior:\r\n```C++\r\nstd::string_view RemovePrefixView2(std::string_view str, std::string_view prefix)\r\n{\r\n    if (str.starts_with(prefix)) {\r\n        str.remove_prefix(prefix.size());\r\n    }\r\n    return str;\r\n}\r\n```\r\n> adding const makes parameter mutations forbidden - we have to rethink the algo (i.e. code smell):\r\n```C++\r\nstd::string_view RemovePrefixView3(const std::string_view str, const std::string_view prefix)\r\n{\r\n    if (str.starts_with(prefix)) {\r\n        str.remove_prefix(prefix.size()); //  error: 'this' argument to member function 'remove_prefix' has type 'const std::string_view' (aka 'const basic_string_view<char>'), but function is not marked const\r\n    }\r\n    return str;\r\n}\r\n```\r\n> we can return a copy of the view, knowing that `str` didn't change state throughout the method\r\n```C++\r\nstd::string_view RemovePrefixView4(const std::string_view str, const std::string_view prefix)\r\n{\r\n    if (str.starts_with(prefix)) {\r\n        return str.substr(prefix.size());\r\n    }\r\n    return str;\r\n}\r\n```\r\nwhich enables a single return:\r\n```C++\r\nstd::string_view RemovePrefixView5(const std::string_view str, const std::string_view prefix)\r\n{\r\n    return str.starts_with(prefix)\r\n         ? str.substr(prefix.size())\r\n         : str;\r\n}\r\n```\r\nAt which point we might as well remove the `const` from the params, since the new impl is now trivial:\r\n```C++\r\nstd::string_view RemovePrefixView6(std::string_view str, std::string_view prefix)\r\n{\r\n    return str.starts_with(prefix) ? str.substr(prefix.size()) : str;\r\n}\r\n```",
      "created_at": "2024-08-21T11:41:19Z",
      "updated_at": "2024-08-21T11:42:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1724906265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1724906265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725063869",
      "pull_request_review_id": 2250823606,
      "id": 1725063869,
      "node_id": "PRRC_kwDOABII585m0mK9",
      "diff_hunk": "@@ -18,39 +18,31 @@ std::string base_blob<BITS>::GetHex() const\n }\n \n template <unsigned int BITS>\n-void base_blob<BITS>::SetHex(const char* psz)\n+void base_blob<BITS>::SetHex(std::string_view str)",
      "path": "src/uint256.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "09ce3501fa2ea2885a857e380eddb74605f7038c",
      "original_commit_id": "f77d961d926405637dfbdfb9a9baea1fab4f1b7b",
      "in_reply_to_id": 1686328446,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Makes sense that const can expose things even in simple cases and lead to insights and improvements like the one you are suggesting. In this case, I think \"if starts with prefix call remove_prefix\" might be more straightforward than \"if starts with prefix call substr and return portion of the string after the prefix\" but the difference is not great and I take your point in general const can have benefits in places like this.",
      "created_at": "2024-08-21T13:32:39Z",
      "updated_at": "2024-08-21T13:32:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1725063869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725063869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30436"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    }
  ]
}