{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150",
    "id": 2420947155,
    "node_id": "PR_kwDOABII586QTLjT",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32150",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32150.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32150.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
    "number": 32150,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "coinselection: Optimize BnB exploration",
    "user": {
      "login": "murchandamus",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murchandamus",
      "html_url": "https://github.com/murchandamus",
      "followers_url": "https://api.github.com/users/murchandamus/followers",
      "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
      "organizations_url": "https://api.github.com/users/murchandamus/orgs",
      "repos_url": "https://api.github.com/users/murchandamus/repos",
      "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/murchandamus/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR rewrites the implementation of the BnB coinselection algorithm\r\nto skip the duplicate evaluation of previously visited input selections.\r\n\r\nIn the original implementation of BnB, the state of the search is\r\nbacktracked by explicitly walking back to the omission branch and then\r\ntesting again. This retests an equivalent candidate set as before, e.g.,\r\nafter backtracking from {ABC}, it would evaluate {AB_}, before trying\r\n{AB_D}, but {AB_} is equivalent to {AB} which was tested before.\r\n\r\nCoinGrinder tracks the state of the search instead by remembering which\r\nUTXO was last added and explicitly shifting from that UTXO directly to\r\nthe next, so after {ABC}, it will immediately move on to {AB_D}. We\r\nreplicate this approach here.\r\n\r\nAs fewer nodes are visited, this approach will enumerate more possible\r\ncombinations than the original implementation given the same limit for \r\niterations.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-03-27T02:33:51Z",
    "updated_at": "2025-08-05T07:20:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "85d58a04c9993af729d8ccac5fa0a9274bc6460b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "murchandamus:2025-03-rewrite-BnB",
      "ref": "2025-03-rewrite-BnB",
      "sha": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 23979970,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMzk3OTk3MA==",
        "name": "bitcoin",
        "full_name": "murchandamus/bitcoin",
        "owner": {
          "login": "murchandamus",
          "id": 4060799,
          "node_id": "MDQ6VXNlcjQwNjA3OTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/murchandamus",
          "html_url": "https://github.com/murchandamus",
          "followers_url": "https://api.github.com/users/murchandamus/followers",
          "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
          "organizations_url": "https://api.github.com/users/murchandamus/orgs",
          "repos_url": "https://api.github.com/users/murchandamus/repos",
          "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/murchandamus/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/murchandamus/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/murchandamus/bitcoin",
        "archive_url": "https://api.github.com/repos/murchandamus/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/murchandamus/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/murchandamus/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/murchandamus/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/murchandamus/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/murchandamus/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/murchandamus/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/murchandamus/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/murchandamus/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/murchandamus/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/murchandamus/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/murchandamus/bitcoin/events",
        "forks_url": "https://api.github.com/repos/murchandamus/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/murchandamus/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/murchandamus/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/murchandamus/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/murchandamus/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/murchandamus/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/murchandamus/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/murchandamus/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/murchandamus/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/murchandamus/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/murchandamus/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/murchandamus/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/murchandamus/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:murchandamus/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/murchandamus/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/murchandamus/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/murchandamus/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/murchandamus/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/murchandamus/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/murchandamus/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/murchandamus/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/murchandamus/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/murchandamus/bitcoin/hooks",
        "svn_url": "https://github.com/murchandamus/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 252834,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-05T01:44:29Z",
        "created_at": "2014-09-12T23:11:53Z",
        "updated_at": "2025-07-13T19:52:17Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d1b583181dcc31613cd586d63329cb4c4a586972",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37606,
        "stargazers_count": 84884,
        "watchers_count": 84884,
        "size": 290109,
        "default_branch": "master",
        "open_issues_count": 751,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-04T18:04:35Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-05T06:38:34Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 189,
    "deletions": 103,
    "changed_files": 3,
    "commits": 7,
    "review_comments": 31,
    "comments": 14
  },
  "events": [
    {
      "event": "commented",
      "id": 2756305237,
      "node_id": "IC_kwDOABII586kSeFV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2756305237",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:33:54Z",
      "updated_at": "2025-08-05T07:20:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32150.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [yancyribbens](https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758592756) |\n| Stale ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2972167678) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- \"als well as\" -> \"as well as\" [typo in “as well as”]  \n- \"matches the the effective value\" -> \"matches the effective value\" [duplicate “the”]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2756305237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "labeled",
      "id": 17003394747,
      "node_id": "LE_lADOABII586v6UtWzwAAAAP1eza7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17003394747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:33:57Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 17003398361,
      "node_id": "CTDE_lADOABII586v6UtWzwAAAAP1e0TZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17003398361",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:34:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17013761145,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP2GWR5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17013761145",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "613df18b00c6a5b23d829738892438ce64be27f3",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/613df18b00c6a5b23d829738892438ce64be27f3",
      "created_at": "2025-03-27T13:35:36Z"
    },
    {
      "event": "commented",
      "id": 2758592756,
      "node_id": "IC_kwDOABII586kbMj0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2758592756",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T16:05:49Z",
      "updated_at": "2025-03-27T16:05:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758592756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2758612172,
      "node_id": "IC_kwDOABII586kbRTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2758612172",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T16:12:30Z",
      "updated_at": "2025-03-27T16:12:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "I ran benchmarking on master and benchmarking on this branch since it's fairly large change.\r\n\r\nmaster:\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       43,633,696.00 |               22.92 |    0.1% |      0.48 | `CoinSelection`\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32150/commits/e2a4d86131e8f1661eb450c50b8072147965b111:\r\n```\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       40,433,894.00 |               24.73 |    0.1% |      0.44 | `CoinSelection`\r\n```\r\n\r\nlooks like a marginal improvement in bechmarked performance.\r\n",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758612172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17065461357,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP5LkZt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17065461357",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ac0d02b3a7e678a0cf206ad676b6de0b215787c",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/5ac0d02b3a7e678a0cf206ad676b6de0b215787c",
      "created_at": "2025-04-01T00:04:33Z"
    },
    {
      "event": "commented",
      "id": 2767684548,
      "node_id": "IC_kwDOABII586k94PE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2767684548",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T00:05:57Z",
      "updated_at": "2025-04-01T00:05:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on #29532",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2767684548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17065491779,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP5Lr1D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17065491779",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44bab80284f3710ee30805ec3c5da06dd06d4d71",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/44bab80284f3710ee30805ec3c5da06dd06d4d71",
      "created_at": "2025-04-01T00:08:48Z"
    },
    {
      "event": "reviewed",
      "id": 2733815682,
      "node_id": "PRR_kwDOABII586i8reC",
      "url": null,
      "actor": null,
      "commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2733815682",
      "submitted_at": "2025-04-01T19:12:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "renamed",
      "id": 17082914103,
      "node_id": "RTE_lADOABII586v6UtWzwAAAAP6OJU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17082914103",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T21:32:10Z",
      "rename": {
        "from": "refactor: Optimize BnB exploration",
        "to": "coinselection: Optimize BnB exploration"
      }
    },
    {
      "event": "commented",
      "id": 2773089158,
      "node_id": "IC_kwDOABII586lSfuG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773089158",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T16:14:13Z",
      "updated_at": "2025-04-02T16:14:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I ran benchmarking on master and benchmarking on this branch since it's fairly large change.\r\n\r\nIf I remember right the Coin Selection benchmark is rather non-representative. I have a todo to update it somewhere in my backlog.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2773089158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2776283405,
      "node_id": "IC_kwDOABII586lerkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776283405",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T16:04:18Z",
      "updated_at": "2025-04-03T16:04:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If I remember right the Coin Selection benchmark is rather non-representative. I have a todo to update it somewhere in my backlog.\r\n\r\nGood point.  I took a quick look, and the current benchmark runs BnB for only `4` iterations.  there are `1,000` clones and one non clone so most of the work is done by skipping clones which isn't very representative as you say.\r\n\r\nInstead of keeping this in your backlog, shouldn't there be an issue opened so it doesn't get overlooked?  Maybe someone else has the bandwidth to pick it up.  Possibly I could but I also have a large backlog of I'd like to work on.\r\n\r\nAlso, I note there is also `BnBExhaustion(benchmark::Bench& bench)` which is probably more \"representative\" although it also looks like you have a [TODO](https://github.com/bitcoin/bitcoin/pull/29532/files#diff-36ddaeb9e3a5c1aaaccd6b1ed6c770e8344e33dbfd4876b5f0726d84ab47cbab) to re-write that as well:\r\n\r\n> Worth noting that src/bench/coin_selection.cpp makes a copy of the make_hard_case function (commenting as such), so removal here may lead to confusion unless that benchmark is also updated.\r\n",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2776283405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "labeled",
      "id": 17448870241,
      "node_id": "LE_lADOABII586v6UtWzwAAAAQQCKFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17448870241",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T06:36:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17499936110,
      "node_id": "UNLE_lADOABII586v6UtWzwAAAAQTE9Vu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17499936110",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-02T13:21:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17503548696,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQTSvUY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17503548696",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9cfab3be80f0b6c927f780d0470b030a6068135c",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/9cfab3be80f0b6c927f780d0470b030a6068135c",
      "created_at": "2025-05-02T18:43:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17506356821,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQTdc5V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17506356821",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "155d6d926a044826f18be4d2ad8be2dfe463eb41",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/155d6d926a044826f18be4d2ad8be2dfe463eb41",
      "created_at": "2025-05-03T01:43:12Z"
    },
    {
      "event": "ready_for_review",
      "id": 17546393666,
      "node_id": "RFRE_lADOABII586v6UtWzwAAAAQV2LhC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17546393666",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-06T23:35:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17581090335,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQX6iYf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17581090335",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/447551732c999ace9587fe5462305ef1f5bb4fce",
      "created_at": "2025-05-08T21:57:03Z"
    },
    {
      "event": "commented",
      "id": 2864494772,
      "node_id": "IC_kwDOABII586qvLi0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2864494772",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T21:57:54Z",
      "updated_at": "2025-05-08T21:57:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "The preceding PR https://github.com/bitcoin/bitcoin/pull/29532 got merged, so this is now ready for review.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2864494772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "reviewed",
      "id": 2918338099,
      "node_id": "PRR_kwDOABII586t8k4z",
      "url": null,
      "actor": null,
      "commit_id": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2918338099",
      "submitted_at": "2025-06-11T18:48:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "reviewed",
      "id": 2918347276,
      "node_id": "PRR_kwDOABII586t8nIM",
      "url": null,
      "actor": null,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I think the last 2 commits \"opt: Skip evaluation of equivalent input sets\" and \"opt: Skip evaluation of equivalent input sets\" could be combined. The change the last commit makes is to the comment introduced in the commit before it, and removing a line introduced in the commit before it. We generally don't want to add code just to immediately remove it, so I think these can be squashed together.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2918347276",
      "submitted_at": "2025-06-11T20:22:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "reviewed",
      "id": 2918744321,
      "node_id": "PRR_kwDOABII586t-IEB",
      "url": null,
      "actor": null,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think I addressed everything, except the issue for the follow-up.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2918744321",
      "submitted_at": "2025-06-12T00:36:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18103685884,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQ3EFL8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18103685884",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "51ae8024175a75ff0d194d23c2e602b74bec73e1",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/51ae8024175a75ff0d194d23c2e602b74bec73e1",
      "created_at": "2025-06-12T00:37:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18120966542,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQ4GAGO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18120966542",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cf36d1af18f1fdb2f9846634032f468d00d7ddfb",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/cf36d1af18f1fdb2f9846634032f468d00d7ddfb",
      "created_at": "2025-06-12T18:35:39Z"
    },
    {
      "event": "commented",
      "id": 2967888161,
      "node_id": "IC_kwDOABII586w5mEh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2967888161",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-12T19:12:54Z",
      "updated_at": "2025-06-12T19:12:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ready for Review",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2967888161",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2972164440,
      "node_id": "IC_kwDOABII586xJ6FY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2972164440",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T02:58:14Z",
      "updated_at": "2025-06-14T02:58:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry, I forgot to reply to this comment:\r\n\r\n> I think the last 2 commits \"opt: Skip evaluation of equivalent input sets\" and \"opt: Skip evaluation of equivalent input sets\" could be combined. The change the last commit makes is to the comment introduced in the commit before it, and removing a line introduced in the commit before it. We generally don't want to add code just to immediately remove it, so I think these can be squashed together.\r\n\r\nI think of the last two commits as two separate optimizations. The idea that you only have to explore all combinations with the first of several clones in itself can use explaining. The separate step to present the realization that we can skip any UTXO that ties the predecessor on effective value due to the way the UTXO sorting is tie-broken by minimal waste seemed easier to review. The second commit also adds six more lines of documentation and shows per the test that the iteration count is further reduced. I prefer to keep them as two commits.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2972164440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2972167678,
      "node_id": "IC_kwDOABII586xJ63-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2972167678",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T02:59:56Z",
      "updated_at": "2025-06-14T02:59:56Z",
      "author_association": "MEMBER",
      "body": "ACK cf36d1af18f1fdb2f9846634032f468d00d7ddfb",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2972167678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "review_requested",
      "id": 18144440863,
      "node_id": "RRE_lADOABII586v6UtWzwAAAAQ5fjIf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18144440863",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T03:00:00Z",
      "requested_reviewer": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2943855318,
      "node_id": "PRR_kwDOABII586vd6rW",
      "url": null,
      "actor": null,
      "commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2943855318",
      "submitted_at": "2025-06-19T19:12:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "review_requested",
      "id": 18235165678,
      "node_id": "RRE_lADOABII586v6UtWzwAAAAQ-5ovu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18235165678",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T19:12:08Z",
      "requested_reviewer": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2943879965,
      "node_id": "PRR_kwDOABII586veAsd",
      "url": null,
      "actor": null,
      "commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2943879965",
      "submitted_at": "2025-06-19T19:27:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "review_requested",
      "id": 18235303427,
      "node_id": "RRE_lADOABII586v6UtWzwAAAAQ-6KYD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18235303427",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T19:27:52Z",
      "requested_reviewer": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2988989766,
      "node_id": "IC_kwDOABII586yKF1G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2988989766",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T19:37:15Z",
      "updated_at": "2025-06-19T19:37:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think DrahtBot has had too much caffine, he keeps pinging me to review.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2988989766",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "reviewed",
      "id": 2947044312,
      "node_id": "PRR_kwDOABII586vqFPY",
      "url": null,
      "actor": null,
      "commit_id": "cf36d1af18f1fdb2f9846634032f468d00d7ddfb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for your review, @yancyribbens. I think @DrahtBot treats \"Concept ACK\" as a signal that the reviewer intends to later do a full review and will automatically ping reviewers when PRs are updated. I have no idea why it pinged you multiple times, though.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2947044312",
      "submitted_at": "2025-06-20T18:56:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "commented",
      "id": 2993787081,
      "node_id": "IC_kwDOABII586ycZDJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2993787081",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T21:52:30Z",
      "updated_at": "2025-06-21T21:52:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Thanks for your review, @yancyribbens.\r\n\r\nSure, of course  It's on my TODO list to go over it again in more detail since I've really only done a surface level inspection so far.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2993787081",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "mentioned",
      "id": 18258979588,
      "node_id": "MEE_lADOABII586v6UtWzwAAAARAUesE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258979588",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T21:52:31Z"
    },
    {
      "event": "subscribed",
      "id": 18258979599,
      "node_id": "SE_lADOABII586v6UtWzwAAAARAUesP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258979599",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T21:52:31Z"
    },
    {
      "event": "labeled",
      "id": 18975893348,
      "node_id": "LE_lADOABII586v6UtWzwAAAARrDSdk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18975893348",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T18:00:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4ZTE0OTAyMjM2YWNkMzg2NTNhNmQ4ZmY0ZjY5NGY2NTIwY2M4NmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38e14902236acd38653a6d8ff4f694f6520cc86e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/38e14902236acd38653a6d8ff4f694f6520cc86e",
      "tree": {
        "sha": "4b84ce6b67d4e72721c7e95bba36a6c830126dc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b84ce6b67d4e72721c7e95bba36a6c830126dc2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4b84ce6b67d4e72721c7e95bba36a6c830126dc2\nparent d1b583181dcc31613cd586d63329cb4c4a586972\nauthor Murch <murch@murch.one> 1743028363 -0700\ncommitter Murch <murch@murch.one> 1754352428 -0700\n\ncoinselection: Track BnB iteration count in result\n\nThe expected iteration count demonstrates how the following improvements\nreduce iterations will help catch any regressions in the future.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRSzEACgkQe6A1yluQ\nFxPymBAArSvs8FQkHS6aV2G52PHOLU5Vvzqkrcib0gXEJgxYgJMABE5abXf3BoI5\nadFY4rjvzM6prg3tmxSlA6x3ILeA9KrMvKpGryt1gDmnQ+amJgVtYO3xb0+5JXMe\nS41bnYUGbuEV4TonXxjy6HuBeNs4fniOrDuFUH+0/d20L+foHXex77LQHOTGNL0x\nD+6hNSeWSKfAjct0ZZSFta4n4wc/kgIDnUyw6/ZolGV1yQ9ZciRt1Hxs7akJbz9N\ng2thoHGSf9sV2goxOLaQYVzr8S0kOQ6WGZtEK++gP3hlV+pGcyRsu8jO99m/9ryT\nnPLBzGPJgiN6zUacqA9ntInodyUx7Fti/HllqjaZSrvuS7rH9vkiGHfGPdcUBsbL\nQFkMjubKqKwI1zsgxJZxX+nj0OZocWjZhKqwDDVQGEmEOoII7jEzkpXpL19DTBm2\n0VXdGPNQXqQmuYQkJoaFk4Z8Vzaw4YWwkbXfqi19UANAK5665egcLjmLiht1m44h\nkL69zUMjUB9/cnnAoUyrvFNFoks7JECYeq9QFKv0KJpLjwA5FTw3MjlLl5DbefQ4\nemTIYKhhH70XI1xzP24iUFy7CLto1prn7akp6FiEqwnTCdClC8Pg0ixuH1QSPj01\ndMU2gZZ4hkvpOzdVwZWJJXgZOuxMduZY9YdA4TAiJUdBqU7sdwg=\n=TeG4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1b583181dcc31613cd586d63329cb4c4a586972",
          "sha": "d1b583181dcc31613cd586d63329cb4c4a586972",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d1b583181dcc31613cd586d63329cb4c4a586972"
        }
      ],
      "message": "coinselection: Track BnB iteration count in result\n\nThe expected iteration count demonstrates how the following improvements\nreduce iterations will help catch any regressions in the future.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T00:07:08Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-26T22:32:43Z"
      },
      "sha": "38e14902236acd38653a6d8ff4f694f6520cc86e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18980519265,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAARrU71h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18980519265",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "792ed0dfe7f367fd732b2e111425591079070355",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/792ed0dfe7f367fd732b2e111425591079070355",
      "created_at": "2025-08-05T00:07:56Z"
    },
    {
      "event": "commented",
      "id": 3152850345,
      "node_id": "IC_kwDOABII58677K2p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3152850345",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T00:09:09Z",
      "updated_at": "2025-08-05T00:09:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed the merge conflict with #33060.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-3152850345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "unlabeled",
      "id": 18980759832,
      "node_id": "UNLE_lADOABII586v6UtWzwAAAARrV2kY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18980759832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T00:38:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 18980924058,
      "node_id": "LE_lADOABII586v6UtWzwAAAARrWeqa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18980924058",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T01:01:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3152921236,
      "node_id": "IC_kwDOABII58677cKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3152921236",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T01:01:03Z",
      "updated_at": "2025-08-05T01:01:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `multiprocess, i686, DEBUG`: https://github.com/bitcoin/bitcoin/runs/47377999369</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by the failure of the \"coinselection_tests\" test.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-3152921236",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1OTZlNDkxNTYzZDk4YWFiMTBlOWUwYmFhZDQ4NTBhNjE5Nzg0NGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7596e491563d98aab10e9e0baad4850a6197844a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7596e491563d98aab10e9e0baad4850a6197844a",
      "tree": {
        "sha": "a636fb90bbc0a4edc48b3999347c74124158d34b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a636fb90bbc0a4edc48b3999347c74124158d34b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38e14902236acd38653a6d8ff4f694f6520cc86e",
          "sha": "38e14902236acd38653a6d8ff4f694f6520cc86e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38e14902236acd38653a6d8ff4f694f6520cc86e"
        }
      ],
      "message": "coinselection: rewrite BnB in CoinGrinder-style\n\nIn the original implementation of BnB, the state of the search is\nbacktracked by explicitly walking back to the omission branch and then\ntesting again. This retests an equivalent candidate set as before, e.g.,\nafter backtracking from {ABC}, it would evaluate {AB_}, before trying\n{AB_D}, but {AB_} is equivalent to {AB} which was tested before.\n\nCoinGrinder tracks the state of the search instead by remembering which\nUTXO was last added and explicitly shifting from that UTXO directly to\nthe next, so after {ABC}, it will immediately move on to {AB_D}. We\nreplicate this approach here.\n\nThe description of the two optimizations is removed from the\ndocumentation as they will only be implented in a later commit.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:39:27Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-26T23:18:01Z"
      },
      "sha": "7596e491563d98aab10e9e0baad4850a6197844a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiOGFhMDIzZGE0MjZkNTdkNWEwZjI5ZDNkZGZhYmQzYmQzYzZiMDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07",
      "tree": {
        "sha": "c34f71c93562e849ffcfa00462d82cd88093a44d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c34f71c93562e849ffcfa00462d82cd88093a44d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c34f71c93562e849ffcfa00462d82cd88093a44d\nparent 7596e491563d98aab10e9e0baad4850a6197844a\nauthor Murch <murch@murch.one> 1743034698 -0700\ncommitter Murch <murch@murch.one> 1754357979 -0700\n\ncoinselection: Track whether BnB completed\n\nBnB may not be able to exhaustively search all potentially interesting\ncombinations for large UTXO pools, so we keep track of whether the\nsearch was terminated by the iteration limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRYNsACgkQe6A1yluQ\nFxPbvw/9EHUe6p71cTWP9pAhg3WqrFCPcc2l88Gu20OtlMwA457c497x7vYdIepA\ngGJ57eyOtWwV0Ty+9f1ttdre6OSymQRpYW3KGJWzrm54QKpJbkRl+dfhBFiN+sg2\n7xJ6HuYT7kbyEX13MJsXGCYm0/8Xwb2d5LhVwY7ZokzJfaKucY0CF05Wk0DugcY4\noELM3F7XyEdHj0CBOMWJIITuSOwpWbozZabyofYIGwS13kTtx9XkWG8T+AlWvvdY\nyvtpPSE9juEaEhRKeV2KnzpENGhlArmrAUgRe8ShZQSmJuI96+WZGmCBPvSV3Bep\n5Un+0sC5vWYqNfg7J1imljisa3s8w1DVovGN3lirzb8E3QD1T0iFPOe356vj2Otc\nmiHiIza0FJpQkUjAjIA1PFFfcTeODqhqrTQDu5zGVHtCE2TXYoBELgmKH8CH06ZZ\nbADbicnGaXdcozdQGimc6Jjblg+sITI5ancA1iKBmUwXqwGi6WA41ggcJ1omS8pt\nzuFlJVihy0RN6tlEkjOi/Ktc59DuHv63/K2Ttl7Z5iFv2ISMTAkGPwWe0osCp5HC\noOsIKdXxfcCUmjtAfP859JAWeeAyDLiEbdSg72MCkeLugCIdeCN1Ox/RWhAbX1bc\npMKyz/xSV/W6B5d6ly7jySD5bkwnA0H7fq+WXlDhd5UO3uyL0TA=\n=a9gE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7596e491563d98aab10e9e0baad4850a6197844a",
          "sha": "7596e491563d98aab10e9e0baad4850a6197844a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7596e491563d98aab10e9e0baad4850a6197844a"
        }
      ],
      "message": "coinselection: Track whether BnB completed\n\nBnB may not be able to exhaustively search all potentially interesting\ncombinations for large UTXO pools, so we keep track of whether the\nsearch was terminated by the iteration limit.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:39:39Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T00:18:18Z"
      },
      "sha": "ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3ODFhOWQ2MTBlYmRmYTEyOTJjNTRjYjRlNDU5NjQyNjc0MTQ5NTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a781a9d610ebdfa1292c54cb4e45964267414957",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a781a9d610ebdfa1292c54cb4e45964267414957",
      "tree": {
        "sha": "4e53d9e9a2580207cd91983eac9a50df170bd070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e53d9e9a2580207cd91983eac9a50df170bd070"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4e53d9e9a2580207cd91983eac9a50df170bd070\nparent ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07\nauthor Murch <murch@murch.one> 1743038247 -0700\ncommitter Murch <murch@murch.one> 1754358017 -0700\n\ncoinselection: BnB skip exploring high waste\n\nAt high feerates adding more inputs will increase the waste score. If\nthe current waste is already higher than the best selection’s we cannot\nimprove upon the best selection. All solutions that include the current\nselection with more additional inputs must be worse than the best\nselection so far: SHIFT\n\nThis optimization only works at high feerates, because at low feerates,\nadding more inputs decreases waste, so this condition would exit\nprematurely. We would never attempt input sets with higher weight than\nthe prior best selection, even though we would prefer those at low\nfeerates.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRYQEACgkQe6A1yluQ\nFxMpfg//fW/MqWCMzZ1z3PQ0F8o5QQQ3AgHhDsYdVXTmYQ1L3c7fmSSaHuw6o3GR\nBjaG5Q9Tj8uvgLaB5ze/rG/uBUlzSptVzBO/7Yv5BU/Z59CCEX63lle4OnKtTRUO\nZPiNFM1ZCzlhkE7hhBymX/m6YxRRyS8AWPPrKWK9vahKM4ngFPxMQ8pmdMNfrnOH\nG8E/5jovF8SsnFTnaWmX9zd5jJgTMruw+0/MUp0Go0Qhypw3qazZQoi+MRpwmjV7\nz+rbHyTnuC2GWpR2xbdljI6mYfIHvYOiaRWKj9DY2R/tKk4wlE/dNctdqIFJEG8e\nVifKVo2v3KuTAbbr9xvny9Easc2LDLxoxWbtrL7DcVw4aVurY2mzOjet45N7oPIi\naUkpBIty4+Sh7heWYvnLYAcSodC1JvN5YitY5SCEB9smBzKGvaxnQBS6QVniCFUM\n52uQCImL6jmpCK6e+DkoyS77U/+fPgjSt6kL4XfjXkJrvY8+fz9cy8S967xnEPT4\nbP0k6phpNWohu0fZxYzkmAjCj8WUzBVMRdu2Sm74ObvmBJlU1Ui+hwcpSF42U2gY\n82RiFOe/C2rIcjLs5QaW62bgSPBdgrc/upJRjywESfMYXEO5krgv8FAMSMXSaa16\nW82LfpWJVKdSOy5TYLOPNXsAiiwAq679qQkUAjdaudOzBNpJtgU=\n=1c1D\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07",
          "sha": "ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab8aa023da426d57d5a0f29d3ddfabd3bd3c6b07"
        }
      ],
      "message": "coinselection: BnB skip exploring high waste\n\nAt high feerates adding more inputs will increase the waste score. If\nthe current waste is already higher than the best selection’s we cannot\nimprove upon the best selection. All solutions that include the current\nselection with more additional inputs must be worse than the best\nselection so far: SHIFT\n\nThis optimization only works at high feerates, because at low feerates,\nadding more inputs decreases waste, so this condition would exit\nprematurely. We would never attempt input sets with higher weight than\nthe prior best selection, even though we would prefer those at low\nfeerates.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:40:17Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:17:27Z"
      },
      "sha": "a781a9d610ebdfa1292c54cb4e45964267414957"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzYzMzYzI1ODJhZTM2NjgwYWJmZWQyOTBmMjFhMGRjOGJkMWIyZDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83c33c2582ae36680abfed290f21a0dc8bd1b2d7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/83c33c2582ae36680abfed290f21a0dc8bd1b2d7",
      "tree": {
        "sha": "20aee723ae5b36b7856c5b08d1fb9e97a4b54aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20aee723ae5b36b7856c5b08d1fb9e97a4b54aa1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 20aee723ae5b36b7856c5b08d1fb9e97a4b54aa1\nparent a781a9d610ebdfa1292c54cb4e45964267414957\nauthor Murch <murch@murch.one> 1743038662 -0700\ncommitter Murch <murch@murch.one> 1754358054 -0700\n\ncoinselection: Track effective_value lookahead\n\nIntroduces a dedicated data structure to track the total\neffective_value available in the remaining UTXOs at each index of the\nUTXO pool. In contrast to the original approach in BnB, this allows us\nto immediately jump to a lower index instead of visiting every UTXO to\nadd back their eff_value to the lookahead.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRYSYACgkQe6A1yluQ\nFxOqtg//dQAS7/59Svi/ERLy6SpsuxJUAOg8zWp0uFhThQizedpw4o5oUY3RewzZ\nIfJx9jv8Biu7UkD11To8/+tspRjD3qYeQj2XUnlGzW1Q1qds69+fkbBe6K1R2huI\nPLkNdZ94KVyOi07PsURZP2IpdZN7Ot74ObVO2iiSoFliYM21L84dJNgdk+9AeaRb\ngWg6MpmDLnfcuokw5bs+G+d0r+nz9vYDopfw8TUJ9U/LzhyZU9F9jBZQ6pueYhlm\nNsk1kstwpRHHaxs/vvJSKgnJ1evScQFVGeGpWSvOQTDUlEZoDNHLcdzhAGz+D6vi\nDsVPiChupnv9G14nXsHgYZXqKgb1ybTt5QioQXGgBkgVWh4koi1Ha/FUE8tW4zXl\n7R12CYI41Ffg1H4XHEBzZJ7ivjp/Ufv0lJSX8KLL/PRf44CoYCzdvpFtTiReDXSM\nSTkD+k4EARuVscbiod1poYRJ1GgTKyzAgT/3RBaQ8AuIlToYt07rkDSw8PfBH62O\nbq7LHh+L3om70hd3VURW39AdF4kux3v+hcLw3XkqkEzgmzf21qgA6MytSN67omUp\n5ODX/Wl3KVoMGxQRg/g4WyiJqWGlvTM0Qwo+AcFh8GaAa+JOCSh5oJp0S9r9UKkT\nHEx9cLAYg3oQMOIG189EbZ+04AM7bJv1KWUWNM20BSuHBfBNhjU=\n=v0uc\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a781a9d610ebdfa1292c54cb4e45964267414957",
          "sha": "a781a9d610ebdfa1292c54cb4e45964267414957",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a781a9d610ebdfa1292c54cb4e45964267414957"
        }
      ],
      "message": "coinselection: Track effective_value lookahead\n\nIntroduces a dedicated data structure to track the total\neffective_value available in the remaining UTXOs at each index of the\nUTXO pool. In contrast to the original approach in BnB, this allows us\nto immediately jump to a lower index instead of visiting every UTXO to\nadd back their eff_value to the lookahead.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:40:54Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:24:22Z"
      },
      "sha": "83c33c2582ae36680abfed290f21a0dc8bd1b2d7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzNDk0MDQ4ZTM1ZmU5NjFiYWJjZGY4NjZlN2Y5N2JkMGEwY2VmMDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63494048e35fe961babcdf866e7f97bd0a0cef02",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/63494048e35fe961babcdf866e7f97bd0a0cef02",
      "tree": {
        "sha": "7959991f0cb1c671c21ea042677bda314796ee8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7959991f0cb1c671c21ea042677bda314796ee8b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7959991f0cb1c671c21ea042677bda314796ee8b\nparent 83c33c2582ae36680abfed290f21a0dc8bd1b2d7\nauthor Murch <murch@murch.one> 1743039981 -0700\ncommitter Murch <murch@murch.one> 1754358122 -0700\n\nopt: Skip evaluation of equivalent input sets\n\nWhen two successive UTXOs match in effective value and weight, we can\nskip the second if the prior is not selected: adding it would create an\nequivalent input set to a previously evaluated.\n\nE.g. if we have three UTXOs with effective values {5, 3, 3} of the same\nweight each, we want to evaluate\n{5, _, _}, {5, 3, _}, {5, 3, 3}, {_, 3, _}, {_, 3, 3},\nbut skip {5, _, 3}, and {_, _, 3}, because the first 3 is not selected,\nand we therefore do not need to evaluate the second 3 at the same\nposition in the input set.\n\nIf we reach the end of the branch, we must SHIFT the previously selected\nUTXO group instead.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRYWsACgkQe6A1yluQ\nFxMNnA/+ON2EsU9Bjc5cnT1hdFMYwSB+Ck+WVK9Lm1Ll6Qr/5CGNyjFDlllohZSs\nIHpBlDPF6YDrViJV4aKrWQY5aqH/YDnIXcfc2VYg2zJiFgV/hsVw0K4tGnEUichc\n1oF0uC8WM4DqNeWWKfKMhr/l5jQ+q0sEdJTXSQxzKKlGdVnYrA6o28uFxTFHIPWI\nnVIdIqEQ8gxGZDttVeo8qPxmPOGA3Wi5Os0oUuJcUW3cDI7SgU2dT7G7AzILp9SD\n956YIJJ3N2yPRtzuWQv10SDrNwMfeKEh/OyRLTnQialvHSnJwDI0ANmLlOUMzwSM\n/owVTRHYc0FD5SmSTOGSxvJX8xbRpmVRycl1QuJYMUkm6l44VPrUVL8peJepuwOn\nmKIVP0HvfpYXBbRBHsfOIi8Ai5VDFE1ZKg8QC7vAp+LHpHZSqt/EuLHIENFDzjrs\nv84te28Ajux7wkza+OjPpIJ7ejHhYmfgWQauf0vluvKkOI9i48YqzrX2wcxGuioC\np6PmYcvOcvMWf947CSnHMji9nhSGi2Qz8jC1Y1LrHdhxPGtN3HAIPeSFYJi6PTUY\n+FgERAgYX3c2pdQV39qq0s1yygNRm7/AWoBgnp7ioCH2UTGoERVLflHdG/ZoL8DZ\n8StB8n2AROIt82WWuyeyg0cTDMbsim/jVc7jC7Z0RzPbKl8gQ4k=\n=QaAk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83c33c2582ae36680abfed290f21a0dc8bd1b2d7",
          "sha": "83c33c2582ae36680abfed290f21a0dc8bd1b2d7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83c33c2582ae36680abfed290f21a0dc8bd1b2d7"
        }
      ],
      "message": "opt: Skip evaluation of equivalent input sets\n\nWhen two successive UTXOs match in effective value and weight, we can\nskip the second if the prior is not selected: adding it would create an\nequivalent input set to a previously evaluated.\n\nE.g. if we have three UTXOs with effective values {5, 3, 3} of the same\nweight each, we want to evaluate\n{5, _, _}, {5, 3, _}, {5, 3, 3}, {_, 3, _}, {_, 3, 3},\nbut skip {5, _, 3}, and {_, _, 3}, because the first 3 is not selected,\nand we therefore do not need to evaluate the second 3 at the same\nposition in the input set.\n\nIf we reach the end of the branch, we must SHIFT the previously selected\nUTXO group instead.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:42:02Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:46:21Z"
      },
      "sha": "63494048e35fe961babcdf866e7f97bd0a0cef02"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkYzI1YjQxN2ExY2YwOWY5YjBkOWE5YmYxOTdmODUzZGFhMjRjZGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "tree": {
        "sha": "b742782c0f41af1d69bf019fb345fc2563be2f6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b742782c0f41af1d69bf019fb345fc2563be2f6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b742782c0f41af1d69bf019fb345fc2563be2f6c\nparent 63494048e35fe961babcdf866e7f97bd0a0cef02\nauthor Murch <murch@murch.one> 1743040770 -0700\ncommitter Murch <murch@murch.one> 1754358183 -0700\n\nopt: Skip UTXOs with worse waste, same eff_value\n\nWhen two successive UTXOs differ in waste but match in effective value,\nwe can skip the second if the first is not selected, because all input\nsets we can generate by swapping out a less wasteful UTXOs with a more\nwastefull UTXO of matching effective value would be strictly worse.\n\nAlso expand documentation of Branch and Bound.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmiRYacACgkQe6A1yluQ\nFxMGpw/+K2FlSMqG7xVl17Zg0OOWQTYALTwjUYkYUNMYw3D8JVBGXdb3tY6RPYSu\nent2lnUJ8EHxa3RomSNIzioz/yi36neCf63+j4lo4vh9ahFjczY/Lcu0jmY3Sm+B\n+khdlR4LH1YMKR9V+juSADTfd24wfMtNpsqXHG/G2pl60odZlhldRDbnJx4TcjIB\nkJ/IgObVrGHb6Ro7nggQfjf29IIspuIAvsU+g2t5Oz+b1YTDZQVPWHWfkQdw/Vy3\nhJZuH4QJggi4M03dU+E4VEf8LNFKz0lvh9WD9i76n0I7KQDkYLQXZibQXrgQHeYk\nE6pdrweQWVbRC/fFP1yjxpspdeV8KyF4B1qftbU7oElVdRwahMthuvYT1JPq0iuh\nBzXb1hg7sLETbBqtE3VcDZxkIE2ldunhJUW6z+QwFusqbyFW4ZIUjT8QW+xika9O\nedtW803yp/SvqX23MY6raJwu411sLj9/ZMGKUljzoN5vT9jr8SPj1MyuklOu684G\nAb5l9XhsFxOXSV2YbuyAQgbCcLsz1SuRim5FyBJJvbtbKH5mg2UlAzeMLPRT9C0T\nioJ3HeWBmbIfCvgfJIQayDm167hIB4/vGNsnFF1NznJ1y9AI6yQK8QQFKL+Si2R6\nC7q3n4UiinHJ8oxFnlxgQKd2rfyZG9CrCz3kFSlr5+aUtZmAxPE=\n=zjHm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63494048e35fe961babcdf866e7f97bd0a0cef02",
          "sha": "63494048e35fe961babcdf866e7f97bd0a0cef02",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/63494048e35fe961babcdf866e7f97bd0a0cef02"
        }
      ],
      "message": "opt: Skip UTXOs with worse waste, same eff_value\n\nWhen two successive UTXOs differ in waste but match in effective value,\nwe can skip the second if the first is not selected, because all input\nsets we can generate by swapping out a less wasteful UTXOs with a more\nwastefull UTXO of matching effective value would be strictly worse.\n\nAlso expand documentation of Branch and Bound.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-08-05T01:43:03Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:59:30Z"
      },
      "sha": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18981281800,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAARrX2AI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981281800",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "created_at": "2025-08-05T01:44:30Z"
    },
    {
      "event": "unlabeled",
      "id": 18981865863,
      "node_id": "UNLE_lADOABII586v6UtWzwAAAARraEmH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981865863",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:44:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023537613",
      "pull_request_review_id": 2733815682,
      "id": 2023537613,
      "node_id": "PRRC_kwDOABII5854nLvN",
      "diff_hunk": "@@ -130,14 +130,14 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n \n     // Simple success cases\n-    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT}, /*expected_attempts=*/4);\n-    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT}, /*expected_attempts=*/2);\n-    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT}, /*expected_attempts=*/6);\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/3);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, it looks like the backtrack iterations are no longer recorded which effectively makes this probably more of an optimization than a refactor.  Now it's possible more solutions can be found since the number of times the loop will run is effectively more improving search resolution.  May be worth adding a note of that to the commit message.",
      "created_at": "2025-04-01T19:12:26Z",
      "updated_at": "2025-04-01T19:12:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2023537613",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023537613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023709366",
      "pull_request_review_id": 2734099039,
      "id": 2023709366,
      "node_id": "PRRC_kwDOABII5854n1q2",
      "diff_hunk": "@@ -130,14 +130,14 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n \n     // Simple success cases\n-    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT}, /*expected_attempts=*/4);\n-    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT}, /*expected_attempts=*/2);\n-    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT}, /*expected_attempts=*/6);\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/3);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "in_reply_to_id": 2023537613,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I renamed the PR and added more explanation to the opening comment.",
      "created_at": "2025-04-01T21:35:46Z",
      "updated_at": "2025-04-01T21:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2023709366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023709366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140854993",
      "pull_request_review_id": 2918338099,
      "id": 2140854993,
      "node_id": "PRRC_kwDOABII585_mtrR",
      "diff_hunk": "@@ -210,6 +211,9 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         const auto result9 = SelectCoinsBnB(GroupCoins(available_coins.All()), 1 * CENT, coin_selection_params_bnb.m_cost_of_change);\n         BOOST_CHECK(result9);\n         BOOST_CHECK_EQUAL(result9->GetSelectedValue(), 1 * CENT);\n+        // Demonstrate how following improvements reduce iteration count and catch any regressions in the future.",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In df20dd4f905a0d04e48bfe20919cccaff11b9b30 \"coinselection: Track BnB iteration count in result\"\r\n\r\nThis kind of comment belongs in the commit message, not the code.",
      "created_at": "2025-06-11T18:48:31Z",
      "updated_at": "2025-06-11T18:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140854993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140854993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140860995",
      "pull_request_review_id": 2918347276,
      "id": 2140860995,
      "node_id": "PRRC_kwDOABII585_mvJD",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\ns/section/selection",
      "created_at": "2025-06-11T18:52:12Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140860995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140860995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140951729",
      "pull_request_review_id": 2918347276,
      "id": 2140951729,
      "node_id": "PRRC_kwDOABII585_nFSx",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\n`should_cut` is not used after this, there is no need to reset it.",
      "created_at": "2025-06-11T19:54:09Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140951729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140951729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140952030",
      "pull_request_review_id": 2918347276,
      "id": 2140952030,
      "node_id": "PRRC_kwDOABII585_nFXe",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": 230,
      "original_position": 203,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\n`should_shift` is not used after this, there is no need to reset it.",
      "created_at": "2025-06-11T19:54:21Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140952030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140952030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 241,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140957548",
      "pull_request_review_id": 2918347276,
      "id": 2140957548,
      "node_id": "PRRC_kwDOABII585_nGts",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 196,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nThis comment should be after the `if`",
      "created_at": "2025-06-11T19:58:28Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140957548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140957548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140964773",
      "pull_request_review_id": 2918347276,
      "id": 2140964773,
      "node_id": "PRRC_kwDOABII585_nIel",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;\n         }\n     }\n \n-    // Check for solution\n+    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n+    result.SetSelectionsEvaluated(curr_try);\n+\n     if (best_selection.empty()) {\n         return max_tx_weight_exceeded ? ErrorMaxWeightExceeded() : util::Error();\n     }\n \n-    // Set output set\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.RecalculateWaste(cost_of_change, cost_of_change, CAmount{0});\n-    assert(best_waste == result.GetWaste());",
      "path": "src/wallet/coinselection.cpp",
      "position": 288,
      "original_position": 220,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhy is the waste calculation being dropped? `result` will be returned with an incorrect waste value.",
      "created_at": "2025-06-11T20:03:42Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140964773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140964773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": 197,
      "original_start_line": 198,
      "start_side": "LEFT",
      "line": 198,
      "original_line": 198,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140968745",
      "pull_request_review_id": 2918347276,
      "id": 2140968745,
      "node_id": "PRRC_kwDOABII585_nJcp",
      "diff_hunk": "@@ -157,6 +158,9 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n         } else if (curr_amount > selection_target + cost_of_change) {\n             // Overshot target range: SHIFT\n             should_shift = true;\n+        } else if (is_feerate_high && curr_selection_waste > best_waste) {",
      "path": "src/wallet/coinselection.cpp",
      "position": 171,
      "original_position": 12,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "813ac54726866b1051c502fe8bfef3b279af890f",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 813ac54726866b1051c502fe8bfef3b279af890f \"coinselection: BnB skip exploring high waste\"\r\n\r\nWhy does this optimization only work at high feerates?",
      "created_at": "2025-06-11T20:06:38Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140968745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140968745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140974454",
      "pull_request_review_id": 2918347276,
      "id": 2140974454,
      "node_id": "PRRC_kwDOABII585_nK12",
      "diff_hunk": "@@ -93,20 +93,25 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    // Check that there are sufficient funds\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+    // The sum of UTXO amounts after this UTXO index, e.g. lookahead[5] = Σ(UTXO[6+].amount)\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+\n+    // Calculate lookahead values, and check that there are sufficient funds\n     CAmount total_available = 0;\n-    for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert UTXOs with non-positive effective value have been filtered\n-        Assume(utxo.GetSelectionAmount() > 0);\n-        total_available += utxo.GetSelectionAmount();\n+    for (size_t i = 0; i < utxo_pool.size(); ++i) {\n+        size_t index = utxo_pool.size() - 1 - i; // Loop over every element in reverse order",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "6ff6e98000792f715324c513fd9eb83440929d0e",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 6ff6e98000792f715324c513fd9eb83440929d0e \"coinselection: Track effective_value lookahead\"\r\n\r\nDo the reversing in the `for`\r\n\r\n```suggestion\r\n    for (size_t i = utxo_pool.size() - 1; i >= 0; --i) {\r\n```",
      "created_at": "2025-06-11T20:10:26Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140974454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140974454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979272",
      "pull_request_review_id": 2918347276,
      "id": 2140979272,
      "node_id": "PRRC_kwDOABII585_nMBI",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhat is `(tk)` mean?",
      "created_at": "2025-06-11T20:13:47Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140979272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979521",
      "pull_request_review_id": 2918347276,
      "id": 2140979521,
      "node_id": "PRRC_kwDOABII585_nMFB",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n- * cannot be reached. Further, it is unnecessary to test equivalent combinations. This allows us\n+ * cannot be reached. Further, it is unnecessary to test equivalent combinations (tk). This allows us",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhat is `(tk)` mean?",
      "created_at": "2025-06-11T20:13:57Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140979521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980302",
      "pull_request_review_id": 2918347276,
      "id": 2140980302,
      "node_id": "PRRC_kwDOABII585_nMRO",
      "diff_hunk": "@@ -68,7 +68,7 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "6ff6e98000792f715324c513fd9eb83440929d0e",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 6ff6e98000792f715324c513fd9eb83440929d0e \"coinselection: Track effective_value lookahead\"\r\n\r\nThis should be squashed into 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"",
      "created_at": "2025-06-11T20:14:26Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140980302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980901",
      "pull_request_review_id": 2918347276,
      "id": 2140980901,
      "node_id": "PRRC_kwDOABII585_nMal",
      "diff_hunk": "@@ -70,7 +70,7 @@ struct {\n  *\n  * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n- * cannot be reached. Further, it is unnecessary to test equivalent combinations (tk). This allows us",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "ee103e5df91ecd8aa80da7da709b7d51eee65738",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nThis should be squashed into 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"",
      "created_at": "2025-06-11T20:14:48Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140980901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141115258",
      "pull_request_review_id": 2918744321,
      "id": 2141115258,
      "node_id": "PRRC_kwDOABII585_ntN6",
      "diff_hunk": "@@ -210,6 +211,9 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         const auto result9 = SelectCoinsBnB(GroupCoins(available_coins.All()), 1 * CENT, coin_selection_params_bnb.m_cost_of_change);\n         BOOST_CHECK(result9);\n         BOOST_CHECK_EQUAL(result9->GetSelectedValue(), 1 * CENT);\n+        // Demonstrate how following improvements reduce iteration count and catch any regressions in the future.",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "in_reply_to_id": 2140854993,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I removed the repeated comment and added an explanation to the commit message instead.",
      "created_at": "2025-06-11T21:06:59Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141115258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141115258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141138034",
      "pull_request_review_id": 2918744321,
      "id": 2141138034,
      "node_id": "PRRC_kwDOABII585_nyxy",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": 2140979272,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"tk\" is a symbol for \"to come\" in drafting articles. My idea was to express that these two optimizations are not in this first commit, but will be implemented in the coming PRs. On second thought, I removed these sentences and will reintroduce with the commits that introduce the described optimizations.",
      "created_at": "2025-06-11T21:20:16Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141138034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141138034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141161172",
      "pull_request_review_id": 2918744321,
      "id": 2141161172,
      "node_id": "PRRC_kwDOABII585_n4bU",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n- * cannot be reached. Further, it is unnecessary to test equivalent combinations. This allows us\n+ * cannot be reached. Further, it is unnecessary to test equivalent combinations (tk). This allows us",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": 2140979521,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Responded above.",
      "created_at": "2025-06-11T21:40:30Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141161172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141161172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141164370",
      "pull_request_review_id": 2918744321,
      "id": 2141164370,
      "node_id": "PRRC_kwDOABII585_n5NS",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 190,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": 2140951729,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2025-06-11T21:43:17Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141164370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141164370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141164846",
      "pull_request_review_id": 2918744321,
      "id": 2141164846,
      "node_id": "PRRC_kwDOABII585_n5Uu",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": 230,
      "original_position": 203,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": 2140952030,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2025-06-11T21:43:38Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141164846",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141164846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 241,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141269177",
      "pull_request_review_id": 2918744321,
      "id": 2141269177,
      "node_id": "PRRC_kwDOABII585_oSy5",
      "diff_hunk": "@@ -157,6 +158,9 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n         } else if (curr_amount > selection_target + cost_of_change) {\n             // Overshot target range: SHIFT\n             should_shift = true;\n+        } else if (is_feerate_high && curr_selection_waste > best_waste) {",
      "path": "src/wallet/coinselection.cpp",
      "position": 171,
      "original_position": 12,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "813ac54726866b1051c502fe8bfef3b279af890f",
      "in_reply_to_id": 2140968745,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "At high feerates adding more inputs will increase the waste score. If the current waste is already worse than the best selection’s while we have insufficient funds, we cannot beat the best selection by adding more inputs: SHIFT\r\n\r\nAt low feerates, adding more inputs decreases waste, so we would exit prematurely.",
      "created_at": "2025-06-11T23:38:47Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141269177",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141269177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141280726",
      "pull_request_review_id": 2918744321,
      "id": 2141280726,
      "node_id": "PRRC_kwDOABII585_oVnW",
      "diff_hunk": "@@ -93,20 +93,25 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    // Check that there are sufficient funds\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+    // The sum of UTXO amounts after this UTXO index, e.g. lookahead[5] = Σ(UTXO[6+].amount)\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+\n+    // Calculate lookahead values, and check that there are sufficient funds\n     CAmount total_available = 0;\n-    for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert UTXOs with non-positive effective value have been filtered\n-        Assume(utxo.GetSelectionAmount() > 0);\n-        total_available += utxo.GetSelectionAmount();\n+    for (size_t i = 0; i < utxo_pool.size(); ++i) {\n+        size_t index = utxo_pool.size() - 1 - i; // Loop over every element in reverse order",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "6ff6e98000792f715324c513fd9eb83440929d0e",
      "in_reply_to_id": 2140974454,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken with minor adjustments.",
      "created_at": "2025-06-11T23:55:09Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141280726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141280726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141309011",
      "pull_request_review_id": 2918744321,
      "id": 2141309011,
      "node_id": "PRRC_kwDOABII585_ochT",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;\n         }\n     }\n \n-    // Check for solution\n+    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n+    result.SetSelectionsEvaluated(curr_try);\n+\n     if (best_selection.empty()) {\n         return max_tx_weight_exceeded ? ErrorMaxWeightExceeded() : util::Error();\n     }\n \n-    // Set output set\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.RecalculateWaste(cost_of_change, cost_of_change, CAmount{0});\n-    assert(best_waste == result.GetWaste());",
      "path": "src/wallet/coinselection.cpp",
      "position": 288,
      "original_position": 220,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": 2140964773,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The waste calculation here is semantically incorrect and it is unnecessary, because the waste of all coin selection results is recalculated after they are collected, before they are compared to correctly assess bump fees.\r\n\r\nI don’t think we want to pull the bump fee calculation into each coin selection algorithm, but maybe we can pass the entire coin selection parameters object, so that we can calculate a semantically correct waste score for coin selection results, although it may still need to be amended for bump fees afterwards.\r\n\r\nLet’s fix this in a follow-up properly. And also add some tests for the waste results of coin selection algorithms.",
      "created_at": "2025-06-12T00:35:18Z",
      "updated_at": "2025-06-12T00:36:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2141309011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2141309011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": 197,
      "original_start_line": 198,
      "start_side": "LEFT",
      "line": 198,
      "original_line": 198,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157539079",
      "pull_request_review_id": 2943855318,
      "id": 2157539079,
      "node_id": "PRRC_kwDOABII586AmW8H",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 81,
      "original_position": 39,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there some rhyme or reason behind the refactor of the variable name here?  I probably would have put that into a different commit personally.  I prefer also just dropping `curr_` although I notice this is done seemingly at random since there are other variables such as `curr_selection_waste` where the original name was maintained?",
      "created_at": "2025-06-19T19:12:05Z",
      "updated_at": "2025-06-19T19:12:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2157539079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157539079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 123,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157541925",
      "pull_request_review_id": 2943859675,
      "id": 2157541925,
      "node_id": "PRRC_kwDOABII586AmXol",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 81,
      "original_position": 39,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157539079,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To be clear, I'm commenting on the apparent rename from `curr_available_value` to `total_available`.",
      "created_at": "2025-06-19T19:14:40Z",
      "updated_at": "2025-06-19T19:14:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2157541925",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157541925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 123,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157543064",
      "pull_request_review_id": 2943861298,
      "id": 2157543064,
      "node_id": "PRRC_kwDOABII586AmX6Y",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 81,
      "original_position": 39,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157539079,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I also think `available_value` is perfectly fine as well.",
      "created_at": "2025-06-19T19:16:04Z",
      "updated_at": "2025-06-19T19:16:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2157543064",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157543064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 123,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157556966",
      "pull_request_review_id": 2943879965,
      "id": 2157556966,
      "node_id": "PRRC_kwDOABII586AmbTm",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current selection, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 112,
      "original_position": 73,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This isn't mentioned in the comit message, so I'll ask since It's not apparent on first glance.  Why is `curr_weight` being added here?  I though bnb was agnostic to the weight, only selecting by effective_value().",
      "created_at": "2025-06-19T19:27:49Z",
      "updated_at": "2025-06-19T19:27:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2157556966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157556966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157558861",
      "pull_request_review_id": 2943882790,
      "id": 2157558861,
      "node_id": "PRRC_kwDOABII586AmbxN",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current selection, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 112,
      "original_position": 73,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157556966,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry, my understanding of this is stale.  It looks like `max_tx_weight_exceeded` was added sometime recently which I missed.",
      "created_at": "2025-06-19T19:30:07Z",
      "updated_at": "2025-06-19T19:30:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2157558861",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157558861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159514805",
      "pull_request_review_id": 2947044312,
      "id": 2159514805,
      "node_id": "PRRC_kwDOABII586At5S1",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 81,
      "original_position": 39,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157539079,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`curr_available_value` was used to track the available funds in the remaining undecided UTXOs during our search. While we were exploring the search tree, we would reduce it each time we descended further in the tree, and then we had to increment it again when we ascended back to earlier UTXOs.\r\n\r\n`total_available` on the other hand is only summed up once and then refers to the total sum of available funds in our UTXO pool. While we are summing it up, we store the available funds for each depth in the `lookahead` vector. This allows us to look up the remaining funds at each depth directly and we no longer have to traverse every UTXO when we backtrack to increment the `curr_available_value` but allows us to skip back up multiple steps at once.",
      "created_at": "2025-06-20T18:48:01Z",
      "updated_at": "2025-06-20T18:56:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2159514805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159514805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 123,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159522378",
      "pull_request_review_id": 2947044312,
      "id": 2159522378,
      "node_id": "PRRC_kwDOABII586At7JK",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current selection, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 112,
      "original_position": 73,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157556966,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As you mention, `curr_weight` is necessary to test whether we have exceeded the `max_selection_weight`. While we could previously bump into unhandled failure cases where we exceeded the maximum weight for standard transactions, being able to handle smaller transaction weight limits has become even more relevant especially, because we want to be able to reliably create TRUC transactions that are limited to 1000 vB if they have a parent.",
      "created_at": "2025-06-20T18:54:28Z",
      "updated_at": "2025-06-20T18:56:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2159522378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159522378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159540477",
      "pull_request_review_id": 2947083742,
      "id": 2159540477,
      "node_id": "PRRC_kwDOABII586At_j9",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current selection, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 112,
      "original_position": 73,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157556966,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I have been doing some more research into this.\r\n\r\n> ..limited to 1000 vB if they have a parent.\r\n\r\nAnd what if they don't have a parent?  I was under the impression that the upper bound is always 4,000 WU (MAX_STANDARD_TX_WEIGHT).  Apologies btw, I could move this question to the forum or elsewhere since it's getting off topic.",
      "created_at": "2025-06-20T19:11:17Z",
      "updated_at": "2025-06-20T19:11:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2159540477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159540477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159561495",
      "pull_request_review_id": 2947117780,
      "id": 2159561495,
      "node_id": "PRRC_kwDOABII586AuEsX",
      "diff_hunk": "@@ -93,114 +87,127 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current selection, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;",
      "path": "src/wallet/coinselection.cpp",
      "position": 112,
      "original_position": 73,
      "commit_id": "cdc25b417a1cf09f9b0d9a9bf197f853daa24cdb",
      "original_commit_id": "4be47e58bdf530351a7bc81ae961ad0a7277fb9b",
      "in_reply_to_id": 2157556966,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unconfirmed TRUC transactions may not have more than one unconfirmed ancestor transaction (not counting itself) and no more than one unconfirmed descendant transaction. Unconfirmed parent or child transactions of TRUC transactions must be TRUC themselves. TRUC transactions are limited to 40,000 WU, TRUC transactions with an unconfirmed parent transaction are limited to 4,000 WU.\r\nThe full specification is found in [BIP 431](https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki#specification) and a short summary can be found in the corresponding [release notes](https://github.com/bitcoin/bitcoin/pull/30272/files#diff-727d0bf0f21451364ea2cd322d6f45516763f92f8db957c4246374e23fcfefef).",
      "created_at": "2025-06-20T19:31:13Z",
      "updated_at": "2025-06-20T19:31:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2159561495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159561495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    }
  ]
}