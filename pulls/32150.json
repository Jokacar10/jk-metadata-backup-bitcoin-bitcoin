{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150",
    "id": 2420947155,
    "node_id": "PR_kwDOABII586QTLjT",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32150",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32150.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32150.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/447551732c999ace9587fe5462305ef1f5bb4fce",
    "number": 32150,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "coinselection: Optimize BnB exploration",
    "user": {
      "login": "murchandamus",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murchandamus",
      "html_url": "https://github.com/murchandamus",
      "followers_url": "https://api.github.com/users/murchandamus/followers",
      "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
      "organizations_url": "https://api.github.com/users/murchandamus/orgs",
      "repos_url": "https://api.github.com/users/murchandamus/repos",
      "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/murchandamus/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR rewrites the implementation of the BnB coinselection algorithm\r\nto skip the duplicate evaluation of previously visited input selections.\r\n\r\nIn the original implementation of BnB, the state of the search is\r\nbacktracked by explicitly walking back to the omission branch and then\r\ntesting again. This retests an equivalent candidate set as before, e.g.,\r\nafter backtracking from {ABC}, it would evaluate {AB_}, before trying\r\n{AB_D}, but {AB_} is equivalent to {AB} which was tested before.\r\n\r\nCoinGrinder tracks the state of the search instead by remembering which\r\nUTXO was last added and explicitly shifting from that UTXO directly to\r\nthe next, so after {ABC}, it will immediately move on to {AB_D}. We\r\nreplicate this approach here.\r\n\r\nAs fewer nodes are visited, this approach will enumerate more possible\r\ncombinations than the original implementation given the same limit for \r\niterations.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-03-27T02:33:51Z",
    "updated_at": "2025-06-11T20:22:44Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "5da382c28b5b6fb8c2c1dc1db5ceddc948e3d8f7",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "murchandamus:2025-03-rewrite-BnB",
      "ref": "2025-03-rewrite-BnB",
      "sha": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 23979970,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMzk3OTk3MA==",
        "name": "bitcoin",
        "full_name": "murchandamus/bitcoin",
        "owner": {
          "login": "murchandamus",
          "id": 4060799,
          "node_id": "MDQ6VXNlcjQwNjA3OTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/murchandamus",
          "html_url": "https://github.com/murchandamus",
          "followers_url": "https://api.github.com/users/murchandamus/followers",
          "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
          "organizations_url": "https://api.github.com/users/murchandamus/orgs",
          "repos_url": "https://api.github.com/users/murchandamus/repos",
          "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/murchandamus/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/murchandamus/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/murchandamus/bitcoin",
        "archive_url": "https://api.github.com/repos/murchandamus/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/murchandamus/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/murchandamus/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/murchandamus/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/murchandamus/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/murchandamus/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/murchandamus/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/murchandamus/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/murchandamus/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/murchandamus/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/murchandamus/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/murchandamus/bitcoin/events",
        "forks_url": "https://api.github.com/repos/murchandamus/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/murchandamus/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/murchandamus/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/murchandamus/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/murchandamus/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/murchandamus/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/murchandamus/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/murchandamus/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/murchandamus/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/murchandamus/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/murchandamus/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/murchandamus/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/murchandamus/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:murchandamus/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/murchandamus/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/murchandamus/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/murchandamus/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/murchandamus/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/murchandamus/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/murchandamus/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/murchandamus/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/murchandamus/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/murchandamus/bitcoin/hooks",
        "svn_url": "https://github.com/murchandamus/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 245997,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-23T21:06:49Z",
        "created_at": "2014-09-12T23:11:53Z",
        "updated_at": "2025-05-23T21:07:37Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ad5cd129f3cc72f2d2b140e182781bf3bb5dbacc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37351,
        "stargazers_count": 84093,
        "watchers_count": 84093,
        "size": 283624,
        "default_branch": "master",
        "open_issues_count": 747,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-11T20:17:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-11T20:17:33Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 158,
    "deletions": 92,
    "changed_files": 3,
    "commits": 7,
    "review_comments": 14,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2756305237,
      "node_id": "IC_kwDOABII586kSeFV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2756305237",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:33:54Z",
      "updated_at": "2025-05-08T21:57:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32150.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [yancyribbens](https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758592756) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2756305237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "labeled",
      "id": 17003394747,
      "node_id": "LE_lADOABII586v6UtWzwAAAAP1eza7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17003394747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:33:57Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 17003398361,
      "node_id": "CTDE_lADOABII586v6UtWzwAAAAP1e0TZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17003398361",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T02:34:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17013761145,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP2GWR5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17013761145",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "613df18b00c6a5b23d829738892438ce64be27f3",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/613df18b00c6a5b23d829738892438ce64be27f3",
      "created_at": "2025-03-27T13:35:36Z"
    },
    {
      "event": "commented",
      "id": 2758592756,
      "node_id": "IC_kwDOABII586kbMj0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2758592756",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T16:05:49Z",
      "updated_at": "2025-03-27T16:05:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758592756",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2758612172,
      "node_id": "IC_kwDOABII586kbRTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2758612172",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T16:12:30Z",
      "updated_at": "2025-03-27T16:12:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "I ran benchmarking on master and benchmarking on this branch since it's fairly large change.\r\n\r\nmaster:\r\n```\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       43,633,696.00 |               22.92 |    0.1% |      0.48 | `CoinSelection`\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32150/commits/e2a4d86131e8f1661eb450c50b8072147965b111:\r\n```\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       40,433,894.00 |               24.73 |    0.1% |      0.44 | `CoinSelection`\r\n```\r\n\r\nlooks like a marginal improvement in bechmarked performance.\r\n",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2758612172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17065461357,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP5LkZt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17065461357",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ac0d02b3a7e678a0cf206ad676b6de0b215787c",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/5ac0d02b3a7e678a0cf206ad676b6de0b215787c",
      "created_at": "2025-04-01T00:04:33Z"
    },
    {
      "event": "commented",
      "id": 2767684548,
      "node_id": "IC_kwDOABII586k94PE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2767684548",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T00:05:57Z",
      "updated_at": "2025-04-01T00:05:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on #29532",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2767684548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17065491779,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAP5Lr1D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17065491779",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44bab80284f3710ee30805ec3c5da06dd06d4d71",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/44bab80284f3710ee30805ec3c5da06dd06d4d71",
      "created_at": "2025-04-01T00:08:48Z"
    },
    {
      "event": "reviewed",
      "id": 2733815682,
      "node_id": "PRR_kwDOABII586i8reC",
      "url": null,
      "actor": null,
      "commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2733815682",
      "submitted_at": "2025-04-01T19:12:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "renamed",
      "id": 17082914103,
      "node_id": "RTE_lADOABII586v6UtWzwAAAAP6OJU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17082914103",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T21:32:10Z",
      "rename": {
        "from": "refactor: Optimize BnB exploration",
        "to": "coinselection: Optimize BnB exploration"
      }
    },
    {
      "event": "commented",
      "id": 2773089158,
      "node_id": "IC_kwDOABII586lSfuG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773089158",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T16:14:13Z",
      "updated_at": "2025-04-02T16:14:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I ran benchmarking on master and benchmarking on this branch since it's fairly large change.\r\n\r\nIf I remember right the Coin Selection benchmark is rather non-representative. I have a todo to update it somewhere in my backlog.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2773089158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "commented",
      "id": 2776283405,
      "node_id": "IC_kwDOABII586lerkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776283405",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T16:04:18Z",
      "updated_at": "2025-04-03T16:04:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If I remember right the Coin Selection benchmark is rather non-representative. I have a todo to update it somewhere in my backlog.\r\n\r\nGood point.  I took a quick look, and the current benchmark runs BnB for only `4` iterations.  there are `1,000` clones and one non clone so most of the work is done by skipping clones which isn't very representative as you say.\r\n\r\nInstead of keeping this in your backlog, shouldn't there be an issue opened so it doesn't get overlooked?  Maybe someone else has the bandwidth to pick it up.  Possibly I could but I also have a large backlog of I'd like to work on.\r\n\r\nAlso, I note there is also `BnBExhaustion(benchmark::Bench& bench)` which is probably more \"representative\" although it also looks like you have a [TODO](https://github.com/bitcoin/bitcoin/pull/29532/files#diff-36ddaeb9e3a5c1aaaccd6b1ed6c770e8344e33dbfd4876b5f0726d84ab47cbab) to re-write that as well:\r\n\r\n> Worth noting that src/bench/coin_selection.cpp makes a copy of the make_hard_case function (commenting as such), so removal here may lead to confusion unless that benchmark is also updated.\r\n",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2776283405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "labeled",
      "id": 17448870241,
      "node_id": "LE_lADOABII586v6UtWzwAAAAQQCKFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17448870241",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T06:36:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17499936110,
      "node_id": "UNLE_lADOABII586v6UtWzwAAAAQTE9Vu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17499936110",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-02T13:21:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17503548696,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQTSvUY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17503548696",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9cfab3be80f0b6c927f780d0470b030a6068135c",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/9cfab3be80f0b6c927f780d0470b030a6068135c",
      "created_at": "2025-05-02T18:43:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17506356821,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQTdc5V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17506356821",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "155d6d926a044826f18be4d2ad8be2dfe463eb41",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/155d6d926a044826f18be4d2ad8be2dfe463eb41",
      "created_at": "2025-05-03T01:43:12Z"
    },
    {
      "event": "ready_for_review",
      "id": 17546393666,
      "node_id": "RFRE_lADOABII586v6UtWzwAAAAQV2LhC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17546393666",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-06T23:35:32Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmMjBkZDRmOTA1YTBkMDRlNDhiZmUyMDkxOWNjY2FmZjExYjliMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "tree": {
        "sha": "f78d445ed5e303e1c27b53cdb9970649f41101b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f78d445ed5e303e1c27b53cdb9970649f41101b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f78d445ed5e303e1c27b53cdb9970649f41101b1\nparent ad5cd129f3cc72f2d2b140e182781bf3bb5dbacc\nauthor Murch <murch@murch.one> 1743028363 -0700\ncommitter Murch <murch@murch.one> 1746741390 -0700\n\ncoinselection: Track BnB iteration count in result\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKJUQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXEwyREAC1+wBxL+s9y19kmbS/YpERPN90l1hpIGSP\nitB0D2Mnkl6dl3OZpIcauDXCOig+87bvxJP4mOkjRD8RfiO1g9SGN19DYd4+ov9k\n8dYWYgVCihnJYbjSTf/ykBKO3ceci/JY6lNPWVCvN3mmhX3ufGA/sX7O88R9o4UI\nPs9wtaNS+u+gYgouJ2v100+3ILnJ+QgrZdOuBYyZbveHN/S+Gw2fe5JWmKmth1k4\npClsZe5Fqwa3Q7j/p6WfYTGyzkHi0nnP10gyTyyF9uGoGAIx4lNRVB+pDTWJBtnG\n/V/I9ozUDHgCBUEgeyP7a7eWHXlsrsbQOYY4+vOBw5Xy3kw9pkSgDkYSs1kmoqQ6\nkXdeWo8EFZtBYeZwSKSvow4FFMhsR6Mrz9Vf+WukPfkmwscnuj76oQwx4rcEVwyd\nDlrSgnwhpkmfhp+cv2rlbiRRmBqhFMHPWrraW4Wg4ErCDZRZAzl+NQhweVsJXf7c\nL7tZ62uQjLmlT7Y2dke2gFtchDTn4/6ffk9mk1Rfi+PNmeweSC48Yoywf6ZNJmqF\n5Aop/8ooOgfvi4YQ2mIbCvMGmXlW1P6W+rzUd7/nyQVHp33D4ch4+pGzkxqqqMPq\no+hTGcadWeZFWyM4DHQ8ULQ2rk/i90+L4xjQsjjSyOpBLw1oKk2hLhwSMJ0FlCnh\nRVNmjNUBLA==\n=yDL4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad5cd129f3cc72f2d2b140e182781bf3bb5dbacc",
          "sha": "ad5cd129f3cc72f2d2b140e182781bf3bb5dbacc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad5cd129f3cc72f2d2b140e182781bf3bb5dbacc"
        }
      ],
      "message": "coinselection: Track BnB iteration count in result",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:30Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-26T22:32:43Z"
      },
      "sha": "df20dd4f905a0d04e48bfe20919cccaff11b9b30"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1ODBjMGU0OTAzMGYxM2ZlNTc2MDM1MjFiNTliOTZlNmU1MGNmODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9580c0e49030f13fe57603521b59b96e6e50cf82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9580c0e49030f13fe57603521b59b96e6e50cf82",
      "tree": {
        "sha": "49006125e589035fcbe26b4c1c42ff9c5b97afe9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49006125e589035fcbe26b4c1c42ff9c5b97afe9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 49006125e589035fcbe26b4c1c42ff9c5b97afe9\nparent df20dd4f905a0d04e48bfe20919cccaff11b9b30\nauthor Murch <murch@murch.one> 1743031081 -0700\ncommitter Murch <murch@murch.one> 1746741402 -0700\n\ncoinselection: rewrite BnB in CoinGrinder-style\n\nIn the original implementation of BnB, the state of the search is\nbacktracked by explicitly walking back to the omission branch and then\ntesting again. This retests an equivalent candidate set as before, e.g.,\nafter backtracking from {ABC}, it would evaluate {AB_}, before trying\n{AB_D}, but {AB_} is equivalent to {AB} which was tested before.\n\nCoinGrinder tracks the state of the search instead by remembering which\nUTXO was last added and explicitly shifting from that UTXO directly to\nthe next, so after {ABC}, it will immediately move on to {AB_D}. We\nreplicate this approach here.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKJoQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE7EAD/wKdppgf1qAeqIjC8D8mT6NezdREK8Rs43E\nbaTudXLBnytC50azECskOqmSHTCiDkPkn5aZY6AO9hRNpoTwGhg8pXVIpBhwFpd7\nSbDoFa8qoaNgYwwsFlANEB3lbWrjyryTkmU4Ck6ju8hqJ3FGwPkgTvVQ1JT8WC3X\n/MDUjcW8w/GWXTH4SXB+rdf1z/2uEEvw7ViTVCxc/Q+EFi0yS+VmRdqS0XoRt0Ze\nyBf69mgophb97y0trf0gSBZHcyKaAR5emYkiRhu0i4qWj8p/XR1eGCcmIz4Tzz1t\nT0HkLN0lWclbo44x57axFWmDOzLK9lEVxDmum5EsJIDKdEOw53oFbd43DIMqQ1EV\neNs+Zk4YgMmopa/ChGcXoaWjSkWIpH7IJr4wYvWPLcnhKx0F85f/iP27TZtPRIYJ\n/f1VM3ToCn33vtHLKQ3Pye/vlGtTj2taaUtWv9OkyJ0jue1d6fG8DM87IZpC51cm\nP26hHHGOr4M1sh+e4MmvW31rXfnwcm4eunxwieAVUhMy974z6wyuJhw0PKpE9vjL\nLyJr53oZ3X0A43Ek0t7ztfOZ/a+cmRFTojAflOEnIcbtD4m4lXZf10iBZGmqcvwt\nrHTTCxrk+DY6SAurIMLCti8wZxwdlW42OZtMo7B4XG8RYN5qdwQ111u1EAnQ87jQ\n1armI+0XMA==\n=jZtM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df20dd4f905a0d04e48bfe20919cccaff11b9b30",
          "sha": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df20dd4f905a0d04e48bfe20919cccaff11b9b30"
        }
      ],
      "message": "coinselection: rewrite BnB in CoinGrinder-style\n\nIn the original implementation of BnB, the state of the search is\nbacktracked by explicitly walking back to the omission branch and then\ntesting again. This retests an equivalent candidate set as before, e.g.,\nafter backtracking from {ABC}, it would evaluate {AB_}, before trying\n{AB_D}, but {AB_} is equivalent to {AB} which was tested before.\n\nCoinGrinder tracks the state of the search instead by remembering which\nUTXO was last added and explicitly shifting from that UTXO directly to\nthe next, so after {ABC}, it will immediately move on to {AB_D}. We\nreplicate this approach here.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:42Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-26T23:18:01Z"
      },
      "sha": "9580c0e49030f13fe57603521b59b96e6e50cf82"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiYTI1YmE2NGQ2NzE0NmM4YWI4NmRiY2Q0ZWFjOWEzODJlZTY5N2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ba25ba64d67146c8ab86dbcd4eac9a382ee697b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ba25ba64d67146c8ab86dbcd4eac9a382ee697b",
      "tree": {
        "sha": "b81da1b502c335c0fa505303724f01ccb76e7e43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b81da1b502c335c0fa505303724f01ccb76e7e43"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b81da1b502c335c0fa505303724f01ccb76e7e43\nparent 9580c0e49030f13fe57603521b59b96e6e50cf82\nauthor Murch <murch@murch.one> 1743034698 -0700\ncommitter Murch <murch@murch.one> 1746741404 -0700\n\ncoinselection: Track whether BnB completed\n\nBnB may not be able to exhaustively search all potentially interesting\ncombinations for large UTXO pools, so we keep track of whether the\nsearch was terminated by the iteration limit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKJwQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE5+cD/9qLPFlPXjWhaQczkTts0uqRZg4HpyWGHZY\nFPCQBmBjpvQDvKxwdFoahkNvtvCQ4zWENtseX0A1aBwNr7YCij7L4NvbJWF4MgCT\nCgG6oVoQJ4WeeUIjQth81ZDZAe3C+4fMYDgKCAxwyof/8ZQtCu4Q6gzZ15FHV9LJ\nIpvODIRwiPmtyeIYGL2KtX7kOkpDjFoTumGrROjS9Q0KU397rRcPsmUpIxKb3vew\nLQT0xieQXZPooca13EkctXtHE9i2NcdN1cxJ/3tW8QZGFU5vTLuMoKWJ5wiIuAg8\nqPzeixM/ssXKBfo78BVSDRDLNw7HXmNtG3SHtD28pwYMFUB/B4U773AOmLzL1pzA\njAm1OkGqhEmyV9178YJcZkUKOZc5NYmy9XksyP2Z4MU6mGjBS08w1WMnaogz4x1N\n4dA82Qcqr5sY4rY8f3tgZN+WfFpJk/tOvzP5+BCjRB68W6D/okFbjXDZ7EyzdOMf\nf/zkff5sgTZsc1ErcGG5bzHva9k+1nsKurMsmUz5c0o8i+9g/itb1Bn+KG4Vf9a9\n80282yv2rvUN3Lwk5g/RR13qXt3QPnqDb5lF4k3jXI1ZnmDtUzJEXd8/FXjDIxa/\nNb54CIr3poC04CkJBeOBCah9Ervb2FBnuc1ckBedvUBsh/SqMlUL8g2lzM8REbkk\nQjJn6l5mNQ==\n=jfnt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9580c0e49030f13fe57603521b59b96e6e50cf82",
          "sha": "9580c0e49030f13fe57603521b59b96e6e50cf82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9580c0e49030f13fe57603521b59b96e6e50cf82"
        }
      ],
      "message": "coinselection: Track whether BnB completed\n\nBnB may not be able to exhaustively search all potentially interesting\ncombinations for large UTXO pools, so we keep track of whether the\nsearch was terminated by the iteration limit.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:44Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T00:18:18Z"
      },
      "sha": "3ba25ba64d67146c8ab86dbcd4eac9a382ee697b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxM2FjNTQ3MjY4NjZiMTA1MWM1MDJmZThiZmVmM2IyNzlhZjg5MGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/813ac54726866b1051c502fe8bfef3b279af890f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/813ac54726866b1051c502fe8bfef3b279af890f",
      "tree": {
        "sha": "fdd75936e59708ff7aed15c8f22636109048c083",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdd75936e59708ff7aed15c8f22636109048c083"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fdd75936e59708ff7aed15c8f22636109048c083\nparent 3ba25ba64d67146c8ab86dbcd4eac9a382ee697b\nauthor Murch <murch@murch.one> 1743038247 -0700\ncommitter Murch <murch@murch.one> 1746741406 -0700\n\ncoinselection: BnB skip exploring high waste\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKJ4QHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXEwEFEACK2Y1iVxWF5rKYR6Z92ubPRAAVipb3tuyO\n+alTldZZYHLDFRnhP31WDtfY5BkxJmL0E5UhpZQoTeVHxEBzDiMfThd7FsfpmEc4\n5mxJ4DXH9pCDYNkPkz9NnZdlAvrTJdZt9A2xW2P99tMF68CMyu2IBT6vQMNTCQEB\n9wwY0azQblTmGTPkDAKpJZfItl+6qs8+52rYbeq7GXP82JSOPmB7mmW4/HxS2QDD\nhctKmKFQ61s2M19EdIesNNbvk7S8owt6D9QkVCJ+pSIyJcFcyjsI/8IBzZTAK1SZ\nb7KX2n/nhz2x0iz71UaOwgQJFNHYWdV2kVs6wraqv1yZDpTgQ0C4nR10xZ2DZgpo\nK1ev7LxBXTNTwSFpoA6EPB241YxTWvWIeLd4mPgMw23kLyYAC7KNgBpC46MD8CLj\n29pyjQXA4j+riR48ANgS/eFhYDK3D4TVMrEAUteyodYxVhS9cG3NRa+DTKLo83rq\n2fsOvBYRMIz6pxWA+g3AsCWYwjwr98wuIHOwaAuhJY8GThJlFUx+c79giGy52S7j\n22VEoFk/E6gFERAz7XOOKJkEqoqs4e96o/YJI81ydPfZ0dkaKwLsLUMMVECQyWF5\nuP5ISBT+La5lgMmBLCFaTpvoWE1j15EHZqnkU57xk22T1B/pfcDbamlvwDdETlAw\n3HaFsfGLQA==\n=ppsh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ba25ba64d67146c8ab86dbcd4eac9a382ee697b",
          "sha": "3ba25ba64d67146c8ab86dbcd4eac9a382ee697b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ba25ba64d67146c8ab86dbcd4eac9a382ee697b"
        }
      ],
      "message": "coinselection: BnB skip exploring high waste",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:46Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:17:27Z"
      },
      "sha": "813ac54726866b1051c502fe8bfef3b279af890f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZmZjZlOTgwMDA3OTJmNzE1MzI0YzUxM2ZkOWViODM0NDA5MjlkMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ff6e98000792f715324c513fd9eb83440929d0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ff6e98000792f715324c513fd9eb83440929d0e",
      "tree": {
        "sha": "a32009deac7e0259b7415eb2bf97916502efdb83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a32009deac7e0259b7415eb2bf97916502efdb83"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a32009deac7e0259b7415eb2bf97916502efdb83\nparent 813ac54726866b1051c502fe8bfef3b279af890f\nauthor Murch <murch@murch.one> 1743038662 -0700\ncommitter Murch <murch@murch.one> 1746741407 -0700\n\ncoinselection: Track effective_value lookahead\n\nIntroduces a dedicated data structure to track the total\neffective_value available in the remaining UTXOs at each index of the\nUTXO pool. In contrast to the original approach in BnB, this allows us\nto immediately jump to a lower index instead of visiting every UTXO to\nadd back their eff_value to the lookahead.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKJ8QHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXEwQ8D/9TVv6L9aAL0U9ltnLB6WxiIukixIxCwz0N\nK0/6A87ev1a/ReAp+L97298MoCxCq7PXMjBmh+7j1xXnAzxjipiWM7sE18XvDCIA\nv/6/fOpDgbLGKz6iotp1h3oApQZFVzk6IkMAICa5fmdgRIbkwQ9yX7K4JpbRH45d\nqphx3O5CtnTCvEaT5SI4U8HghPRdA0/1I8d+nk6UZ/QP9zk4DRsP6khxve1hpPFU\n3dmci5AQAVO/jwZXDxy82LZoU11y1Pf56ycAVu/ZyFhm1NNl1jWOHkz8DNn3jFAM\nE/WyZSHq83DA6NvKjg2XxopBd1SQSBApLkdX3/5nlbV5fsKAyMwLG93vOMqh/6nB\nw78ypVNXnG+yr3k4NN0JXdbuvklb2Vg+1HyA1QMYtPHlPyq4f/QUVILJON/sug59\nnQrZKIN3rYPnIn5dmIymiVqVdVJjx54RjQ/87bXgdsn8HBwljaX3JSCDCMEsqpbD\nWoSnvhLymFllQCPkSbHJOHVSQry+mHvxPwYtlWaI+KyU/h2teI+u59fNyT/YGrIH\nDC/o0ymJJGh+FTLEKG3b5Uec00Kj7CPCENqxHslP0w/kgsiE9KhMme+djg/Ehkz2\nVmAkTMLh8hrrCDqshUZt96O0OibOZz86iC7C1fnRIPzUTxzhUzRV1WKXXBgj1uu5\ncEVtpRTSEA==\n=hFyf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/813ac54726866b1051c502fe8bfef3b279af890f",
          "sha": "813ac54726866b1051c502fe8bfef3b279af890f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/813ac54726866b1051c502fe8bfef3b279af890f"
        }
      ],
      "message": "coinselection: Track effective_value lookahead\n\nIntroduces a dedicated data structure to track the total\neffective_value available in the remaining UTXOs at each index of the\nUTXO pool. In contrast to the original approach in BnB, this allows us\nto immediately jump to a lower index instead of visiting every UTXO to\nadd back their eff_value to the lookahead.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:47Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:24:22Z"
      },
      "sha": "6ff6e98000792f715324c513fd9eb83440929d0e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlMTAzZTVkZjkxZWNkOGFhODBkYTdkYTcwOWI3ZDUxZWVlNjU3Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee103e5df91ecd8aa80da7da709b7d51eee65738",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee103e5df91ecd8aa80da7da709b7d51eee65738",
      "tree": {
        "sha": "d5eab01bf32a1685f2d4864c2dddbabe8ff2bf8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5eab01bf32a1685f2d4864c2dddbabe8ff2bf8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d5eab01bf32a1685f2d4864c2dddbabe8ff2bf8f\nparent 6ff6e98000792f715324c513fd9eb83440929d0e\nauthor Murch <murch@murch.one> 1743039981 -0700\ncommitter Murch <murch@murch.one> 1746741408 -0700\n\nopt: Skip evaluation of equivalent input sets\n\nWhen two successive UTXOs match in effective value and weight, we can\nskip the second if the prior is not selected: adding it would create an\nequivalent input set to a previously evaluated.\n\nE.g. if we have three UTXOs with effective values {5, 3, 3} of the same\nweight each, we want to evaluate\n{5, _, _}, {5, 3, _}, {5, 3, 3}, {_, 3, _}, {_, 3, 3},\nbut skip {5, _, 3}, and {_, _, 3}, because the first 3 is not selected,\nand we therefore do not need to evaluate the second 3 at the same\nposition in the input set.\n\nIf we reach the end of the branch, we must SHIFT the previously selected\nUTXO group instead.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKKAQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXEw0xD/9aLkULLf7hoFtpLLX50Xm3f+e5uCLhqjk1\nqeomeu/XO5iElJWLMAT6G+egZergFqH70lWgx/GyzXgArHqrBbjC7zMmaXMDL8Ew\nWwiMx4jeZvAISwEBzySNpLLdpnJpTEPIBAf2NlzC3aCrtU0zMxkAIG0w7q+vHRpm\nSnUvVIrKf0Fi+jrK8toY/VZEA3bo1tn44bMxd4oDQV6NGFoPR9ZUKselLYr36hxt\nI0MtP1u5T2B8iQxDLbM5Q2ON8Hk5vpReToHxygqtNt1c0Er97u0jEW9WNdzDAuFO\nAjM9coi7QR/s3hMCvAjx6VH996gf3/4sh1l4xgAGFfGH/ZWzUTH2Ub1n29UPk+Cu\nfP/Ns8kuNJpAc5kMW/oLMfHHBfkomi+4lb4R6ND/fl7ZGNJmvNYT4FmGsAIkycrP\nPgSeVIi4CijKtwZSeC/QR7W0ZWJZTWAArLjmqXuVf6knXInNhWVR2NIc7vyTSBgG\n01n83usKcc51wiTu71fW185TBe8TOaRqxvAzWvllbPr1cWtFB1OkVjV0oI1tHond\n0kCkGqA58i9J6Kgus6i38cuWqVLYmqHl0mGuIOO/S3KC/RoDS2c9mD04W3s3i/hR\nT6LfpYC9FqQEl1j3j/aZM29d28RpkAGzPEfdaPg6u1q+DIwSUxtXDz25AdG+D/FV\nzThgVgKaqw==\n=TDvh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ff6e98000792f715324c513fd9eb83440929d0e",
          "sha": "6ff6e98000792f715324c513fd9eb83440929d0e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ff6e98000792f715324c513fd9eb83440929d0e"
        }
      ],
      "message": "opt: Skip evaluation of equivalent input sets\n\nWhen two successive UTXOs match in effective value and weight, we can\nskip the second if the prior is not selected: adding it would create an\nequivalent input set to a previously evaluated.\n\nE.g. if we have three UTXOs with effective values {5, 3, 3} of the same\nweight each, we want to evaluate\n{5, _, _}, {5, 3, _}, {5, 3, 3}, {_, 3, _}, {_, 3, 3},\nbut skip {5, _, 3}, and {_, _, 3}, because the first 3 is not selected,\nand we therefore do not need to evaluate the second 3 at the same\nposition in the input set.\n\nIf we reach the end of the branch, we must SHIFT the previously selected\nUTXO group instead.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:48Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:46:21Z"
      },
      "sha": "ee103e5df91ecd8aa80da7da709b7d51eee65738"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NzU1MTczMmM5OTlhY2U5NTg3ZmU1NDYyMzA1ZWYxZjViYjRmY2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/447551732c999ace9587fe5462305ef1f5bb4fce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/447551732c999ace9587fe5462305ef1f5bb4fce",
      "tree": {
        "sha": "40d981283e61b81e8ea3a903a91d019b7d0a19c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40d981283e61b81e8ea3a903a91d019b7d0a19c9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40d981283e61b81e8ea3a903a91d019b7d0a19c9\nparent ee103e5df91ecd8aa80da7da709b7d51eee65738\nauthor Murch <murch@murch.one> 1743040770 -0700\ncommitter Murch <murch@murch.one> 1746741410 -0700\n\nopt: Skip UTXOs with worse waste, same eff_value\n\nWhen two successive UTXOs differ in waste but match in effective value,\nwe can skip the second if the first is not selected, because all input\nsets we can generate by swapping out a less wasteful UTXOs with a more\nwastefull UTXO of matching effective value would be strictly worse.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgdKKIQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE2mWD/9zgQNbGSIBsMCrs5hYnylGhZSLb0E141e6\nku8Ja8skCgiT/GHKwIp3msoE0/MowWFsuRrD8DYur4TJG0IGC+F6m5V9XSgoq5wl\nDk1DFov3J2pz4rrZG88/wHIJVfx+BnSOzBKL9rHfUajGW1zRW4nonO5Jx4rPpbbY\n7q72/cZdi1z+2NNXQBqaaXvNfqOHs6odKkG4o94wmvhRAY+2v0ZwtsAzjn5VD6wv\nB/Ltzn4y14nJhpcRQHD2MG76bCgmIPyeibj/2BDkUNpgKh29v07Tjy1ujcyn3YvB\n8szQcjoOwBtYrIeZDPDA6O4sQ0r9Xe0f7slgpYoiQRpn0DuhmUSZ6Vqel37EXyUc\nBGrImcm+/s0TGl00nhJiFfWrknfBHcpOambn1fqnVcbwVXM1RNYb/+B8dKk+hC6v\nMHO18LG78l67SU8J2oKkjX28ZXxOKYn+VZ85gOKZRWEPSMGN3L/0hAEqD2uT5Mby\naOqqclHwvcDAWXHvCJON1y+kOE2ZngNc73rc93H8C2pZvoF7QqJZFtxbT+cEasB3\ntjmNrNWHx91qMDOxidVao5VqIcFeo6Jyt0CJpmJgTUUvkveyubSdKqSsgSOoYHaO\notRMQoSPBE+KiXgsKsVvZYXOM7p+dbQCt3NXlDiGBL6XZ6H7I3Bo/hYSU4O6P8Cr\n/5F2SBffSw==\n=1hF0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee103e5df91ecd8aa80da7da709b7d51eee65738",
          "sha": "ee103e5df91ecd8aa80da7da709b7d51eee65738",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee103e5df91ecd8aa80da7da709b7d51eee65738"
        }
      ],
      "message": "opt: Skip UTXOs with worse waste, same eff_value\n\nWhen two successive UTXOs differ in waste but match in effective value,\nwe can skip the second if the first is not selected, because all input\nsets we can generate by swapping out a less wasteful UTXOs with a more\nwastefull UTXO of matching effective value would be strictly worse.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-05-08T21:56:50Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-03-27T01:59:30Z"
      },
      "sha": "447551732c999ace9587fe5462305ef1f5bb4fce"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17581090335,
      "node_id": "HRFPE_lADOABII586v6UtWzwAAAAQX6iYf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17581090335",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/447551732c999ace9587fe5462305ef1f5bb4fce",
      "created_at": "2025-05-08T21:57:03Z"
    },
    {
      "event": "commented",
      "id": 2864494772,
      "node_id": "IC_kwDOABII586qvLi0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2864494772",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T21:57:54Z",
      "updated_at": "2025-05-08T21:57:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "The preceding PR https://github.com/bitcoin/bitcoin/pull/29532 got merged, so this is now ready for review.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#issuecomment-2864494772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32150"
    },
    {
      "event": "reviewed",
      "id": 2918338099,
      "node_id": "PRR_kwDOABII586t8k4z",
      "url": null,
      "actor": null,
      "commit_id": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2918338099",
      "submitted_at": "2025-06-11T18:48:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    },
    {
      "event": "reviewed",
      "id": 2918347276,
      "node_id": "PRR_kwDOABII586t8nIM",
      "url": null,
      "actor": null,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I think the last 2 commits \"opt: Skip evaluation of equivalent input sets\" and \"opt: Skip evaluation of equivalent input sets\" could be combined. The change the last commit makes is to the comment introduced in the commit before it, and removing a line introduced in the commit before it. We generally don't want to add code just to immediately remove it, so I think these can be squashed together.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#pullrequestreview-2918347276",
      "submitted_at": "2025-06-11T20:22:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023537613",
      "pull_request_review_id": 2733815682,
      "id": 2023537613,
      "node_id": "PRRC_kwDOABII5854nLvN",
      "diff_hunk": "@@ -130,14 +130,14 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n \n     // Simple success cases\n-    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT}, /*expected_attempts=*/4);\n-    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT}, /*expected_attempts=*/2);\n-    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT}, /*expected_attempts=*/6);\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/3);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, it looks like the backtrack iterations are no longer recorded which effectively makes this probably more of an optimization than a refactor.  Now it's possible more solutions can be found since the number of times the loop will run is effectively more improving search resolution.  May be worth adding a note of that to the commit message.",
      "created_at": "2025-04-01T19:12:26Z",
      "updated_at": "2025-04-01T19:12:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2023537613",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023537613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023709366",
      "pull_request_review_id": 2734099039,
      "id": 2023709366,
      "node_id": "PRRC_kwDOABII5854n1q2",
      "diff_hunk": "@@ -130,14 +130,14 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n \n     // Simple success cases\n-    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT}, /*expected_attempts=*/4);\n-    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT}, /*expected_attempts=*/2);\n-    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT}, /*expected_attempts=*/6);\n-    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT}, /*expected_attempts=*/6);\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT}, /*expected_attempts=*/3);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "d765ba9ae567cf3192706223d873d041f71f9c82",
      "in_reply_to_id": 2023537613,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I renamed the PR and added more explanation to the opening comment.",
      "created_at": "2025-04-01T21:35:46Z",
      "updated_at": "2025-04-01T21:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2023709366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023709366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140854993",
      "pull_request_review_id": 2918338099,
      "id": 2140854993,
      "node_id": "PRRC_kwDOABII585_mtrR",
      "diff_hunk": "@@ -210,6 +211,9 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n         const auto result9 = SelectCoinsBnB(GroupCoins(available_coins.All()), 1 * CENT, coin_selection_params_bnb.m_cost_of_change);\n         BOOST_CHECK(result9);\n         BOOST_CHECK_EQUAL(result9->GetSelectedValue(), 1 * CENT);\n+        // Demonstrate how following improvements reduce iteration count and catch any regressions in the future.",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "df20dd4f905a0d04e48bfe20919cccaff11b9b30",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In df20dd4f905a0d04e48bfe20919cccaff11b9b30 \"coinselection: Track BnB iteration count in result\"\r\n\r\nThis kind of comment belongs in the commit message, not the code.",
      "created_at": "2025-06-11T18:48:31Z",
      "updated_at": "2025-06-11T18:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140854993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140854993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 214,
      "original_line": 214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140860995",
      "pull_request_review_id": 2918347276,
      "id": 2140860995,
      "node_id": "PRRC_kwDOABII585_mvJD",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far",
      "path": "src/wallet/coinselection.cpp",
      "position": 61,
      "original_position": 66,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\ns/section/selection",
      "created_at": "2025-06-11T18:52:12Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140860995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140860995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 123,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140951729",
      "pull_request_review_id": 2918347276,
      "id": 2140951729,
      "node_id": "PRRC_kwDOABII585_nFSx",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": 167,
      "original_position": 190,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\n`should_cut` is not used after this, there is no need to reset it.",
      "created_at": "2025-06-11T19:54:09Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140951729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140951729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140952030",
      "pull_request_review_id": 2918347276,
      "id": 2140952030,
      "node_id": "PRRC_kwDOABII585_nFXe",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;",
      "path": "src/wallet/coinselection.cpp",
      "position": 182,
      "original_position": 203,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\n`should_shift` is not used after this, there is no need to reset it.",
      "created_at": "2025-06-11T19:54:21Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140952030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140952030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 217,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140957548",
      "pull_request_review_id": 2918347276,
      "id": 2140957548,
      "node_id": "PRRC_kwDOABII585_nGts",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO",
      "path": "src/wallet/coinselection.cpp",
      "position": 173,
      "original_position": 196,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nThis comment should be after the `if`",
      "created_at": "2025-06-11T19:58:28Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140957548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140957548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 208,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140964773",
      "pull_request_review_id": 2918347276,
      "id": 2140964773,
      "node_id": "PRRC_kwDOABII585_nIel",
      "diff_hunk": "@@ -93,114 +93,129 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n-    CAmount curr_value = 0;\n-    std::vector<size_t> curr_selection; // selected utxo indexes\n-    int curr_selection_weight = 0; // sum of selected utxo weight\n-\n-    // Calculate curr_available_value\n-    CAmount curr_available_value = 0;\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n     for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert that this utxo is not negative. It should never be negative,\n-        // effective value calculation should have removed it\n-        assert(utxo.GetSelectionAmount() > 0);\n-        curr_available_value += utxo.GetSelectionAmount();\n+        // Assert UTXOs with non-positive effective value have been filtered\n+        Assume(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n     }\n-    if (curr_available_value < selection_target) {\n+\n+    if (total_available < selection_target) {\n+        // Insufficient funds\n         return util::Error();\n     }\n \n-    // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n-    CAmount curr_waste = 0;\n+    // The current selection and the best input set found so far, stored as the utxo_pool indices of the UTXOs forming them\n+    std::vector<size_t> curr_selection;\n     std::vector<size_t> best_selection;\n+\n+    // The currently selected effective amount\n+    CAmount curr_amount = 0;\n+\n+    // The waste score of the current section, and the best waste score so far\n+    CAmount curr_selection_waste = 0;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+    // The weight of the currently selected input set\n+    int curr_weight = 0;\n+\n+    // Whether the input sets generated during this search have exceeded the maximum transaction weight at any point\n     bool max_tx_weight_exceeded = false;\n \n-    // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n-        result.SetSelectionsEvaluated(curr_try);\n-        // Conditions for starting a backtrack\n-        bool backtrack = false;\n-        if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n-            curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n-            backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n-            max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n-            backtrack = true;\n-        } else if (curr_value >= selection_target) {       // Selected value is within range\n-            curr_waste += (curr_value - selection_target); // This is the excess value which is added to the waste for the below comparison\n-            // Adding another UTXO after this check could bring the waste down if the long term fee is higher than the current fee.\n-            // However we are not going to explore that because this optimization for the waste is only done when we have hit our target\n-            // value. Adding any more UTXOs will be just burning the UTXO; it will go entirely to fees. Thus we aren't going to\n-            // explore any more UTXOs to avoid burning money like that.\n+    // Index of the next UTXO to consider in utxo_pool\n+    size_t next_utxo = 0;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection_waste -= utxo.fee - utxo.long_term_fee;\n+        curr_selection.pop_back();\n+    };\n+\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection_waste += utxo.fee - utxo.long_term_fee;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_selection_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount > selection_target + cost_of_change) {\n+            // Overshot target range: SHIFT\n+            should_shift = true;\n+        } else if (curr_amount >= selection_target) {\n+            // Selection is within target window: potential solution\n+            // Adding more UTXOs only increases fees and cannot be better: SHIFT\n+            should_shift  = true;\n+            // The amount exceeding the selection_target (the \"excess\"), would be dropped to the fees: it is waste.\n+            CAmount curr_excess = curr_amount - selection_target;\n+            CAmount curr_waste = curr_selection_waste + curr_excess;\n             if (curr_waste <= best_waste) {\n+                // New best solution\n                 best_selection = curr_selection;\n                 best_waste = curr_waste;\n             }\n-            curr_waste -= (curr_value - selection_target); // Remove the excess value as we will be selecting different coins now\n-            backtrack = true;\n         }\n \n-        if (backtrack) { // Backtracking, moving backwards\n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n-                break;\n-            }\n+        if (curr_try >= TOTAL_TRIES) {\n+            // Solution is not guaranteed to be optimal if `curr_try` hit TOTAL_TRIES\n+            break;\n+        }\n \n-            // Add omitted UTXOs back to lookahead before traversing the omission branch of last included UTXO.\n-            for (--utxo_pool_index; utxo_pool_index > curr_selection.back(); --utxo_pool_index) {\n-                curr_available_value += utxo_pool.at(utxo_pool_index).GetSelectionAmount();\n-            }\n+        if (next_utxo == utxo_pool.size()) {\n+            // Last added UTXO was end of UTXO pool, nothing left to add on inclusion or omission branch: CUT\n+            should_cut = true;\n+        }\n \n-            // Output was included on previous iterations, try excluding now.\n-            assert(utxo_pool_index == curr_selection.back());\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-            curr_value -= utxo.GetSelectionAmount();\n-            curr_waste -= utxo.fee - utxo.long_term_fee;\n-            curr_selection_weight -= utxo.m_weight;\n-            curr_selection.pop_back();\n-        } else { // Moving forwards, continuing down this branch\n-            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n-\n-            // Remove this utxo from the curr_available_value utxo amount\n-            curr_available_value -= utxo.GetSelectionAmount();\n-\n-            if (curr_selection.empty() ||\n-                // The previous index is included and therefore not relevant for exclusion shortcut\n-                (utxo_pool_index - 1) == curr_selection.back() ||\n-                // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded.\n-                // Since the ratio of fee to long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-                utxo.GetSelectionAmount() != utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() ||\n-                utxo.fee != utxo_pool.at(utxo_pool_index - 1).fee)\n-            {\n-                // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(utxo_pool_index);\n-                curr_value += utxo.GetSelectionAmount();\n-                curr_waste += utxo.fee - utxo.long_term_fee;\n-                curr_selection_weight += utxo.m_weight;\n+        if (should_cut) {\n+            // Neither adding to the current selection nor exploring the omission branch of the last selected UTXO can\n+            // find any solutions. Redirect to exploring the Omission branch of the penultimate selected UTXO (i.e.\n+            // set `next_utxo` to one after the penultimate selected, then deselect the last two selected UTXOs)\n+            should_cut = false;\n+            deselect_last();\n+            should_shift  = true;\n+        }\n+\n+        if (should_shift) {\n+            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+            if (curr_selection.empty()) {\n+                // Exhausted search space before running into attempt limit\n+                break;\n             }\n+            next_utxo = curr_selection.back() + 1;\n+            deselect_last();\n+            should_shift  = false;\n         }\n     }\n \n-    // Check for solution\n+    SelectionResult result(selection_target, SelectionAlgorithm::BNB);\n+    result.SetSelectionsEvaluated(curr_try);\n+\n     if (best_selection.empty()) {\n         return max_tx_weight_exceeded ? ErrorMaxWeightExceeded() : util::Error();\n     }\n \n-    // Set output set\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.RecalculateWaste(cost_of_change, cost_of_change, CAmount{0});\n-    assert(best_waste == result.GetWaste());",
      "path": "src/wallet/coinselection.cpp",
      "position": 240,
      "original_position": 220,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhy is the waste calculation being dropped? `result` will be returned with an incorrect waste value.",
      "created_at": "2025-06-11T20:03:42Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140964773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140964773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": 197,
      "original_start_line": 198,
      "start_side": "LEFT",
      "line": 198,
      "original_line": 199,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140968745",
      "pull_request_review_id": 2918347276,
      "id": 2140968745,
      "node_id": "PRRC_kwDOABII585_nJcp",
      "diff_hunk": "@@ -157,6 +158,9 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n         } else if (curr_amount > selection_target + cost_of_change) {\n             // Overshot target range: SHIFT\n             should_shift = true;\n+        } else if (is_feerate_high && curr_selection_waste > best_waste) {",
      "path": "src/wallet/coinselection.cpp",
      "position": 126,
      "original_position": 12,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "813ac54726866b1051c502fe8bfef3b279af890f",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 813ac54726866b1051c502fe8bfef3b279af890f \"coinselection: BnB skip exploring high waste\"\r\n\r\nWhy does this optimization only work at high feerates?",
      "created_at": "2025-06-11T20:06:38Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140968745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140968745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 170,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140974454",
      "pull_request_review_id": 2918347276,
      "id": 2140974454,
      "node_id": "PRRC_kwDOABII585_nK12",
      "diff_hunk": "@@ -93,20 +93,25 @@ static const size_t TOTAL_TRIES = 100000;\n util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const CAmount& cost_of_change,\n                                              int max_selection_weight)\n {\n-    // Check that there are sufficient funds\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+    // The sum of UTXO amounts after this UTXO index, e.g. lookahead[5] = Σ(UTXO[6+].amount)\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+\n+    // Calculate lookahead values, and check that there are sufficient funds\n     CAmount total_available = 0;\n-    for (const OutputGroup& utxo : utxo_pool) {\n-        // Assert UTXOs with non-positive effective value have been filtered\n-        Assume(utxo.GetSelectionAmount() > 0);\n-        total_available += utxo.GetSelectionAmount();\n+    for (size_t i = 0; i < utxo_pool.size(); ++i) {\n+        size_t index = utxo_pool.size() - 1 - i; // Loop over every element in reverse order",
      "path": "src/wallet/coinselection.cpp",
      "position": 37,
      "original_position": 25,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "6ff6e98000792f715324c513fd9eb83440929d0e",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 6ff6e98000792f715324c513fd9eb83440929d0e \"coinselection: Track effective_value lookahead\"\r\n\r\nDo the reversing in the `for`\r\n\r\n```suggestion\r\n    for (size_t i = utxo_pool.size() - 1; i >= 0; --i) {\r\n```",
      "created_at": "2025-06-11T20:10:26Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140974454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140974454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": 102,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979272",
      "pull_request_review_id": 2918347276,
      "id": 2140979272,
      "node_id": "PRRC_kwDOABII585_nMBI",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhat is `(tk)` mean?",
      "created_at": "2025-06-11T20:13:47Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140979272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979521",
      "pull_request_review_id": 2918347276,
      "id": 2140979521,
      "node_id": "PRRC_kwDOABII585_nMFB",
      "diff_hunk": "@@ -68,9 +68,9 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n+ * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n- * cannot be reached. Further, it is unnecessary to test equivalent combinations. This allows us\n+ * cannot be reached. Further, it is unnecessary to test equivalent combinations (tk). This allows us",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "9580c0e49030f13fe57603521b59b96e6e50cf82",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nWhat is `(tk)` mean?",
      "created_at": "2025-06-11T20:13:57Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140979521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140979521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980302",
      "pull_request_review_id": 2918347276,
      "id": 2140980302,
      "node_id": "PRRC_kwDOABII585_nMRO",
      "diff_hunk": "@@ -68,7 +68,7 @@ struct {\n  *\n  * waste = selectionTotal - target + inputs × (currentFeeRate - longTermFeeRate)\n  *\n- * The algorithm uses two additional optimizations. A lookahead (tk) keeps track of the total value of",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "6ff6e98000792f715324c513fd9eb83440929d0e",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 6ff6e98000792f715324c513fd9eb83440929d0e \"coinselection: Track effective_value lookahead\"\r\n\r\nThis should be squashed into 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"",
      "created_at": "2025-06-11T20:14:26Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140980302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980901",
      "pull_request_review_id": 2918347276,
      "id": 2140980901,
      "node_id": "PRRC_kwDOABII585_nMal",
      "diff_hunk": "@@ -70,7 +70,7 @@ struct {\n  *\n  * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n- * cannot be reached. Further, it is unnecessary to test equivalent combinations (tk). This allows us",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "447551732c999ace9587fe5462305ef1f5bb4fce",
      "original_commit_id": "ee103e5df91ecd8aa80da7da709b7d51eee65738",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"\r\n\r\nThis should be squashed into 9580c0e49030f13fe57603521b59b96e6e50cf82 \"coinselection: rewrite BnB in CoinGrinder-style\"",
      "created_at": "2025-06-11T20:14:48Z",
      "updated_at": "2025-06-11T20:22:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32150#discussion_r2140980901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140980901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32150"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "LEFT"
    }
  ]
}