{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889",
    "id": 2069327156,
    "node_id": "PR_kwDOABII5857V200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30889",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30889.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30889.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/facbcd4cef8890ae18976fb53b67ea56b3c04454",
    "number": 30889,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "log: Use ConstevalFormatString",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This changes all logging (including the wallet logging) to produce a\r\n`ConstevalFormatString` at compile time, so that the format string can be\r\nvalidated at compile-time.\r\n\r\nI tested with `clang` and found that the compiler will use less than 1% more of time and memory.\r\n\r\nWhen an error is found, the compile-time error depends on the compiler, but it may look similar to:\r\n\r\n```\r\nsrc/util/string.h: In function ‘int main(int, char**)’:\r\nsrc/bitcoind.cpp:265:5:   in ‘constexpr’ expansion of ‘util::ConstevalFormatString<1>(((const char*)\"Hi %s %s\"))’\r\nsrc/util/string.h:38:98:   in ‘constexpr’ expansion of ‘util::ConstevalFormatString<1>::Detail_CheckNumFormatSpecifiers(std::basic_string_view<char>(((const char*)((util::ConstevalFormatString<1>*)this)->util::ConstevalFormatString<1>::fmt)))’\r\nsrc/util/string.h:78:34: error: expression ‘<throw-expression>’ is not a constant expression\r\n   78 |         if (num_params != count) throw \"Format specifier count must match the argument count!\";\r\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nThis refactor does not change behavior of the compiled executables.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-09-12T18:37:18Z",
    "updated_at": "2025-09-19T11:43:50Z",
    "closed_at": "2024-09-19T11:17:25Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-09-19T11:17:25Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "2db926f49c812a3f04a565834c841ce4bc4ae288",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "maflcko:2407-log",
      "ref": "2407-log",
      "sha": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 259217,
        "default_branch": "master",
        "open_issues_count": 14,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-07T09:33:52Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-08-07T03:03:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6fc4692797121b54de0c54e5b09ee47f322c038a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37810,
        "stargazers_count": 85570,
        "watchers_count": 85570,
        "size": 293788,
        "default_branch": "master",
        "open_issues_count": 797,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-19T09:54:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-19T10:37:04Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 19,
    "deletions": 34,
    "changed_files": 7,
    "commits": 3,
    "review_comments": 25,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMzliMWNhNjM4NzRkYjhlZjhiYzE2Yjg3ZTI2OTllOGUxYjY3YmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa39b1ca63874db8ef8bc16b87e2699e8e1b67be",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa39b1ca63874db8ef8bc16b87e2699e8e1b67be",
      "tree": {
        "sha": "94b88a8b00ee42c5ab5890d653f88c5cb95513a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94b88a8b00ee42c5ab5890d653f88c5cb95513a1"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 94b88a8b00ee42c5ab5890d653f88c5cb95513a1\nparent e46bebb444dfff89813333dc1926a57c9a3e8aab\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1722244198 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1726162426 +0200\n\ndoc: move-only logging warning\n\nPut the warning closer to where it is relevant. That is, put it close to\nthe functions that actually do unconditional logging.\n\nAlso, remove a stray empty line.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQCb4kYJeSyel596Zhe9BxIQfdkQwKnX4q+2IfP7YoW5+kDQ2WJx7e5yC0DoPFA7uzi\ngWXvjyjV/R/+1KgTqR0gw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e46bebb444dfff89813333dc1926a57c9a3e8aab",
          "sha": "e46bebb444dfff89813333dc1926a57c9a3e8aab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e46bebb444dfff89813333dc1926a57c9a3e8aab"
        }
      ],
      "message": "doc: move-only logging warning\n\nPut the warning closer to where it is relevant. That is, put it close to\nthe functions that actually do unconditional logging.\n\nAlso, remove a stray empty line.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-09-12T17:33:46Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-07-29T09:09:58Z"
      },
      "sha": "fa39b1ca63874db8ef8bc16b87e2699e8e1b67be"
    },
    {
      "event": "commented",
      "id": 2346986541,
      "node_id": "IC_kwDOABII586L5Cwt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2346986541",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T18:37:21Z",
      "updated_at": "2024-09-19T11:17:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30889).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2311103729), [l0rinc](https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2312360142), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315076449), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315188347) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315195560) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2346986541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889"
    },
    {
      "event": "renamed",
      "id": 14237331309,
      "node_id": "RTE_lADOABII586WY0eFzwAAAANQnG9t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14237331309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T18:37:23Z",
      "rename": {
        "from": " log: Use ConstevalFormatString ",
        "to": "log: Use ConstevalFormatString"
      }
    },
    {
      "event": "labeled",
      "id": 14237331431,
      "node_id": "LE_lADOABII586WY0eFzwAAAANQnG_n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14237331431",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T18:37:23Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14237347391,
      "node_id": "HRFPE_lADOABII586WY0eFzwAAAANQnK4_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14237347391",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "555513ac4e40f25b54d5f0473904adb23f4e3df7",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/555513ac4e40f25b54d5f0473904adb23f4e3df7",
      "created_at": "2024-09-12T18:38:52Z"
    },
    {
      "event": "commented",
      "id": 2347083912,
      "node_id": "IC_kwDOABII586L5aiI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2347083912",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T19:31:04Z",
      "updated_at": "2024-09-12T19:31:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 555513ac4e40f25b54d5f0473904adb23f4e3df7. This is great and I'm surprised it could be implemented so easily.\r\n\r\nI do have questions about the second commit \"log: Make format errors visible in debug builds\" (fa0383761696d2c5c2e88208676cc993694fc1d4). I understand compile time checking should prevent most runtime errors, so the behavior in that commit of aborting the program when an invalid format string is specified is not as annoying for log-print debugging as it would be otherwise. But is it really the case that compile time checking will prevent all runtime errors? If some runtime errors are still possible I think it would better not to abort when they happen, or to at least move the commit to a different PR so we can evaluate whether to this independently of the other changes here, which are strict improvements otherwise.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2347083912",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZTliNjBjNGZmZWYzOGQ5NzI1ZjQyZjk5MmIxZjM4NzY1MzEyYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae9b60c4ffef38d9725f42f992b1f38765312a3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fae9b60c4ffef38d9725f42f992b1f38765312a3",
      "tree": {
        "sha": "6dc3e2c1d0651bd8f9f827f117efdab26b11107b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6dc3e2c1d0651bd8f9f827f117efdab26b11107b"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 6dc3e2c1d0651bd8f9f827f117efdab26b11107b\nparent fa39b1ca63874db8ef8bc16b87e2699e8e1b67be\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1722328038 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1726178913 +0200\n\ntest: Use LogPrintStr to test m_log_sourcelocations\n\nThis test checks m_log_sourcelocations, not the formatting with format\nspecifiers. Those are tested in logging_LogPrintMacros below.\n\nSo just use LogPrintStr directly in this test, without format specifiers\nand format args.\n\nThis is required for a follow-up commit.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKUJmdinjrUADKj+IDoJP79MjdHK+TZCadyDnohi5o4DOxFlOzYmtOO2XoSPHY8l1Y\nQvf+d3ZMAivTkJDC1Ljwg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa39b1ca63874db8ef8bc16b87e2699e8e1b67be",
          "sha": "fa39b1ca63874db8ef8bc16b87e2699e8e1b67be",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa39b1ca63874db8ef8bc16b87e2699e8e1b67be"
        }
      ],
      "message": "test: Use LogPrintStr to test m_log_sourcelocations\n\nThis test checks m_log_sourcelocations, not the formatting with format\nspecifiers. Those are tested in logging_LogPrintMacros below.\n\nSo just use LogPrintStr directly in this test, without format specifiers\nand format args.\n\nThis is required for a follow-up commit.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-09-12T22:08:33Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-07-30T08:27:18Z"
      },
      "sha": "fae9b60c4ffef38d9725f42f992b1f38765312a3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14239530657,
      "node_id": "HRFPE_lADOABII586WY0eFzwAAAANQvf6h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14239530657",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fabd78e2e30e557e04739e29c9c221ad47245df1",
      "created_at": "2024-09-12T22:09:46Z"
    },
    {
      "event": "commented",
      "id": 2347330955,
      "node_id": "IC_kwDOABII586L6W2L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2347330955",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T22:10:11Z",
      "updated_at": "2024-09-13T07:52:49Z",
      "author_association": "MEMBER",
      "body": "Sure, dropped the commit. It probably matters so little that reviewing it isn't worth it. (Edit: To clarify the commit uses `Assume`, which only aborts in CI or other test-only devel builds)\r\n\r\nEdit: To add even more context, IIUC the only remaining possible runtime errors should be due to the use of `*` (impossible to check at compile-time without a full compile-time re-implementation of POSIX or tinyformat), or `%n`: `TINYFORMAT_ERROR(\"tinyformat: %n conversion spec not supported\");`.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2347330955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889"
    },
    {
      "event": "reviewed",
      "id": 2302866708,
      "node_id": "PRR_kwDOABII586JQvUU",
      "url": null,
      "actor": null,
      "commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-13T11:26:05Z",
      "author_association": "MEMBER",
      "body": "ACK fabd78e2e30e557e04739e29c9c221ad47245df1\r\n\r\nI find this very practical. Regarding the abort on CI specifically would be very useful as well in order to catch the issues earlier, not sure about the cons on test-only builds, perhaps someone can add some issues related with it.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2302866708",
      "submitted_at": "2024-09-13T11:26:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "review_requested",
      "id": 14247453151,
      "node_id": "RRE_lADOABII586WY0eFzwAAAANRNuHf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14247453151",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T11:26:08Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2348789890,
      "node_id": "IC_kwDOABII586L_7CC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2348789890",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T12:02:37Z",
      "updated_at": "2024-09-13T12:02:37Z",
      "author_association": "MEMBER",
      "body": "> Regarding the abort on CI specifically would be very useful as well in order to catch the issues earlier, not sure about the cons on test-only builds\r\n\r\nIt should be trivial to extend the check to reject `%n`, but I still don't think it matters much either way, and it would be better in a separate pull request anyway.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2348789890",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889"
    },
    {
      "event": "reviewed",
      "id": 2303344498,
      "node_id": "PRR_kwDOABII586JSj9y",
      "url": null,
      "actor": null,
      "commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-13T14:51:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fabd78e2e30e557e04739e29c9c221ad47245df1. This is a simple change that should be useful for developers.\r\n\r\n---\r\n\r\nDo we know if this change affects compile time in any noticeable way? Might be worth checking since there are a lot of print statements, and compiler is now doing a little more work for each of them.\r\n\r\n---\r\n\r\nIt might also be worth updating description to give a sense of what errors look like. For me they look like:\r\n\r\n```c++\r\nsrc/util/string.h: In function ‘int main(int, char**)’:\r\nsrc/bitcoind.cpp:265:5:   in ‘constexpr’ expansion of ‘util::ConstevalFormatString<1>(((const char*)\"Hi %s %s\"))’\r\nsrc/util/string.h:38:98:   in ‘constexpr’ expansion of ‘util::ConstevalFormatString<1>::Detail_CheckNumFormatSpecifiers(std::basic_string_view<char>(((const char*)((util::ConstevalFormatString<1>*)this)->util::ConstevalFormatString<1>::fmt)))’\r\nsrc/util/string.h:78:34: error: expression ‘<throw-expression>’ is not a constant expression\r\n   78 |         if (num_params != count) throw \"Format specifier count must match the argument count!\";\r\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n```\r\n\r\n---\r\n\r\nTo be clear about dropped commit fa0383761696d2c5c2e88208676cc993694fc1d4, my concern is that I tend to add a lot of hasty print statements when debugging, and am usually debugging in debug mode, and would find it pretty annoying if I now have to go through potentially multiple unnecessary build/run cycles just because there is a new crash when hitting debug prints that don't use the right specifiers.  This may not be a real issue depending on how reliable compile-time checking is, but I don't know. In any case, it's a change better done separately to keep this PR focused.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2303344498",
      "submitted_at": "2024-09-13T14:50:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "reviewed",
      "id": 2309847632,
      "node_id": "PRR_kwDOABII586JrXpQ",
      "url": null,
      "actor": null,
      "commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-17T14:29:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK fabd78e2e30e557e04739e29c9c221ad47245df1\r\n\r\nConcept: Great to have compile time format string error checking on the common logging functions!\r\n\r\nTested changing this in *logging.h*:\r\n```diff\r\n- log_msg = tfm::format(fmt, params...);\r\n+ log_msg = tfm::format(\"%s %s\\n\", 1.1f);\r\n```\r\nand ran with expected error output.\r\n\r\nAgree with ryanofsky that it would be good to document rough compile time impact if any.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2309847632",
      "submitted_at": "2024-09-17T14:29:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhY2JjZDRjZWY4ODkwYWUxODk3NmZiNTNiNjdlYTU2YjNjMDQ0NTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "tree": {
        "sha": "dd31aa121b7ca8ce1730d1aaf138bc2b77c1929d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd31aa121b7ca8ce1730d1aaf138bc2b77c1929d"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree dd31aa121b7ca8ce1730d1aaf138bc2b77c1929d\nparent fae9b60c4ffef38d9725f42f992b1f38765312a3\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1722247728 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1726590083 +0200\n\nlog: Use ConstevalFormatString\n\nThis changes all logging (including the wallet logging) to produce a\nConstevalFormatString at compile time, so that the format string can be\nvalidated at compile-time.\n\nAlso, while touching the wallet logging, avoid a copy of the template\nParams by using const Params&.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQCCVZR2qxbU+1zOySu0NY9qSaSj+3TShB/1Edpm8uod1l9CFAGIna0HhHDbLT8iU6q\nnhIyJkkTE4f90Q9fZbxgU=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae9b60c4ffef38d9725f42f992b1f38765312a3",
          "sha": "fae9b60c4ffef38d9725f42f992b1f38765312a3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fae9b60c4ffef38d9725f42f992b1f38765312a3"
        }
      ],
      "message": "log: Use ConstevalFormatString\n\nThis changes all logging (including the wallet logging) to produce a\nConstevalFormatString at compile time, so that the format string can be\nvalidated at compile-time.\n\nAlso, while touching the wallet logging, avoid a copy of the template\nParams by using const Params&.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-09-17T16:21:23Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-07-29T10:08:48Z"
      },
      "sha": "facbcd4cef8890ae18976fb53b67ea56b3c04454"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14294049059,
      "node_id": "HRFPE_lADOABII586WY0eFzwAAAANT_eEj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14294049059",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "created_at": "2024-09-17T16:22:07Z"
    },
    {
      "event": "commented",
      "id": 2356432684,
      "node_id": "IC_kwDOABII586MdE8s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2356432684",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T16:48:44Z",
      "updated_at": "2024-09-17T16:48:44Z",
      "author_association": "MEMBER",
      "body": "> Agree with ryanofsky that it would be good to document rough compile time impact if any.\r\n\r\nSure added a note that it is less than 1% of both memory and time. The time should be offset by dropping the corresponding stuff from the Python linter, which is slower than a compiler at iterating over strings.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2356432684",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30889"
    },
    {
      "event": "reviewed",
      "id": 2311103729,
      "node_id": "PRR_kwDOABII586JwKTx",
      "url": null,
      "actor": null,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-17T21:28:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK facbcd4cef8890ae18976fb53b67ea56b3c04454\r\n\r\n`git range-diff master fabd78e facbcd4`: Undid `Args` -> `Params` rename based on nit.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2311103729",
      "submitted_at": "2024-09-17T21:28:10Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "review_requested",
      "id": 14297813485,
      "node_id": "RRE_lADOABII586WY0eFzwAAAANUN1Ht",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14297813485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T21:28:14Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 14297813588,
      "node_id": "RRE_lADOABII586WY0eFzwAAAANUN1JU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14297813588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T21:28:14Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2312360142,
      "node_id": "PRR_kwDOABII586J09DO",
      "url": null,
      "actor": null,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-18T11:29:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2312360142",
      "submitted_at": "2024-09-18T11:29:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "labeled",
      "id": 14306210495,
      "node_id": "LE_lADOABII586WY0eFzwAAAANUt3K_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14306210495",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-18T11:44:30Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 2315076449,
      "node_id": "PRR_kwDOABII586J_UNh",
      "url": null,
      "actor": null,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-19T10:15:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK facbcd4cef8890ae18976fb53b67ea56b3c04454\r\n\r\nOnly change since last review is tweaking log function declaration",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315076449",
      "submitted_at": "2024-09-19T10:14:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "reviewed",
      "id": 2315188347,
      "node_id": "PRR_kwDOABII586J_vh7",
      "url": null,
      "actor": null,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-19T10:58:56Z",
      "author_association": "MEMBER",
      "body": "re-ACK facbcd4cef8890ae18976fb53b67ea56b3c04454\r\n\r\nChecked the code changes since my last review.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315188347",
      "submitted_at": "2024-09-19T10:58:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "reviewed",
      "id": 2315195560,
      "node_id": "PRR_kwDOABII586J_xSo",
      "url": null,
      "actor": null,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-19T11:16:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK and code LGTM facbcd4cef8890ae18976fb53b67ea56b3c04454 modulo a `tinyformat::format_error` concern.\r\n\r\nVery elegant way to force more compile-time format string checks with minimal code overhaul, I really like this. ",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#pullrequestreview-2315195560",
      "submitted_at": "2024-09-19T11:16:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
    },
    {
      "event": "merged",
      "id": 14322381119,
      "node_id": "ME_lADOABII586WY0eFzwAAAANVrjE_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14322381119",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2db926f49c812a3f04a565834c841ce4bc4ae288",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2db926f49c812a3f04a565834c841ce4bc4ae288",
      "created_at": "2024-09-19T11:17:25Z"
    },
    {
      "event": "closed",
      "id": 14322381173,
      "node_id": "CE_lADOABII586WY0eFzwAAAANVrjF1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14322381173",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T11:17:25Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 14322667593,
      "node_id": "HRDE_lADOABII586WY0eFzwAAAANVspBJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14322667593",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T11:38:40Z"
    },
    {
      "event": "referenced",
      "id": 15084731532,
      "node_id": "REFE_lADOABII586WY0eFzwAAAAODHryM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15084731532",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "commit_url": "https://api.github.com/repos/TheCharlatan/rust-bitcoinkernel/commits/8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "created_at": "2024-11-02T20:58:32Z"
    },
    {
      "event": "locked",
      "id": 19797740581,
      "node_id": "LOE_lADOABII586WY0eFzwAAAAScCYwl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19797740581",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-19T11:43:50Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763307360",
      "pull_request_review_id": 2309847632,
      "id": 1763307360,
      "node_id": "PRRC_kwDOABII585pGe9g",
      "diff_hunk": "@@ -245,22 +245,22 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+template <typename... Params>",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: The `Params` name was already used in *scriptpubkeyman.h* and *wallet.h* before the PR but `Args` is used in *util/string.h*, *index/base.h/cpp*, *netbase.cpp* and used to be used here. Why switch and touch 2 additional lines?\r\n\r\nThe old way feels more consistent with the C \"varargs\". But maybe there's a convincing argument for \"Params\".\r\n\r\nDid the change locally and it compiles without causing any non-obvious issue.",
      "created_at": "2024-09-17T14:00:26Z",
      "updated_at": "2024-09-17T14:29:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1763307360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763307360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763327444",
      "pull_request_review_id": 2309847632,
      "id": 1763327444,
      "node_id": "PRRC_kwDOABII585pGj3U",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n-template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+template <typename... Params>\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Params)> fmt, const Params&... params)",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 18,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Line grows from 209 to 253 chars, please consider inserting line break(s).\r\n```suggestion\r\ninline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line,\r\n    const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Params)> fmt, const Params&... params)\r\n```",
      "created_at": "2024-09-17T14:12:19Z",
      "updated_at": "2024-09-17T14:29:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1763327444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763327444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763535883",
      "pull_request_review_id": 2310239452,
      "id": 1763535883,
      "node_id": "PRRC_kwDOABII585pHWwL",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n-template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+template <typename... Params>\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Params)> fmt, const Params&... params)",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 18,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "in_reply_to_id": 1763327444,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/blob/6fc4692797121b54de0c54e5b09ee47f322c038a/src/.clang-format#L23, so I'll leave this as-is for now.",
      "created_at": "2024-09-17T16:23:24Z",
      "updated_at": "2024-09-17T16:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1763535883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763535883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763536070",
      "pull_request_review_id": 2310239798,
      "id": 1763536070,
      "node_id": "PRRC_kwDOABII585pHWzG",
      "diff_hunk": "@@ -245,22 +245,22 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+template <typename... Params>",
      "path": "src/logging.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "fabd78e2e30e557e04739e29c9c221ad47245df1",
      "in_reply_to_id": 1763307360,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, done",
      "created_at": "2024-09-17T16:23:34Z",
      "updated_at": "2024-09-17T16:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1763536070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1763536070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764855872",
      "pull_request_review_id": 2312360142,
      "id": 1764855872,
      "node_id": "PRRC_kwDOABII585pMZBA",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: maybe we could dogfood this and use:\r\n```suggestion\r\n            log_msg = tfm::format(\"Error \\\"%s\\\" while formatting log message: %s\", fmterr.what(), fmt.fmt);\r\n```",
      "created_at": "2024-09-18T11:04:49Z",
      "updated_at": "2024-09-18T11:29:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764855872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764855872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764863855",
      "pull_request_review_id": 2312360142,
      "id": 1764863855,
      "node_id": "PRRC_kwDOABII585pMa9v",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this always be info?\r\nSome `WalletLogPrintf` usages seem like [warnings](https://github.com/bitcoin/bitcoin/blob/master/src/wallet/receive.cpp#L233-L234), or [errors](https://github.com/bitcoin/bitcoin/blob/master/src/wallet/rpc/backup.cpp#L600).",
      "created_at": "2024-09-18T11:11:07Z",
      "updated_at": "2024-09-18T11:30:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764863855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764863855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764878600",
      "pull_request_review_id": 2312360142,
      "id": 1764878600,
      "node_id": "PRRC_kwDOABII585pMekI",
      "diff_hunk": "@@ -927,9 +927,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/wallet.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clever workaround",
      "created_at": "2024-09-18T11:23:51Z",
      "updated_at": "2024-09-18T11:29:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764878600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764878600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 932,
      "original_line": 932,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764885813",
      "pull_request_review_id": 2312360142,
      "id": 1764885813,
      "node_id": "PRRC_kwDOABII585pMgU1",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/logging.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "is there a conceptual difference between `Args` (used here) and `Params` (used in `WalletLogPrintf`)?",
      "created_at": "2024-09-18T11:29:34Z",
      "updated_at": "2024-09-18T11:29:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764885813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764885813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764902520",
      "pull_request_review_id": 2312435450,
      "id": 1764902520,
      "node_id": "PRRC_kwDOABII585pMkZ4",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764855872,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No. It seems fragile to fall back to tinyformat when a tinyformat error occurred. Even if unlikley, that just seems like it could lead to another tfm exception, rendering this whole code useless in the first place.",
      "created_at": "2024-09-18T11:41:01Z",
      "updated_at": "2024-09-18T11:41:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764902520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764902520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764903584",
      "pull_request_review_id": 2312437233,
      "id": 1764903584,
      "node_id": "PRRC_kwDOABII585pMkqg",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A refactor is not allowed to change behavior. If you want to change behavior, a separate issue or pull request seems more appropriate.",
      "created_at": "2024-09-18T11:41:53Z",
      "updated_at": "2024-09-18T11:41:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764903584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764903584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764906085",
      "pull_request_review_id": 2312441545,
      "id": 1764906085,
      "node_id": "PRRC_kwDOABII585pMlRl",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/logging.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764885813,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No",
      "created_at": "2024-09-18T11:44:05Z",
      "updated_at": "2024-09-18T11:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764906085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764906085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764908089",
      "pull_request_review_id": 2312445016,
      "id": 1764908089,
      "node_id": "PRRC_kwDOABII585pMlw5",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added \"This refactor does not change behavior of the compiled executables.\" to the pull description and applied the label.",
      "created_at": "2024-09-18T11:45:51Z",
      "updated_at": "2024-09-18T11:45:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764908089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764908089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764909660",
      "pull_request_review_id": 2312447573,
      "id": 1764909660,
      "node_id": "PRRC_kwDOABII585pMmJc",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764855872,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I understand (and somewhat share) the reasoning, but doesn't this mean that we don't trust `tfm::format` even in a fixed case?\r\nE.g. isn't it possible after this call for `log_msg` to contain dangling format specifiers, which would be passed on to `LogInfo` anyway?",
      "created_at": "2024-09-18T11:47:08Z",
      "updated_at": "2024-09-18T11:47:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764909660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764909660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764918069",
      "pull_request_review_id": 2312460922,
      "id": 1764918069,
      "node_id": "PRRC_kwDOABII585pMoM1",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's my concern as well, it seems to me we're changing behavior (or at least meaning) here by swapping a neutral `LogPrintf` to `Info` level logging, when in fact it's sometimes a `warning` or `error`.",
      "created_at": "2024-09-18T11:53:47Z",
      "updated_at": "2024-09-18T11:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764918069",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764918069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764918674",
      "pull_request_review_id": 2312461795,
      "id": 1764918674,
      "node_id": "PRRC_kwDOABII585pMoWS",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/logging.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764885813,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "So can we unify the two and use only one to avoid confusion?",
      "created_at": "2024-09-18T11:54:12Z",
      "updated_at": "2024-09-18T11:54:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764918674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764918674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764920307",
      "pull_request_review_id": 2312464330,
      "id": 1764920307,
      "node_id": "PRRC_kwDOABII585pMovz",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764855872,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> doesn't this mean that we don't trust `tfm::format` even in a fixed case?\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/30889#issuecomment-2347330955, but this should never happen. So I don't think micro-optimizing this is worth it.",
      "created_at": "2024-09-18T11:55:22Z",
      "updated_at": "2024-09-18T11:55:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764920307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764920307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764925192",
      "pull_request_review_id": 2312472209,
      "id": 1764925192,
      "node_id": "PRRC_kwDOABII585pMp8I",
      "diff_hunk": "@@ -245,28 +245,27 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n-// Be conservative when using functions that\n-// unconditionally log to debug.log! It should not be the case that an inbound\n-// peer can fill up a user's disk with debug.log entries.\n-\n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/logging.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764885813,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't want to touch lines in this pull request that don't have to be touched. Also, I don't want to increase the scope here.",
      "created_at": "2024-09-18T11:59:04Z",
      "updated_at": "2024-09-18T11:59:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764925192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764925192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764929168",
      "pull_request_review_id": 2312478505,
      "id": 1764929168,
      "node_id": "PRRC_kwDOABII585pMq6Q",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`LogInfo` is neutral, because there is no level. See `GetLogPrefix`:\r\n\r\n```\r\n    // If there is no category, Info is implied\r\n    if (!has_category && level == Level::Info) return {};\r\n```\r\n\r\nIn any case, it is literally a macro alias:\r\n\r\n```\r\n// Deprecated unconditional logging.\r\n#define LogPrintf(...) LogInfo(__VA_ARGS__)\r\n",
      "created_at": "2024-09-18T12:02:08Z",
      "updated_at": "2024-09-18T12:02:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764929168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764929168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764932679",
      "pull_request_review_id": 2312484250,
      "id": 1764932679,
      "node_id": "PRRC_kwDOABII585pMrxH",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764855872,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, what about the case when `fmterr.what()` contains formatting, like `%s`?",
      "created_at": "2024-09-18T12:04:53Z",
      "updated_at": "2024-09-18T12:04:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764932679",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764932679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764934401",
      "pull_request_review_id": 2312487226,
      "id": 1764934401,
      "node_id": "PRRC_kwDOABII585pMsMB",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Got it, thanks.\r\nWould it make sense to add an optional log-level parameter here to be able to set some of those logs to errors/warns in a future PR?",
      "created_at": "2024-09-18T12:06:17Z",
      "updated_at": "2024-09-18T12:06:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1764934401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1764934401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1765000717",
      "pull_request_review_id": 2312596656,
      "id": 1765000717,
      "node_id": "PRRC_kwDOABII585pM8YN",
      "diff_hunk": "@@ -254,9 +254,9 @@ class ScriptPubKeyMan\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), m_storage.GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", m_storage.GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764863855,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would it make sense ... in a future PR?\r\n\r\nI don't know and I don't think it matters much one way or the other.\r\n\r\n> Got it, thanks.\r\n\r\nOk, resolving this for now.",
      "created_at": "2024-09-18T12:52:29Z",
      "updated_at": "2024-09-18T12:52:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1765000717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1765000717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 259,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1765002284",
      "pull_request_review_id": 2312599279,
      "id": 1765002284,
      "node_id": "PRRC_kwDOABII585pM8ws",
      "diff_hunk": "@@ -246,21 +246,21 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\n \n template <typename... Args>\n-static inline void LogPrintf_(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, const char* fmt, const Args&... args)\n+inline void LogPrintFormatInternal(std::string_view logging_function, std::string_view source_file, const int source_line, const BCLog::LogFlags flag, const BCLog::Level level, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n         std::string log_msg;\n         try {\n             log_msg = tfm::format(fmt, args...);\n         } catch (tinyformat::format_error& fmterr) {\n             /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+            log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;",
      "path": "src/logging.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1764855872,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Ok, what about the case when `fmterr.what()` contains formatting, like `%s`?\r\n\r\nIt may or may not contain it. It doesn't matter either way. Also, I am not changing that (or any behavior). So a separate issue or pull request seems better.",
      "created_at": "2024-09-18T12:53:33Z",
      "updated_at": "2024-09-18T12:53:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1765002284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1765002284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 257,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766633746",
      "pull_request_review_id": 2315195560,
      "id": 1766633746,
      "node_id": "PRRC_kwDOABII585pTLES",
      "diff_hunk": "@@ -927,9 +927,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/wallet.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "By not letting `LogInfo` do the formatting, there's no `tinyformat::format_error` error handling anymore. This makes the code less robust to the malformed format strings we do not catch at compile time. For example, with this diff:\r\n\r\n```diff\r\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\r\nindex 83e96adf07..e6a2576f0a 100644\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -3822,7 +3822,7 @@ void CWallet::LoadActiveScriptPubKeyMan(uint256 id, OutputType type, bool intern\r\n     // Legacy wallets have only one ScriptPubKeyManager and it's active for all output and change types.\r\n     Assert(IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS));\r\n \r\n-    WalletLogPrintf(\"Setting spkMan to active: id = %s, type = %s, internal = %s\\n\", id.ToString(), FormatOutputType(type), internal ? \"true\" : \"false\");\r\n+    WalletLogPrintf(\"Setting spkMan to active: id = %s, type = %s, internal = %*s\\n\", id.ToString(), FormatOutputType(type), internal ? \"true\" : \"false\");\r\n     auto& spk_mans = internal ? m_internal_spk_managers : m_external_spk_managers;\r\n     auto& spk_mans_other = internal ? m_external_spk_managers : m_internal_spk_managers;\r\n     auto spk_man = m_spk_managers.at(id).get();\r\n\r\n```\r\n\r\non `master`, this would still allow a wallet to be loaded (with just the logging failing):\r\n\r\n```\r\n% bitcoin-cli loadwallet test\r\n{\r\n  \"name\": \"test\"\r\n}\r\n\r\n...\r\n\r\n2024-09-19T10:32:57Z init message: Loading wallet…\r\n2024-09-19T10:32:57Z [test] Wallet file version = 10500, last client version = 289900\r\n2024-09-19T10:32:57Z [test] Descriptors: 8, Descriptor Keys: 1 plaintext, 0 encrypted, 1 total.\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: %s Setting spkMan to active: id = %s, type = %s, internal = %*s\r\n2024-09-19T10:32:57Z [test] Wallet completed loading in             281ms\r\n```\r\n \r\nwhereas on facbcd4cef8890ae18976fb53b67ea56b3c04454, you get:\r\n\r\n```\r\n% bitcoin-cli loadwallet test\r\nerror code: -4\r\nerror message:\r\nWallet loading failed. Error loading <...>/signet/wallets/test/wallet.dat: Wallet corrupted\r\n\r\n...\r\n\r\n2024-09-19T11:00:08Z init message: Loading wallet…\r\n2024-09-19T11:00:08Z [test] Wallet file version = 10500, last client version = 289900\r\n2024-09-19T11:00:09Z [test] Descriptors: 8, Descriptor Keys: 1 plaintext, 0 encrypted, 1 total.\r\n2024-09-19T11:00:09Z [test] Releasing wallet test..\r\n```\r\n\r\nSimilar concern in `scriptpubkeyman.h`.",
      "created_at": "2024-09-19T11:02:20Z",
      "updated_at": "2024-09-19T11:16:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1766633746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766633746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 932,
      "original_line": 932,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766676838",
      "pull_request_review_id": 2315273891,
      "id": 1766676838,
      "node_id": "PRRC_kwDOABII585pTVlm",
      "diff_hunk": "@@ -927,9 +927,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/wallet.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1766633746,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point and good catch. This should be trivial to fix by using a macro approach to concatenate the two format strings. (In C++ `\"a\" \"b\"` is equivalent to `\"ab\"`). A macro approach was my initial implementation when I wrote this in July, but the benefit wasn't clear, so I switched to this. Basically,\r\n\r\n* Breaking this requires an intentionally malformed format string, such as `%n` or `%*s`, which may or may not be caught during review.\r\n* The wallet logging is unconditional, so this requires the code to be completely untested. Otherwise tests would hopefully catch the intentional malformed format string before review.\r\n* There are many other places where tinyformat is used without a catch, so it is unclear why it should be checked here, but not in the other places.\r\n\r\nBut again, it should be trivial to add this back, if reviewers think this would be useful to add back.",
      "created_at": "2024-09-19T11:37:16Z",
      "updated_at": "2024-09-19T11:40:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1766676838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766676838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 932,
      "original_line": 932,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766980655",
      "pull_request_review_id": 2315793738,
      "id": 1766980655,
      "node_id": "PRRC_kwDOABII585pUfwv",
      "diff_hunk": "@@ -927,9 +927,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     /** Prepends the wallet name in logging output to ease debugging in multi-wallet use cases */\n     template <typename... Params>\n-    void WalletLogPrintf(const char* fmt, Params... parameters) const\n+    void WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)> wallet_fmt, const Params&... params) const\n     {\n-        LogPrintf((\"%s \" + std::string{fmt}).c_str(), GetDisplayName(), parameters...);\n+        LogInfo(\"%s %s\", GetDisplayName(), tfm::format(wallet_fmt, params...));",
      "path": "src/wallet/wallet.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "original_commit_id": "facbcd4cef8890ae18976fb53b67ea56b3c04454",
      "in_reply_to_id": 1766633746,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed in #30928.\r\n\r\nYou're right that the unconditional logging should make these errors quite likely to be caught in review, and that there is no consistency in when we catch formatting exceptions or not. In #30928 I tried to address the latter by enforcing run-time exceptions are handled whenever we use `util::ConstevalFormatString`, which should correlate with needing to prioritize run-time robustness.",
      "created_at": "2024-09-19T14:50:10Z",
      "updated_at": "2024-09-19T14:50:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1766980655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1766980655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30889"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 932,
      "original_line": 932,
      "side": "RIGHT"
    }
  ]
}