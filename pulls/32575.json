{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575",
    "id": 2532604905,
    "node_id": "PR_kwDOABII586W9Hvp",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32575",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32575.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32575.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6667ea17a9562237749027c808732b9ee0e09fb1",
    "number": 32575,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Split multithreaded case out of CheckInputScripts",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This topic has been motivated by my work on batch validation and a related conversation just happened here: https://github.com/bitcoin/bitcoin/pull/32467#discussion_r2098305199 \r\n\r\n`CheckInputScripts` currently only does what its name implies if there is no multithreading usage for validation. If there are worker threads available the function instead only creates the checks and puts them into a vector. Aside from some shared pre-checks the multithreaded code path is much simpler compared to the rest. This dual use makes the function hard to grasp and its naming confusing. So this PR is splitting the single thread case from the multithread. This results in more LOC but the result is much clearer.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-05-20T20:52:49Z",
    "updated_at": "2025-08-06T06:43:59Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "2280798d2d3d764534c6f1c1e0c708263db70cb0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:2025-05-CheckInputScript-split",
      "ref": "2025-05-CheckInputScript-split",
      "sha": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 274650,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-04T15:27:08Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-07-23T22:14:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "154b98a7aaae248f5d40ca567d1ec51410d09bae",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37612,
        "stargazers_count": 84896,
        "watchers_count": 84896,
        "size": 290338,
        "default_branch": "master",
        "open_issues_count": 750,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-05T13:19:14Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-06T06:20:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 117,
    "deletions": 77,
    "changed_files": 2,
    "commits": 4,
    "review_comments": 12,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2895805431,
      "node_id": "IC_kwDOABII586smnv3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895805431",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T20:52:52Z",
      "updated_at": "2025-08-06T06:43:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32575.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895813848), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895950866), [stickies-v](https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2897442292) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33050](https://github.com/bitcoin/bitcoin/pull/33050) (net, validation: don't punish peers for consensus-invalid txs by ajtowns)\n* [#32998](https://github.com/bitcoin/bitcoin/pull/32998) (Bump SCRIPT_VERIFY flags to 64 bit by ajtowns)\n* [#32473](https://github.com/bitcoin/bitcoin/pull/32473) (Introduce per-txin sighash midstate cache for legacy/p2sh/segwitv0 scripts by sipa)\n* [#32317](https://github.com/bitcoin/bitcoin/pull/32317) (kernel: Separate UTXO set access from validation functions by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895805431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "commented",
      "id": 2895813848,
      "node_id": "IC_kwDOABII586smpzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895813848",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T20:57:04Z",
      "updated_at": "2025-05-20T20:57:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Anything to clean this up :)\r\n\r\nSee also #32317 which moves some of this functionality around similarly.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895813848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17742178882,
      "node_id": "HRFPE_lADOABII5863ecIWzwAAAAQhhCpC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17742178882",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4262b75726e717f89f232867c87bc6af50de82a5",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/4262b75726e717f89f232867c87bc6af50de82a5",
      "created_at": "2025-05-20T21:43:33Z"
    },
    {
      "event": "ready_for_review",
      "id": 17742225246,
      "node_id": "RFRE_lADOABII5863ecIWzwAAAAQhhN9e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17742225246",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T21:48:58Z"
    },
    {
      "event": "commented",
      "id": 2895912036,
      "node_id": "IC_kwDOABII586snBxk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895912036",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T21:49:56Z",
      "updated_at": "2025-05-22T20:08:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Cleaned up the comments so this should be ready for more detailed feedback, ~~but expect a rebase once https://github.com/bitcoin/bitcoin/pull/32467 is merged.~~",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895912036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "reviewed",
      "id": 2855683921,
      "node_id": "PRR_kwDOABII586qNkdR",
      "url": null,
      "actor": null,
      "commit_id": "4262b75726e717f89f232867c87bc6af50de82a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#pullrequestreview-2855683921",
      "submitted_at": "2025-05-20T21:54:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
    },
    {
      "event": "commented",
      "id": 2895950866,
      "node_id": "IC_kwDOABII586snLQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895950866",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T22:12:27Z",
      "updated_at": "2025-05-20T22:12:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2895950866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "renamed",
      "id": 17742482355,
      "node_id": "RTE_lADOABII5863ecIWzwAAAAQhiMuz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17742482355",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T22:19:09Z",
      "rename": {
        "from": "RFC: refactor: Split multithreaded case out of CheckInputScripts",
        "to": "refactor: Split multithreaded case out of CheckInputScripts"
      }
    },
    {
      "event": "labeled",
      "id": 17742482797,
      "node_id": "LE_lADOABII5863ecIWzwAAAAQhiM1t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17742482797",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T22:19:12Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 2897442292,
      "node_id": "IC_kwDOABII586ss3X0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2897442292",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T10:28:43Z",
      "updated_at": "2025-05-21T10:28:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2897442292",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "labeled",
      "id": 17777536144,
      "node_id": "LE_lADOABII5863ecIWzwAAAAQjn6yQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17777536144",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-22T18:15:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2902192274,
      "node_id": "IC_kwDOABII586s-_CS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2902192274",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-22T18:29:24Z",
      "updated_at": "2025-05-22T18:29:24Z",
      "author_association": "MEMBER",
      "body": "Ready for rebase.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2902192274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17778915483,
      "node_id": "HRFPE_lADOABII5863ecIWzwAAAAQjtLib",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17778915483",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "created_at": "2025-05-22T20:07:15Z"
    },
    {
      "event": "commented",
      "id": 2902456340,
      "node_id": "IC_kwDOABII586s__gU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2902456340",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-22T20:21:11Z",
      "updated_at": "2025-05-22T20:21:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Ready for rebase.\r\n\r\nDone, ready for review :)",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2902456340",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "unlabeled",
      "id": 17779249870,
      "node_id": "UNLE_lADOABII5863ecIWzwAAAAQjudLO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17779249870",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-22T20:34:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2862605355,
      "node_id": "PRR_kwDOABII586qn-Qr",
      "url": null,
      "actor": null,
      "commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#pullrequestreview-2862605355",
      "submitted_at": "2025-05-22T21:26:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
    },
    {
      "event": "reviewed",
      "id": 2862622672,
      "node_id": "PRR_kwDOABII586qoCfQ",
      "url": null,
      "actor": null,
      "commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#pullrequestreview-2862622672",
      "submitted_at": "2025-05-22T21:44:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRjZDNjNTlmYTQxMzRjYTAzMTc5YTI0MzEyYTkwNjlmZjk5ZTY0MzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcd3c59fa4134ca03179a24312a9069ff99e6432",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd3c59fa4134ca03179a24312a9069ff99e6432",
      "tree": {
        "sha": "005d6e620ff60953ac2d324bde3efdeb43bc1dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/005d6e620ff60953ac2d324bde3efdeb43bc1dc1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 005d6e620ff60953ac2d324bde3efdeb43bc1dc1\nparent 084eee029199a741c58e5537b332bd8360a1bdc3\nauthor Fabian Jahr <fjahr@protonmail.com> 1747760259 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1750356197 +0200\n\nrefactor: Extract cache check from CheckInputScripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmhUUOUVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNAGIP/3ZU8Hfj6tFVxdRjNF6Zf9FBa0NY\nK6ju74ZzAGtJ9Kr6zmOqdeOneZ0z98O9E5HkMdsntABcrkTtDaLSoQ14QtCxlcZr\nemwiUSA5K1Ri6ysM1H4xqnA2qcQTl0KE4UA9o7xqmpnrpcoDuHSJhOK/JwOF6Zu2\n7nqQbefjBkdgTL7W8YREC6KT8ocZvbggWI+plQpRxmGehk+6w5dp/ZBmdSEYWl3i\n7rWX7q83O/qga8aVT0E3JJt4dtJUQfyRgZnOstZzeFiKme1RtMSdn0yw6sz6LH77\nAT5LtkeswsMSah0dbzCDMDkIXXRi/Plaxj3KHtW02EjMktk5+w2YXXvWwwpfGgd7\n40kg2sUAqBEiYZ8A82oMZK5xdvvV+wAD51JoByVnFR64vwYhoccKCtvxNxDdvm8d\neDTf7IJxo3nK903W+lRkyl1d9YTh6JC837Q4ex/mEQLLq6csPh5OC6TNxy7RvQST\nbInCqy8acind0wrm5LP5E+tSolSwEyM+fIk5VWOrzWip3aVPJDwRWU3xvtSViTM1\n4dxbH81QUQ5NgsH5cetpF7+fUq8VYsOSzOcXlQfVGcbyjpnpHeCcVoDqEzxcgDel\nnTWyYKseD0u7ZCYzUt93+uYI9UobGOji0QhFpgxPisDPF2PTVw3ykBR2fsh1oWXA\ncSSoiPmqDbuJXoaE\n=8Cfq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/084eee029199a741c58e5537b332bd8360a1bdc3",
          "sha": "084eee029199a741c58e5537b332bd8360a1bdc3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/084eee029199a741c58e5537b332bd8360a1bdc3"
        }
      ],
      "message": "refactor: Extract cache check from CheckInputScripts",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-06-19T18:03:17Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-05-20T16:57:39Z"
      },
      "sha": "dcd3c59fa4134ca03179a24312a9069ff99e6432"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQzYjczNDY0N2ZlZjRhNDlmMDgzYzk3N2U1Yzc3NDIyY2M5NTZhYjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43b734647fef4a49f083c977e5c77422cc956ab5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/43b734647fef4a49f083c977e5c77422cc956ab5",
      "tree": {
        "sha": "4a6cdd905ac25314be7a13361412baa085ae302b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a6cdd905ac25314be7a13361412baa085ae302b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4a6cdd905ac25314be7a13361412baa085ae302b\nparent dcd3c59fa4134ca03179a24312a9069ff99e6432\nauthor Fabian Jahr <fjahr@protonmail.com> 1747761352 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1750356198 +0200\n\nrefactor: Extract TxData initialization from CheckInputScripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmhUUOYVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNNboP/i/FFt8sVZuW46Sj4xn3iB8BOB/C\naUaVqdxqJiaip3wxeYKcJ0Um5wExE7X/y6uP0Eg2UEcBjGZtOfKm0KOVVZ8eb4Nk\nefwrv7kLin+/9UeOMZvtNXYItP9m7S4n6VhSru44GnRpLidVpwxX4FD6jbU7sRTX\n36LTfnKb4UMULgqaEFmhjo2m44JIVqm2CiyzbY6rdy3QSTgrScA5Xh7l4EytmMpa\ntQR10BIG2ScyGIj8J+1VBlxBO+jP0z+gIcTxubYjfvvB6h9wUYgJNaJQ3BW0P9T6\nNjzJEemzSzNMHCGLKCcpM6R5iNXgWJwz5dBlYB6ueNRZMRUEFStdO7J9cNMzfHIL\noGagX9XmYR2SzZtudpFW7hWgXeXMZ+Z3iAW6DB3CrG9WrZaScDv2lIpZKGEmm5UE\n8Yh1AD90LQv3oSsOQyoIBOOBHuhTjjPejTb53C5UwkP+wwziPSfFxOtgPrNBoVgn\n5eCWAXlphBNk0WWf7Z4U+hxPRskw77IIYA78Zaa2RgzYzSxJYJ/zNA5N9Ht/yyWn\nH1GrqPOIvQf8AuOGBkTRQfQPnsauv4ONbggnu1LKtAZAMRaNzpW4HLF9EFWTPs5j\nlrmgWcPMvWv4uSLGLaH7KL7/2gXRLnX4Urql00cA/ZwV0pfrXx8HBaP4S6MClr+4\nhWw6sxPOLleQIAvP\n=V4zK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcd3c59fa4134ca03179a24312a9069ff99e6432",
          "sha": "dcd3c59fa4134ca03179a24312a9069ff99e6432",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd3c59fa4134ca03179a24312a9069ff99e6432"
        }
      ],
      "message": "refactor: Extract TxData initialization from CheckInputScripts",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-06-19T18:03:18Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-05-20T17:15:52Z"
      },
      "sha": "43b734647fef4a49f083c977e5c77422cc956ab5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18236545663,
      "node_id": "HRFPE_lADOABII5863ecIWzwAAAAQ--5p_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18236545663",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "edcc004c40439b58fa2244da13c6b7fa3d028ba5",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/edcc004c40439b58fa2244da13c6b7fa3d028ba5",
      "created_at": "2025-06-19T22:00:13Z"
    },
    {
      "event": "commented",
      "id": 2989224515,
      "node_id": "IC_kwDOABII586yK_JD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2989224515",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T22:00:21Z",
      "updated_at": "2025-06-19T22:00:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> An alternative would be to make CCheckQueueControl work with 0 worker threads (maybe it already does?) and just always use it. That would completely unify the approach here.\r\n\r\nYeah, that does work basically out of the box. I tested it with this minimal change on top of the changes here: https://github.com/fjahr/bitcoin/commit/320b9a967f88ece5b98779948c47493ad7717da2 However I don't favor that approach at the moment since there seems to be a lot of overhead when using checkqueue with a single thread and a lot of docs would need to be changed accordingly as well. Just logically you wouldn't think about using a queue when you just have a single thread, so while it would definitely simplify the code in `ConnectBlock`, I am not sure it's a bigger win than the other approaches discussed here, given that it may cause irritation in other places and a performance penalty. I am happy to be convinced of this approach though if I overlooked something.\r\n\r\nI have now pushed here an updated version that addresses both the suggestions from @theuni and @mzumsande .",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#issuecomment-2989224515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32575"
    },
    {
      "event": "mentioned",
      "id": 18236547215,
      "node_id": "MEE_lADOABII5863ecIWzwAAAAQ--6CP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18236547215",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T22:00:22Z"
    },
    {
      "event": "subscribed",
      "id": 18236547221,
      "node_id": "SE_lADOABII5863ecIWzwAAAAQ--6CV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18236547221",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T22:00:22Z"
    },
    {
      "event": "mentioned",
      "id": 18236547229,
      "node_id": "MEE_lADOABII5863ecIWzwAAAAQ--6Cd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18236547229",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T22:00:22Z"
    },
    {
      "event": "subscribed",
      "id": 18236547253,
      "node_id": "SE_lADOABII5863ecIWzwAAAAQ--6C1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18236547253",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T22:00:22Z"
    },
    {
      "event": "reviewed",
      "id": 2945272920,
      "node_id": "PRR_kwDOABII586vjUxY",
      "url": null,
      "actor": null,
      "commit_id": "edcc004c40439b58fa2244da13c6b7fa3d028ba5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#pullrequestreview-2945272920",
      "submitted_at": "2025-06-20T09:34:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2ZWYxZDI2ZThkNDY5Y2VlZjA5NzNlZmVmMjcyMzAyM2QzYjYwMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76ef1d26e8d469ceef0973efef2723023d3b600e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/76ef1d26e8d469ceef0973efef2723023d3b600e",
      "tree": {
        "sha": "2b3ce7f93cd377d9427cdf1f649701f1e374044c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b3ce7f93cd377d9427cdf1f649701f1e374044c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2b3ce7f93cd377d9427cdf1f649701f1e374044c\nparent 43b734647fef4a49f083c977e5c77422cc956ab5\nauthor Fabian Jahr <fjahr@protonmail.com> 1750353711 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1750424362 +0200\n\nrefactor: Extract PreCheckInputScripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmhVWysVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN9AwP/jq5zrmxvJTgmpqkZ8yQF6XvlKD7\nrOpmoXJ7Cbgg7LNyHsr/1md7vWeZpFVl3oh6QANulnrgHhicV01Tg+Cgq3XVHYjx\nxIXdVwBxHvw1M+l9ZBt6Qgj/ApSpcc6B6VdVgfKGFqSdaHQ5EbwvwP+Iu1GiP3vi\nAKR+ye/tyjmIRZ0vVEMGW/MUeYLMv64ADRKAgbJjC46w6rFOQg4N2EcEOid/8I9V\ngu3igwtExczIBkrgrHMLRG5/RPHwVzCaqxNuEwv/7xrAn5RTYHcYwHt0YGmUKF9j\n/wUmcoq68vmrdI/lOum3IntuAKfJdyi12hq0PPMpHBb6fiQJhWPjtq/5wD/gOgh0\niZAdDCyQmbfFnZ3vvExPl9XY898jh3oiB+jIosn+F4cEA//z+g/jQKgXTcf/N2vG\nQvPMRkHeOBcU2rGrJVNK8GwiD4iYKdu43OcP4Z9qy/uwepZ0GTYWJHzCOwlKCQCg\nH91tyEbDNSOj6RI+23XWsRimokMqMSjJx/rw2T7evzs8a4sjjXvPuFjEve6irNqo\nkhgulvHX/Yule/epDM4OBa339IKukbPg1XYSyqrwYAvGl3lYrvDLrrRrGK+AtGjM\nVmYSpFUJ7Nip4tHnpPoOSMiKsS4TnvJfZVgBdPn6ewihua3kNyOjGKAdoo+gfqQu\n/GN+eg5OQA/zG5f6\n=VbTy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43b734647fef4a49f083c977e5c77422cc956ab5",
          "sha": "43b734647fef4a49f083c977e5c77422cc956ab5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/43b734647fef4a49f083c977e5c77422cc956ab5"
        }
      ],
      "message": "refactor: Extract PreCheckInputScripts",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-06-20T12:59:22Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-06-19T17:21:51Z"
      },
      "sha": "76ef1d26e8d469ceef0973efef2723023d3b600e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY2NjdlYTE3YTk1NjIyMzc3NDkwMjdjODA4NzMyYjllZTBlMDlmYjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6667ea17a9562237749027c808732b9ee0e09fb1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6667ea17a9562237749027c808732b9ee0e09fb1",
      "tree": {
        "sha": "4d2f0680748daedb16fbee7d5060c9c7cf7f63d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d2f0680748daedb16fbee7d5060c9c7cf7f63d3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4d2f0680748daedb16fbee7d5060c9c7cf7f63d3\nparent 76ef1d26e8d469ceef0973efef2723023d3b600e\nauthor Fabian Jahr <fjahr@protonmail.com> 1747771303 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1750424363 +0200\n\nrefactor: Remove multiprocess handling from CheckInputScripts\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmhVWysVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNDZQP/3w3/bwNRIMNUozJJB5zdLC6FBUQ\n1CTlGiqy+hieWaJD57ZEgIQhMuGciiuahQiTUm1l5F9Bb9dtgEexF8Y7ujs67t4i\nb7w5S9Pik3Ros2D9yfUE2LeAMrxVpLtvEjPy1BmOxNSFhhSKChkljtLgkvm7KjTh\nmFMzhEsoqJdSPk5vQXiUlbmAN527aFPf0mp32CZFDeg3QLvZTSDSv3VnYXWLnQ2V\n6jHg6RwUTha4GCWQEym7TZftSrqnXyrtsPrfGe3CSC57zYU51Oq/yJeEmkrmz7yj\n0KX/hvjYa5/RwH5VPaQKsTkrI5/8Dd8IgomA6EdonHnyCIbKnfitLdZ4+OX5oQhT\nj3Z6G5SQ6FaJcePOBK9xGbIVGHbLn0sBg9jcivTB/a7CgUSddsbGETJtu9BaNgjr\nuTE6a9OnUuXdgazNhd8zQFmQa9FGcdLwBdZJ0nBGbX54MkP4n6mS7XcoPb2LzVTx\nmW1lXr4uKf21FPZUIS7/15xDiJsrQCJRX16qWMuzI+JE+NuzTHW+T8qTLh+VMTug\n931Px8X9OWARjunF4iFCuH4owv4NSQ3vO+Juuzgb2vLu31wWIf6uhaDPNZfHnw7Y\nB2+or3h0GwI1S/xxhF31UkHjoHdGxUfAUCGXjfEYuAyh5O+wKxfC+x/79MfyqtEp\nugdxzISDzZT1C64q\n=g2wo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76ef1d26e8d469ceef0973efef2723023d3b600e",
          "sha": "76ef1d26e8d469ceef0973efef2723023d3b600e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/76ef1d26e8d469ceef0973efef2723023d3b600e"
        }
      ],
      "message": "refactor: Remove multiprocess handling from CheckInputScripts",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-06-20T12:59:23Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-05-20T20:01:43Z"
      },
      "sha": "6667ea17a9562237749027c808732b9ee0e09fb1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18247238865,
      "node_id": "HRFPE_lADOABII5863ecIWzwAAAAQ_nsTR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18247238865",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/6667ea17a9562237749027c808732b9ee0e09fb1",
      "created_at": "2025-06-20T12:59:30Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2098936599",
      "pull_request_review_id": 2855683921,
      "id": 2098936599,
      "node_id": "PRRC_kwDOABII5859GzsX",
      "diff_hunk": "@@ -2185,16 +2189,46 @@ void EnsureTxData(const CTransaction& tx, const CCoinsViewCache& inputs, Precomp\n     assert(txdata.m_spent_outputs.size() == tx.vin.size());\n }\n \n+/**\n+ * Turn all of this transaction's input scripts into script checks and return them as a vector.\n+ * Any script checks which are not necessary (eg due to script execution cache hits) are excluded.\n+ *\n+ * Setting cacheSigStore/cacheFullScriptStore to false will remove elements from the corresponding cache\n+ * which are matched. This is useful for checking blocks where we will likely never need the cache\n+ * entry again.\n+ *\n+ * Non-static (and redeclared) in src/test/txvalidationcache_tests.cpp\n+ */\n+std::vector<CScriptCheck> PrepareInputScriptChecks(const CTransaction& tx,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       ValidationCache& validation_cache) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    if (tx.IsCoinBase()) return {};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "4262b75726e717f89f232867c87bc6af50de82a5",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have been contemplating kicking this out (here and in `CheckInputScripts`) or even turning this into an assert because the callers already handle this everywhere. On the other hand it conceptually makes sense to return early if we know there is nothing to check because we don't expect any inputs. So I am still undecided on this one and happy to hear opinions.",
      "created_at": "2025-05-20T21:54:14Z",
      "updated_at": "2025-05-22T20:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2098936599",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2098936599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103422435",
      "pull_request_review_id": 2862605355,
      "id": 2103422435,
      "node_id": "PRRC_kwDOABII5859X63j",
      "diff_hunk": "@@ -2695,22 +2722,20 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n+            // If parallel script checking is possible (worker threads are available) the checks are appended to a\n+            // vector without running them. The vector is then added to control which runs the checks asynchronously.\n+            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\n             if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n+                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+                control->Add(std::move(vChecks));\n             } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n-            }\n-            if (!tx_ok) {\n-                // Any transaction validation failure in ConnectBlock is a block consensus failure\n-                state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\n-                              tx_state.GetRejectReason(), tx_state.GetDebugMessage());\n-                break;\n+                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this should go a little further. At this point, `CheckInputScripts` is essentially meant to be a mempool function and `PrepareInputScriptChecks` is for block validation, except for the weird edge-case  when we're single-threaded.\r\n\r\nI think I'd rather just see this go all the way and make the split purposeful. Something like:\r\n```patch\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 1c81620889f..d9a447b460f 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -2723,19 +2723,18 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\r\n         {\r\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\r\n             TxValidationState tx_state;\r\n-            // If parallel script checking is possible (worker threads are available) the checks are appended to a\r\n-            // vector without running them. The vector is then added to control which runs the checks asynchronously.\r\n-            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\r\n-            if (control) {\r\n-                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\r\n-                control->Add(std::move(vChecks));\r\n-            } else {\r\n-                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {\r\n-                    // Any transaction validation failure in ConnectBlock is a block consensus failure\r\n-                    state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\r\n-                                  tx_state.GetRejectReason(), tx_state.GetDebugMessage());\r\n-                    break;\r\n+            // If parallel script checking is possible (worker threads are available), they are added to control which\r\n+            // which runs the checks asynchronously. Otherwise they are run here directly.\r\n+            std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\r\n+            if (control) control->Add(std::move(vChecks));\r\n+            else {\r\n+                for (auto& check : vChecks) {\r\n+                    if (const auto& check_result = check()) {\r\n+                        state.Invalid(BlockValidationResult::BLOCK_CONSENSUS, strprintf(\"mandatory-script-verify-flag-failed (%s)\", ScriptErrorString(check_result->first)), check_result->second);\r\n+                        break;\r\n+                    }\r\n                 }\r\n+                if (!state.IsValid()) break;\r\n             }\r\n         }\r\n\r\n```\r\n\r\nAn alternative would be to make `CCheckQueueControl` work with 0 worker threads (maybe it already does?) and just always use it. That would completely unify the approach here.",
      "created_at": "2025-05-22T21:26:34Z",
      "updated_at": "2025-05-22T21:27:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2103422435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103422435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103434017",
      "pull_request_review_id": 2862622672,
      "id": 2103434017,
      "node_id": "PRRC_kwDOABII5859X9sh",
      "diff_hunk": "@@ -2185,16 +2189,46 @@ void EnsureTxData(const CTransaction& tx, const CCoinsViewCache& inputs, Precomp\n     assert(txdata.m_spent_outputs.size() == tx.vin.size());\n }\n \n+/**\n+ * Turn all of this transaction's input scripts into script checks and return them as a vector.\n+ * Any script checks which are not necessary (eg due to script execution cache hits) are excluded.\n+ *\n+ * Setting cacheSigStore/cacheFullScriptStore to false will remove elements from the corresponding cache\n+ * which are matched. This is useful for checking blocks where we will likely never need the cache\n+ * entry again.\n+ *\n+ * Non-static (and redeclared) in src/test/txvalidationcache_tests.cpp\n+ */\n+std::vector<CScriptCheck> PrepareInputScriptChecks(const CTransaction& tx,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       ValidationCache& validation_cache) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    if (tx.IsCoinBase()) return {};\n+\n+    uint256 hashCacheEntry = GetHashCacheEntry(validation_cache, tx, flags);\n+    if (IsScriptCached(validation_cache, cacheFullScriptStore, hashCacheEntry)) {\n+        return {};\n+    }\n+\n+    EnsureTxData(tx, inputs, txdata);\n+\n+    std::vector<CScriptCheck> pvChecks{};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just a rough idea, but did you consider the alternative approach of doing the `pvChecks` population not here (but in `ConnectBlock()` or a separate function), so that `CheckInputScripts` could also call `PrepareInputScriptChecks` and there would be no duplication of the coinbase check, cache check and `TxData` init?",
      "created_at": "2025-05-22T21:38:04Z",
      "updated_at": "2025-05-22T21:44:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2103434017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103434017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103526405",
      "pull_request_review_id": 2862772010,
      "id": 2103526405,
      "node_id": "PRRC_kwDOABII5859YUQF",
      "diff_hunk": "@@ -2695,22 +2722,20 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n+            // If parallel script checking is possible (worker threads are available) the checks are appended to a\n+            // vector without running them. The vector is then added to control which runs the checks asynchronously.\n+            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\n             if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n+                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+                control->Add(std::move(vChecks));\n             } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n-            }\n-            if (!tx_ok) {\n-                // Any transaction validation failure in ConnectBlock is a block consensus failure\n-                state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\n-                              tx_state.GetRejectReason(), tx_state.GetDebugMessage());\n-                break;\n+                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": 2103422435,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like that idea.\r\n\r\nI think it would be a small change in behaviour, because  if I read [this line](https://github.com/bitcoin/bitcoin/blob/2df824f4e62b6bc569044819cd64f66f3839ba13/src/validation.cpp#L2248) right it will add entries to the cache if \r\n1)`pvChecks` is not set (single-threaded) \r\n2) `cacheFullScriptStore` is set (i.e. if `ConnectBlock()` was called with `fJustCheck=True`, so currently only from `TestBlockValidity`).\r\nI wonder if the current behavior is intended - it seems very strange to me that mining rpcs would add entries to the script cache, but only in the `-par=1` case.",
      "created_at": "2025-05-22T22:54:19Z",
      "updated_at": "2025-05-22T22:57:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2103526405",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103526405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152860968",
      "pull_request_review_id": 2936605124,
      "id": 2152860968,
      "node_id": "PRRC_kwDOABII586AUg0o",
      "diff_hunk": "@@ -2695,22 +2722,20 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n+            // If parallel script checking is possible (worker threads are available) the checks are appended to a\n+            // vector without running them. The vector is then added to control which runs the checks asynchronously.\n+            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\n             if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n+                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+                control->Add(std::move(vChecks));\n             } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n-            }\n-            if (!tx_ok) {\n-                // Any transaction validation failure in ConnectBlock is a block consensus failure\n-                state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\n-                              tx_state.GetRejectReason(), tx_state.GetDebugMessage());\n-                break;\n+                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": 2103422435,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@mzumsande I think it's very unlikely that that behavior is intended :)\r\n\r\nEdit: likely -> unlikely.",
      "created_at": "2025-06-17T18:01:13Z",
      "updated_at": "2025-06-17T18:02:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2152860968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152860968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152862922",
      "pull_request_review_id": 2936608462,
      "id": 2152862922,
      "node_id": "PRRC_kwDOABII586AUhTK",
      "diff_hunk": "@@ -2695,22 +2722,20 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n+            // If parallel script checking is possible (worker threads are available) the checks are appended to a\n+            // vector without running them. The vector is then added to control which runs the checks asynchronously.\n+            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\n             if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n+                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+                control->Add(std::move(vChecks));\n             } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n-            }\n-            if (!tx_ok) {\n-                // Any transaction validation failure in ConnectBlock is a block consensus failure\n-                state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\n-                              tx_state.GetRejectReason(), tx_state.GetDebugMessage());\n-                break;\n+                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": 2103422435,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Whooops, *Very unlikely.",
      "created_at": "2025-06-17T18:02:28Z",
      "updated_at": "2025-06-17T18:02:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2152862922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152862922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157704941",
      "pull_request_review_id": 2944097422,
      "id": 2157704941,
      "node_id": "PRRC_kwDOABII586Am_bt",
      "diff_hunk": "@@ -2185,16 +2189,46 @@ void EnsureTxData(const CTransaction& tx, const CCoinsViewCache& inputs, Precomp\n     assert(txdata.m_spent_outputs.size() == tx.vin.size());\n }\n \n+/**\n+ * Turn all of this transaction's input scripts into script checks and return them as a vector.\n+ * Any script checks which are not necessary (eg due to script execution cache hits) are excluded.\n+ *\n+ * Setting cacheSigStore/cacheFullScriptStore to false will remove elements from the corresponding cache\n+ * which are matched. This is useful for checking blocks where we will likely never need the cache\n+ * entry again.\n+ *\n+ * Non-static (and redeclared) in src/test/txvalidationcache_tests.cpp\n+ */\n+std::vector<CScriptCheck> PrepareInputScriptChecks(const CTransaction& tx,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       ValidationCache& validation_cache) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    if (tx.IsCoinBase()) return {};\n+\n+    uint256 hashCacheEntry = GetHashCacheEntry(validation_cache, tx, flags);\n+    if (IsScriptCached(validation_cache, cacheFullScriptStore, hashCacheEntry)) {\n+        return {};\n+    }\n+\n+    EnsureTxData(tx, inputs, txdata);\n+\n+    std::vector<CScriptCheck> pvChecks{};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": 2103434017,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have implemented this at the cost of duplicating the cache entry calculation. I think it should be fine but I will try to run some benchmarks.",
      "created_at": "2025-06-19T22:03:34Z",
      "updated_at": "2025-06-19T22:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2157704941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157704941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157705417",
      "pull_request_review_id": 2944098571,
      "id": 2157705417,
      "node_id": "PRRC_kwDOABII586Am_jJ",
      "diff_hunk": "@@ -2695,22 +2722,20 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n+            // If parallel script checking is possible (worker threads are available) the checks are appended to a\n+            // vector without running them. The vector is then added to control which runs the checks asynchronously.\n+            // Otherwise, CheckInputScripts runs the checks on a single thread before returning.\n             if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n+                std::vector<CScriptCheck> vChecks = PrepareInputScriptChecks(tx, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+                control->Add(std::move(vChecks));\n             } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n-            }\n-            if (!tx_ok) {\n-                // Any transaction validation failure in ConnectBlock is a block consensus failure\n-                state.Invalid(BlockValidationResult::BLOCK_CONSENSUS,\n-                              tx_state.GetRejectReason(), tx_state.GetDebugMessage());\n-                break;\n+                if (!CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "5dfd10c725bf44557ae06038ce54b4924ecc0fae",
      "in_reply_to_id": 2103422435,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took the suggestion here.",
      "created_at": "2025-06-19T22:04:10Z",
      "updated_at": "2025-06-19T22:04:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2157705417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157705417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158491253",
      "pull_request_review_id": 2945272920,
      "id": 2158491253,
      "node_id": "PRRC_kwDOABII586Ap_Z1",
      "diff_hunk": "@@ -2672,22 +2707,30 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n-            if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n-            } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+            // If parallel script checking is possible (worker threads are available), they are added to control which\n+            // which runs the checks asynchronously. Otherwise they are run here directly.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 181,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "edcc004c40439b58fa2244da13c6b7fa3d028ba5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\r\n    “this transactions’s input scripts” -> “this transaction’s input scripts” [incorrect possessive form]\r\n    duplicate “which” in “control which which runs the checks asynchronously” -> remove one “which” [typo duplication]\r\n",
      "created_at": "2025-06-20T09:34:52Z",
      "updated_at": "2025-06-20T09:34:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2158491253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158491253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": 2711,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2712,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158910027",
      "pull_request_review_id": 2946041609,
      "id": 2158910027,
      "node_id": "PRRC_kwDOABII586ArlpL",
      "diff_hunk": "@@ -2672,22 +2707,30 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (!tx.IsCoinBase() && fScriptChecks)\n         {\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            bool tx_ok;\n             TxValidationState tx_state;\n-            // If CheckInputScripts is called with a pointer to a checks vector, the resulting checks are appended to it. In that case\n-            // they need to be added to control which runs them asynchronously. Otherwise, CheckInputScripts runs the checks before returning.\n-            if (control) {\n-                std::vector<CScriptCheck> vChecks;\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache, &vChecks);\n-                if (tx_ok) control->Add(std::move(vChecks));\n-            } else {\n-                tx_ok = CheckInputScripts(tx, tx_state, view, flags, fCacheResults, fCacheResults, txsdata[i], m_chainman.m_validation_cache);\n+            // If parallel script checking is possible (worker threads are available), they are added to control which\n+            // which runs the checks asynchronously. Otherwise they are run here directly.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 181,
      "commit_id": "6667ea17a9562237749027c808732b9ee0e09fb1",
      "original_commit_id": "edcc004c40439b58fa2244da13c6b7fa3d028ba5",
      "in_reply_to_id": 2158491253,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "both typos fixed",
      "created_at": "2025-06-20T12:59:43Z",
      "updated_at": "2025-06-20T12:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32575#discussion_r2158910027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158910027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32575"
        }
      },
      "start_line": null,
      "original_start_line": 2711,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2712,
      "side": "RIGHT"
    }
  ]
}