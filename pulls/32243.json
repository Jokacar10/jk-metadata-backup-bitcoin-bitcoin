{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243",
    "id": 2449956180,
    "node_id": "PR_kwDOABII586SB11U",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32243",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32243.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32243.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f99fd0b87dcfaf84784ce423f78a950ad377b36b",
    "number": 32243,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: added fuzz coverage for consensus/merkle.cpp",
    "user": {
      "login": "kevkevinpal",
      "id": 15950706,
      "node_id": "MDQ6VXNlcjE1OTUwNzA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevkevinpal",
      "html_url": "https://github.com/kevkevinpal",
      "followers_url": "https://api.github.com/users/kevkevinpal/followers",
      "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
      "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
      "repos_url": "https://api.github.com/users/kevkevinpal/repos",
      "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "### Summary\r\nThis adds a new fuzz target \"merkle\" which adds fuzz coverage to `consensus/merkle.cpp`\r\n\r\nI can also add this to an existing fuzz target if that is preferable\r\n\r\nBefore:\r\n![Screenshot 2025-04-09 at 10 12 54 PM](https://github.com/user-attachments/assets/e5f8da56-4583-441d-b08f-dfcc255ff248)\r\n\r\nAfter:\r\n![Screenshot 2025-04-11 at 4 20 41 PM](https://github.com/user-attachments/assets/849ee079-b715-4089-9e36-d156233236c6)\r\n\r\n\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-04-10T03:16:54Z",
    "updated_at": "2025-05-13T18:23:42Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "cbaadb61d570a131d4c7a8e5c2a776c28bc632d8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "kevkevinpal:fuzzMerkleCpp",
      "ref": "fuzzMerkleCpp",
      "sha": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 492307769,
        "node_id": "R_kgDOHVgFOQ",
        "name": "bitcoin",
        "full_name": "kevkevinpal/bitcoin",
        "owner": {
          "login": "kevkevinpal",
          "id": 15950706,
          "node_id": "MDQ6VXNlcjE1OTUwNzA2",
          "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kevkevinpal",
          "html_url": "https://github.com/kevkevinpal",
          "followers_url": "https://api.github.com/users/kevkevinpal/followers",
          "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
          "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
          "repos_url": "https://api.github.com/users/kevkevinpal/repos",
          "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/kevkevinpal/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/kevkevinpal/bitcoin",
        "archive_url": "https://api.github.com/repos/kevkevinpal/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/kevkevinpal/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/kevkevinpal/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/kevkevinpal/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/kevkevinpal/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/kevkevinpal/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/kevkevinpal/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/kevkevinpal/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/kevkevinpal/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/kevkevinpal/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/kevkevinpal/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/kevkevinpal/bitcoin/events",
        "forks_url": "https://api.github.com/repos/kevkevinpal/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/kevkevinpal/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/kevkevinpal/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/kevkevinpal/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/kevkevinpal/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/kevkevinpal/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/kevkevinpal/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/kevkevinpal/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/kevkevinpal/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/kevkevinpal/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/kevkevinpal/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/kevkevinpal/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/kevkevinpal/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/kevkevinpal/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/kevkevinpal/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/kevkevinpal/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:kevkevinpal/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/kevkevinpal/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/kevkevinpal/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/kevkevinpal/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/kevkevinpal/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/kevkevinpal/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/kevkevinpal/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/kevkevinpal/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/kevkevinpal/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/kevkevinpal/bitcoin/hooks",
        "svn_url": "https://github.com/kevkevinpal/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 276629,
        "default_branch": "master",
        "open_issues_count": 12,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-13T15:57:29Z",
        "created_at": "2022-05-14T19:30:19Z",
        "updated_at": "2025-05-06T13:24:19Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8309a9747a8df96517970841b3648937d05939a3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37213,
        "stargazers_count": 83552,
        "watchers_count": 83552,
        "size": 281840,
        "default_branch": "master",
        "open_issues_count": 727,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-13T15:39:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-05-13T18:12:46Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 95,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 24,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2791443743,
      "node_id": "IC_kwDOABII586mYg0f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2791443743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T03:16:57Z",
      "updated_at": "2025-05-11T12:50:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32243.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [marcofleon](https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2866740624) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2791443743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "labeled",
      "id": 17198639553,
      "node_id": "LE_lADOABII586x4V3OzwAAAAQBHmnB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17198639553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T03:16:59Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 17199070328,
      "node_id": "LE_lADOABII586x4V3OzwAAAAQBJPx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17199070328",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T04:25:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2791514378,
      "node_id": "IC_kwDOABII586mYyEK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2791514378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T04:25:05Z",
      "updated_at": "2025-04-10T04:25:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/40295372010</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2791514378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17207272791,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQBoiVX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17207272791",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8f0ce6627066d028fec3b1a7746ee60e51d33b91",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/8f0ce6627066d028fec3b1a7746ee60e51d33b91",
      "created_at": "2025-04-10T14:03:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17210580148,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQB1Jy0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17210580148",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7de87ce1b5470c95ad4e739baaee96b3c62d31df",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/7de87ce1b5470c95ad4e739baaee96b3c62d31df",
      "created_at": "2025-04-10T17:18:13Z"
    },
    {
      "event": "convert_to_draft",
      "id": 17211663857,
      "node_id": "CTDE_lADOABII586x4V3OzwAAAAQB5SXx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17211663857",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T18:41:09Z"
    },
    {
      "event": "commented",
      "id": 2794816698,
      "node_id": "IC_kwDOABII586mlYS6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2794816698",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T18:41:41Z",
      "updated_at": "2025-04-10T18:41:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "marking as draft, I want to resolve the lint failure and address other changes I want to make",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2794816698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17230662014,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQDBwl-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17230662014",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b4dfd362ef6b1876fd9c053b4e3272eb2ce4a619",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/b4dfd362ef6b1876fd9c053b4e3272eb2ce4a619",
      "created_at": "2025-04-11T21:24:48Z"
    },
    {
      "event": "unlabeled",
      "id": 17231471440,
      "node_id": "UNLE_lADOABII586x4V3OzwAAAAQDE2NQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17231471440",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T23:01:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 17231911188,
      "node_id": "RFRE_lADOABII586x4V3OzwAAAAQDGhkU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17231911188",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-12T00:06:10Z"
    },
    {
      "event": "reviewed",
      "id": 2762807129,
      "node_id": "PRR_kwDOABII586krRdZ",
      "url": null,
      "actor": null,
      "commit_id": "b4dfd362ef6b1876fd9c053b4e3272eb2ce4a619",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2762807129",
      "submitted_at": "2025-04-13T17:39:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17291031213,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQGoDKt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17291031213",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "created_at": "2025-04-16T15:03:49Z"
    },
    {
      "event": "commented",
      "id": 2809916997,
      "node_id": "IC_kwDOABII586ne-5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2809916997",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T15:16:31Z",
      "updated_at": "2025-04-16T15:16:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "In [cdd3ad0](https://github.com/bitcoin/bitcoin/pull/32243/commits/cdd3ad098c169bfba96c51bf5e5d77602ff97276) we are now also fuzzing `BlockWitnessMerkleRoot` and `BlockMerkleRoot` so we are fuzzing everything in `src/consensus/merkle.h`",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2809916997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "labeled",
      "id": 17445506322,
      "node_id": "LE_lADOABII586x4V3OzwAAAAQP1U0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17445506322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T01:12:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17496742185,
      "node_id": "UNLE_lADOABII586x4V3OzwAAAAQS4xkp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17496742185",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-02T08:08:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2818609635,
      "node_id": "PRR_kwDOABII586oAJHj",
      "url": null,
      "actor": null,
      "commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Good stuff, nice to have new coverage. \r\n\r\nI think it'd be worth it to add an oracle in the test where you reconstruct the merkle root with the path you get from `TransactionMerklePath` and verify that it matches the root from the earlier `ComputeMerkleRoot` call.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2818609635",
      "submitted_at": "2025-05-06T15:23:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17558646530,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQWk68C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17558646530",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ed4aef699801d79fb34211282007c87e4451b604",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/ed4aef699801d79fb34211282007c87e4451b604",
      "created_at": "2025-05-07T15:18:37Z"
    },
    {
      "event": "commented",
      "id": 2859026107,
      "node_id": "IC_kwDOABII586qaUa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2859026107",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T15:21:13Z",
      "updated_at": "2025-05-07T15:23:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Good stuff, nice to have new coverage.\r\n> \r\n> I think it'd be worth it to add an oracle in the test where you reconstruct the merkle root with the path you get from `TransactionMerklePath` and verify that it matches the root from the earlier `ComputeMerkleRoot` call.\r\n\r\nThank you for the review!\r\n\r\nIn [2c8a2b4](https://github.com/bitcoin/bitcoin/pull/32243/commits/2c8a2b459e1a7b327246372c4f6fc802a5ac2f48) I added a helper function ComputeMerkleRootFromPath to help rebuild the root so then I could compare the responses from `TransactionMerklePath`, `BlockMerkleRoot` and also `ComputeMerkleRoot`\r\n\r\nlet me know if that looks good of if there is anything you'd like to change!",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2859026107",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17558727609,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQWlOu5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17558727609",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "created_at": "2025-05-07T15:23:11Z"
    },
    {
      "event": "labeled",
      "id": 17558731825,
      "node_id": "LE_lADOABII586x4V3OzwAAAAQWlPwx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17558731825",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T15:23:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2859034081,
      "node_id": "IC_kwDOABII586qaWXh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2859034081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T15:23:29Z",
      "updated_at": "2025-05-07T15:23:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/41809311683</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a lint error, specifically due to the use of quote syntax includes instead of bracket syntax.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2859034081",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "reviewed",
      "id": 2822778758,
      "node_id": "PRR_kwDOABII586oQC-G",
      "url": null,
      "actor": null,
      "commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2822778758",
      "submitted_at": "2025-05-07T18:16:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17561467301,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQWvrml",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17561467301",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7c80dcd81a844837b5823eb33501e9511cbe3d05",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/7c80dcd81a844837b5823eb33501e9511cbe3d05",
      "created_at": "2025-05-07T18:23:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17562165202,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQWyV_S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17562165202",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "created_at": "2025-05-07T19:16:58Z"
    },
    {
      "event": "unlabeled",
      "id": 17565418616,
      "node_id": "UNLE_lADOABII586x4V3OzwAAAAQW-wR4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17565418616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T01:00:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2825429170,
      "node_id": "PRR_kwDOABII586oaKCy",
      "url": null,
      "actor": null,
      "commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2825429170",
      "submitted_at": "2025-05-08T14:55:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17579997153,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQX2Xfh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17579997153",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0fc30f215f0f9c630b0c84a6ce2b89c6d4135237",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/0fc30f215f0f9c630b0c84a6ce2b89c6d4135237",
      "created_at": "2025-05-08T20:15:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17580466063,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQX4J-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17580466063",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7",
      "created_at": "2025-05-08T20:57:09Z"
    },
    {
      "event": "commented",
      "id": 2866740624,
      "node_id": "IC_kwDOABII586q3v2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2866740624",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-09T14:20:48Z",
      "updated_at": "2025-05-09T14:20:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7\r\n\r\nUsing `ConsumeTransaction` works, and makes sense. Here's the [coverage](https://marcofleon.github.io/coverage/merkle/coverage/root/bitcoin/src/consensus/merkle.cpp.html). Everything lgtm!",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#issuecomment-2866740624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32243"
    },
    {
      "event": "reviewed",
      "id": 2831323880,
      "node_id": "PRR_kwDOABII586owpLo",
      "url": null,
      "actor": null,
      "commit_id": "44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2831323880",
      "submitted_at": "2025-05-11T09:40:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17605570471,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQZX6-n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17605570471",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c5245d1a76928c70cc25347bbf790246a98912a9",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/c5245d1a76928c70cc25347bbf790246a98912a9",
      "created_at": "2025-05-11T12:50:37Z"
    },
    {
      "event": "reviewed",
      "id": 2833882203,
      "node_id": "PRR_kwDOABII586o6Zxb",
      "url": null,
      "actor": null,
      "commit_id": "c5245d1a76928c70cc25347bbf790246a98912a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2833882203",
      "submitted_at": "2025-05-12T16:50:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5OWZkMGI4N2RjZmFmODQ3ODRjZTQyM2Y3OGE5NTBhZDM3N2IzNmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "tree": {
        "sha": "778f7dcc49d13aaebecce08dc3f3f5bf79a6c422",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/778f7dcc49d13aaebecce08dc3f3f5bf79a6c422"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 778f7dcc49d13aaebecce08dc3f3f5bf79a6c422\nparent 65dcbec75661d1652beb927f03b1feab4fab932e\nauthor kevkevinpal <oapallikunnel@gmail.com> 1743967867 -0400\ncommitter kevkevinpal <oapallikunnel@gmail.com> 1747151844 -0400\n\ntest: added fuzz coverage to consensus/merkle.cpp\n\nThis adds a new fuzz target merkle which adds fuzz coverage to\nconsensus/merkle.cpp\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEx0QawkGba7QDIgErtDRqFSRqkl0FAmgja+UACgkQtDRqFSRq\nkl3PSRAAiNlMnyTqnAR1r03CuvxTgSYtP24z8n2aD+bkH17gfWaQ9gtJjIeqCBXv\nG5tX7pkZem4kuwIE3hRqCPjKVaZj6XZ89QnAH38c2YFZvACj5TA11Jk0DpJb7pMH\niK+dBk30zvziRnh2z0kEgbMNi2wCAgpKlj+GQJyu8QJ3uovfMSzF3cfMyr2uTMdj\nO9e3EVwMhgGLXIYAZUqOtHmzFXYktKj1jkFhZz6Y2BW9brLNIOsKojciVD5E9Xid\np3FIvFaTXHwatwjNmP8zzJQG1NdWo1l4kDhkqidQlknYEivbyDT/9fXRxC2bqfFe\nDw/3CLYPnM6nSm5WbMftQ/y1HiM93a0DbZaRxWiisbUBG1cnmBLJHkDK25yNZL/X\nHNpT1x4G0YlinIElEq+n0h8e54W76Brm2UMHkUNc9aGhwF1kUr702/F/hMyCMo/N\nLMWafewYGAEtdD52MeHl0vyPwX4jAi1IiC2c0OCtk3n4Etp35U2N/TL+fu6RWhLW\nnyp6hW1g7t68PtSg8Hy/5kql84P3emKa0pLN50ujPPZulIP+8WpzZSlLQPRn1ms2\n0FI0yiaGCv3Kwa4nZAUNmu4a/QHibDatacniBswVxl29d/euBsdHRhDKB76O1kcN\ni5qh16QROXAr1Zm3GW6nsN3GHzV8+Mtu5VhjYC5AuMkE5R5lVk0=\n=JNBn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65dcbec75661d1652beb927f03b1feab4fab932e",
          "sha": "65dcbec75661d1652beb927f03b1feab4fab932e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65dcbec75661d1652beb927f03b1feab4fab932e"
        }
      ],
      "message": "test: added fuzz coverage to consensus/merkle.cpp\n\nThis adds a new fuzz target merkle which adds fuzz coverage to\nconsensus/merkle.cpp",
      "committer": {
        "name": "kevkevinpal",
        "email": "oapallikunnel@gmail.com",
        "date": "2025-05-13T15:57:24Z"
      },
      "author": {
        "name": "kevkevinpal",
        "email": "oapallikunnel@gmail.com",
        "date": "2025-04-06T19:31:07Z"
      },
      "sha": "f99fd0b87dcfaf84784ce423f78a950ad377b36b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17638491919,
      "node_id": "HRFPE_lADOABII586x4V3OzwAAAAQbVgcP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17638491919",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "commit_url": "https://api.github.com/repos/kevkevinpal/bitcoin/commits/f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "created_at": "2025-05-13T15:57:31Z"
    },
    {
      "event": "reviewed",
      "id": 2837535438,
      "node_id": "PRR_kwDOABII586pIVrO",
      "url": null,
      "actor": null,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#pullrequestreview-2837535438",
      "submitted_at": "2025-05-13T17:06:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041172931",
      "pull_request_review_id": 2762807129,
      "id": 2041172931,
      "node_id": "PRRC_kwDOABII5855qdPD",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(40);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "b4dfd362ef6b1876fd9c053b4e3272eb2ce4a619",
      "in_reply_to_id": null,
      "user": {
        "login": "Christewart",
        "id": 3514957,
        "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Christewart",
        "html_url": "https://github.com/Christewart",
        "followers_url": "https://api.github.com/users/Christewart/followers",
        "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
        "organizations_url": "https://api.github.com/users/Christewart/orgs",
        "repos_url": "https://api.github.com/users/Christewart/repos",
        "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Christewart/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm new to the fuzzing test framework, but does this essentially build a fixed size 40 byte scriptSig? \r\n\r\nIt may be worth making this variable in size to test different weaknesses in the merkle tree.\r\n\r\nParticularly if we can occasionally generate a 64 byte transaction, whose format you can read about [here](https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710/73), you may be able to make some assertions on the `mutated` field below.",
      "created_at": "2025-04-13T17:39:17Z",
      "updated_at": "2025-04-13T17:39:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2041172931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041172931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047159065",
      "pull_request_review_id": 2772906839,
      "id": 2047159065,
      "node_id": "PRRC_kwDOABII5856BSsZ",
      "diff_hunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(40);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "b4dfd362ef6b1876fd9c053b4e3272eb2ce4a619",
      "in_reply_to_id": 2041172931,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the review! I pushed [cdd3ad0](https://github.com/bitcoin/bitcoin/pull/32243/commits/cdd3ad098c169bfba96c51bf5e5d77602ff97276)\r\n\r\nNow I am using the [MAX_SCRIPT_SIZE](https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L39-L40) since that is what I see for the [IsUnspendable](https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L566-L574) function for CScript",
      "created_at": "2025-04-16T15:11:20Z",
      "updated_at": "2025-04-16T15:11:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2047159065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047159065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075666086",
      "pull_request_review_id": 2818609635,
      "id": 2075666086,
      "node_id": "PRRC_kwDOABII5857uCam",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    //bool mutated = false;\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This should be 0 to `num_txs - 1` no? Just based on the [coverage](https://marcofleon.github.io/coverage/merkle/coverage/root/bitcoin/src/consensus/merkle.cpp.html) it seems the fuzzer is choosing `num_txs` which means `matchh` won't be set to true here:\r\nhttps://github.com/bitcoin/bitcoin/blob/baa848b8d38187ce6b24a57cfadf1ea180209711/src/consensus/merkle.cpp#L111",
      "created_at": "2025-05-06T14:57:11Z",
      "updated_at": "2025-05-06T15:23:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2075666086",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075666086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075711453",
      "pull_request_review_id": 2818609635,
      "id": 2075711453,
      "node_id": "PRRC_kwDOABII5857uNfd",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    //bool mutated = false;",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Meant to remove this line?",
      "created_at": "2025-05-06T15:19:23Z",
      "updated_at": "2025-05-06T15:23:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2075711453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075711453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077904842",
      "pull_request_review_id": 2822237170,
      "id": 2077904842,
      "node_id": "PRRC_kwDOABII58572k_K",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    //bool mutated = false;",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "in_reply_to_id": 2075711453,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "oops, thanks for the review!\r\n\r\nupdated in [2c8a2b4](https://github.com/bitcoin/bitcoin/pull/32243/commits/2c8a2b459e1a7b327246372c4f6fc802a5ac2f48)",
      "created_at": "2025-05-07T15:19:10Z",
      "updated_at": "2025-05-07T15:23:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2077904842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077904842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077905380",
      "pull_request_review_id": 2822238414,
      "id": 2077905380,
      "node_id": "PRRC_kwDOABII58572lHk",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    //bool mutated = false;\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "cdd3ad098c169bfba96c51bf5e5d77602ff97276",
      "in_reply_to_id": 2075666086,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes that makes sense to me!\r\n\r\nupdated in [2c8a2b4](https://github.com/bitcoin/bitcoin/pull/32243/commits/2c8a2b459e1a7b327246372c4f6fc802a5ac2f48)",
      "created_at": "2025-05-07T15:19:23Z",
      "updated_at": "2025-05-07T15:23:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2077905380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077905380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078229527",
      "pull_request_review_id": 2822778758,
      "id": 2078229527,
      "node_id": "PRRC_kwDOABII585730QX",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs - 1);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`/ci_container_base/src/test/fuzz/merkle.cpp:103:96: runtime error: unsigned integer overflow: 0 - 1 cannot be represented in type 'size_t' (aka 'unsigned long')`. `num_txs` can be zero, so it's causing the overflow here.",
      "created_at": "2025-05-07T18:16:20Z",
      "updated_at": "2025-05-07T18:16:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2078229527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078229527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078239020",
      "pull_request_review_id": 2822793693,
      "id": 2078239020,
      "node_id": "PRRC_kwDOABII585732ks",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs - 1);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "in_reply_to_id": 2078229527,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ahh that makes sense, I can revert it back to what I had previously",
      "created_at": "2025-05-07T18:22:16Z",
      "updated_at": "2025-05-07T18:22:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2078239020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078239020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078240706",
      "pull_request_review_id": 2822796418,
      "id": 2078240706,
      "node_id": "PRRC_kwDOABII585732_C",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs - 1);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "in_reply_to_id": 2078229527,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed back to just `num_txs` in [7c80dcd](https://github.com/bitcoin/bitcoin/pull/32243/commits/7c80dcd81a844837b5823eb33501e9511cbe3d05)",
      "created_at": "2025-05-07T18:23:21Z",
      "updated_at": "2025-05-07T18:23:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2078240706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078240706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078320533",
      "pull_request_review_id": 2822927173,
      "id": 2078320533,
      "node_id": "PRRC_kwDOABII58574KeV",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs - 1);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "in_reply_to_id": 2078229527,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> changed back to just `num_txs` in [7c80dcd](https://github.com/bitcoin/bitcoin/pull/32243/commits/7c80dcd81a844837b5823eb33501e9511cbe3d05)\r\n\r\nI think that using just `num_txs` is not correct since it's a position, you could add something like `num_txs > 0 ? num_txs - 1 : 0`.",
      "created_at": "2025-05-07T19:10:41Z",
      "updated_at": "2025-05-07T19:10:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2078320533",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078320533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078329613",
      "pull_request_review_id": 2822942246,
      "id": 2078329613,
      "node_id": "PRRC_kwDOABII58574MsN",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txin.scriptSig = CScript(script_sig_bytes.begin(), script_sig_bytes.end());\n+        txin.nSequence = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.vin.push_back(txin);\n+\n+        CTxOut txout;\n+        txout.nValue = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+        std::vector<unsigned char> script_pk_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);\n+        txout.scriptPubKey = CScript(script_pk_bytes.begin(), script_pk_bytes.end());\n+        mtx.vout.push_back(txout);\n+\n+        // Compute the hash and store it\n+        block.vtx[i] = MakeTransactionRef(std::move(mtx));\n+        tx_hashes.push_back(block.vtx[i]->GetHash());\n+    }\n+\n+    // Test ComputeMerkleRoot\n+    bool mutated = fuzzed_data_provider.ConsumeBool();\n+    const uint256 merkle_root = ComputeMerkleRoot(tx_hashes, &mutated);\n+\n+    // Basic sanity checks for ComputeMerkleRoot\n+    if (tx_hashes.size() == 1) {\n+        assert(merkle_root == tx_hashes[0]);\n+    }\n+\n+\n+    const uint256 block_merkle_root = BlockMerkleRoot(block, &mutated);\n+    if (tx_hashes.size() == 1) {\n+        assert(block_merkle_root == tx_hashes[0]);\n+    }\n+\n+    if (!block.vtx.empty()){\n+        const uint256 block_witness_merkle_root = BlockWitnessMerkleRoot(block, &mutated);\n+        if (tx_hashes.size() == 1) {\n+            assert(block_witness_merkle_root == uint256());\n+        }\n+    }\n+\n+    // Test TransactionMerklePath\n+    const uint32_t position = fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, num_txs - 1);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "2c8a2b459e1a7b327246372c4f6fc802a5ac2f48",
      "in_reply_to_id": 2078229527,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "that works with me! updated in [0fe4e7d](https://github.com/bitcoin/bitcoin/pull/32243/commits/0fe4e7d1863afb32608bb0e8ffacffd7e3866f30)",
      "created_at": "2025-05-07T19:17:15Z",
      "updated_at": "2025-05-07T19:17:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2078329613",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2078329613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2079888041",
      "pull_request_review_id": 2825429170,
      "id": 2079888041,
      "node_id": "PRRC_kwDOABII5857-JKp",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it would be better to consume from a range here and below. `MAX_SCRIPT_SIZE` is large (10000) so the fuzzer ends up consuming the remaining bytes in the data provider at this line.\r\n\r\nedit: This is what was actually causing the lack of coverage for `matchh` it seems, as `position` is always 0 later in the test. I'm not sure how long it would take for the provider to have enough bytes... but still, I think ~~`ConsumeIntegralInRange`~~ `ConsumeRandomLengthByteVector` makes sense here in place of `ConsumeBytes`.",
      "created_at": "2025-05-08T14:55:02Z",
      "updated_at": "2025-05-08T15:09:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2079888041",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2079888041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080404024",
      "pull_request_review_id": 2826266219,
      "id": 2080404024,
      "node_id": "PRRC_kwDOABII5858AHI4",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": 2079888041,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch! You're right it doesnt make sense to always have the `MAX_SCRIPT_SIZE` we should instead use in that range\r\n\r\nupdated in [0fc30f2](https://github.com/bitcoin/bitcoin/pull/32243/commits/0fc30f215f0f9c630b0c84a6ce2b89c6d4135237)",
      "created_at": "2025-05-08T20:16:12Z",
      "updated_at": "2025-05-08T20:16:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2080404024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080404024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080425465",
      "pull_request_review_id": 2826301604,
      "id": 2080425465,
      "node_id": "PRRC_kwDOABII5858AMX5",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": 2079888041,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why not using `ConsumeScript` to create the scriptPubKey and scriptSig?",
      "created_at": "2025-05-08T20:33:29Z",
      "updated_at": "2025-05-08T20:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2080425465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080425465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080455367",
      "pull_request_review_id": 2826350159,
      "id": 2080455367,
      "node_id": "PRRC_kwDOABII5858ATrH",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": 2079888041,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would using `ConsumeTransaction` make sense and just pushing that transaction into the block?",
      "created_at": "2025-05-08T20:56:51Z",
      "updated_at": "2025-05-08T20:56:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2080455367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080455367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080456412",
      "pull_request_review_id": 2826351805,
      "id": 2080456412,
      "node_id": "PRRC_kwDOABII5858AT7c",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": 2079888041,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I used `ConsumeTransaction` in [44298f0](https://github.com/bitcoin/bitcoin/pull/32243/commits/44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7)\r\n\r\nlet me know if that looks good or if you would prefer to use `ConsumeScript` ",
      "created_at": "2025-05-08T20:57:49Z",
      "updated_at": "2025-05-08T20:57:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2080456412",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2080456412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2081903903",
      "pull_request_review_id": 2828739437,
      "id": 2081903903,
      "node_id": "PRRC_kwDOABII5858F1Uf",
      "diff_hunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;\n+    block.vtx.resize(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        CMutableTransaction mtx;\n+        // Add minimal valid content to make it a transaction\n+        mtx.version = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+        mtx.nLockTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+\n+        // Add at least one input with a properly constructed Txid\n+        CTxIn txin;\n+        std::vector<unsigned char> prevout_hash_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(32);\n+        if (prevout_hash_bytes.size() < 32) {\n+            prevout_hash_bytes.resize(32, 0); // Pad with zeros if needed\n+        }\n+        uint256 prevout_hash;\n+        memcpy(prevout_hash.begin(), prevout_hash_bytes.data(), 32);\n+        txin.prevout = COutPoint(Txid::FromUint256(prevout_hash), fuzzed_data_provider.ConsumeIntegral<uint32_t>());\n+        std::vector<unsigned char> script_sig_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(MAX_SCRIPT_SIZE);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "0fe4e7d1863afb32608bb0e8ffacffd7e3866f30",
      "in_reply_to_id": 2079888041,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`ConsumeTransaction` is fine.",
      "created_at": "2025-05-09T15:13:50Z",
      "updated_at": "2025-05-09T15:13:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2081903903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2081903903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083467901",
      "pull_request_review_id": 2831323880,
      "id": 2083467901,
      "node_id": "PRRC_kwDOABII5858LzJ9",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why does it need `logging.h`?",
      "created_at": "2025-05-11T09:40:12Z",
      "updated_at": "2025-05-11T09:40:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2083467901",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083467901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083516219",
      "pull_request_review_id": 2831388856,
      "id": 2083516219,
      "node_id": "PRRC_kwDOABII5858L-87",
      "diff_hunk": "@@ -0,0 +1,95 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <logging.h>",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "44298f0cb9c3de42b1c0f464c0d7b2779aa4c3b7",
      "in_reply_to_id": 2083467901,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks! \r\n\r\nremoved in [c5245d1](https://github.com/bitcoin/bitcoin/pull/32243/commits/c5245d1a76928c70cc25347bbf790246a98912a9)",
      "created_at": "2025-05-11T12:50:53Z",
      "updated_at": "2025-05-11T12:50:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2083516219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083516219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2085079203",
      "pull_request_review_id": 2833882203,
      "id": 2085079203,
      "node_id": "PRRC_kwDOABII5858R8ij",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "c5245d1a76928c70cc25347bbf790246a98912a9",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Couldn't you use `ConsumeDeserializable` to create a `CBlock`? I think it might simplify the way you're creating the block and the transactions. ",
      "created_at": "2025-05-12T16:50:05Z",
      "updated_at": "2025-05-12T16:50:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2085079203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2085079203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087175769",
      "pull_request_review_id": 2837359021,
      "id": 2087175769,
      "node_id": "PRRC_kwDOABII5858Z8ZZ",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    // Generate a random number of transactions (0-1000 to keep it reasonable)\n+    const size_t num_txs = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1000);\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    // Create a CBlock with fuzzed transactions\n+    CBlock block;",
      "path": "src/test/fuzz/merkle.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "c5245d1a76928c70cc25347bbf790246a98912a9",
      "in_reply_to_id": 2085079203,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I pushed [f99fd0b](https://github.com/bitcoin/bitcoin/pull/32243/commits/f99fd0b87dcfaf84784ce423f78a950ad377b36b) which now uses `ConsumeDeserializable`\r\n\r\nI haven't used `ConsumeDeserializable` so I'm not 100% sure if I'm using it correctly.",
      "created_at": "2025-05-13T16:02:27Z",
      "updated_at": "2025-05-13T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2087175769",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087175769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087281999",
      "pull_request_review_id": 2837535438,
      "id": 2087281999,
      "node_id": "PRRC_kwDOABII5858aWVP",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    const bool with_witness = fuzzed_data_provider.ConsumeBool();\n+    std::optional<CBlock> block {ConsumeDeserializable<CBlock>(fuzzed_data_provider, with_witness ? TX_WITH_WITNESS : TX_NO_WITNESS)};\n+    if (!block){\n+        return;\n+    }\n+    const size_t num_txs = block->vtx.size();\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        const auto mtx = ConsumeTransaction(fuzzed_data_provider, std::nullopt);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "f99fd0b87dcfaf84784ce423f78a950ad377b36b: Now that you're using `ConsumeDeserializable` to create a CBlock, maybe you don't to create the transactions using `ConsumeTransaction` anymore? ",
      "created_at": "2025-05-13T17:06:02Z",
      "updated_at": "2025-05-13T17:06:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2087281999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087281999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087404190",
      "pull_request_review_id": 2837736964,
      "id": 2087404190,
      "node_id": "PRRC_kwDOABII5858a0Ke",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+// Copyright (c) 2025 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/merkle.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/str.h>\n+#include <util/strencodings.h>\n+#include <hash.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <vector>\n+\n+uint256 ComputeMerkleRootFromPath(const CBlock& block, uint32_t position, const std::vector<uint256>& merkle_path) {\n+    if (position >= block.vtx.size()) {\n+        throw std::out_of_range(\"Position out of range\");\n+    }\n+\n+    uint256 current_hash = block.vtx[position]->GetHash();\n+\n+    for (const uint256& sibling : merkle_path) {\n+        if (position % 2 == 0) {\n+            current_hash = Hash(current_hash, sibling);\n+        } else {\n+            current_hash = Hash(sibling, current_hash);\n+        }\n+        position = position / 2;\n+    }\n+\n+    return current_hash;\n+}\n+\n+FUZZ_TARGET(merkle)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    const bool with_witness = fuzzed_data_provider.ConsumeBool();\n+    std::optional<CBlock> block {ConsumeDeserializable<CBlock>(fuzzed_data_provider, with_witness ? TX_WITH_WITNESS : TX_NO_WITNESS)};\n+    if (!block){\n+        return;\n+    }\n+    const size_t num_txs = block->vtx.size();\n+    std::vector<uint256> tx_hashes;\n+    tx_hashes.reserve(num_txs);\n+\n+    for (size_t i = 0; i < num_txs; ++i) {\n+        const auto mtx = ConsumeTransaction(fuzzed_data_provider, std::nullopt);",
      "path": "src/test/fuzz/merkle.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "original_commit_id": "f99fd0b87dcfaf84784ce423f78a950ad377b36b",
      "in_reply_to_id": 2087281999,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yea I tried doing that but then I was getting less coverage for some reason not sure if I just need to let the fuzzer run longer\r\n\r\nWithout `ConsumeTransaction`\r\n```\r\n#657589 REDUCE cov: 813 ft: 3922 corp: 309/188Kb lim: 4096 exec/s: 8323 rss: 359Mb L: 941/3853 MS: 1 EraseBytes-\r\n```\r\n\r\nWith `ConsumeTransaction`\r\n```\r\n#14901  REDUCE cov: 1461 ft: 8651 corp: 536/449Kb lim: 4096 exec/s: 3725 rss: 350Mb L: 677/4093 MS: 1 EraseBytes-\r\n```\r\n\r\nI can try running the fuzz test for a while and see if it adds `cov`",
      "created_at": "2025-05-13T18:23:42Z",
      "updated_at": "2025-05-13T18:23:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32243#discussion_r2087404190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2087404190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32243"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    }
  ]
}